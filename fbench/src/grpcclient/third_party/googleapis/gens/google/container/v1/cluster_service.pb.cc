// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1/cluster_service.proto

#include "google/container/v1/cluster_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AcceleratorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticatorGroupsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BinaryAuthorization_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientCertificateConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CloudRunConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigConnectorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DefaultSnatStatus_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DnsCacheConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HttpLoadBalancing_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IPAllocationPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IntraNodeVisibilityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Jwk_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KubernetesDashboard_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LegacyAbac_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MaxPodsConstraint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NetworkPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodeTaint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OperationProgress_Metric_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PrivateClusterMasterGlobalAccessConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReleaseChannel_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReservationAffinity_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceLimit_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceUsageExportConfig_BigQueryDestination_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceUsageExportConfig_ConsumptionMeteringConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SandboxConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerConfig_ReleaseChannelConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShieldedInstanceConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShieldedNodes_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UsableSubnetworkSecondaryRange_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VerticalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WorkloadMetadataConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<14> scc_info_ClusterUpdate_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NetworkConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OperationProgress_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RecurringTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsableSubnetwork_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<23> scc_info_Cluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Operation_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_AutoprovisioningNodePoolDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_NodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_AddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_NodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace container {
namespace v1 {
class NodeConfig_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig_MetadataEntry_DoNotUse> _instance;
} _NodeConfig_MetadataEntry_DoNotUse_default_instance_;
class NodeConfig_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig_LabelsEntry_DoNotUse> _instance;
} _NodeConfig_LabelsEntry_DoNotUse_default_instance_;
class NodeConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig> _instance;
} _NodeConfig_default_instance_;
class ShieldedInstanceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShieldedInstanceConfig> _instance;
} _ShieldedInstanceConfig_default_instance_;
class SandboxConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SandboxConfig> _instance;
} _SandboxConfig_default_instance_;
class ReservationAffinityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReservationAffinity> _instance;
} _ReservationAffinity_default_instance_;
class NodeTaintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeTaint> _instance;
} _NodeTaint_default_instance_;
class MasterAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuth> _instance;
} _MasterAuth_default_instance_;
class ClientCertificateConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientCertificateConfig> _instance;
} _ClientCertificateConfig_default_instance_;
class AddonsConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddonsConfig> _instance;
} _AddonsConfig_default_instance_;
class HttpLoadBalancingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpLoadBalancing> _instance;
} _HttpLoadBalancing_default_instance_;
class HorizontalPodAutoscalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HorizontalPodAutoscaling> _instance;
} _HorizontalPodAutoscaling_default_instance_;
class KubernetesDashboardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KubernetesDashboard> _instance;
} _KubernetesDashboard_default_instance_;
class NetworkPolicyConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkPolicyConfig> _instance;
} _NetworkPolicyConfig_default_instance_;
class DnsCacheConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DnsCacheConfig> _instance;
} _DnsCacheConfig_default_instance_;
class PrivateClusterMasterGlobalAccessConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrivateClusterMasterGlobalAccessConfig> _instance;
} _PrivateClusterMasterGlobalAccessConfig_default_instance_;
class PrivateClusterConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrivateClusterConfig> _instance;
} _PrivateClusterConfig_default_instance_;
class AuthenticatorGroupsConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticatorGroupsConfig> _instance;
} _AuthenticatorGroupsConfig_default_instance_;
class CloudRunConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloudRunConfig> _instance;
} _CloudRunConfig_default_instance_;
class ConfigConnectorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigConnectorConfig> _instance;
} _ConfigConnectorConfig_default_instance_;
class MasterAuthorizedNetworksConfig_CidrBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuthorizedNetworksConfig_CidrBlock> _instance;
} _MasterAuthorizedNetworksConfig_CidrBlock_default_instance_;
class MasterAuthorizedNetworksConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuthorizedNetworksConfig> _instance;
} _MasterAuthorizedNetworksConfig_default_instance_;
class LegacyAbacDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LegacyAbac> _instance;
} _LegacyAbac_default_instance_;
class NetworkPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkPolicy> _instance;
} _NetworkPolicy_default_instance_;
class BinaryAuthorizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BinaryAuthorization> _instance;
} _BinaryAuthorization_default_instance_;
class IPAllocationPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IPAllocationPolicy> _instance;
} _IPAllocationPolicy_default_instance_;
class Cluster_ResourceLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster_ResourceLabelsEntry_DoNotUse> _instance;
} _Cluster_ResourceLabelsEntry_DoNotUse_default_instance_;
class ClusterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster> _instance;
} _Cluster_default_instance_;
class ClusterUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterUpdate> _instance;
} _ClusterUpdate_default_instance_;
class OperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Operation> _instance;
} _Operation_default_instance_;
class OperationProgress_MetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationProgress_Metric> _instance;
  ::google::protobuf::int64 int_value_;
  double double_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
} _OperationProgress_Metric_default_instance_;
class OperationProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationProgress> _instance;
} _OperationProgress_default_instance_;
class CreateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterRequest> _instance;
} _CreateClusterRequest_default_instance_;
class GetClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetClusterRequest> _instance;
} _GetClusterRequest_default_instance_;
class UpdateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterRequest> _instance;
} _UpdateClusterRequest_default_instance_;
class UpdateNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateNodePoolRequest> _instance;
} _UpdateNodePoolRequest_default_instance_;
class SetNodePoolAutoscalingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolAutoscalingRequest> _instance;
} _SetNodePoolAutoscalingRequest_default_instance_;
class SetLoggingServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLoggingServiceRequest> _instance;
} _SetLoggingServiceRequest_default_instance_;
class SetMonitoringServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMonitoringServiceRequest> _instance;
} _SetMonitoringServiceRequest_default_instance_;
class SetAddonsConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetAddonsConfigRequest> _instance;
} _SetAddonsConfigRequest_default_instance_;
class SetLocationsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLocationsRequest> _instance;
} _SetLocationsRequest_default_instance_;
class UpdateMasterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateMasterRequest> _instance;
} _UpdateMasterRequest_default_instance_;
class SetMasterAuthRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMasterAuthRequest> _instance;
} _SetMasterAuthRequest_default_instance_;
class DeleteClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterRequest> _instance;
} _DeleteClusterRequest_default_instance_;
class ListClustersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersRequest> _instance;
} _ListClustersRequest_default_instance_;
class ListClustersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersResponse> _instance;
} _ListClustersResponse_default_instance_;
class GetOperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOperationRequest> _instance;
} _GetOperationRequest_default_instance_;
class ListOperationsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOperationsRequest> _instance;
} _ListOperationsRequest_default_instance_;
class CancelOperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelOperationRequest> _instance;
} _CancelOperationRequest_default_instance_;
class ListOperationsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOperationsResponse> _instance;
} _ListOperationsResponse_default_instance_;
class GetServerConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServerConfigRequest> _instance;
} _GetServerConfigRequest_default_instance_;
class ServerConfig_ReleaseChannelConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerConfig_ReleaseChannelConfig> _instance;
} _ServerConfig_ReleaseChannelConfig_default_instance_;
class ServerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerConfig> _instance;
} _ServerConfig_default_instance_;
class CreateNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNodePoolRequest> _instance;
} _CreateNodePoolRequest_default_instance_;
class DeleteNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteNodePoolRequest> _instance;
} _DeleteNodePoolRequest_default_instance_;
class ListNodePoolsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNodePoolsRequest> _instance;
} _ListNodePoolsRequest_default_instance_;
class GetNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNodePoolRequest> _instance;
} _GetNodePoolRequest_default_instance_;
class NodePool_UpgradeSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodePool_UpgradeSettings> _instance;
} _NodePool_UpgradeSettings_default_instance_;
class NodePoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodePool> _instance;
} _NodePool_default_instance_;
class NodeManagementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeManagement> _instance;
} _NodeManagement_default_instance_;
class AutoUpgradeOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoUpgradeOptions> _instance;
} _AutoUpgradeOptions_default_instance_;
class MaintenancePolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaintenancePolicy> _instance;
} _MaintenancePolicy_default_instance_;
class MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse> _instance;
} _MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_default_instance_;
class MaintenanceWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaintenanceWindow> _instance;
  const ::google::container::v1::DailyMaintenanceWindow* daily_maintenance_window_;
  const ::google::container::v1::RecurringTimeWindow* recurring_window_;
} _MaintenanceWindow_default_instance_;
class TimeWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeWindow> _instance;
} _TimeWindow_default_instance_;
class RecurringTimeWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecurringTimeWindow> _instance;
} _RecurringTimeWindow_default_instance_;
class DailyMaintenanceWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DailyMaintenanceWindow> _instance;
} _DailyMaintenanceWindow_default_instance_;
class SetNodePoolManagementRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolManagementRequest> _instance;
} _SetNodePoolManagementRequest_default_instance_;
class SetNodePoolSizeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolSizeRequest> _instance;
} _SetNodePoolSizeRequest_default_instance_;
class RollbackNodePoolUpgradeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollbackNodePoolUpgradeRequest> _instance;
} _RollbackNodePoolUpgradeRequest_default_instance_;
class ListNodePoolsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNodePoolsResponse> _instance;
} _ListNodePoolsResponse_default_instance_;
class ClusterAutoscalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterAutoscaling> _instance;
} _ClusterAutoscaling_default_instance_;
class AutoprovisioningNodePoolDefaultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoprovisioningNodePoolDefaults> _instance;
} _AutoprovisioningNodePoolDefaults_default_instance_;
class ResourceLimitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceLimit> _instance;
} _ResourceLimit_default_instance_;
class NodePoolAutoscalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodePoolAutoscaling> _instance;
} _NodePoolAutoscaling_default_instance_;
class SetLabelsRequest_ResourceLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> _instance;
} _SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_;
class SetLabelsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLabelsRequest> _instance;
} _SetLabelsRequest_default_instance_;
class SetLegacyAbacRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLegacyAbacRequest> _instance;
} _SetLegacyAbacRequest_default_instance_;
class StartIPRotationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartIPRotationRequest> _instance;
} _StartIPRotationRequest_default_instance_;
class CompleteIPRotationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteIPRotationRequest> _instance;
} _CompleteIPRotationRequest_default_instance_;
class AcceleratorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AcceleratorConfig> _instance;
} _AcceleratorConfig_default_instance_;
class WorkloadMetadataConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkloadMetadataConfig> _instance;
} _WorkloadMetadataConfig_default_instance_;
class SetNetworkPolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNetworkPolicyRequest> _instance;
} _SetNetworkPolicyRequest_default_instance_;
class SetMaintenancePolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMaintenancePolicyRequest> _instance;
} _SetMaintenancePolicyRequest_default_instance_;
class StatusConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusCondition> _instance;
} _StatusCondition_default_instance_;
class NetworkConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkConfig> _instance;
} _NetworkConfig_default_instance_;
class GetOpenIDConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOpenIDConfigRequest> _instance;
} _GetOpenIDConfigRequest_default_instance_;
class GetOpenIDConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOpenIDConfigResponse> _instance;
} _GetOpenIDConfigResponse_default_instance_;
class GetJSONWebKeysRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJSONWebKeysRequest> _instance;
} _GetJSONWebKeysRequest_default_instance_;
class JwkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Jwk> _instance;
} _Jwk_default_instance_;
class GetJSONWebKeysResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJSONWebKeysResponse> _instance;
} _GetJSONWebKeysResponse_default_instance_;
class ReleaseChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReleaseChannel> _instance;
} _ReleaseChannel_default_instance_;
class IntraNodeVisibilityConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntraNodeVisibilityConfig> _instance;
} _IntraNodeVisibilityConfig_default_instance_;
class MaxPodsConstraintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaxPodsConstraint> _instance;
} _MaxPodsConstraint_default_instance_;
class WorkloadIdentityConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkloadIdentityConfig> _instance;
} _WorkloadIdentityConfig_default_instance_;
class DatabaseEncryptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatabaseEncryption> _instance;
} _DatabaseEncryption_default_instance_;
class ListUsableSubnetworksRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUsableSubnetworksRequest> _instance;
} _ListUsableSubnetworksRequest_default_instance_;
class ListUsableSubnetworksResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUsableSubnetworksResponse> _instance;
} _ListUsableSubnetworksResponse_default_instance_;
class UsableSubnetworkSecondaryRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsableSubnetworkSecondaryRange> _instance;
} _UsableSubnetworkSecondaryRange_default_instance_;
class UsableSubnetworkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsableSubnetwork> _instance;
} _UsableSubnetwork_default_instance_;
class ResourceUsageExportConfig_BigQueryDestinationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceUsageExportConfig_BigQueryDestination> _instance;
} _ResourceUsageExportConfig_BigQueryDestination_default_instance_;
class ResourceUsageExportConfig_ConsumptionMeteringConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceUsageExportConfig_ConsumptionMeteringConfig> _instance;
} _ResourceUsageExportConfig_ConsumptionMeteringConfig_default_instance_;
class ResourceUsageExportConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceUsageExportConfig> _instance;
} _ResourceUsageExportConfig_default_instance_;
class VerticalPodAutoscalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerticalPodAutoscaling> _instance;
} _VerticalPodAutoscaling_default_instance_;
class DefaultSnatStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DefaultSnatStatus> _instance;
} _DefaultSnatStatus_default_instance_;
class ShieldedNodesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShieldedNodes> _instance;
} _ShieldedNodes_default_instance_;
}  // namespace v1
}  // namespace container
}  // namespace google
static void InitDefaultsNodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NodeConfig_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::NodeConfig_MetadataEntry_DoNotUse();
  }
  ::google::container::v1::NodeConfig_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NodeConfig_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::NodeConfig_LabelsEntry_DoNotUse();
  }
  ::google::container::v1::NodeConfig_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NodeConfig_default_instance_;
    new (ptr) ::google::container::v1::NodeConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodeConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_NodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsNodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_AcceleratorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_WorkloadMetadataConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodeTaint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_SandboxConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ReservationAffinity_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ShieldedInstanceConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsShieldedInstanceConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ShieldedInstanceConfig_default_instance_;
    new (ptr) ::google::container::v1::ShieldedInstanceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ShieldedInstanceConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShieldedInstanceConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShieldedInstanceConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSandboxConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SandboxConfig_default_instance_;
    new (ptr) ::google::container::v1::SandboxConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SandboxConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SandboxConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSandboxConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsReservationAffinity_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ReservationAffinity_default_instance_;
    new (ptr) ::google::container::v1::ReservationAffinity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ReservationAffinity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReservationAffinity_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReservationAffinity_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodeTaint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NodeTaint_default_instance_;
    new (ptr) ::google::container::v1::NodeTaint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodeTaint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeTaint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeTaint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_MasterAuth_default_instance_;
    new (ptr) ::google::container::v1::MasterAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MasterAuth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_ClientCertificateConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsClientCertificateConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ClientCertificateConfig_default_instance_;
    new (ptr) ::google::container::v1::ClientCertificateConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ClientCertificateConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientCertificateConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientCertificateConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsAddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_AddonsConfig_default_instance_;
    new (ptr) ::google::container::v1::AddonsConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::AddonsConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_AddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsAddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_HttpLoadBalancing_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_KubernetesDashboard_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_CloudRunConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_DnsCacheConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ConfigConnectorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsHttpLoadBalancing_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_HttpLoadBalancing_default_instance_;
    new (ptr) ::google::container::v1::HttpLoadBalancing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::HttpLoadBalancing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HttpLoadBalancing_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHttpLoadBalancing_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsHorizontalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_HorizontalPodAutoscaling_default_instance_;
    new (ptr) ::google::container::v1::HorizontalPodAutoscaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::HorizontalPodAutoscaling::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHorizontalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsKubernetesDashboard_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_KubernetesDashboard_default_instance_;
    new (ptr) ::google::container::v1::KubernetesDashboard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::KubernetesDashboard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KubernetesDashboard_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKubernetesDashboard_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNetworkPolicyConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NetworkPolicyConfig_default_instance_;
    new (ptr) ::google::container::v1::NetworkPolicyConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NetworkPolicyConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNetworkPolicyConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsDnsCacheConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_DnsCacheConfig_default_instance_;
    new (ptr) ::google::container::v1::DnsCacheConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DnsCacheConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DnsCacheConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDnsCacheConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsPrivateClusterMasterGlobalAccessConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_PrivateClusterMasterGlobalAccessConfig_default_instance_;
    new (ptr) ::google::container::v1::PrivateClusterMasterGlobalAccessConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::PrivateClusterMasterGlobalAccessConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrivateClusterMasterGlobalAccessConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrivateClusterMasterGlobalAccessConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsPrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_PrivateClusterConfig_default_instance_;
    new (ptr) ::google::container::v1::PrivateClusterConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::PrivateClusterConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_PrivateClusterMasterGlobalAccessConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsAuthenticatorGroupsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_AuthenticatorGroupsConfig_default_instance_;
    new (ptr) ::google::container::v1::AuthenticatorGroupsConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::AuthenticatorGroupsConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticatorGroupsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticatorGroupsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCloudRunConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_CloudRunConfig_default_instance_;
    new (ptr) ::google::container::v1::CloudRunConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CloudRunConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CloudRunConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCloudRunConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsConfigConnectorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ConfigConnectorConfig_default_instance_;
    new (ptr) ::google::container::v1::ConfigConnectorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ConfigConnectorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigConnectorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigConnectorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_MasterAuthorizedNetworksConfig_CidrBlock_default_instance_;
    new (ptr) ::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_MasterAuthorizedNetworksConfig_default_instance_;
    new (ptr) ::google::container::v1::MasterAuthorizedNetworksConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MasterAuthorizedNetworksConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsLegacyAbac_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_LegacyAbac_default_instance_;
    new (ptr) ::google::container::v1::LegacyAbac();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::LegacyAbac::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LegacyAbac_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLegacyAbac_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNetworkPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NetworkPolicy_default_instance_;
    new (ptr) ::google::container::v1::NetworkPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NetworkPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NetworkPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNetworkPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsBinaryAuthorization_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_BinaryAuthorization_default_instance_;
    new (ptr) ::google::container::v1::BinaryAuthorization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::BinaryAuthorization::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BinaryAuthorization_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBinaryAuthorization_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsIPAllocationPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_IPAllocationPolicy_default_instance_;
    new (ptr) ::google::container::v1::IPAllocationPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::IPAllocationPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IPAllocationPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIPAllocationPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCluster_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_Cluster_ResourceLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse();
  }
  ::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCluster_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_Cluster_default_instance_;
    new (ptr) ::google::container::v1::Cluster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::Cluster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<23> scc_info_Cluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 23, InitDefaultsCluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_MasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_AddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_Cluster_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_LegacyAbac_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NetworkPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_IPAllocationPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_MaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_BinaryAuthorization_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NetworkConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_MaxPodsConstraint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_AuthenticatorGroupsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_PrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_DatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_VerticalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ShieldedNodes_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ReleaseChannel_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_WorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_StatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsClusterUpdate_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ClusterUpdate_default_instance_;
    new (ptr) ::google::container::v1::ClusterUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ClusterUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<14> scc_info_ClusterUpdate_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 14, InitDefaultsClusterUpdate_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_AddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_DatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_WorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ShieldedNodes_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_BinaryAuthorization_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_VerticalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_PrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_IntraNodeVisibilityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_DefaultSnatStatus_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ReleaseChannel_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsOperation_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_Operation_default_instance_;
    new (ptr) ::google::container::v1::Operation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::Operation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Operation_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOperation_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_OperationProgress_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_StatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsOperationProgress_Metric_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_OperationProgress_Metric_default_instance_;
    new (ptr) ::google::container::v1::OperationProgress_Metric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::OperationProgress_Metric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperationProgress_Metric_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperationProgress_Metric_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsOperationProgress_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_OperationProgress_default_instance_;
    new (ptr) ::google::container::v1::OperationProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::OperationProgress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OperationProgress_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOperationProgress_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_OperationProgress_Metric_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsCreateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_CreateClusterRequest_default_instance_;
    new (ptr) ::google::container::v1::CreateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CreateClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_Cluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsGetClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_GetClusterRequest_default_instance_;
    new (ptr) ::google::container::v1::GetClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsUpdateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_UpdateClusterRequest_default_instance_;
    new (ptr) ::google::container::v1::UpdateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::UpdateClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_ClusterUpdate_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsUpdateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_UpdateNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1::UpdateNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::UpdateNodePoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_WorkloadMetadataConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetNodePoolAutoscalingRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetNodePoolAutoscalingRequest_default_instance_;
    new (ptr) ::google::container::v1::SetNodePoolAutoscalingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetNodePoolAutoscalingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetNodePoolAutoscalingRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetNodePoolAutoscalingRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetLoggingServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetLoggingServiceRequest_default_instance_;
    new (ptr) ::google::container::v1::SetLoggingServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetLoggingServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetLoggingServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetLoggingServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetMonitoringServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetMonitoringServiceRequest_default_instance_;
    new (ptr) ::google::container::v1::SetMonitoringServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetMonitoringServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetMonitoringServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetMonitoringServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetAddonsConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetAddonsConfigRequest_default_instance_;
    new (ptr) ::google::container::v1::SetAddonsConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetAddonsConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetAddonsConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetAddonsConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_AddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetLocationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetLocationsRequest_default_instance_;
    new (ptr) ::google::container::v1::SetLocationsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetLocationsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetLocationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetLocationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsUpdateMasterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_UpdateMasterRequest_default_instance_;
    new (ptr) ::google::container::v1::UpdateMasterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::UpdateMasterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateMasterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateMasterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetMasterAuthRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetMasterAuthRequest_default_instance_;
    new (ptr) ::google::container::v1::SetMasterAuthRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetMasterAuthRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetMasterAuthRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetMasterAuthRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_MasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsDeleteClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_DeleteClusterRequest_default_instance_;
    new (ptr) ::google::container::v1::DeleteClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DeleteClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListClustersRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ListClustersRequest_default_instance_;
    new (ptr) ::google::container::v1::ListClustersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListClustersRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListClustersRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListClustersRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListClustersResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ListClustersResponse_default_instance_;
    new (ptr) ::google::container::v1::ListClustersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListClustersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListClustersResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListClustersResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_Cluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsGetOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_GetOperationRequest_default_instance_;
    new (ptr) ::google::container::v1::GetOperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetOperationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListOperationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ListOperationsRequest_default_instance_;
    new (ptr) ::google::container::v1::ListOperationsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListOperationsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListOperationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListOperationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCancelOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_CancelOperationRequest_default_instance_;
    new (ptr) ::google::container::v1::CancelOperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CancelOperationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CancelOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancelOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListOperationsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ListOperationsResponse_default_instance_;
    new (ptr) ::google::container::v1::ListOperationsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListOperationsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListOperationsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListOperationsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_Operation_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsGetServerConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_GetServerConfigRequest_default_instance_;
    new (ptr) ::google::container::v1::GetServerConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetServerConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetServerConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetServerConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsServerConfig_ReleaseChannelConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ServerConfig_ReleaseChannelConfig_default_instance_;
    new (ptr) ::google::container::v1::ServerConfig_ReleaseChannelConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ServerConfig_ReleaseChannelConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerConfig_ReleaseChannelConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerConfig_ReleaseChannelConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsServerConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ServerConfig_default_instance_;
    new (ptr) ::google::container::v1::ServerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ServerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_ServerConfig_ReleaseChannelConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsCreateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_CreateNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1::CreateNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CreateNodePoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsDeleteNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_DeleteNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1::DeleteNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DeleteNodePoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListNodePoolsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ListNodePoolsRequest_default_instance_;
    new (ptr) ::google::container::v1::ListNodePoolsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListNodePoolsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListNodePoolsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListNodePoolsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsGetNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_GetNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1::GetNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetNodePoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NodePool_UpgradeSettings_default_instance_;
    new (ptr) ::google::container::v1::NodePool_UpgradeSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodePool_UpgradeSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NodePool_default_instance_;
    new (ptr) ::google::container::v1::NodePool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodePool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_NodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsNodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_MaxPodsConstraint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_StatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsNodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NodeManagement_default_instance_;
    new (ptr) ::google::container::v1::NodeManagement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodeManagement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsAutoUpgradeOptions_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_AutoUpgradeOptions_default_instance_;
    new (ptr) ::google::container::v1::AutoUpgradeOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::AutoUpgradeOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAutoUpgradeOptions_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_MaintenancePolicy_default_instance_;
    new (ptr) ::google::container::v1::MaintenancePolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MaintenancePolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_MaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsMaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse();
  }
  ::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_TimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_MaintenanceWindow_default_instance_;
    new (ptr) ::google::container::v1::MaintenanceWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MaintenanceWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_RecurringTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_TimeWindow_default_instance_;
    new (ptr) ::google::container::v1::TimeWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::TimeWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsRecurringTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_RecurringTimeWindow_default_instance_;
    new (ptr) ::google::container::v1::RecurringTimeWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::RecurringTimeWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RecurringTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecurringTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_TimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsDailyMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_DailyMaintenanceWindow_default_instance_;
    new (ptr) ::google::container::v1::DailyMaintenanceWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DailyMaintenanceWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDailyMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetNodePoolManagementRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetNodePoolManagementRequest_default_instance_;
    new (ptr) ::google::container::v1::SetNodePoolManagementRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetNodePoolManagementRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetNodePoolManagementRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetNodePoolManagementRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetNodePoolSizeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetNodePoolSizeRequest_default_instance_;
    new (ptr) ::google::container::v1::SetNodePoolSizeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetNodePoolSizeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetNodePoolSizeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetNodePoolSizeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsRollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_RollbackNodePoolUpgradeRequest_default_instance_;
    new (ptr) ::google::container::v1::RollbackNodePoolUpgradeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::RollbackNodePoolUpgradeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListNodePoolsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ListNodePoolsResponse_default_instance_;
    new (ptr) ::google::container::v1::ListNodePoolsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListNodePoolsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListNodePoolsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListNodePoolsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ClusterAutoscaling_default_instance_;
    new (ptr) ::google::container::v1::ClusterAutoscaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ClusterAutoscaling::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_ResourceLimit_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_AutoprovisioningNodePoolDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsAutoprovisioningNodePoolDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_AutoprovisioningNodePoolDefaults_default_instance_;
    new (ptr) ::google::container::v1::AutoprovisioningNodePoolDefaults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::AutoprovisioningNodePoolDefaults::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AutoprovisioningNodePoolDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAutoprovisioningNodePoolDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ShieldedInstanceConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsResourceLimit_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ResourceLimit_default_instance_;
    new (ptr) ::google::container::v1::ResourceLimit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ResourceLimit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceLimit_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceLimit_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NodePoolAutoscaling_default_instance_;
    new (ptr) ::google::container::v1::NodePoolAutoscaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodePoolAutoscaling::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse();
  }
  ::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetLabelsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetLabelsRequest_default_instance_;
    new (ptr) ::google::container::v1::SetLabelsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetLabelsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetLabelsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetLabelsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetLegacyAbacRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetLegacyAbacRequest_default_instance_;
    new (ptr) ::google::container::v1::SetLegacyAbacRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetLegacyAbacRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetLegacyAbacRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetLegacyAbacRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsStartIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_StartIPRotationRequest_default_instance_;
    new (ptr) ::google::container::v1::StartIPRotationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::StartIPRotationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StartIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStartIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCompleteIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_CompleteIPRotationRequest_default_instance_;
    new (ptr) ::google::container::v1::CompleteIPRotationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CompleteIPRotationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompleteIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompleteIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsAcceleratorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_AcceleratorConfig_default_instance_;
    new (ptr) ::google::container::v1::AcceleratorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::AcceleratorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AcceleratorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAcceleratorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsWorkloadMetadataConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_WorkloadMetadataConfig_default_instance_;
    new (ptr) ::google::container::v1::WorkloadMetadataConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::WorkloadMetadataConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkloadMetadataConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkloadMetadataConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetNetworkPolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetNetworkPolicyRequest_default_instance_;
    new (ptr) ::google::container::v1::SetNetworkPolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetNetworkPolicyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetNetworkPolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetNetworkPolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_NetworkPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetMaintenancePolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_SetMaintenancePolicyRequest_default_instance_;
    new (ptr) ::google::container::v1::SetMaintenancePolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetMaintenancePolicyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetMaintenancePolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetMaintenancePolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_MaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsStatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_StatusCondition_default_instance_;
    new (ptr) ::google::container::v1::StatusCondition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::StatusCondition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNetworkConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_NetworkConfig_default_instance_;
    new (ptr) ::google::container::v1::NetworkConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NetworkConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NetworkConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNetworkConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_DefaultSnatStatus_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsGetOpenIDConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_GetOpenIDConfigRequest_default_instance_;
    new (ptr) ::google::container::v1::GetOpenIDConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetOpenIDConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOpenIDConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOpenIDConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsGetOpenIDConfigResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_GetOpenIDConfigResponse_default_instance_;
    new (ptr) ::google::container::v1::GetOpenIDConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetOpenIDConfigResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOpenIDConfigResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOpenIDConfigResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsGetJSONWebKeysRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_GetJSONWebKeysRequest_default_instance_;
    new (ptr) ::google::container::v1::GetJSONWebKeysRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetJSONWebKeysRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetJSONWebKeysRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetJSONWebKeysRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsJwk_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_Jwk_default_instance_;
    new (ptr) ::google::container::v1::Jwk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::Jwk::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Jwk_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJwk_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsGetJSONWebKeysResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_GetJSONWebKeysResponse_default_instance_;
    new (ptr) ::google::container::v1::GetJSONWebKeysResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetJSONWebKeysResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetJSONWebKeysResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetJSONWebKeysResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_Jwk_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsReleaseChannel_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ReleaseChannel_default_instance_;
    new (ptr) ::google::container::v1::ReleaseChannel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ReleaseChannel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReleaseChannel_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReleaseChannel_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsIntraNodeVisibilityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_IntraNodeVisibilityConfig_default_instance_;
    new (ptr) ::google::container::v1::IntraNodeVisibilityConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::IntraNodeVisibilityConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntraNodeVisibilityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntraNodeVisibilityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMaxPodsConstraint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_MaxPodsConstraint_default_instance_;
    new (ptr) ::google::container::v1::MaxPodsConstraint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MaxPodsConstraint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MaxPodsConstraint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaxPodsConstraint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsWorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_WorkloadIdentityConfig_default_instance_;
    new (ptr) ::google::container::v1::WorkloadIdentityConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::WorkloadIdentityConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsDatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_DatabaseEncryption_default_instance_;
    new (ptr) ::google::container::v1::DatabaseEncryption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DatabaseEncryption::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListUsableSubnetworksRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ListUsableSubnetworksRequest_default_instance_;
    new (ptr) ::google::container::v1::ListUsableSubnetworksRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListUsableSubnetworksRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUsableSubnetworksRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUsableSubnetworksRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListUsableSubnetworksResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ListUsableSubnetworksResponse_default_instance_;
    new (ptr) ::google::container::v1::ListUsableSubnetworksResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListUsableSubnetworksResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListUsableSubnetworksResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListUsableSubnetworksResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_UsableSubnetwork_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsUsableSubnetworkSecondaryRange_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_UsableSubnetworkSecondaryRange_default_instance_;
    new (ptr) ::google::container::v1::UsableSubnetworkSecondaryRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::UsableSubnetworkSecondaryRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UsableSubnetworkSecondaryRange_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUsableSubnetworkSecondaryRange_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsUsableSubnetwork_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_UsableSubnetwork_default_instance_;
    new (ptr) ::google::container::v1::UsableSubnetwork();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::UsableSubnetwork::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsableSubnetwork_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsableSubnetwork_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_UsableSubnetworkSecondaryRange_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsResourceUsageExportConfig_BigQueryDestination_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ResourceUsageExportConfig_BigQueryDestination_default_instance_;
    new (ptr) ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceUsageExportConfig_BigQueryDestination_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceUsageExportConfig_BigQueryDestination_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsResourceUsageExportConfig_ConsumptionMeteringConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ResourceUsageExportConfig_ConsumptionMeteringConfig_default_instance_;
    new (ptr) ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceUsageExportConfig_ConsumptionMeteringConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceUsageExportConfig_ConsumptionMeteringConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ResourceUsageExportConfig_default_instance_;
    new (ptr) ::google::container::v1::ResourceUsageExportConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ResourceUsageExportConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {
      &scc_info_ResourceUsageExportConfig_BigQueryDestination_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,
      &scc_info_ResourceUsageExportConfig_ConsumptionMeteringConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsVerticalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_VerticalPodAutoscaling_default_instance_;
    new (ptr) ::google::container::v1::VerticalPodAutoscaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::VerticalPodAutoscaling::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerticalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerticalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsDefaultSnatStatus_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_DefaultSnatStatus_default_instance_;
    new (ptr) ::google::container::v1::DefaultSnatStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DefaultSnatStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DefaultSnatStatus_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDefaultSnatStatus_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsShieldedNodes_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1::_ShieldedNodes_default_instance_;
    new (ptr) ::google::container::v1::ShieldedNodes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ShieldedNodes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShieldedNodes_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShieldedNodes_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto}, {}};

void InitDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_NodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShieldedInstanceConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SandboxConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReservationAffinity_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeTaint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientCertificateConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HttpLoadBalancing_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KubernetesDashboard_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DnsCacheConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrivateClusterMasterGlobalAccessConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticatorGroupsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloudRunConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigConnectorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LegacyAbac_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetworkPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BinaryAuthorization_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IPAllocationPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterUpdate_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Operation_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationProgress_Metric_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationProgress_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNodePoolAutoscalingRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLoggingServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetMonitoringServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetAddonsConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLocationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateMasterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetMasterAuthRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListClustersRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListClustersResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOperationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOperationsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetServerConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerConfig_ReleaseChannelConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNodePoolsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecurringTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNodePoolManagementRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNodePoolSizeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNodePoolsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutoprovisioningNodePoolDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceLimit_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLabelsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLegacyAbacRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompleteIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AcceleratorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkloadMetadataConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNetworkPolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetMaintenancePolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetworkConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOpenIDConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOpenIDConfigResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetJSONWebKeysRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Jwk_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetJSONWebKeysResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReleaseChannel_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IntraNodeVisibilityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaxPodsConstraint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUsableSubnetworksRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUsableSubnetworksResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsableSubnetworkSecondaryRange_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsableSubnetwork_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceUsageExportConfig_BigQueryDestination_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceUsageExportConfig_ConsumptionMeteringConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerticalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DefaultSnatStatus_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShieldedNodes_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[106];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[15];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, machine_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, disk_size_gb_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, oauth_scopes_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, service_account_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, metadata_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, image_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, labels_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, local_ssd_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, tags_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, preemptible_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, accelerators_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, disk_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, min_cpu_platform_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, workload_metadata_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, taints_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, sandbox_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, node_group_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, reservation_affinity_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, shielded_instance_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeConfig, boot_disk_kms_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ShieldedInstanceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ShieldedInstanceConfig, enable_secure_boot_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ShieldedInstanceConfig, enable_integrity_monitoring_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SandboxConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SandboxConfig, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ReservationAffinity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ReservationAffinity, consume_reservation_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ReservationAffinity, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ReservationAffinity, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeTaint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeTaint, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeTaint, value_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeTaint, effect_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuth, username_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuth, password_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuth, client_certificate_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuth, cluster_ca_certificate_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuth, client_certificate_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuth, client_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClientCertificateConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClientCertificateConfig, issue_client_certificate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AddonsConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AddonsConfig, http_load_balancing_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AddonsConfig, horizontal_pod_autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AddonsConfig, kubernetes_dashboard_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AddonsConfig, network_policy_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AddonsConfig, cloud_run_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AddonsConfig, dns_cache_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AddonsConfig, config_connector_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::HttpLoadBalancing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::HttpLoadBalancing, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::HorizontalPodAutoscaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::HorizontalPodAutoscaling, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::KubernetesDashboard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::KubernetesDashboard, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkPolicyConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkPolicyConfig, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DnsCacheConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DnsCacheConfig, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterMasterGlobalAccessConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterMasterGlobalAccessConfig, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterConfig, enable_private_nodes_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterConfig, enable_private_endpoint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterConfig, master_ipv4_cidr_block_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterConfig, private_endpoint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterConfig, public_endpoint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterConfig, peering_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::PrivateClusterConfig, master_global_access_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AuthenticatorGroupsConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AuthenticatorGroupsConfig, enabled_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AuthenticatorGroupsConfig, security_group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CloudRunConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CloudRunConfig, disabled_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CloudRunConfig, load_balancer_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ConfigConnectorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ConfigConnectorConfig, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock, cidr_block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig, enabled_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig, cidr_blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::LegacyAbac, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::LegacyAbac, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkPolicy, provider_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkPolicy, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::BinaryAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::BinaryAuthorization, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, use_ip_aliases_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, create_subnetwork_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, subnetwork_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, cluster_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, node_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, services_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, cluster_secondary_range_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, services_secondary_range_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, cluster_ipv4_cidr_block_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, node_ipv4_cidr_block_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, services_ipv4_cidr_block_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, tpu_ipv4_cidr_block_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, use_routes_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, description_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, initial_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, node_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, master_auth_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, logging_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, monitoring_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, network_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, cluster_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, addons_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, subnetwork_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, node_pools_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, locations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, enable_kubernetes_alpha_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, resource_labels_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, label_fingerprint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, legacy_abac_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, network_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, ip_allocation_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, master_authorized_networks_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, maintenance_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, binary_authorization_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, network_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, default_max_pods_constraint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, resource_usage_export_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, authenticator_groups_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, private_cluster_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, database_encryption_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, vertical_pod_autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, shielded_nodes_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, release_channel_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, workload_identity_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, self_link_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, endpoint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, initial_cluster_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, current_master_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, current_node_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, status_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, status_message_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, node_ipv4_cidr_size_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, services_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, instance_group_urls_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, current_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, expire_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, location_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, enable_tpu_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, tpu_ipv4_cidr_block_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Cluster, conditions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_node_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_monitoring_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_addons_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_image_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_database_encryption_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_workload_identity_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_shielded_nodes_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_node_pool_autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_locations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_master_authorized_networks_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_cluster_autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_binary_authorization_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_logging_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_resource_usage_export_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_vertical_pod_autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_private_cluster_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_intra_node_visibility_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_default_snat_status_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_release_channel_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_master_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, operation_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, status_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, detail_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, status_message_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, self_link_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, target_link_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, location_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, start_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, end_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, progress_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, cluster_conditions_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Operation, nodepool_conditions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress_Metric, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress_Metric, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress_Metric, name_),
  offsetof(::google::container::v1::OperationProgress_MetricDefaultTypeInternal, int_value_),
  offsetof(::google::container::v1::OperationProgress_MetricDefaultTypeInternal, double_value_),
  offsetof(::google::container::v1::OperationProgress_MetricDefaultTypeInternal, string_value_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress_Metric, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress, status_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress, metrics_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::OperationProgress, stages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, cluster_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetClusterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetClusterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetClusterRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetClusterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, update_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, node_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, image_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, locations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, workload_metadata_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, upgrade_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, logging_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, monitoring_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, addons_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, locations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, master_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, action_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, update_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListClustersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListClustersRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListClustersRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListClustersRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListClustersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListClustersResponse, clusters_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListClustersResponse, missing_zones_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOperationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOperationRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOperationRequest, operation_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOperationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListOperationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListOperationsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListOperationsRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListOperationsRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, operation_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListOperationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListOperationsResponse, operations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListOperationsResponse, missing_zones_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetServerConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetServerConfigRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetServerConfigRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetServerConfigRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig_ReleaseChannelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig_ReleaseChannelConfig, channel_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig_ReleaseChannelConfig, default_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig_ReleaseChannelConfig, valid_versions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig, default_cluster_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig, valid_node_versions_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig, default_image_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig, valid_image_types_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig, valid_master_versions_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ServerConfig, channels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, node_pool_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool_UpgradeSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool_UpgradeSettings, max_surge_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool_UpgradeSettings, max_unavailable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, initial_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, locations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, self_link_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, instance_group_urls_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, status_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, status_message_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, management_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, max_pods_constraint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, conditions_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, pod_ipv4_cidr_size_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePool, upgrade_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeManagement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeManagement, auto_upgrade_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeManagement, auto_repair_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodeManagement, upgrade_options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoUpgradeOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoUpgradeOptions, auto_upgrade_start_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoUpgradeOptions, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenancePolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenancePolicy, window_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenancePolicy, resource_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenanceWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenanceWindow, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::container::v1::MaintenanceWindowDefaultTypeInternal, daily_maintenance_window_),
  offsetof(::google::container::v1::MaintenanceWindowDefaultTypeInternal, recurring_window_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenanceWindow, maintenance_exclusions_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaintenanceWindow, policy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::TimeWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::TimeWindow, start_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::TimeWindow, end_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RecurringTimeWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RecurringTimeWindow, window_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RecurringTimeWindow, recurrence_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DailyMaintenanceWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DailyMaintenanceWindow, start_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DailyMaintenanceWindow, duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, management_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListNodePoolsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListNodePoolsResponse, node_pools_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterAutoscaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterAutoscaling, enable_node_autoprovisioning_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterAutoscaling, resource_limits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterAutoscaling, autoprovisioning_node_pool_defaults_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ClusterAutoscaling, autoprovisioning_locations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, oauth_scopes_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, service_account_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, upgrade_settings_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, management_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, min_cpu_platform_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, disk_size_gb_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, disk_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, shielded_instance_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, boot_disk_kms_key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AutoprovisioningNodePoolDefaults, image_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceLimit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceLimit, resource_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceLimit, minimum_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceLimit, maximum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, enabled_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, min_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, max_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, autoprovisioned_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, resource_labels_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, label_fingerprint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, enabled_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, rotate_credentials_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AcceleratorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AcceleratorConfig, accelerator_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::AcceleratorConfig, accelerator_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::WorkloadMetadataConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::WorkloadMetadataConfig, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, network_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, maintenance_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StatusCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StatusCondition, code_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::StatusCondition, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkConfig, network_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkConfig, subnetwork_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkConfig, enable_intra_node_visibility_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::NetworkConfig, default_snat_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigResponse, issuer_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigResponse, jwks_uri_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigResponse, response_types_supported_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigResponse, subject_types_supported_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigResponse, id_token_signing_alg_values_supported_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigResponse, claims_supported_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetOpenIDConfigResponse, grant_types_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetJSONWebKeysRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetJSONWebKeysRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, kty_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, alg_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, use_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, kid_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, n_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, e_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, x_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, y_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::Jwk, crv_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetJSONWebKeysResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::GetJSONWebKeysResponse, keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ReleaseChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ReleaseChannel, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IntraNodeVisibilityConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::IntraNodeVisibilityConfig, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaxPodsConstraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::MaxPodsConstraint, max_pods_per_node_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::WorkloadIdentityConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::WorkloadIdentityConfig, workload_pool_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DatabaseEncryption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DatabaseEncryption, state_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DatabaseEncryption, key_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListUsableSubnetworksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListUsableSubnetworksRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListUsableSubnetworksRequest, filter_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListUsableSubnetworksRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListUsableSubnetworksRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListUsableSubnetworksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListUsableSubnetworksResponse, subnetworks_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ListUsableSubnetworksResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetworkSecondaryRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetworkSecondaryRange, range_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetworkSecondaryRange, ip_cidr_range_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetworkSecondaryRange, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetwork, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetwork, subnetwork_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetwork, network_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetwork, ip_cidr_range_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetwork, secondary_ip_ranges_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::UsableSubnetwork, status_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceUsageExportConfig_BigQueryDestination, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceUsageExportConfig_BigQueryDestination, dataset_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceUsageExportConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceUsageExportConfig, bigquery_destination_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceUsageExportConfig, enable_network_egress_metering_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ResourceUsageExportConfig, consumption_metering_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::VerticalPodAutoscaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::VerticalPodAutoscaling, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DefaultSnatStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::DefaultSnatStatus, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ShieldedNodes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1::ShieldedNodes, enabled_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse)},
  { 9, 16, sizeof(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse)},
  { 18, -1, sizeof(::google::container::v1::NodeConfig)},
  { 43, -1, sizeof(::google::container::v1::ShieldedInstanceConfig)},
  { 50, -1, sizeof(::google::container::v1::SandboxConfig)},
  { 56, -1, sizeof(::google::container::v1::ReservationAffinity)},
  { 64, -1, sizeof(::google::container::v1::NodeTaint)},
  { 72, -1, sizeof(::google::container::v1::MasterAuth)},
  { 83, -1, sizeof(::google::container::v1::ClientCertificateConfig)},
  { 89, -1, sizeof(::google::container::v1::AddonsConfig)},
  { 101, -1, sizeof(::google::container::v1::HttpLoadBalancing)},
  { 107, -1, sizeof(::google::container::v1::HorizontalPodAutoscaling)},
  { 113, -1, sizeof(::google::container::v1::KubernetesDashboard)},
  { 119, -1, sizeof(::google::container::v1::NetworkPolicyConfig)},
  { 125, -1, sizeof(::google::container::v1::DnsCacheConfig)},
  { 131, -1, sizeof(::google::container::v1::PrivateClusterMasterGlobalAccessConfig)},
  { 137, -1, sizeof(::google::container::v1::PrivateClusterConfig)},
  { 149, -1, sizeof(::google::container::v1::AuthenticatorGroupsConfig)},
  { 156, -1, sizeof(::google::container::v1::CloudRunConfig)},
  { 163, -1, sizeof(::google::container::v1::ConfigConnectorConfig)},
  { 169, -1, sizeof(::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock)},
  { 176, -1, sizeof(::google::container::v1::MasterAuthorizedNetworksConfig)},
  { 183, -1, sizeof(::google::container::v1::LegacyAbac)},
  { 189, -1, sizeof(::google::container::v1::NetworkPolicy)},
  { 196, -1, sizeof(::google::container::v1::BinaryAuthorization)},
  { 202, -1, sizeof(::google::container::v1::IPAllocationPolicy)},
  { 220, 227, sizeof(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse)},
  { 229, -1, sizeof(::google::container::v1::Cluster)},
  { 285, -1, sizeof(::google::container::v1::ClusterUpdate)},
  { 311, -1, sizeof(::google::container::v1::Operation)},
  { 330, -1, sizeof(::google::container::v1::OperationProgress_Metric)},
  { 340, -1, sizeof(::google::container::v1::OperationProgress)},
  { 349, -1, sizeof(::google::container::v1::CreateClusterRequest)},
  { 358, -1, sizeof(::google::container::v1::GetClusterRequest)},
  { 367, -1, sizeof(::google::container::v1::UpdateClusterRequest)},
  { 377, -1, sizeof(::google::container::v1::UpdateNodePoolRequest)},
  { 392, -1, sizeof(::google::container::v1::SetNodePoolAutoscalingRequest)},
  { 403, -1, sizeof(::google::container::v1::SetLoggingServiceRequest)},
  { 413, -1, sizeof(::google::container::v1::SetMonitoringServiceRequest)},
  { 423, -1, sizeof(::google::container::v1::SetAddonsConfigRequest)},
  { 433, -1, sizeof(::google::container::v1::SetLocationsRequest)},
  { 443, -1, sizeof(::google::container::v1::UpdateMasterRequest)},
  { 453, -1, sizeof(::google::container::v1::SetMasterAuthRequest)},
  { 464, -1, sizeof(::google::container::v1::DeleteClusterRequest)},
  { 473, -1, sizeof(::google::container::v1::ListClustersRequest)},
  { 481, -1, sizeof(::google::container::v1::ListClustersResponse)},
  { 488, -1, sizeof(::google::container::v1::GetOperationRequest)},
  { 497, -1, sizeof(::google::container::v1::ListOperationsRequest)},
  { 505, -1, sizeof(::google::container::v1::CancelOperationRequest)},
  { 514, -1, sizeof(::google::container::v1::ListOperationsResponse)},
  { 521, -1, sizeof(::google::container::v1::GetServerConfigRequest)},
  { 529, -1, sizeof(::google::container::v1::ServerConfig_ReleaseChannelConfig)},
  { 537, -1, sizeof(::google::container::v1::ServerConfig)},
  { 548, -1, sizeof(::google::container::v1::CreateNodePoolRequest)},
  { 558, -1, sizeof(::google::container::v1::DeleteNodePoolRequest)},
  { 568, -1, sizeof(::google::container::v1::ListNodePoolsRequest)},
  { 577, -1, sizeof(::google::container::v1::GetNodePoolRequest)},
  { 587, -1, sizeof(::google::container::v1::NodePool_UpgradeSettings)},
  { 594, -1, sizeof(::google::container::v1::NodePool)},
  { 614, -1, sizeof(::google::container::v1::NodeManagement)},
  { 622, -1, sizeof(::google::container::v1::AutoUpgradeOptions)},
  { 629, -1, sizeof(::google::container::v1::MaintenancePolicy)},
  { 636, 643, sizeof(::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse)},
  { 645, -1, sizeof(::google::container::v1::MaintenanceWindow)},
  { 654, -1, sizeof(::google::container::v1::TimeWindow)},
  { 661, -1, sizeof(::google::container::v1::RecurringTimeWindow)},
  { 668, -1, sizeof(::google::container::v1::DailyMaintenanceWindow)},
  { 675, -1, sizeof(::google::container::v1::SetNodePoolManagementRequest)},
  { 686, -1, sizeof(::google::container::v1::SetNodePoolSizeRequest)},
  { 697, -1, sizeof(::google::container::v1::RollbackNodePoolUpgradeRequest)},
  { 707, -1, sizeof(::google::container::v1::ListNodePoolsResponse)},
  { 713, -1, sizeof(::google::container::v1::ClusterAutoscaling)},
  { 722, -1, sizeof(::google::container::v1::AutoprovisioningNodePoolDefaults)},
  { 737, -1, sizeof(::google::container::v1::ResourceLimit)},
  { 745, -1, sizeof(::google::container::v1::NodePoolAutoscaling)},
  { 754, 761, sizeof(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse)},
  { 763, -1, sizeof(::google::container::v1::SetLabelsRequest)},
  { 774, -1, sizeof(::google::container::v1::SetLegacyAbacRequest)},
  { 784, -1, sizeof(::google::container::v1::StartIPRotationRequest)},
  { 794, -1, sizeof(::google::container::v1::CompleteIPRotationRequest)},
  { 803, -1, sizeof(::google::container::v1::AcceleratorConfig)},
  { 810, -1, sizeof(::google::container::v1::WorkloadMetadataConfig)},
  { 816, -1, sizeof(::google::container::v1::SetNetworkPolicyRequest)},
  { 826, -1, sizeof(::google::container::v1::SetMaintenancePolicyRequest)},
  { 836, -1, sizeof(::google::container::v1::StatusCondition)},
  { 843, -1, sizeof(::google::container::v1::NetworkConfig)},
  { 852, -1, sizeof(::google::container::v1::GetOpenIDConfigRequest)},
  { 858, -1, sizeof(::google::container::v1::GetOpenIDConfigResponse)},
  { 870, -1, sizeof(::google::container::v1::GetJSONWebKeysRequest)},
  { 876, -1, sizeof(::google::container::v1::Jwk)},
  { 890, -1, sizeof(::google::container::v1::GetJSONWebKeysResponse)},
  { 896, -1, sizeof(::google::container::v1::ReleaseChannel)},
  { 902, -1, sizeof(::google::container::v1::IntraNodeVisibilityConfig)},
  { 908, -1, sizeof(::google::container::v1::MaxPodsConstraint)},
  { 914, -1, sizeof(::google::container::v1::WorkloadIdentityConfig)},
  { 920, -1, sizeof(::google::container::v1::DatabaseEncryption)},
  { 927, -1, sizeof(::google::container::v1::ListUsableSubnetworksRequest)},
  { 936, -1, sizeof(::google::container::v1::ListUsableSubnetworksResponse)},
  { 943, -1, sizeof(::google::container::v1::UsableSubnetworkSecondaryRange)},
  { 951, -1, sizeof(::google::container::v1::UsableSubnetwork)},
  { 961, -1, sizeof(::google::container::v1::ResourceUsageExportConfig_BigQueryDestination)},
  { 967, -1, sizeof(::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig)},
  { 973, -1, sizeof(::google::container::v1::ResourceUsageExportConfig)},
  { 981, -1, sizeof(::google::container::v1::VerticalPodAutoscaling)},
  { 987, -1, sizeof(::google::container::v1::DefaultSnatStatus)},
  { 993, -1, sizeof(::google::container::v1::ShieldedNodes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeConfig_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeConfig_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ShieldedInstanceConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SandboxConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ReservationAffinity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeTaint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MasterAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ClientCertificateConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_AddonsConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_HttpLoadBalancing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_HorizontalPodAutoscaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_KubernetesDashboard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NetworkPolicyConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DnsCacheConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_PrivateClusterMasterGlobalAccessConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_PrivateClusterConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_AuthenticatorGroupsConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CloudRunConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ConfigConnectorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MasterAuthorizedNetworksConfig_CidrBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MasterAuthorizedNetworksConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_LegacyAbac_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NetworkPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_BinaryAuthorization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_IPAllocationPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_Cluster_ResourceLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_Cluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ClusterUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_Operation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_OperationProgress_Metric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_OperationProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CreateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_UpdateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_UpdateNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetNodePoolAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLoggingServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetMonitoringServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetAddonsConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLocationsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_UpdateMasterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetMasterAuthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DeleteClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListClustersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListClustersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetOperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListOperationsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CancelOperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListOperationsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetServerConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ServerConfig_ReleaseChannelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ServerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CreateNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DeleteNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListNodePoolsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodePool_UpgradeSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodePool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeManagement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_AutoUpgradeOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MaintenancePolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MaintenanceWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_TimeWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_RecurringTimeWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DailyMaintenanceWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetNodePoolManagementRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetNodePoolSizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_RollbackNodePoolUpgradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListNodePoolsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ClusterAutoscaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_AutoprovisioningNodePoolDefaults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ResourceLimit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodePoolAutoscaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLabelsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLegacyAbacRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_StartIPRotationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CompleteIPRotationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_AcceleratorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_WorkloadMetadataConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetNetworkPolicyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetMaintenancePolicyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_StatusCondition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NetworkConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetOpenIDConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetOpenIDConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetJSONWebKeysRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_Jwk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetJSONWebKeysResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ReleaseChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_IntraNodeVisibilityConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MaxPodsConstraint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_WorkloadIdentityConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DatabaseEncryption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListUsableSubnetworksRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListUsableSubnetworksResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_UsableSubnetworkSecondaryRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_UsableSubnetwork_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ResourceUsageExportConfig_BigQueryDestination_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ResourceUsageExportConfig_ConsumptionMeteringConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ResourceUsageExportConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_VerticalPodAutoscaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DefaultSnatStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ShieldedNodes_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto = {
  {}, AddDescriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto, "google/container/v1/cluster_service.proto", schemas,
  file_default_instances, TableStruct_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::offsets,
  file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto, 106, file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto, file_level_service_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto,
};

const char descriptor_table_protodef_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[] =
  "\n)google/container/v1/cluster_service.pr"
  "oto\022\023google.container.v1\032\034google/api/ann"
  "otations.proto\032\027google/api/client.proto\032"
  "\037google/api/field_behavior.proto\032\033google"
  "/protobuf/empty.proto\032\037google/protobuf/t"
  "imestamp.proto\"\201\007\n\nNodeConfig\022\024\n\014machine"
  "_type\030\001 \001(\t\022\024\n\014disk_size_gb\030\002 \001(\005\022\024\n\014oau"
  "th_scopes\030\003 \003(\t\022\027\n\017service_account\030\t \001(\t"
  "\022\?\n\010metadata\030\004 \003(\0132-.google.container.v1"
  ".NodeConfig.MetadataEntry\022\022\n\nimage_type\030"
  "\005 \001(\t\022;\n\006labels\030\006 \003(\0132+.google.container"
  ".v1.NodeConfig.LabelsEntry\022\027\n\017local_ssd_"
  "count\030\007 \001(\005\022\014\n\004tags\030\010 \003(\t\022\023\n\013preemptible"
  "\030\n \001(\010\022<\n\014accelerators\030\013 \003(\0132&.google.co"
  "ntainer.v1.AcceleratorConfig\022\021\n\tdisk_typ"
  "e\030\014 \001(\t\022\030\n\020min_cpu_platform\030\r \001(\t\022M\n\030wor"
  "kload_metadata_config\030\016 \001(\0132+.google.con"
  "tainer.v1.WorkloadMetadataConfig\022.\n\006tain"
  "ts\030\017 \003(\0132\036.google.container.v1.NodeTaint"
  "\022:\n\016sandbox_config\030\021 \001(\0132\".google.contai"
  "ner.v1.SandboxConfig\022\022\n\nnode_group\030\022 \001(\t"
  "\022F\n\024reservation_affinity\030\023 \001(\0132(.google."
  "container.v1.ReservationAffinity\022M\n\030shie"
  "lded_instance_config\030\024 \001(\0132+.google.cont"
  "ainer.v1.ShieldedInstanceConfig\022\031\n\021boot_"
  "disk_kms_key\030\027 \001(\t\032/\n\rMetadataEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032-\n\013LabelsEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"Y\n\026Sh"
  "ieldedInstanceConfig\022\032\n\022enable_secure_bo"
  "ot\030\001 \001(\010\022#\n\033enable_integrity_monitoring\030"
  "\002 \001(\010\"k\n\rSandboxConfig\0225\n\004type\030\002 \001(\0162\'.g"
  "oogle.container.v1.SandboxConfig.Type\"#\n"
  "\004Type\022\017\n\013UNSPECIFIED\020\000\022\n\n\006GVISOR\020\001\"\337\001\n\023R"
  "eservationAffinity\022O\n\030consume_reservatio"
  "n_type\030\001 \001(\0162-.google.container.v1.Reser"
  "vationAffinity.Type\022\013\n\003key\030\002 \001(\t\022\016\n\006valu"
  "es\030\003 \003(\t\"Z\n\004Type\022\017\n\013UNSPECIFIED\020\000\022\022\n\016NO_"
  "RESERVATION\020\001\022\023\n\017ANY_RESERVATION\020\002\022\030\n\024SP"
  "ECIFIC_RESERVATION\020\003\"\271\001\n\tNodeTaint\022\013\n\003ke"
  "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\0225\n\006effect\030\003 \001(\0162%"
  ".google.container.v1.NodeTaint.Effect\"Y\n"
  "\006Effect\022\026\n\022EFFECT_UNSPECIFIED\020\000\022\017\n\013NO_SC"
  "HEDULE\020\001\022\026\n\022PREFER_NO_SCHEDULE\020\002\022\016\n\nNO_E"
  "XECUTE\020\003\"\331\001\n\nMasterAuth\022\024\n\010username\030\001 \001("
  "\tB\002\030\001\022\024\n\010password\030\002 \001(\tB\002\030\001\022O\n\031client_ce"
  "rtificate_config\030\003 \001(\0132,.google.containe"
  "r.v1.ClientCertificateConfig\022\036\n\026cluster_"
  "ca_certificate\030d \001(\t\022\032\n\022client_certifica"
  "te\030e \001(\t\022\022\n\nclient_key\030f \001(\t\";\n\027ClientCe"
  "rtificateConfig\022 \n\030issue_client_certific"
  "ate\030\001 \001(\010\"\206\004\n\014AddonsConfig\022C\n\023http_load_"
  "balancing\030\001 \001(\0132&.google.container.v1.Ht"
  "tpLoadBalancing\022Q\n\032horizontal_pod_autosc"
  "aling\030\002 \001(\0132-.google.container.v1.Horizo"
  "ntalPodAutoscaling\022J\n\024kubernetes_dashboa"
  "rd\030\003 \001(\0132(.google.container.v1.Kubernete"
  "sDashboardB\002\030\001\022G\n\025network_policy_config\030"
  "\004 \001(\0132(.google.container.v1.NetworkPolic"
  "yConfig\022=\n\020cloud_run_config\030\007 \001(\0132#.goog"
  "le.container.v1.CloudRunConfig\022=\n\020dns_ca"
  "che_config\030\010 \001(\0132#.google.container.v1.D"
  "nsCacheConfig\022K\n\027config_connector_config"
  "\030\n \001(\0132*.google.container.v1.ConfigConne"
  "ctorConfig\"%\n\021HttpLoadBalancing\022\020\n\010disab"
  "led\030\001 \001(\010\",\n\030HorizontalPodAutoscaling\022\020\n"
  "\010disabled\030\001 \001(\010\"\'\n\023KubernetesDashboard\022\020"
  "\n\010disabled\030\001 \001(\010\"\'\n\023NetworkPolicyConfig\022"
  "\020\n\010disabled\030\001 \001(\010\"!\n\016DnsCacheConfig\022\017\n\007e"
  "nabled\030\001 \001(\010\"9\n&PrivateClusterMasterGlob"
  "alAccessConfig\022\017\n\007enabled\030\001 \001(\010\"\240\002\n\024Priv"
  "ateClusterConfig\022\034\n\024enable_private_nodes"
  "\030\001 \001(\010\022\037\n\027enable_private_endpoint\030\002 \001(\010\022"
  "\036\n\026master_ipv4_cidr_block\030\003 \001(\t\022\030\n\020priva"
  "te_endpoint\030\004 \001(\t\022\027\n\017public_endpoint\030\005 \001"
  "(\t\022\024\n\014peering_name\030\007 \001(\t\022`\n\033master_globa"
  "l_access_config\030\010 \001(\0132;.google.container"
  ".v1.PrivateClusterMasterGlobalAccessConf"
  "ig\"D\n\031AuthenticatorGroupsConfig\022\017\n\007enabl"
  "ed\030\001 \001(\010\022\026\n\016security_group\030\002 \001(\t\"\356\001\n\016Clo"
  "udRunConfig\022\020\n\010disabled\030\001 \001(\010\022P\n\022load_ba"
  "lancer_type\030\003 \001(\01624.google.container.v1."
  "CloudRunConfig.LoadBalancerType\"x\n\020LoadB"
  "alancerType\022\"\n\036LOAD_BALANCER_TYPE_UNSPEC"
  "IFIED\020\000\022\037\n\033LOAD_BALANCER_TYPE_EXTERNAL\020\001"
  "\022\037\n\033LOAD_BALANCER_TYPE_INTERNAL\020\002\"(\n\025Con"
  "figConnectorConfig\022\017\n\007enabled\030\001 \001(\010\"\274\001\n\036"
  "MasterAuthorizedNetworksConfig\022\017\n\007enable"
  "d\030\001 \001(\010\022R\n\013cidr_blocks\030\002 \003(\0132=.google.co"
  "ntainer.v1.MasterAuthorizedNetworksConfi"
  "g.CidrBlock\0325\n\tCidrBlock\022\024\n\014display_name"
  "\030\001 \001(\t\022\022\n\ncidr_block\030\002 \001(\t\"\035\n\nLegacyAbac"
  "\022\017\n\007enabled\030\001 \001(\010\"\221\001\n\rNetworkPolicy\022=\n\010p"
  "rovider\030\001 \001(\0162+.google.container.v1.Netw"
  "orkPolicy.Provider\022\017\n\007enabled\030\002 \001(\010\"0\n\010P"
  "rovider\022\030\n\024PROVIDER_UNSPECIFIED\020\000\022\n\n\006CAL"
  "ICO\020\001\"&\n\023BinaryAuthorization\022\017\n\007enabled\030"
  "\001 \001(\010\"\232\003\n\022IPAllocationPolicy\022\026\n\016use_ip_a"
  "liases\030\001 \001(\010\022\031\n\021create_subnetwork\030\002 \001(\010\022"
  "\027\n\017subnetwork_name\030\003 \001(\t\022\035\n\021cluster_ipv4"
  "_cidr\030\004 \001(\tB\002\030\001\022\032\n\016node_ipv4_cidr\030\005 \001(\tB"
  "\002\030\001\022\036\n\022services_ipv4_cidr\030\006 \001(\tB\002\030\001\022$\n\034c"
  "luster_secondary_range_name\030\007 \001(\t\022%\n\035ser"
  "vices_secondary_range_name\030\010 \001(\t\022\037\n\027clus"
  "ter_ipv4_cidr_block\030\t \001(\t\022\034\n\024node_ipv4_c"
  "idr_block\030\n \001(\t\022 \n\030services_ipv4_cidr_bl"
  "ock\030\013 \001(\t\022\033\n\023tpu_ipv4_cidr_block\030\r \001(\t\022\022"
  "\n\nuse_routes\030\017 \001(\010\"\264\023\n\007Cluster\022\014\n\004name\030\001"
  " \001(\t\022\023\n\013description\030\002 \001(\t\022\036\n\022initial_nod"
  "e_count\030\003 \001(\005B\002\030\001\0228\n\013node_config\030\004 \001(\0132\037"
  ".google.container.v1.NodeConfigB\002\030\001\0224\n\013m"
  "aster_auth\030\005 \001(\0132\037.google.container.v1.M"
  "asterAuth\022\027\n\017logging_service\030\006 \001(\t\022\032\n\022mo"
  "nitoring_service\030\007 \001(\t\022\017\n\007network\030\010 \001(\t\022"
  "\031\n\021cluster_ipv4_cidr\030\t \001(\t\0228\n\raddons_con"
  "fig\030\n \001(\0132!.google.container.v1.AddonsCo"
  "nfig\022\022\n\nsubnetwork\030\013 \001(\t\0221\n\nnode_pools\030\014"
  " \003(\0132\035.google.container.v1.NodePool\022\021\n\tl"
  "ocations\030\r \003(\t\022\037\n\027enable_kubernetes_alph"
  "a\030\016 \001(\010\022I\n\017resource_labels\030\017 \003(\01320.googl"
  "e.container.v1.Cluster.ResourceLabelsEnt"
  "ry\022\031\n\021label_fingerprint\030\020 \001(\t\0224\n\013legacy_"
  "abac\030\022 \001(\0132\037.google.container.v1.LegacyA"
  "bac\022:\n\016network_policy\030\023 \001(\0132\".google.con"
  "tainer.v1.NetworkPolicy\022E\n\024ip_allocation"
  "_policy\030\024 \001(\0132\'.google.container.v1.IPAl"
  "locationPolicy\022^\n!master_authorized_netw"
  "orks_config\030\026 \001(\01323.google.container.v1."
  "MasterAuthorizedNetworksConfig\022B\n\022mainte"
  "nance_policy\030\027 \001(\0132&.google.container.v1"
  ".MaintenancePolicy\022F\n\024binary_authorizati"
  "on\030\030 \001(\0132(.google.container.v1.BinaryAut"
  "horization\022<\n\013autoscaling\030\032 \001(\0132\'.google"
  ".container.v1.ClusterAutoscaling\022:\n\016netw"
  "ork_config\030\033 \001(\0132\".google.container.v1.N"
  "etworkConfig\022K\n\033default_max_pods_constra"
  "int\030\036 \001(\0132&.google.container.v1.MaxPodsC"
  "onstraint\022T\n\034resource_usage_export_confi"
  "g\030! \001(\0132..google.container.v1.ResourceUs"
  "ageExportConfig\022S\n\033authenticator_groups_"
  "config\030\" \001(\0132..google.container.v1.Authe"
  "nticatorGroupsConfig\022I\n\026private_cluster_"
  "config\030% \001(\0132).google.container.v1.Priva"
  "teClusterConfig\022D\n\023database_encryption\030&"
  " \001(\0132\'.google.container.v1.DatabaseEncry"
  "ption\022M\n\030vertical_pod_autoscaling\030\' \001(\0132"
  "+.google.container.v1.VerticalPodAutosca"
  "ling\022:\n\016shielded_nodes\030( \001(\0132\".google.co"
  "ntainer.v1.ShieldedNodes\022<\n\017release_chan"
  "nel\030) \001(\0132#.google.container.v1.ReleaseC"
  "hannel\022M\n\030workload_identity_config\030+ \001(\013"
  "2+.google.container.v1.WorkloadIdentityC"
  "onfig\022\021\n\tself_link\030d \001(\t\022\020\n\004zone\030e \001(\tB\002"
  "\030\001\022\020\n\010endpoint\030f \001(\t\022\037\n\027initial_cluster_"
  "version\030g \001(\t\022\036\n\026current_master_version\030"
  "h \001(\t\022 \n\024current_node_version\030i \001(\tB\002\030\001\022"
  "\023\n\013create_time\030j \001(\t\0223\n\006status\030k \001(\0162#.g"
  "oogle.container.v1.Cluster.Status\022\032\n\016sta"
  "tus_message\030l \001(\tB\002\030\001\022\033\n\023node_ipv4_cidr_"
  "size\030m \001(\005\022\032\n\022services_ipv4_cidr\030n \001(\t\022\037"
  "\n\023instance_group_urls\030o \003(\tB\002\030\001\022\036\n\022curre"
  "nt_node_count\030p \001(\005B\002\030\001\022\023\n\013expire_time\030q"
  " \001(\t\022\020\n\010location\030r \001(\t\022\022\n\nenable_tpu\030s \001"
  "(\010\022\033\n\023tpu_ipv4_cidr_block\030t \001(\t\0228\n\ncondi"
  "tions\030v \003(\0132$.google.container.v1.Status"
  "Condition\0325\n\023ResourceLabelsEntry\022\013\n\003key\030"
  "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"w\n\006Status\022\026\n\022ST"
  "ATUS_UNSPECIFIED\020\000\022\020\n\014PROVISIONING\020\001\022\013\n\007"
  "RUNNING\020\002\022\017\n\013RECONCILING\020\003\022\014\n\010STOPPING\020\004"
  "\022\t\n\005ERROR\020\005\022\014\n\010DEGRADED\020\006\"\342\n\n\rClusterUpd"
  "ate\022\034\n\024desired_node_version\030\004 \001(\t\022\"\n\032des"
  "ired_monitoring_service\030\005 \001(\t\022@\n\025desired"
  "_addons_config\030\006 \001(\0132!.google.container."
  "v1.AddonsConfig\022\034\n\024desired_node_pool_id\030"
  "\007 \001(\t\022\032\n\022desired_image_type\030\010 \001(\t\022L\n\033des"
  "ired_database_encryption\030. \001(\0132\'.google."
  "container.v1.DatabaseEncryption\022U\n desir"
  "ed_workload_identity_config\030/ \001(\0132+.goog"
  "le.container.v1.WorkloadIdentityConfig\022B"
  "\n\026desired_shielded_nodes\0300 \001(\0132\".google."
  "container.v1.ShieldedNodes\022O\n\035desired_no"
  "de_pool_autoscaling\030\t \001(\0132(.google.conta"
  "iner.v1.NodePoolAutoscaling\022\031\n\021desired_l"
  "ocations\030\n \003(\t\022f\n)desired_master_authori"
  "zed_networks_config\030\014 \001(\01323.google.conta"
  "iner.v1.MasterAuthorizedNetworksConfig\022L"
  "\n\033desired_cluster_autoscaling\030\017 \001(\0132\'.go"
  "ogle.container.v1.ClusterAutoscaling\022N\n\034"
  "desired_binary_authorization\030\020 \001(\0132(.goo"
  "gle.container.v1.BinaryAuthorization\022\037\n\027"
  "desired_logging_service\030\023 \001(\t\022\\\n$desired"
  "_resource_usage_export_config\030\025 \001(\0132..go"
  "ogle.container.v1.ResourceUsageExportCon"
  "fig\022U\n desired_vertical_pod_autoscaling\030"
  "\026 \001(\0132+.google.container.v1.VerticalPodA"
  "utoscaling\022Q\n\036desired_private_cluster_co"
  "nfig\030\031 \001(\0132).google.container.v1.Private"
  "ClusterConfig\022\\\n$desired_intra_node_visi"
  "bility_config\030\032 \001(\0132..google.container.v"
  "1.IntraNodeVisibilityConfig\022K\n\033desired_d"
  "efault_snat_status\030\034 \001(\0132&.google.contai"
  "ner.v1.DefaultSnatStatus\022D\n\027desired_rele"
  "ase_channel\030\037 \001(\0132#.google.container.v1."
  "ReleaseChannel\022\036\n\026desired_master_version"
  "\030d \001(\t\"\304\007\n\tOperation\022\014\n\004name\030\001 \001(\t\022\020\n\004zo"
  "ne\030\002 \001(\tB\002\030\001\022;\n\016operation_type\030\003 \001(\0162#.g"
  "oogle.container.v1.Operation.Type\0225\n\006sta"
  "tus\030\004 \001(\0162%.google.container.v1.Operatio"
  "n.Status\022\016\n\006detail\030\010 \001(\t\022\033\n\016status_messa"
  "ge\030\005 \001(\tB\003\340A\003\022\021\n\tself_link\030\006 \001(\t\022\023\n\013targ"
  "et_link\030\007 \001(\t\022\020\n\010location\030\t \001(\t\022\022\n\nstart"
  "_time\030\n \001(\t\022\020\n\010end_time\030\013 \001(\t\022=\n\010progres"
  "s\030\014 \001(\0132&.google.container.v1.OperationP"
  "rogressB\003\340A\003\022@\n\022cluster_conditions\030\r \003(\013"
  "2$.google.container.v1.StatusCondition\022A"
  "\n\023nodepool_conditions\030\016 \003(\0132$.google.con"
  "tainer.v1.StatusCondition\"R\n\006Status\022\026\n\022S"
  "TATUS_UNSPECIFIED\020\000\022\013\n\007PENDING\020\001\022\013\n\007RUNN"
  "ING\020\002\022\010\n\004DONE\020\003\022\014\n\010ABORTING\020\004\"\375\002\n\004Type\022\024"
  "\n\020TYPE_UNSPECIFIED\020\000\022\022\n\016CREATE_CLUSTER\020\001"
  "\022\022\n\016DELETE_CLUSTER\020\002\022\022\n\016UPGRADE_MASTER\020\003"
  "\022\021\n\rUPGRADE_NODES\020\004\022\022\n\016REPAIR_CLUSTER\020\005\022"
  "\022\n\016UPDATE_CLUSTER\020\006\022\024\n\020CREATE_NODE_POOL\020"
  "\007\022\024\n\020DELETE_NODE_POOL\020\010\022\034\n\030SET_NODE_POOL"
  "_MANAGEMENT\020\t\022\025\n\021AUTO_REPAIR_NODES\020\n\022\026\n\022"
  "AUTO_UPGRADE_NODES\020\013\022\016\n\nSET_LABELS\020\014\022\023\n\017"
  "SET_MASTER_AUTH\020\r\022\026\n\022SET_NODE_POOL_SIZE\020"
  "\016\022\026\n\022SET_NETWORK_POLICY\020\017\022\032\n\026SET_MAINTEN"
  "ANCE_POLICY\020\020\"\273\002\n\021OperationProgress\022\014\n\004n"
  "ame\030\001 \001(\t\0225\n\006status\030\002 \001(\0162%.google.conta"
  "iner.v1.Operation.Status\022>\n\007metrics\030\003 \003("
  "\0132-.google.container.v1.OperationProgres"
  "s.Metric\0226\n\006stages\030\004 \003(\0132&.google.contai"
  "ner.v1.OperationProgress\032i\n\006Metric\022\021\n\004na"
  "me\030\001 \001(\tB\003\340A\002\022\023\n\tint_value\030\002 \001(\003H\000\022\026\n\014do"
  "uble_value\030\003 \001(\001H\000\022\026\n\014string_value\030\004 \001(\t"
  "H\000B\007\n\005value\"\204\001\n\024CreateClusterRequest\022\026\n\n"
  "project_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\0222"
  "\n\007cluster\030\003 \001(\0132\034.google.container.v1.Cl"
  "usterB\003\340A\002\022\016\n\006parent\030\005 \001(\t\"c\n\021GetCluster"
  "Request\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030"
  "\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022\014\n\004nam"
  "e\030\005 \001(\t\"\237\001\n\024UpdateClusterRequest\022\026\n\nproj"
  "ect_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\ncl"
  "uster_id\030\003 \001(\tB\002\030\001\0227\n\006update\030\004 \001(\0132\".goo"
  "gle.container.v1.ClusterUpdateB\003\340A\002\022\014\n\004n"
  "ame\030\005 \001(\t\"\340\002\n\025UpdateNodePoolRequest\022\026\n\np"
  "roject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n"
  "\ncluster_id\030\003 \001(\tB\002\030\001\022\030\n\014node_pool_id\030\004 "
  "\001(\tB\002\030\001\022\031\n\014node_version\030\005 \001(\tB\003\340A\002\022\027\n\nim"
  "age_type\030\006 \001(\tB\003\340A\002\022\014\n\004name\030\010 \001(\t\022\021\n\tloc"
  "ations\030\r \003(\t\022M\n\030workload_metadata_config"
  "\030\016 \001(\0132+.google.container.v1.WorkloadMet"
  "adataConfig\022G\n\020upgrade_settings\030\017 \001(\0132-."
  "google.container.v1.NodePool.UpgradeSett"
  "ings\"\315\001\n\035SetNodePoolAutoscalingRequest\022\026"
  "\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001"
  "\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022\030\n\014node_pool_id"
  "\030\004 \001(\tB\002\030\001\022B\n\013autoscaling\030\005 \001(\0132(.google"
  ".container.v1.NodePoolAutoscalingB\003\340A\002\022\014"
  "\n\004name\030\006 \001(\t\"\210\001\n\030SetLoggingServiceReques"
  "t\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB"
  "\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022\034\n\017logging_s"
  "ervice\030\004 \001(\tB\003\340A\002\022\014\n\004name\030\005 \001(\t\"\216\001\n\033SetM"
  "onitoringServiceRequest\022\026\n\nproject_id\030\001 "
  "\001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030"
  "\003 \001(\tB\002\030\001\022\037\n\022monitoring_service\030\004 \001(\tB\003\340"
  "A\002\022\014\n\004name\030\006 \001(\t\"\247\001\n\026SetAddonsConfigRequ"
  "est\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001("
  "\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022=\n\raddons_"
  "config\030\004 \001(\0132!.google.container.v1.Addon"
  "sConfigB\003\340A\002\022\014\n\004name\030\006 \001(\t\"}\n\023SetLocatio"
  "nsRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zon"
  "e\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022\026\n\tl"
  "ocations\030\004 \003(\tB\003\340A\002\022\014\n\004name\030\006 \001(\t\"\202\001\n\023Up"
  "dateMasterRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030"
  "\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB"
  "\002\030\001\022\033\n\016master_version\030\004 \001(\tB\003\340A\002\022\014\n\004name"
  "\030\007 \001(\t\"\265\002\n\024SetMasterAuthRequest\022\026\n\nproje"
  "ct_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\nclu"
  "ster_id\030\003 \001(\tB\002\030\001\022E\n\006action\030\004 \001(\01620.goog"
  "le.container.v1.SetMasterAuthRequest.Act"
  "ionB\003\340A\002\0224\n\006update\030\005 \001(\0132\037.google.contai"
  "ner.v1.MasterAuthB\003\340A\002\022\014\n\004name\030\007 \001(\t\"P\n\006"
  "Action\022\013\n\007UNKNOWN\020\000\022\020\n\014SET_PASSWORD\020\001\022\025\n"
  "\021GENERATE_PASSWORD\020\002\022\020\n\014SET_USERNAME\020\003\"f"
  "\n\024DeleteClusterRequest\022\026\n\nproject_id\030\001 \001"
  "(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003"
  " \001(\tB\002\030\001\022\014\n\004name\030\004 \001(\t\"O\n\023ListClustersRe"
  "quest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 "
  "\001(\tB\002\030\001\022\016\n\006parent\030\004 \001(\t\"]\n\024ListClustersR"
  "esponse\022.\n\010clusters\030\001 \003(\0132\034.google.conta"
  "iner.v1.Cluster\022\025\n\rmissing_zones\030\002 \003(\t\"g"
  "\n\023GetOperationRequest\022\026\n\nproject_id\030\001 \001("
  "\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\030\n\014operation_id\030"
  "\003 \001(\tB\002\030\001\022\014\n\004name\030\005 \001(\t\"Q\n\025ListOperation"
  "sRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone"
  "\030\002 \001(\tB\002\030\001\022\016\n\006parent\030\004 \001(\t\"j\n\026CancelOper"
  "ationRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004"
  "zone\030\002 \001(\tB\002\030\001\022\030\n\014operation_id\030\003 \001(\tB\002\030\001"
  "\022\014\n\004name\030\004 \001(\t\"c\n\026ListOperationsResponse"
  "\0222\n\noperations\030\001 \003(\0132\036.google.container."
  "v1.Operation\022\025\n\rmissing_zones\030\002 \003(\t\"P\n\026G"
  "etServerConfigRequest\022\026\n\nproject_id\030\001 \001("
  "\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\014\n\004name\030\004 \001(\t\"\364\002"
  "\n\014ServerConfig\022\037\n\027default_cluster_versio"
  "n\030\001 \001(\t\022\033\n\023valid_node_versions\030\003 \003(\t\022\032\n\022"
  "default_image_type\030\004 \001(\t\022\031\n\021valid_image_"
  "types\030\005 \003(\t\022\035\n\025valid_master_versions\030\006 \003"
  "(\t\022H\n\010channels\030\t \003(\01326.google.container."
  "v1.ServerConfig.ReleaseChannelConfig\032\205\001\n"
  "\024ReleaseChannelConfig\022<\n\007channel\030\001 \001(\0162+"
  ".google.container.v1.ReleaseChannel.Chan"
  "nel\022\027\n\017default_version\030\002 \001(\t\022\026\n\016valid_ve"
  "rsions\030\004 \003(\t\"\240\001\n\025CreateNodePoolRequest\022\026"
  "\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001"
  "\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\0225\n\tnode_pool\030\004 "
  "\001(\0132\035.google.container.v1.NodePoolB\003\340A\002\022"
  "\016\n\006parent\030\006 \001(\t\"\201\001\n\025DeleteNodePoolReques"
  "t\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB"
  "\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022\030\n\014node_pool"
  "_id\030\004 \001(\tB\002\030\001\022\014\n\004name\030\006 \001(\t\"h\n\024ListNodeP"
  "oolsRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004z"
  "one\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022\016\n"
  "\006parent\030\005 \001(\t\"~\n\022GetNodePoolRequest\022\026\n\np"
  "roject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n"
  "\ncluster_id\030\003 \001(\tB\002\030\001\022\030\n\014node_pool_id\030\004 "
  "\001(\tB\002\030\001\022\014\n\004name\030\006 \001(\t\"\252\006\n\010NodePool\022\014\n\004na"
  "me\030\001 \001(\t\022/\n\006config\030\002 \001(\0132\037.google.contai"
  "ner.v1.NodeConfig\022\032\n\022initial_node_count\030"
  "\003 \001(\005\022\021\n\tlocations\030\r \003(\t\022\021\n\tself_link\030d "
  "\001(\t\022\017\n\007version\030e \001(\t\022\033\n\023instance_group_u"
  "rls\030f \003(\t\0224\n\006status\030g \001(\0162$.google.conta"
  "iner.v1.NodePool.Status\022\032\n\016status_messag"
  "e\030h \001(\tB\002\030\001\022=\n\013autoscaling\030\004 \001(\0132(.googl"
  "e.container.v1.NodePoolAutoscaling\0227\n\nma"
  "nagement\030\005 \001(\0132#.google.container.v1.Nod"
  "eManagement\022C\n\023max_pods_constraint\030\006 \001(\013"
  "2&.google.container.v1.MaxPodsConstraint"
  "\0228\n\nconditions\030i \003(\0132$.google.container."
  "v1.StatusCondition\022\032\n\022pod_ipv4_cidr_size"
  "\030\007 \001(\005\022G\n\020upgrade_settings\030k \001(\0132-.googl"
  "e.container.v1.NodePool.UpgradeSettings\032"
  "=\n\017UpgradeSettings\022\021\n\tmax_surge\030\001 \001(\005\022\027\n"
  "\017max_unavailable\030\002 \001(\005\"\201\001\n\006Status\022\026\n\022STA"
  "TUS_UNSPECIFIED\020\000\022\020\n\014PROVISIONING\020\001\022\013\n\007R"
  "UNNING\020\002\022\026\n\022RUNNING_WITH_ERROR\020\003\022\017\n\013RECO"
  "NCILING\020\004\022\014\n\010STOPPING\020\005\022\t\n\005ERROR\020\006\"}\n\016No"
  "deManagement\022\024\n\014auto_upgrade\030\001 \001(\010\022\023\n\013au"
  "to_repair\030\002 \001(\010\022@\n\017upgrade_options\030\n \001(\013"
  "2\'.google.container.v1.AutoUpgradeOption"
  "s\"J\n\022AutoUpgradeOptions\022\037\n\027auto_upgrade_"
  "start_time\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\"e\n"
  "\021MaintenancePolicy\0226\n\006window\030\001 \001(\0132&.goo"
  "gle.container.v1.MaintenanceWindow\022\030\n\020re"
  "source_version\030\003 \001(\t\"\366\002\n\021MaintenanceWind"
  "ow\022O\n\030daily_maintenance_window\030\002 \001(\0132+.g"
  "oogle.container.v1.DailyMaintenanceWindo"
  "wH\000\022D\n\020recurring_window\030\003 \001(\0132(.google.c"
  "ontainer.v1.RecurringTimeWindowH\000\022a\n\026mai"
  "ntenance_exclusions\030\004 \003(\0132A.google.conta"
  "iner.v1.MaintenanceWindow.MaintenanceExc"
  "lusionsEntry\032]\n\032MaintenanceExclusionsEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022.\n\005value\030\002 \001(\0132\037.google."
  "container.v1.TimeWindow:\0028\001B\010\n\006policy\"j\n"
  "\nTimeWindow\022.\n\nstart_time\030\001 \001(\0132\032.google"
  ".protobuf.Timestamp\022,\n\010end_time\030\002 \001(\0132\032."
  "google.protobuf.Timestamp\"Z\n\023RecurringTi"
  "meWindow\022/\n\006window\030\001 \001(\0132\037.google.contai"
  "ner.v1.TimeWindow\022\022\n\nrecurrence\030\002 \001(\t\">\n"
  "\026DailyMaintenanceWindow\022\022\n\nstart_time\030\002 "
  "\001(\t\022\020\n\010duration\030\003 \001(\t\"\306\001\n\034SetNodePoolMan"
  "agementRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020"
  "\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001"
  "\022\030\n\014node_pool_id\030\004 \001(\tB\002\030\001\022<\n\nmanagement"
  "\030\005 \001(\0132#.google.container.v1.NodeManagem"
  "entB\003\340A\002\022\014\n\004name\030\007 \001(\t\"\233\001\n\026SetNodePoolSi"
  "zeRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zon"
  "e\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022\030\n\014n"
  "ode_pool_id\030\004 \001(\tB\002\030\001\022\027\n\nnode_count\030\005 \001("
  "\005B\003\340A\002\022\014\n\004name\030\007 \001(\t\"\212\001\n\036RollbackNodePoo"
  "lUpgradeRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001\022"
  "\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030"
  "\001\022\030\n\014node_pool_id\030\004 \001(\tB\002\030\001\022\014\n\004name\030\006 \001("
  "\t\"J\n\025ListNodePoolsResponse\0221\n\nnode_pools"
  "\030\001 \003(\0132\035.google.container.v1.NodePool\"\377\001"
  "\n\022ClusterAutoscaling\022$\n\034enable_node_auto"
  "provisioning\030\001 \001(\010\022;\n\017resource_limits\030\002 "
  "\003(\0132\".google.container.v1.ResourceLimit\022"
  "b\n#autoprovisioning_node_pool_defaults\030\004"
  " \001(\01325.google.container.v1.Autoprovision"
  "ingNodePoolDefaults\022\"\n\032autoprovisioning_"
  "locations\030\005 \003(\t\"\224\003\n AutoprovisioningNode"
  "PoolDefaults\022\024\n\014oauth_scopes\030\001 \003(\t\022\027\n\017se"
  "rvice_account\030\002 \001(\t\022G\n\020upgrade_settings\030"
  "\003 \001(\0132-.google.container.v1.NodePool.Upg"
  "radeSettings\0227\n\nmanagement\030\004 \001(\0132#.googl"
  "e.container.v1.NodeManagement\022\030\n\020min_cpu"
  "_platform\030\005 \001(\t\022\024\n\014disk_size_gb\030\006 \001(\005\022\021\n"
  "\tdisk_type\030\007 \001(\t\022M\n\030shielded_instance_co"
  "nfig\030\010 \001(\0132+.google.container.v1.Shielde"
  "dInstanceConfig\022\031\n\021boot_disk_kms_key\030\t \001"
  "(\t\022\022\n\nimage_type\030\n \001(\t\"H\n\rResourceLimit\022"
  "\025\n\rresource_type\030\001 \001(\t\022\017\n\007minimum\030\002 \001(\003\022"
  "\017\n\007maximum\030\003 \001(\003\"o\n\023NodePoolAutoscaling\022"
  "\017\n\007enabled\030\001 \001(\010\022\026\n\016min_node_count\030\002 \001(\005"
  "\022\026\n\016max_node_count\030\003 \001(\005\022\027\n\017autoprovisio"
  "ned\030\004 \001(\010\"\222\002\n\020SetLabelsRequest\022\026\n\nprojec"
  "t_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\nclus"
  "ter_id\030\003 \001(\tB\002\030\001\022W\n\017resource_labels\030\004 \003("
  "\01329.google.container.v1.SetLabelsRequest"
  ".ResourceLabelsEntryB\003\340A\002\022\036\n\021label_finge"
  "rprint\030\005 \001(\tB\003\340A\002\022\014\n\004name\030\007 \001(\t\0325\n\023Resou"
  "rceLabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
  "(\t:\0028\001\"|\n\024SetLegacyAbacRequest\022\026\n\nprojec"
  "t_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\nclus"
  "ter_id\030\003 \001(\tB\002\030\001\022\024\n\007enabled\030\004 \001(\010B\003\340A\002\022\014"
  "\n\004name\030\006 \001(\t\"\204\001\n\026StartIPRotationRequest\022"
  "\026\n\nproject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030"
  "\001\022\026\n\ncluster_id\030\003 \001(\tB\002\030\001\022\014\n\004name\030\006 \001(\t\022"
  "\032\n\022rotate_credentials\030\007 \001(\010\"k\n\031CompleteI"
  "PRotationRequest\022\026\n\nproject_id\030\001 \001(\tB\002\030\001"
  "\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n\ncluster_id\030\003 \001(\tB\002"
  "\030\001\022\014\n\004name\030\007 \001(\t\"H\n\021AcceleratorConfig\022\031\n"
  "\021accelerator_count\030\001 \001(\003\022\030\n\020accelerator_"
  "type\030\002 \001(\t\"\232\001\n\026WorkloadMetadataConfig\022>\n"
  "\004mode\030\002 \001(\01620.google.container.v1.Worklo"
  "adMetadataConfig.Mode\"@\n\004Mode\022\024\n\020MODE_UN"
  "SPECIFIED\020\000\022\020\n\014GCE_METADATA\020\001\022\020\n\014GKE_MET"
  "ADATA\020\002\"\252\001\n\027SetNetworkPolicyRequest\022\026\n\np"
  "roject_id\030\001 \001(\tB\002\030\001\022\020\n\004zone\030\002 \001(\tB\002\030\001\022\026\n"
  "\ncluster_id\030\003 \001(\tB\002\030\001\022\?\n\016network_policy\030"
  "\004 \001(\0132\".google.container.v1.NetworkPolic"
  "yB\003\340A\002\022\014\n\004name\030\006 \001(\t\"\271\001\n\033SetMaintenanceP"
  "olicyRequest\022\027\n\nproject_id\030\001 \001(\tB\003\340A\002\022\021\n"
  "\004zone\030\002 \001(\tB\003\340A\002\022\027\n\ncluster_id\030\003 \001(\tB\003\340A"
  "\002\022G\n\022maintenance_policy\030\004 \001(\0132&.google.c"
  "ontainer.v1.MaintenancePolicyB\003\340A\002\022\014\n\004na"
  "me\030\005 \001(\t\"\352\001\n\017StatusCondition\0227\n\004code\030\001 \001"
  "(\0162).google.container.v1.StatusCondition"
  ".Code\022\017\n\007message\030\002 \001(\t\"\214\001\n\004Code\022\013\n\007UNKNO"
  "WN\020\000\022\020\n\014GCE_STOCKOUT\020\001\022\037\n\033GKE_SERVICE_AC"
  "COUNT_DELETED\020\002\022\026\n\022GCE_QUOTA_EXCEEDED\020\003\022"
  "\023\n\017SET_BY_OPERATOR\020\004\022\027\n\023CLOUD_KMS_KEY_ER"
  "ROR\020\007\"\237\001\n\rNetworkConfig\022\017\n\007network\030\001 \001(\t"
  "\022\022\n\nsubnetwork\030\002 \001(\t\022$\n\034enable_intra_nod"
  "e_visibility\030\005 \001(\010\022C\n\023default_snat_statu"
  "s\030\007 \001(\0132&.google.container.v1.DefaultSna"
  "tStatus\"(\n\026GetOpenIDConfigRequest\022\016\n\006par"
  "ent\030\001 \001(\t\"\334\001\n\027GetOpenIDConfigResponse\022\016\n"
  "\006issuer\030\001 \001(\t\022\020\n\010jwks_uri\030\002 \001(\t\022 \n\030respo"
  "nse_types_supported\030\003 \003(\t\022\037\n\027subject_typ"
  "es_supported\030\004 \003(\t\022-\n%id_token_signing_a"
  "lg_values_supported\030\005 \003(\t\022\030\n\020claims_supp"
  "orted\030\006 \003(\t\022\023\n\013grant_types\030\007 \003(\t\"\'\n\025GetJ"
  "SONWebKeysRequest\022\016\n\006parent\030\001 \001(\t\"r\n\003Jwk"
  "\022\013\n\003kty\030\001 \001(\t\022\013\n\003alg\030\002 \001(\t\022\013\n\003use\030\003 \001(\t\022"
  "\013\n\003kid\030\004 \001(\t\022\t\n\001n\030\005 \001(\t\022\t\n\001e\030\006 \001(\t\022\t\n\001x\030"
  "\007 \001(\t\022\t\n\001y\030\010 \001(\t\022\013\n\003crv\030\t \001(\t\"@\n\026GetJSON"
  "WebKeysResponse\022&\n\004keys\030\001 \003(\0132\030.google.c"
  "ontainer.v1.Jwk\"\216\001\n\016ReleaseChannel\022<\n\007ch"
  "annel\030\001 \001(\0162+.google.container.v1.Releas"
  "eChannel.Channel\">\n\007Channel\022\017\n\013UNSPECIFI"
  "ED\020\000\022\t\n\005RAPID\020\001\022\013\n\007REGULAR\020\002\022\n\n\006STABLE\020\003"
  "\",\n\031IntraNodeVisibilityConfig\022\017\n\007enabled"
  "\030\001 \001(\010\".\n\021MaxPodsConstraint\022\031\n\021max_pods_"
  "per_node\030\001 \001(\003\"/\n\026WorkloadIdentityConfig"
  "\022\025\n\rworkload_pool\030\002 \001(\t\"\230\001\n\022DatabaseEncr"
  "yption\022<\n\005state\030\002 \001(\0162-.google.container"
  ".v1.DatabaseEncryption.State\022\020\n\010key_name"
  "\030\001 \001(\t\"2\n\005State\022\013\n\007UNKNOWN\020\000\022\r\n\tENCRYPTE"
  "D\020\001\022\r\n\tDECRYPTED\020\002\"e\n\034ListUsableSubnetwo"
  "rksRequest\022\016\n\006parent\030\001 \001(\t\022\016\n\006filter\030\002 \001"
  "(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001("
  "\t\"t\n\035ListUsableSubnetworksResponse\022:\n\013su"
  "bnetworks\030\001 \003(\0132%.google.container.v1.Us"
  "ableSubnetwork\022\027\n\017next_page_token\030\002 \001(\t\""
  "\200\002\n\036UsableSubnetworkSecondaryRange\022\022\n\nra"
  "nge_name\030\001 \001(\t\022\025\n\rip_cidr_range\030\002 \001(\t\022J\n"
  "\006status\030\003 \001(\0162:.google.container.v1.Usab"
  "leSubnetworkSecondaryRange.Status\"g\n\006Sta"
  "tus\022\013\n\007UNKNOWN\020\000\022\n\n\006UNUSED\020\001\022\022\n\016IN_USE_S"
  "ERVICE\020\002\022\030\n\024IN_USE_SHAREABLE_POD\020\003\022\026\n\022IN"
  "_USE_MANAGED_POD\020\004\"\270\001\n\020UsableSubnetwork\022"
  "\022\n\nsubnetwork\030\001 \001(\t\022\017\n\007network\030\002 \001(\t\022\025\n\r"
  "ip_cidr_range\030\003 \001(\t\022P\n\023secondary_ip_rang"
  "es\030\004 \003(\01323.google.container.v1.UsableSub"
  "networkSecondaryRange\022\026\n\016status_message\030"
  "\005 \001(\t\"\355\002\n\031ResourceUsageExportConfig\022`\n\024b"
  "igquery_destination\030\001 \001(\0132B.google.conta"
  "iner.v1.ResourceUsageExportConfig.BigQue"
  "ryDestination\022&\n\036enable_network_egress_m"
  "etering\030\002 \001(\010\022m\n\033consumption_metering_co"
  "nfig\030\003 \001(\0132H.google.container.v1.Resourc"
  "eUsageExportConfig.ConsumptionMeteringCo"
  "nfig\032)\n\023BigQueryDestination\022\022\n\ndataset_i"
  "d\030\001 \001(\t\032,\n\031ConsumptionMeteringConfig\022\017\n\007"
  "enabled\030\001 \001(\010\")\n\026VerticalPodAutoscaling\022"
  "\017\n\007enabled\030\001 \001(\010\"%\n\021DefaultSnatStatus\022\020\n"
  "\010disabled\030\001 \001(\010\" \n\rShieldedNodes\022\017\n\007enab"
  "led\030\001 \001(\0102\205F\n\016ClusterManager\022\350\001\n\014ListClu"
  "sters\022(.google.container.v1.ListClusters"
  "Request\032).google.container.v1.ListCluste"
  "rsResponse\"\202\001\202\323\344\223\002a\022,/v1/{parent=project"
  "s/*/locations/*}/clustersZ1\022//v1/project"
  "s/{project_id}/zones/{zone}/clusters\332A\017p"
  "roject_id,zone\332A\006parent\022\355\001\n\nGetCluster\022&"
  ".google.container.v1.GetClusterRequest\032\034"
  ".google.container.v1.Cluster\"\230\001\202\323\344\223\002n\022,/"
  "v1/{name=projects/*/locations/*/clusters"
  "/*}Z>\022</v1/projects/{project_id}/zones/{"
  "zone}/clusters/{cluster_id}\332A\032project_id"
  ",zone,cluster_id\332A\004name\022\365\001\n\rCreateCluste"
  "r\022).google.container.v1.CreateClusterReq"
  "uest\032\036.google.container.v1.Operation\"\230\001\202"
  "\323\344\223\002g\",/v1/{parent=projects/*/locations/"
  "*}/clusters:\001*Z4\"//v1/projects/{project_"
  "id}/zones/{zone}/clusters:\001*\332A\027project_i"
  "d,zone,cluster\332A\016parent,cluster\022\211\002\n\rUpda"
  "teCluster\022).google.container.v1.UpdateCl"
  "usterRequest\032\036.google.container.v1.Opera"
  "tion\"\254\001\202\323\344\223\002t\032,/v1/{name=projects/*/loca"
  "tions/*/clusters/*}:\001*ZA\032</v1/projects/{"
  "project_id}/zones/{zone}/clusters/{clust"
  "er_id}:\001*\332A!project_id,zone,cluster_id,u"
  "pdate\332A\013name,update\022\206\002\n\016UpdateNodePool\022*"
  ".google.container.v1.UpdateNodePoolReque"
  "st\032\036.google.container.v1.Operation\"\247\001\202\323\344"
  "\223\002\240\001\0328/v1/{name=projects/*/locations/*/c"
  "lusters/*/nodePools/*}:\001*Za\"\\/v1/project"
  "s/{project_id}/zones/{zone}/clusters/{cl"
  "uster_id}/nodePools/{node_pool_id}/updat"
  "e:\001*\022\252\002\n\026SetNodePoolAutoscaling\0222.google"
  ".container.v1.SetNodePoolAutoscalingRequ"
  "est\032\036.google.container.v1.Operation\"\273\001\202\323"
  "\344\223\002\264\001\"G/v1/{name=projects/*/locations/*/"
  "clusters/*/nodePools/*}:setAutoscaling:\001"
  "*Zf\"a/v1/projects/{project_id}/zones/{zo"
  "ne}/clusters/{cluster_id}/nodePools/{nod"
  "e_pool_id}/autoscaling:\001*\022\267\002\n\021SetLogging"
  "Service\022-.google.container.v1.SetLogging"
  "ServiceRequest\032\036.google.container.v1.Ope"
  "ration\"\322\001\202\323\344\223\002\207\001\"7/v1/{name=projects/*/l"
  "ocations/*/clusters/*}:setLogging:\001*ZI\"D"
  "/v1/projects/{project_id}/zones/{zone}/c"
  "lusters/{cluster_id}/logging:\001*\332A*projec"
  "t_id,zone,cluster_id,logging_service\332A\024n"
  "ame,logging_service\022\311\002\n\024SetMonitoringSer"
  "vice\0220.google.container.v1.SetMonitoring"
  "ServiceRequest\032\036.google.container.v1.Ope"
  "ration\"\336\001\202\323\344\223\002\215\001\":/v1/{name=projects/*/l"
  "ocations/*/clusters/*}:setMonitoring:\001*Z"
  "L\"G/v1/projects/{project_id}/zones/{zone"
  "}/clusters/{cluster_id}/monitoring:\001*\332A-"
  "project_id,zone,cluster_id,monitoring_se"
  "rvice\332A\027name,monitoring_service\022\255\002\n\017SetA"
  "ddonsConfig\022+.google.container.v1.SetAdd"
  "onsConfigRequest\032\036.google.container.v1.O"
  "peration\"\314\001\202\323\344\223\002\205\001\"6/v1/{name=projects/*"
  "/locations/*/clusters/*}:setAddons:\001*ZH\""
  "C/v1/projects/{project_id}/zones/{zone}/"
  "clusters/{cluster_id}/addons:\001*\332A(projec"
  "t_id,zone,cluster_id,addons_config\332A\022nam"
  "e,addons_config\022\250\002\n\014SetLocations\022(.googl"
  "e.container.v1.SetLocationsRequest\032\036.goo"
  "gle.container.v1.Operation\"\315\001\210\002\001\202\323\344\223\002\213\001\""
  "9/v1/{name=projects/*/locations/*/cluste"
  "rs/*}:setLocations:\001*ZK\"F/v1/projects/{p"
  "roject_id}/zones/{zone}/clusters/{cluste"
  "r_id}/locations:\001*\332A$project_id,zone,clu"
  "ster_id,locations\332A\016name,locations\022\254\002\n\014U"
  "pdateMaster\022(.google.container.v1.Update"
  "MasterRequest\032\036.google.container.v1.Oper"
  "ation\"\321\001\202\323\344\223\002\210\001\"9/v1/{name=projects/*/lo"
  "cations/*/clusters/*}:updateMaster:\001*ZH\""
  "C/v1/projects/{project_id}/zones/{zone}/"
  "clusters/{cluster_id}/master:\001*\332A)projec"
  "t_id,zone,cluster_id,master_version\332A\023na"
  "me,master_version\022\364\001\n\rSetMasterAuth\022).go"
  "ogle.container.v1.SetMasterAuthRequest\032\036"
  ".google.container.v1.Operation\"\227\001\202\323\344\223\002\220\001"
  "\":/v1/{name=projects/*/locations/*/clust"
  "ers/*}:setMasterAuth:\001*ZO\"J/v1/projects/"
  "{project_id}/zones/{zone}/clusters/{clus"
  "ter_id}:setMasterAuth:\001*\022\365\001\n\rDeleteClust"
  "er\022).google.container.v1.DeleteClusterRe"
  "quest\032\036.google.container.v1.Operation\"\230\001"
  "\202\323\344\223\002n*,/v1/{name=projects/*/locations/*"
  "/clusters/*}Z>*</v1/projects/{project_id"
  "}/zones/{zone}/clusters/{cluster_id}\332A\032p"
  "roject_id,zone,cluster_id\332A\004name\022\350\001\n\016Lis"
  "tOperations\022*.google.container.v1.ListOp"
  "erationsRequest\032+.google.container.v1.Li"
  "stOperationsResponse\"}\202\323\344\223\002e\022./v1/{paren"
  "t=projects/*/locations/*}/operationsZ3\0221"
  "/v1/projects/{project_id}/zones/{zone}/o"
  "perations\332A\017project_id,zone\022\373\001\n\014GetOpera"
  "tion\022(.google.container.v1.GetOperationR"
  "equest\032\036.google.container.v1.Operation\"\240"
  "\001\202\323\344\223\002t\022./v1/{name=projects/*/locations/"
  "*/operations/*}ZB\022@/v1/projects/{project"
  "_id}/zones/{zone}/operations/{operation_"
  "id}\332A\034project_id,zone,operation_id\332A\004nam"
  "e\022\216\002\n\017CancelOperation\022+.google.container"
  ".v1.CancelOperationRequest\032\026.google.prot"
  "obuf.Empty\"\265\001\202\323\344\223\002\210\001\"5/v1/{name=projects"
  "/*/locations/*/operations/*}:cancel:\001*ZL"
  "\"G/v1/projects/{project_id}/zones/{zone}"
  "/operations/{operation_id}:cancel:\001*\332A\034p"
  "roject_id,zone,operation_id\332A\004name\022\352\001\n\017G"
  "etServerConfig\022+.google.container.v1.Get"
  "ServerConfigRequest\032!.google.container.v"
  "1.ServerConfig\"\206\001\202\323\344\223\002g\022./v1/{name=proje"
  "cts/*/locations/*}/serverConfigZ5\0223/v1/p"
  "rojects/{project_id}/zones/{zone}/server"
  "config\332A\017project_id,zone\332A\004name\022\246\001\n\016GetJ"
  "SONWebKeys\022*.google.container.v1.GetJSON"
  "WebKeysRequest\032+.google.container.v1.Get"
  "JSONWebKeysResponse\";\202\323\344\223\0025\0223/v1/{parent"
  "=projects/*/locations/*/clusters/*}/jwks"
  "\022\232\002\n\rListNodePools\022).google.container.v1"
  ".ListNodePoolsRequest\032*.google.container"
  ".v1.ListNodePoolsResponse\"\261\001\202\323\344\223\002\204\001\0228/v1"
  "/{parent=projects/*/locations/*/clusters"
  "/*}/nodePoolsZH\022F/v1/projects/{project_i"
  "d}/zones/{zone}/clusters/{cluster_id}/no"
  "dePools\332A\032project_id,zone,cluster_id\332A\006p"
  "arent\022\243\002\n\013GetNodePool\022\'.google.container"
  ".v1.GetNodePoolRequest\032\035.google.containe"
  "r.v1.NodePool\"\313\001\202\323\344\223\002\223\001\0228/v1/{name=proje"
  "cts/*/locations/*/clusters/*/nodePools/*"
  "}ZW\022U/v1/projects/{project_id}/zones/{zo"
  "ne}/clusters/{cluster_id}/nodePools/{nod"
  "e_pool_id}\332A\'project_id,zone,cluster_id,"
  "node_pool_id\332A\004name\022\252\002\n\016CreateNodePool\022*"
  ".google.container.v1.CreateNodePoolReque"
  "st\032\036.google.container.v1.Operation\"\313\001\202\323\344"
  "\223\002\212\001\"8/v1/{parent=projects/*/locations/*"
  "/clusters/*}/nodePools:\001*ZK\"F/v1/project"
  "s/{project_id}/zones/{zone}/clusters/{cl"
  "uster_id}/nodePools:\001*\332A$project_id,zone"
  ",cluster_id,node_pool\332A\020parent,node_pool"
  "\022\252\002\n\016DeleteNodePool\022*.google.container.v"
  "1.DeleteNodePoolRequest\032\036.google.contain"
  "er.v1.Operation\"\313\001\202\323\344\223\002\223\001*8/v1/{name=pro"
  "jects/*/locations/*/clusters/*/nodePools"
  "/*}ZW*U/v1/projects/{project_id}/zones/{"
  "zone}/clusters/{cluster_id}/nodePools/{n"
  "ode_pool_id}\332A\'project_id,zone,cluster_i"
  "d,node_pool_id\332A\004name\022\324\002\n\027RollbackNodePo"
  "olUpgrade\0223.google.container.v1.Rollback"
  "NodePoolUpgradeRequest\032\036.google.containe"
  "r.v1.Operation\"\343\001\202\323\344\223\002\253\001\"A/v1/{name=proj"
  "ects/*/locations/*/clusters/*/nodePools/"
  "*}:rollback:\001*Zc\"^/v1/projects/{project_"
  "id}/zones/{zone}/clusters/{cluster_id}/n"
  "odePools/{node_pool_id}:rollback:\001*\332A\'pr"
  "oject_id,zone,cluster_id,node_pool_id\332A\004"
  "name\022\251\002\n\025SetNodePoolManagement\0221.google."
  "container.v1.SetNodePoolManagementReques"
  "t\032\036.google.container.v1.Operation\"\274\001\202\323\344\223"
  "\002\265\001\"F/v1/{name=projects/*/locations/*/cl"
  "usters/*/nodePools/*}:setManagement:\001*Zh"
  "\"c/v1/projects/{project_id}/zones/{zone}"
  "/clusters/{cluster_id}/nodePools/{node_p"
  "ool_id}/setManagement:\001*\022\361\001\n\tSetLabels\022%"
  ".google.container.v1.SetLabelsRequest\032\036."
  "google.container.v1.Operation\"\234\001\202\323\344\223\002\225\001\""
  ">/v1/{name=projects/*/locations/*/cluste"
  "rs/*}:setResourceLabels:\001*ZP\"K/v1/projec"
  "ts/{project_id}/zones/{zone}/clusters/{c"
  "luster_id}/resourceLabels:\001*\022\245\002\n\rSetLega"
  "cyAbac\022).google.container.v1.SetLegacyAb"
  "acRequest\032\036.google.container.v1.Operatio"
  "n\"\310\001\202\323\344\223\002\215\001\":/v1/{name=projects/*/locati"
  "ons/*/clusters/*}:setLegacyAbac:\001*ZL\"G/v"
  "1/projects/{project_id}/zones/{zone}/clu"
  "sters/{cluster_id}/legacyAbac:\001*\332A\"proje"
  "ct_id,zone,cluster_id,enabled\332A\014name,ena"
  "bled\022\240\002\n\017StartIPRotation\022+.google.contai"
  "ner.v1.StartIPRotationRequest\032\036.google.c"
  "ontainer.v1.Operation\"\277\001\202\323\344\223\002\224\001\"</v1/{na"
  "me=projects/*/locations/*/clusters/*}:st"
  "artIpRotation:\001*ZQ\"L/v1/projects/{projec"
  "t_id}/zones/{zone}/clusters/{cluster_id}"
  ":startIpRotation:\001*\332A\032project_id,zone,cl"
  "uster_id\332A\004name\022\254\002\n\022CompleteIPRotation\022."
  ".google.container.v1.CompleteIPRotationR"
  "equest\032\036.google.container.v1.Operation\"\305"
  "\001\202\323\344\223\002\232\001\"\?/v1/{name=projects/*/locations"
  "/*/clusters/*}:completeIpRotation:\001*ZT\"O"
  "/v1/projects/{project_id}/zones/{zone}/c"
  "lusters/{cluster_id}:completeIpRotation:"
  "\001*\332A\032project_id,zone,cluster_id\332A\004name\022\221"
  "\002\n\017SetNodePoolSize\022+.google.container.v1"
  ".SetNodePoolSizeRequest\032\036.google.contain"
  "er.v1.Operation\"\260\001\202\323\344\223\002\251\001\"@/v1/{name=pro"
  "jects/*/locations/*/clusters/*/nodePools"
  "/*}:setSize:\001*Zb\"]/v1/projects/{project_"
  "id}/zones/{zone}/clusters/{cluster_id}/n"
  "odePools/{node_pool_id}/setSize:\001*\022\302\002\n\020S"
  "etNetworkPolicy\022,.google.container.v1.Se"
  "tNetworkPolicyRequest\032\036.google.container"
  ".v1.Operation\"\337\001\202\323\344\223\002\226\001\"=/v1/{name=proje"
  "cts/*/locations/*/clusters/*}:setNetwork"
  "Policy:\001*ZR\"M/v1/projects/{project_id}/z"
  "ones/{zone}/clusters/{cluster_id}:setNet"
  "workPolicy:\001*\332A)project_id,zone,cluster_"
  "id,network_policy\332A\023name,network_policy\022"
  "\332\002\n\024SetMaintenancePolicy\0220.google.contai"
  "ner.v1.SetMaintenancePolicyRequest\032\036.goo"
  "gle.container.v1.Operation\"\357\001\202\323\344\223\002\236\001\"A/v"
  "1/{name=projects/*/locations/*/clusters/"
  "*}:setMaintenancePolicy:\001*ZV\"Q/v1/projec"
  "ts/{project_id}/zones/{zone}/clusters/{c"
  "luster_id}:setMaintenancePolicy:\001*\332A-pro"
  "ject_id,zone,cluster_id,maintenance_poli"
  "cy\332A\027name,maintenance_policy\022\274\001\n\025ListUsa"
  "bleSubnetworks\0221.google.container.v1.Lis"
  "tUsableSubnetworksRequest\0322.google.conta"
  "iner.v1.ListUsableSubnetworksResponse\"<\202"
  "\323\344\223\0026\0224/v1/{parent=projects/*}/aggregate"
  "d/usableSubnetworks\032L\312A\030container.google"
  "apis.com\322A.https://www.googleapis.com/au"
  "th/cloud-platformB\305\001\n\027com.google.contain"
  "er.v1B\023ClusterServiceProtoP\001Z<google.gol"
  "ang.org/genproto/googleapis/container/v1"
  ";container\252\002\031Google.Cloud.Container.V1\312\002"
  "\031Google\\Cloud\\Container\\V1\352\002\034Google::Clo"
  "ud::Container::V1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto = {
  false, InitDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto, 
  descriptor_table_protodef_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto,
  "google/container/v1/cluster_service.proto", &assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto, 29145,
};

void AddDescriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_google_2fapi_2fclient_2eproto,
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto = []() { AddDescriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto(); return true; }();
namespace google {
namespace container {
namespace v1 {
const ::google::protobuf::EnumDescriptor* SandboxConfig_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[0];
}
bool SandboxConfig_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SandboxConfig_Type SandboxConfig::UNSPECIFIED;
const SandboxConfig_Type SandboxConfig::GVISOR;
const SandboxConfig_Type SandboxConfig::Type_MIN;
const SandboxConfig_Type SandboxConfig::Type_MAX;
const int SandboxConfig::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ReservationAffinity_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[1];
}
bool ReservationAffinity_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReservationAffinity_Type ReservationAffinity::UNSPECIFIED;
const ReservationAffinity_Type ReservationAffinity::NO_RESERVATION;
const ReservationAffinity_Type ReservationAffinity::ANY_RESERVATION;
const ReservationAffinity_Type ReservationAffinity::SPECIFIC_RESERVATION;
const ReservationAffinity_Type ReservationAffinity::Type_MIN;
const ReservationAffinity_Type ReservationAffinity::Type_MAX;
const int ReservationAffinity::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NodeTaint_Effect_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[2];
}
bool NodeTaint_Effect_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NodeTaint_Effect NodeTaint::EFFECT_UNSPECIFIED;
const NodeTaint_Effect NodeTaint::NO_SCHEDULE;
const NodeTaint_Effect NodeTaint::PREFER_NO_SCHEDULE;
const NodeTaint_Effect NodeTaint::NO_EXECUTE;
const NodeTaint_Effect NodeTaint::Effect_MIN;
const NodeTaint_Effect NodeTaint::Effect_MAX;
const int NodeTaint::Effect_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CloudRunConfig_LoadBalancerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[3];
}
bool CloudRunConfig_LoadBalancerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CloudRunConfig_LoadBalancerType CloudRunConfig::LOAD_BALANCER_TYPE_UNSPECIFIED;
const CloudRunConfig_LoadBalancerType CloudRunConfig::LOAD_BALANCER_TYPE_EXTERNAL;
const CloudRunConfig_LoadBalancerType CloudRunConfig::LOAD_BALANCER_TYPE_INTERNAL;
const CloudRunConfig_LoadBalancerType CloudRunConfig::LoadBalancerType_MIN;
const CloudRunConfig_LoadBalancerType CloudRunConfig::LoadBalancerType_MAX;
const int CloudRunConfig::LoadBalancerType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NetworkPolicy_Provider_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[4];
}
bool NetworkPolicy_Provider_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NetworkPolicy_Provider NetworkPolicy::PROVIDER_UNSPECIFIED;
const NetworkPolicy_Provider NetworkPolicy::CALICO;
const NetworkPolicy_Provider NetworkPolicy::Provider_MIN;
const NetworkPolicy_Provider NetworkPolicy::Provider_MAX;
const int NetworkPolicy::Provider_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Cluster_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[5];
}
bool Cluster_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_Status Cluster::STATUS_UNSPECIFIED;
const Cluster_Status Cluster::PROVISIONING;
const Cluster_Status Cluster::RUNNING;
const Cluster_Status Cluster::RECONCILING;
const Cluster_Status Cluster::STOPPING;
const Cluster_Status Cluster::ERROR;
const Cluster_Status Cluster::DEGRADED;
const Cluster_Status Cluster::Status_MIN;
const Cluster_Status Cluster::Status_MAX;
const int Cluster::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Operation_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[6];
}
bool Operation_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operation_Status Operation::STATUS_UNSPECIFIED;
const Operation_Status Operation::PENDING;
const Operation_Status Operation::RUNNING;
const Operation_Status Operation::DONE;
const Operation_Status Operation::ABORTING;
const Operation_Status Operation::Status_MIN;
const Operation_Status Operation::Status_MAX;
const int Operation::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Operation_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[7];
}
bool Operation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operation_Type Operation::TYPE_UNSPECIFIED;
const Operation_Type Operation::CREATE_CLUSTER;
const Operation_Type Operation::DELETE_CLUSTER;
const Operation_Type Operation::UPGRADE_MASTER;
const Operation_Type Operation::UPGRADE_NODES;
const Operation_Type Operation::REPAIR_CLUSTER;
const Operation_Type Operation::UPDATE_CLUSTER;
const Operation_Type Operation::CREATE_NODE_POOL;
const Operation_Type Operation::DELETE_NODE_POOL;
const Operation_Type Operation::SET_NODE_POOL_MANAGEMENT;
const Operation_Type Operation::AUTO_REPAIR_NODES;
const Operation_Type Operation::AUTO_UPGRADE_NODES;
const Operation_Type Operation::SET_LABELS;
const Operation_Type Operation::SET_MASTER_AUTH;
const Operation_Type Operation::SET_NODE_POOL_SIZE;
const Operation_Type Operation::SET_NETWORK_POLICY;
const Operation_Type Operation::SET_MAINTENANCE_POLICY;
const Operation_Type Operation::Type_MIN;
const Operation_Type Operation::Type_MAX;
const int Operation::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetMasterAuthRequest_Action_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[8];
}
bool SetMasterAuthRequest_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetMasterAuthRequest_Action SetMasterAuthRequest::UNKNOWN;
const SetMasterAuthRequest_Action SetMasterAuthRequest::SET_PASSWORD;
const SetMasterAuthRequest_Action SetMasterAuthRequest::GENERATE_PASSWORD;
const SetMasterAuthRequest_Action SetMasterAuthRequest::SET_USERNAME;
const SetMasterAuthRequest_Action SetMasterAuthRequest::Action_MIN;
const SetMasterAuthRequest_Action SetMasterAuthRequest::Action_MAX;
const int SetMasterAuthRequest::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NodePool_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[9];
}
bool NodePool_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NodePool_Status NodePool::STATUS_UNSPECIFIED;
const NodePool_Status NodePool::PROVISIONING;
const NodePool_Status NodePool::RUNNING;
const NodePool_Status NodePool::RUNNING_WITH_ERROR;
const NodePool_Status NodePool::RECONCILING;
const NodePool_Status NodePool::STOPPING;
const NodePool_Status NodePool::ERROR;
const NodePool_Status NodePool::Status_MIN;
const NodePool_Status NodePool::Status_MAX;
const int NodePool::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorkloadMetadataConfig_Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[10];
}
bool WorkloadMetadataConfig_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorkloadMetadataConfig_Mode WorkloadMetadataConfig::MODE_UNSPECIFIED;
const WorkloadMetadataConfig_Mode WorkloadMetadataConfig::GCE_METADATA;
const WorkloadMetadataConfig_Mode WorkloadMetadataConfig::GKE_METADATA;
const WorkloadMetadataConfig_Mode WorkloadMetadataConfig::Mode_MIN;
const WorkloadMetadataConfig_Mode WorkloadMetadataConfig::Mode_MAX;
const int WorkloadMetadataConfig::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StatusCondition_Code_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[11];
}
bool StatusCondition_Code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StatusCondition_Code StatusCondition::UNKNOWN;
const StatusCondition_Code StatusCondition::GCE_STOCKOUT;
const StatusCondition_Code StatusCondition::GKE_SERVICE_ACCOUNT_DELETED;
const StatusCondition_Code StatusCondition::GCE_QUOTA_EXCEEDED;
const StatusCondition_Code StatusCondition::SET_BY_OPERATOR;
const StatusCondition_Code StatusCondition::CLOUD_KMS_KEY_ERROR;
const StatusCondition_Code StatusCondition::Code_MIN;
const StatusCondition_Code StatusCondition::Code_MAX;
const int StatusCondition::Code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ReleaseChannel_Channel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[12];
}
bool ReleaseChannel_Channel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReleaseChannel_Channel ReleaseChannel::UNSPECIFIED;
const ReleaseChannel_Channel ReleaseChannel::RAPID;
const ReleaseChannel_Channel ReleaseChannel::REGULAR;
const ReleaseChannel_Channel ReleaseChannel::STABLE;
const ReleaseChannel_Channel ReleaseChannel::Channel_MIN;
const ReleaseChannel_Channel ReleaseChannel::Channel_MAX;
const int ReleaseChannel::Channel_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DatabaseEncryption_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[13];
}
bool DatabaseEncryption_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DatabaseEncryption_State DatabaseEncryption::UNKNOWN;
const DatabaseEncryption_State DatabaseEncryption::ENCRYPTED;
const DatabaseEncryption_State DatabaseEncryption::DECRYPTED;
const DatabaseEncryption_State DatabaseEncryption::State_MIN;
const DatabaseEncryption_State DatabaseEncryption::State_MAX;
const int DatabaseEncryption::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UsableSubnetworkSecondaryRange_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[14];
}
bool UsableSubnetworkSecondaryRange_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UsableSubnetworkSecondaryRange_Status UsableSubnetworkSecondaryRange::UNKNOWN;
const UsableSubnetworkSecondaryRange_Status UsableSubnetworkSecondaryRange::UNUSED;
const UsableSubnetworkSecondaryRange_Status UsableSubnetworkSecondaryRange::IN_USE_SERVICE;
const UsableSubnetworkSecondaryRange_Status UsableSubnetworkSecondaryRange::IN_USE_SHAREABLE_POD;
const UsableSubnetworkSecondaryRange_Status UsableSubnetworkSecondaryRange::IN_USE_MANAGED_POD;
const UsableSubnetworkSecondaryRange_Status UsableSubnetworkSecondaryRange::Status_MIN;
const UsableSubnetworkSecondaryRange_Status UsableSubnetworkSecondaryRange::Status_MAX;
const int UsableSubnetworkSecondaryRange::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

NodeConfig_MetadataEntry_DoNotUse::NodeConfig_MetadataEntry_DoNotUse() {}
NodeConfig_MetadataEntry_DoNotUse::NodeConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void NodeConfig_MetadataEntry_DoNotUse::MergeFrom(const NodeConfig_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata NodeConfig_MetadataEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[0];
}
void NodeConfig_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeConfig_MetadataEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      NodeConfig_MetadataEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.NodeConfig.MetadataEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.NodeConfig.MetadataEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

NodeConfig_LabelsEntry_DoNotUse::NodeConfig_LabelsEntry_DoNotUse() {}
NodeConfig_LabelsEntry_DoNotUse::NodeConfig_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void NodeConfig_LabelsEntry_DoNotUse::MergeFrom(const NodeConfig_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata NodeConfig_LabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[1];
}
void NodeConfig_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeConfig_LabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      NodeConfig_LabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.NodeConfig.LabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.NodeConfig.LabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void NodeConfig::InitAsDefaultInstance() {
  ::google::container::v1::_NodeConfig_default_instance_._instance.get_mutable()->workload_metadata_config_ = const_cast< ::google::container::v1::WorkloadMetadataConfig*>(
      ::google::container::v1::WorkloadMetadataConfig::internal_default_instance());
  ::google::container::v1::_NodeConfig_default_instance_._instance.get_mutable()->sandbox_config_ = const_cast< ::google::container::v1::SandboxConfig*>(
      ::google::container::v1::SandboxConfig::internal_default_instance());
  ::google::container::v1::_NodeConfig_default_instance_._instance.get_mutable()->reservation_affinity_ = const_cast< ::google::container::v1::ReservationAffinity*>(
      ::google::container::v1::ReservationAffinity::internal_default_instance());
  ::google::container::v1::_NodeConfig_default_instance_._instance.get_mutable()->shielded_instance_config_ = const_cast< ::google::container::v1::ShieldedInstanceConfig*>(
      ::google::container::v1::ShieldedInstanceConfig::internal_default_instance());
}
class NodeConfig::HasBitSetters {
 public:
  static const ::google::container::v1::WorkloadMetadataConfig& workload_metadata_config(const NodeConfig* msg);
  static const ::google::container::v1::SandboxConfig& sandbox_config(const NodeConfig* msg);
  static const ::google::container::v1::ReservationAffinity& reservation_affinity(const NodeConfig* msg);
  static const ::google::container::v1::ShieldedInstanceConfig& shielded_instance_config(const NodeConfig* msg);
};

const ::google::container::v1::WorkloadMetadataConfig&
NodeConfig::HasBitSetters::workload_metadata_config(const NodeConfig* msg) {
  return *msg->workload_metadata_config_;
}
const ::google::container::v1::SandboxConfig&
NodeConfig::HasBitSetters::sandbox_config(const NodeConfig* msg) {
  return *msg->sandbox_config_;
}
const ::google::container::v1::ReservationAffinity&
NodeConfig::HasBitSetters::reservation_affinity(const NodeConfig* msg) {
  return *msg->reservation_affinity_;
}
const ::google::container::v1::ShieldedInstanceConfig&
NodeConfig::HasBitSetters::shielded_instance_config(const NodeConfig* msg) {
  return *msg->shielded_instance_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeConfig::kMachineTypeFieldNumber;
const int NodeConfig::kDiskSizeGbFieldNumber;
const int NodeConfig::kOauthScopesFieldNumber;
const int NodeConfig::kServiceAccountFieldNumber;
const int NodeConfig::kMetadataFieldNumber;
const int NodeConfig::kImageTypeFieldNumber;
const int NodeConfig::kLabelsFieldNumber;
const int NodeConfig::kLocalSsdCountFieldNumber;
const int NodeConfig::kTagsFieldNumber;
const int NodeConfig::kPreemptibleFieldNumber;
const int NodeConfig::kAcceleratorsFieldNumber;
const int NodeConfig::kDiskTypeFieldNumber;
const int NodeConfig::kMinCpuPlatformFieldNumber;
const int NodeConfig::kWorkloadMetadataConfigFieldNumber;
const int NodeConfig::kTaintsFieldNumber;
const int NodeConfig::kSandboxConfigFieldNumber;
const int NodeConfig::kNodeGroupFieldNumber;
const int NodeConfig::kReservationAffinityFieldNumber;
const int NodeConfig::kShieldedInstanceConfigFieldNumber;
const int NodeConfig::kBootDiskKmsKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeConfig::NodeConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodeConfig)
}
NodeConfig::NodeConfig(const NodeConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      oauth_scopes_(from.oauth_scopes_),
      tags_(from.tags_),
      accelerators_(from.accelerators_),
      taints_(from.taints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  labels_.MergeFrom(from.labels_);
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine_type().size() > 0) {
    machine_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type_);
  }
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_type().size() > 0) {
    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_account().size() > 0) {
    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  disk_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.disk_type().size() > 0) {
    disk_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disk_type_);
  }
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.min_cpu_platform().size() > 0) {
    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  node_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_group().size() > 0) {
    node_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_group_);
  }
  boot_disk_kms_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.boot_disk_kms_key().size() > 0) {
    boot_disk_kms_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.boot_disk_kms_key_);
  }
  if (from.has_workload_metadata_config()) {
    workload_metadata_config_ = new ::google::container::v1::WorkloadMetadataConfig(*from.workload_metadata_config_);
  } else {
    workload_metadata_config_ = nullptr;
  }
  if (from.has_sandbox_config()) {
    sandbox_config_ = new ::google::container::v1::SandboxConfig(*from.sandbox_config_);
  } else {
    sandbox_config_ = nullptr;
  }
  if (from.has_reservation_affinity()) {
    reservation_affinity_ = new ::google::container::v1::ReservationAffinity(*from.reservation_affinity_);
  } else {
    reservation_affinity_ = nullptr;
  }
  if (from.has_shielded_instance_config()) {
    shielded_instance_config_ = new ::google::container::v1::ShieldedInstanceConfig(*from.shielded_instance_config_);
  } else {
    shielded_instance_config_ = nullptr;
  }
  ::memcpy(&disk_size_gb_, &from.disk_size_gb_,
    static_cast<size_t>(reinterpret_cast<char*>(&preemptible_) -
    reinterpret_cast<char*>(&disk_size_gb_)) + sizeof(preemptible_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodeConfig)
}

void NodeConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boot_disk_kms_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&workload_metadata_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preemptible_) -
      reinterpret_cast<char*>(&workload_metadata_config_)) + sizeof(preemptible_));
}

NodeConfig::~NodeConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodeConfig)
  SharedDtor();
}

void NodeConfig::SharedDtor() {
  machine_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boot_disk_kms_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete workload_metadata_config_;
  if (this != internal_default_instance()) delete sandbox_config_;
  if (this != internal_default_instance()) delete reservation_affinity_;
  if (this != internal_default_instance()) delete shielded_instance_config_;
}

void NodeConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeConfig& NodeConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodeConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oauth_scopes_.Clear();
  metadata_.Clear();
  labels_.Clear();
  tags_.Clear();
  accelerators_.Clear();
  taints_.Clear();
  machine_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boot_disk_kms_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && workload_metadata_config_ != nullptr) {
    delete workload_metadata_config_;
  }
  workload_metadata_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sandbox_config_ != nullptr) {
    delete sandbox_config_;
  }
  sandbox_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && reservation_affinity_ != nullptr) {
    delete reservation_affinity_;
  }
  reservation_affinity_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && shielded_instance_config_ != nullptr) {
    delete shielded_instance_config_;
  }
  shielded_instance_config_ = nullptr;
  ::memset(&disk_size_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preemptible_) -
      reinterpret_cast<char*>(&disk_size_gb_)) + sizeof(preemptible_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodeConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string machine_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.machine_type");
        object = msg->mutable_machine_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 disk_size_gb = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_disk_size_gb(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string oauth_scopes = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.oauth_scopes");
          object = msg->add_oauth_scopes();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // map<string, string> metadata = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::container::v1::NodeConfig_MetadataEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->metadata_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // string image_type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.image_type");
        object = msg->mutable_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> labels = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::container::v1::NodeConfig_LabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // int32 local_ssd_count = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_local_ssd_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string tags = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.tags");
          object = msg->add_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      // string service_account = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.service_account");
        object = msg->mutable_service_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool preemptible = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_preemptible(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::AcceleratorConfig::_InternalParse;
          object = msg->add_accelerators();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      // string disk_type = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.disk_type");
        object = msg->mutable_disk_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string min_cpu_platform = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.min_cpu_platform");
        object = msg->mutable_min_cpu_platform();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::WorkloadMetadataConfig::_InternalParse;
        object = msg->mutable_workload_metadata_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .google.container.v1.NodeTaint taints = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::NodeTaint::_InternalParse;
          object = msg->add_taints();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 122 && (ptr += 1));
        break;
      }
      // .google.container.v1.SandboxConfig sandbox_config = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::SandboxConfig::_InternalParse;
        object = msg->mutable_sandbox_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string node_group = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.node_group");
        object = msg->mutable_node_group();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.ReservationAffinity reservation_affinity = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ReservationAffinity::_InternalParse;
        object = msg->mutable_reservation_affinity();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ShieldedInstanceConfig::_InternalParse;
        object = msg->mutable_shielded_instance_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string boot_disk_kms_key = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeConfig.boot_disk_kms_key");
        object = msg->mutable_boot_disk_kms_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodeConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string machine_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine_type().data(), static_cast<int>(this->machine_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.machine_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 disk_size_gb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &disk_size_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string oauth_scopes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_oauth_scopes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oauth_scopes(this->oauth_scopes_size() - 1).data(),
            static_cast<int>(this->oauth_scopes(this->oauth_scopes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.oauth_scopes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          NodeConfig_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              NodeConfig_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_type().data(), static_cast<int>(this->image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          NodeConfig_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              NodeConfig_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 local_ssd_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &local_ssd_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_account = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account().data(), static_cast<int>(this->service_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.service_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool preemptible = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &preemptible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_accelerators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string disk_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disk_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->disk_type().data(), static_cast<int>(this->disk_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.disk_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string min_cpu_platform = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_min_cpu_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.min_cpu_platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_workload_metadata_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.NodeTaint taints = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_taints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.SandboxConfig sandbox_config = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sandbox_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_group = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_group().data(), static_cast<int>(this->node_group().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.node_group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ReservationAffinity reservation_affinity = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reservation_affinity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shielded_instance_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string boot_disk_kms_key = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_boot_disk_kms_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->boot_disk_kms_key().data(), static_cast<int>(this->boot_disk_kms_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.boot_disk_kms_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodeConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.machine_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->machine_type(), output);
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->disk_size_gb(), output);
  }

  // repeated string oauth_scopes = 3;
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_scopes(i).data(), static_cast<int>(this->oauth_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.oauth_scopes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->oauth_scopes(i), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->image_type(), output);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->local_ssd_count(), output);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->tags(i), output);
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.service_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->service_account(), output);
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->preemptible(), output);
  }

  // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accelerators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->accelerators(static_cast<int>(i)),
      output);
  }

  // string disk_type = 12;
  if (this->disk_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk_type().data(), static_cast<int>(this->disk_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.disk_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->disk_type(), output);
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.min_cpu_platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->min_cpu_platform(), output);
  }

  // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
  if (this->has_workload_metadata_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::workload_metadata_config(this), output);
  }

  // repeated .google.container.v1.NodeTaint taints = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->taints(static_cast<int>(i)),
      output);
  }

  // .google.container.v1.SandboxConfig sandbox_config = 17;
  if (this->has_sandbox_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, HasBitSetters::sandbox_config(this), output);
  }

  // string node_group = 18;
  if (this->node_group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_group().data(), static_cast<int>(this->node_group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.node_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->node_group(), output);
  }

  // .google.container.v1.ReservationAffinity reservation_affinity = 19;
  if (this->has_reservation_affinity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, HasBitSetters::reservation_affinity(this), output);
  }

  // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 20;
  if (this->has_shielded_instance_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, HasBitSetters::shielded_instance_config(this), output);
  }

  // string boot_disk_kms_key = 23;
  if (this->boot_disk_kms_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->boot_disk_kms_key().data(), static_cast<int>(this->boot_disk_kms_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.boot_disk_kms_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->boot_disk_kms_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodeConfig)
}

::google::protobuf::uint8* NodeConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.machine_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->machine_type(), target);
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->disk_size_gb(), target);
  }

  // repeated string oauth_scopes = 3;
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_scopes(i).data(), static_cast<int>(this->oauth_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.oauth_scopes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->oauth_scopes(i), target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.MetadataEntry.value");
      }
    };

    if (false &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->image_type(), target);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.LabelsEntry.value");
      }
    };

    if (false &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->local_ssd_count(), target);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->tags(i), target);
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.service_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->service_account(), target);
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->preemptible(), target);
  }

  // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accelerators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->accelerators(static_cast<int>(i)), target);
  }

  // string disk_type = 12;
  if (this->disk_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk_type().data(), static_cast<int>(this->disk_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.disk_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->disk_type(), target);
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.min_cpu_platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->min_cpu_platform(), target);
  }

  // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
  if (this->has_workload_metadata_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::workload_metadata_config(this), target);
  }

  // repeated .google.container.v1.NodeTaint taints = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->taints(static_cast<int>(i)), target);
  }

  // .google.container.v1.SandboxConfig sandbox_config = 17;
  if (this->has_sandbox_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, HasBitSetters::sandbox_config(this), target);
  }

  // string node_group = 18;
  if (this->node_group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_group().data(), static_cast<int>(this->node_group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.node_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->node_group(), target);
  }

  // .google.container.v1.ReservationAffinity reservation_affinity = 19;
  if (this->has_reservation_affinity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, HasBitSetters::reservation_affinity(this), target);
  }

  // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 20;
  if (this->has_shielded_instance_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, HasBitSetters::shielded_instance_config(this), target);
  }

  // string boot_disk_kms_key = 23;
  if (this->boot_disk_kms_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->boot_disk_kms_key().data(), static_cast<int>(this->boot_disk_kms_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.boot_disk_kms_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->boot_disk_kms_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodeConfig)
  return target;
}

size_t NodeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodeConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string oauth_scopes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->oauth_scopes_size());
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->oauth_scopes(i));
  }

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> labels = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string tags = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->accelerators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accelerators(static_cast<int>(i)));
    }
  }

  // repeated .google.container.v1.NodeTaint taints = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->taints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->taints(static_cast<int>(i)));
    }
  }

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_type());
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_type());
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_account());
  }

  // string disk_type = 12;
  if (this->disk_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->disk_type());
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->min_cpu_platform());
  }

  // string node_group = 18;
  if (this->node_group().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_group());
  }

  // string boot_disk_kms_key = 23;
  if (this->boot_disk_kms_key().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->boot_disk_kms_key());
  }

  // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
  if (this->has_workload_metadata_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *workload_metadata_config_);
  }

  // .google.container.v1.SandboxConfig sandbox_config = 17;
  if (this->has_sandbox_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sandbox_config_);
  }

  // .google.container.v1.ReservationAffinity reservation_affinity = 19;
  if (this->has_reservation_affinity()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reservation_affinity_);
  }

  // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 20;
  if (this->has_shielded_instance_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shielded_instance_config_);
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->disk_size_gb());
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->local_ssd_count());
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeConfig* source =
      ::google::protobuf::DynamicCastToGenerated<NodeConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodeConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodeConfig)
    MergeFrom(*source);
  }
}

void NodeConfig::MergeFrom(const NodeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  oauth_scopes_.MergeFrom(from.oauth_scopes_);
  metadata_.MergeFrom(from.metadata_);
  labels_.MergeFrom(from.labels_);
  tags_.MergeFrom(from.tags_);
  accelerators_.MergeFrom(from.accelerators_);
  taints_.MergeFrom(from.taints_);
  if (from.machine_type().size() > 0) {

    machine_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type_);
  }
  if (from.image_type().size() > 0) {

    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  if (from.service_account().size() > 0) {

    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  if (from.disk_type().size() > 0) {

    disk_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disk_type_);
  }
  if (from.min_cpu_platform().size() > 0) {

    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  if (from.node_group().size() > 0) {

    node_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_group_);
  }
  if (from.boot_disk_kms_key().size() > 0) {

    boot_disk_kms_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.boot_disk_kms_key_);
  }
  if (from.has_workload_metadata_config()) {
    mutable_workload_metadata_config()->::google::container::v1::WorkloadMetadataConfig::MergeFrom(from.workload_metadata_config());
  }
  if (from.has_sandbox_config()) {
    mutable_sandbox_config()->::google::container::v1::SandboxConfig::MergeFrom(from.sandbox_config());
  }
  if (from.has_reservation_affinity()) {
    mutable_reservation_affinity()->::google::container::v1::ReservationAffinity::MergeFrom(from.reservation_affinity());
  }
  if (from.has_shielded_instance_config()) {
    mutable_shielded_instance_config()->::google::container::v1::ShieldedInstanceConfig::MergeFrom(from.shielded_instance_config());
  }
  if (from.disk_size_gb() != 0) {
    set_disk_size_gb(from.disk_size_gb());
  }
  if (from.local_ssd_count() != 0) {
    set_local_ssd_count(from.local_ssd_count());
  }
  if (from.preemptible() != 0) {
    set_preemptible(from.preemptible());
  }
}

void NodeConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeConfig::CopyFrom(const NodeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeConfig::IsInitialized() const {
  return true;
}

void NodeConfig::Swap(NodeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeConfig::InternalSwap(NodeConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oauth_scopes_.InternalSwap(CastToBase(&other->oauth_scopes_));
  metadata_.Swap(&other->metadata_);
  labels_.Swap(&other->labels_);
  tags_.InternalSwap(CastToBase(&other->tags_));
  CastToBase(&accelerators_)->InternalSwap(CastToBase(&other->accelerators_));
  CastToBase(&taints_)->InternalSwap(CastToBase(&other->taints_));
  machine_type_.Swap(&other->machine_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_type_.Swap(&other->image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_account_.Swap(&other->service_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  disk_type_.Swap(&other->disk_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  min_cpu_platform_.Swap(&other->min_cpu_platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_group_.Swap(&other->node_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  boot_disk_kms_key_.Swap(&other->boot_disk_kms_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(workload_metadata_config_, other->workload_metadata_config_);
  swap(sandbox_config_, other->sandbox_config_);
  swap(reservation_affinity_, other->reservation_affinity_);
  swap(shielded_instance_config_, other->shielded_instance_config_);
  swap(disk_size_gb_, other->disk_size_gb_);
  swap(local_ssd_count_, other->local_ssd_count_);
  swap(preemptible_, other->preemptible_);
}

::google::protobuf::Metadata NodeConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ShieldedInstanceConfig::InitAsDefaultInstance() {
}
class ShieldedInstanceConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShieldedInstanceConfig::kEnableSecureBootFieldNumber;
const int ShieldedInstanceConfig::kEnableIntegrityMonitoringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShieldedInstanceConfig::ShieldedInstanceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ShieldedInstanceConfig)
}
ShieldedInstanceConfig::ShieldedInstanceConfig(const ShieldedInstanceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enable_secure_boot_, &from.enable_secure_boot_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_integrity_monitoring_) -
    reinterpret_cast<char*>(&enable_secure_boot_)) + sizeof(enable_integrity_monitoring_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ShieldedInstanceConfig)
}

void ShieldedInstanceConfig::SharedCtor() {
  ::memset(&enable_secure_boot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_integrity_monitoring_) -
      reinterpret_cast<char*>(&enable_secure_boot_)) + sizeof(enable_integrity_monitoring_));
}

ShieldedInstanceConfig::~ShieldedInstanceConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ShieldedInstanceConfig)
  SharedDtor();
}

void ShieldedInstanceConfig::SharedDtor() {
}

void ShieldedInstanceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShieldedInstanceConfig& ShieldedInstanceConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ShieldedInstanceConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ShieldedInstanceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ShieldedInstanceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&enable_secure_boot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_integrity_monitoring_) -
      reinterpret_cast<char*>(&enable_secure_boot_)) + sizeof(enable_integrity_monitoring_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ShieldedInstanceConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ShieldedInstanceConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enable_secure_boot = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enable_secure_boot(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool enable_integrity_monitoring = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_enable_integrity_monitoring(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ShieldedInstanceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ShieldedInstanceConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable_secure_boot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_secure_boot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_integrity_monitoring = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_integrity_monitoring_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ShieldedInstanceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ShieldedInstanceConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ShieldedInstanceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ShieldedInstanceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_secure_boot = 1;
  if (this->enable_secure_boot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable_secure_boot(), output);
  }

  // bool enable_integrity_monitoring = 2;
  if (this->enable_integrity_monitoring() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable_integrity_monitoring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ShieldedInstanceConfig)
}

::google::protobuf::uint8* ShieldedInstanceConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ShieldedInstanceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_secure_boot = 1;
  if (this->enable_secure_boot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable_secure_boot(), target);
  }

  // bool enable_integrity_monitoring = 2;
  if (this->enable_integrity_monitoring() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable_integrity_monitoring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ShieldedInstanceConfig)
  return target;
}

size_t ShieldedInstanceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ShieldedInstanceConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enable_secure_boot = 1;
  if (this->enable_secure_boot() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_integrity_monitoring = 2;
  if (this->enable_integrity_monitoring() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShieldedInstanceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ShieldedInstanceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ShieldedInstanceConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ShieldedInstanceConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ShieldedInstanceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ShieldedInstanceConfig)
    MergeFrom(*source);
  }
}

void ShieldedInstanceConfig::MergeFrom(const ShieldedInstanceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ShieldedInstanceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enable_secure_boot() != 0) {
    set_enable_secure_boot(from.enable_secure_boot());
  }
  if (from.enable_integrity_monitoring() != 0) {
    set_enable_integrity_monitoring(from.enable_integrity_monitoring());
  }
}

void ShieldedInstanceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ShieldedInstanceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShieldedInstanceConfig::CopyFrom(const ShieldedInstanceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ShieldedInstanceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShieldedInstanceConfig::IsInitialized() const {
  return true;
}

void ShieldedInstanceConfig::Swap(ShieldedInstanceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShieldedInstanceConfig::InternalSwap(ShieldedInstanceConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enable_secure_boot_, other->enable_secure_boot_);
  swap(enable_integrity_monitoring_, other->enable_integrity_monitoring_);
}

::google::protobuf::Metadata ShieldedInstanceConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SandboxConfig::InitAsDefaultInstance() {
}
class SandboxConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SandboxConfig::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SandboxConfig::SandboxConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SandboxConfig)
}
SandboxConfig::SandboxConfig(const SandboxConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SandboxConfig)
}

void SandboxConfig::SharedCtor() {
  type_ = 0;
}

SandboxConfig::~SandboxConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.SandboxConfig)
  SharedDtor();
}

void SandboxConfig::SharedDtor() {
}

void SandboxConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SandboxConfig& SandboxConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SandboxConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SandboxConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SandboxConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SandboxConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.SandboxConfig.Type type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::google::container::v1::SandboxConfig_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SandboxConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SandboxConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.SandboxConfig.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::container::v1::SandboxConfig_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SandboxConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SandboxConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SandboxConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.SandboxConfig.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SandboxConfig)
}

::google::protobuf::uint8* SandboxConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.SandboxConfig.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SandboxConfig)
  return target;
}

size_t SandboxConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SandboxConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1.SandboxConfig.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SandboxConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SandboxConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const SandboxConfig* source =
      ::google::protobuf::DynamicCastToGenerated<SandboxConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SandboxConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SandboxConfig)
    MergeFrom(*source);
  }
}

void SandboxConfig::MergeFrom(const SandboxConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SandboxConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SandboxConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SandboxConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SandboxConfig::CopyFrom(const SandboxConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SandboxConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SandboxConfig::IsInitialized() const {
  return true;
}

void SandboxConfig::Swap(SandboxConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SandboxConfig::InternalSwap(SandboxConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata SandboxConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReservationAffinity::InitAsDefaultInstance() {
}
class ReservationAffinity::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReservationAffinity::kConsumeReservationTypeFieldNumber;
const int ReservationAffinity::kKeyFieldNumber;
const int ReservationAffinity::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReservationAffinity::ReservationAffinity()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ReservationAffinity)
}
ReservationAffinity::ReservationAffinity(const ReservationAffinity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  consume_reservation_type_ = from.consume_reservation_type_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ReservationAffinity)
}

void ReservationAffinity::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReservationAffinity_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consume_reservation_type_ = 0;
}

ReservationAffinity::~ReservationAffinity() {
  // @@protoc_insertion_point(destructor:google.container.v1.ReservationAffinity)
  SharedDtor();
}

void ReservationAffinity::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReservationAffinity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReservationAffinity& ReservationAffinity::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReservationAffinity_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ReservationAffinity::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ReservationAffinity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consume_reservation_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReservationAffinity::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReservationAffinity*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.ReservationAffinity.Type consume_reservation_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_consume_reservation_type(static_cast<::google::container::v1::ReservationAffinity_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ReservationAffinity.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string values = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ReservationAffinity.values");
          object = msg->add_values();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReservationAffinity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ReservationAffinity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.ReservationAffinity.Type consume_reservation_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_consume_reservation_type(static_cast< ::google::container::v1::ReservationAffinity_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ReservationAffinity.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string values = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ReservationAffinity.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ReservationAffinity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ReservationAffinity)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReservationAffinity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ReservationAffinity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.ReservationAffinity.Type consume_reservation_type = 1;
  if (this->consume_reservation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->consume_reservation_type(), output);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ReservationAffinity.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // repeated string values = 3;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ReservationAffinity.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ReservationAffinity)
}

::google::protobuf::uint8* ReservationAffinity::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ReservationAffinity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.ReservationAffinity.Type consume_reservation_type = 1;
  if (this->consume_reservation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->consume_reservation_type(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ReservationAffinity.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // repeated string values = 3;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ReservationAffinity.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ReservationAffinity)
  return target;
}

size_t ReservationAffinity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ReservationAffinity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string values = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // .google.container.v1.ReservationAffinity.Type consume_reservation_type = 1;
  if (this->consume_reservation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->consume_reservation_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReservationAffinity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ReservationAffinity)
  GOOGLE_DCHECK_NE(&from, this);
  const ReservationAffinity* source =
      ::google::protobuf::DynamicCastToGenerated<ReservationAffinity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ReservationAffinity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ReservationAffinity)
    MergeFrom(*source);
  }
}

void ReservationAffinity::MergeFrom(const ReservationAffinity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ReservationAffinity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.consume_reservation_type() != 0) {
    set_consume_reservation_type(from.consume_reservation_type());
  }
}

void ReservationAffinity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ReservationAffinity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReservationAffinity::CopyFrom(const ReservationAffinity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ReservationAffinity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReservationAffinity::IsInitialized() const {
  return true;
}

void ReservationAffinity::Swap(ReservationAffinity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReservationAffinity::InternalSwap(ReservationAffinity* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  values_.InternalSwap(CastToBase(&other->values_));
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(consume_reservation_type_, other->consume_reservation_type_);
}

::google::protobuf::Metadata ReservationAffinity::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodeTaint::InitAsDefaultInstance() {
}
class NodeTaint::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeTaint::kKeyFieldNumber;
const int NodeTaint::kValueFieldNumber;
const int NodeTaint::kEffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeTaint::NodeTaint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodeTaint)
}
NodeTaint::NodeTaint(const NodeTaint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  effect_ = from.effect_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodeTaint)
}

void NodeTaint::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodeTaint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effect_ = 0;
}

NodeTaint::~NodeTaint() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodeTaint)
  SharedDtor();
}

void NodeTaint::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeTaint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeTaint& NodeTaint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodeTaint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodeTaint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodeTaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effect_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeTaint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodeTaint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeTaint.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodeTaint.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.NodeTaint.Effect effect = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_effect(static_cast<::google::container::v1::NodeTaint_Effect>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeTaint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodeTaint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeTaint.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeTaint.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeTaint.Effect effect = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_effect(static_cast< ::google::container::v1::NodeTaint_Effect >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodeTaint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodeTaint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeTaint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodeTaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeTaint.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeTaint.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // .google.container.v1.NodeTaint.Effect effect = 3;
  if (this->effect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodeTaint)
}

::google::protobuf::uint8* NodeTaint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodeTaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeTaint.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeTaint.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // .google.container.v1.NodeTaint.Effect effect = 3;
  if (this->effect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodeTaint)
  return target;
}

size_t NodeTaint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodeTaint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.container.v1.NodeTaint.Effect effect = 3;
  if (this->effect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->effect());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeTaint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodeTaint)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeTaint* source =
      ::google::protobuf::DynamicCastToGenerated<NodeTaint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodeTaint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodeTaint)
    MergeFrom(*source);
  }
}

void NodeTaint::MergeFrom(const NodeTaint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodeTaint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.effect() != 0) {
    set_effect(from.effect());
  }
}

void NodeTaint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodeTaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeTaint::CopyFrom(const NodeTaint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodeTaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeTaint::IsInitialized() const {
  return true;
}

void NodeTaint::Swap(NodeTaint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeTaint::InternalSwap(NodeTaint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(effect_, other->effect_);
}

::google::protobuf::Metadata NodeTaint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MasterAuth::InitAsDefaultInstance() {
  ::google::container::v1::_MasterAuth_default_instance_._instance.get_mutable()->client_certificate_config_ = const_cast< ::google::container::v1::ClientCertificateConfig*>(
      ::google::container::v1::ClientCertificateConfig::internal_default_instance());
}
class MasterAuth::HasBitSetters {
 public:
  static const ::google::container::v1::ClientCertificateConfig& client_certificate_config(const MasterAuth* msg);
};

const ::google::container::v1::ClientCertificateConfig&
MasterAuth::HasBitSetters::client_certificate_config(const MasterAuth* msg) {
  return *msg->client_certificate_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuth::kUsernameFieldNumber;
const int MasterAuth::kPasswordFieldNumber;
const int MasterAuth::kClientCertificateConfigFieldNumber;
const int MasterAuth::kClusterCaCertificateFieldNumber;
const int MasterAuth::kClientCertificateFieldNumber;
const int MasterAuth::kClientKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuth::MasterAuth()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MasterAuth)
}
MasterAuth::MasterAuth(const MasterAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  cluster_ca_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ca_certificate().size() > 0) {
    cluster_ca_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ca_certificate_);
  }
  client_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_certificate().size() > 0) {
    client_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_certificate_);
  }
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_key().size() > 0) {
    client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
  }
  if (from.has_client_certificate_config()) {
    client_certificate_config_ = new ::google::container::v1::ClientCertificateConfig(*from.client_certificate_config_);
  } else {
    client_certificate_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MasterAuth)
}

void MasterAuth::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_config_ = nullptr;
}

MasterAuth::~MasterAuth() {
  // @@protoc_insertion_point(destructor:google.container.v1.MasterAuth)
  SharedDtor();
}

void MasterAuth::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_certificate_config_;
}

void MasterAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterAuth& MasterAuth::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MasterAuth_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MasterAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && client_certificate_config_ != nullptr) {
    delete client_certificate_config_;
  }
  client_certificate_config_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MasterAuth::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MasterAuth*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string username = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.MasterAuth.username");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.MasterAuth.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ClientCertificateConfig::_InternalParse;
        object = msg->mutable_client_certificate_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string cluster_ca_certificate = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.MasterAuth.cluster_ca_certificate");
        object = msg->mutable_cluster_ca_certificate();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string client_certificate = 101;
      case 101: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.MasterAuth.client_certificate");
        object = msg->mutable_client_certificate();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string client_key = 102;
      case 102: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.MasterAuth.client_key");
        object = msg->mutable_client_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MasterAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MasterAuth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_certificate_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ca_certificate = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ca_certificate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.cluster_ca_certificate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_certificate = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (810 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_certificate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.client_certificate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_key = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (818 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_key().data(), static_cast<int>(this->client_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.client_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MasterAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MasterAuth)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MasterAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1 [deprecated = true];
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string password = 2 [deprecated = true];
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::client_certificate_config(this), output);
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.cluster_ca_certificate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->cluster_ca_certificate(), output);
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.client_certificate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->client_certificate(), output);
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_key().data(), static_cast<int>(this->client_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.client_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->client_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MasterAuth)
}

::google::protobuf::uint8* MasterAuth::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1 [deprecated = true];
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string password = 2 [deprecated = true];
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::client_certificate_config(this), target);
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.cluster_ca_certificate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->cluster_ca_certificate(), target);
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.client_certificate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->client_certificate(), target);
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_key().data(), static_cast<int>(this->client_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.client_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->client_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MasterAuth)
  return target;
}

size_t MasterAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MasterAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1 [deprecated = true];
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 2 [deprecated = true];
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ca_certificate());
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_certificate());
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_key());
  }

  // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_certificate_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MasterAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuth* source =
      ::google::protobuf::DynamicCastToGenerated<MasterAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MasterAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MasterAuth)
    MergeFrom(*source);
  }
}

void MasterAuth::MergeFrom(const MasterAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MasterAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.cluster_ca_certificate().size() > 0) {

    cluster_ca_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ca_certificate_);
  }
  if (from.client_certificate().size() > 0) {

    client_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_certificate_);
  }
  if (from.client_key().size() > 0) {

    client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
  }
  if (from.has_client_certificate_config()) {
    mutable_client_certificate_config()->::google::container::v1::ClientCertificateConfig::MergeFrom(from.client_certificate_config());
  }
}

void MasterAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MasterAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuth::CopyFrom(const MasterAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MasterAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuth::IsInitialized() const {
  return true;
}

void MasterAuth::Swap(MasterAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuth::InternalSwap(MasterAuth* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_ca_certificate_.Swap(&other->cluster_ca_certificate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_certificate_.Swap(&other->client_certificate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_key_.Swap(&other->client_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_certificate_config_, other->client_certificate_config_);
}

::google::protobuf::Metadata MasterAuth::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientCertificateConfig::InitAsDefaultInstance() {
}
class ClientCertificateConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCertificateConfig::kIssueClientCertificateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCertificateConfig::ClientCertificateConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ClientCertificateConfig)
}
ClientCertificateConfig::ClientCertificateConfig(const ClientCertificateConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issue_client_certificate_ = from.issue_client_certificate_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ClientCertificateConfig)
}

void ClientCertificateConfig::SharedCtor() {
  issue_client_certificate_ = false;
}

ClientCertificateConfig::~ClientCertificateConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ClientCertificateConfig)
  SharedDtor();
}

void ClientCertificateConfig::SharedDtor() {
}

void ClientCertificateConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientCertificateConfig& ClientCertificateConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientCertificateConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ClientCertificateConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issue_client_certificate_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientCertificateConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientCertificateConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool issue_client_certificate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_issue_client_certificate(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientCertificateConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ClientCertificateConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool issue_client_certificate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issue_client_certificate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ClientCertificateConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ClientCertificateConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientCertificateConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issue_client_certificate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ClientCertificateConfig)
}

::google::protobuf::uint8* ClientCertificateConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issue_client_certificate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ClientCertificateConfig)
  return target;
}

size_t ClientCertificateConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ClientCertificateConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientCertificateConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ClientCertificateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCertificateConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ClientCertificateConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ClientCertificateConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ClientCertificateConfig)
    MergeFrom(*source);
  }
}

void ClientCertificateConfig::MergeFrom(const ClientCertificateConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ClientCertificateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issue_client_certificate() != 0) {
    set_issue_client_certificate(from.issue_client_certificate());
  }
}

void ClientCertificateConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ClientCertificateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCertificateConfig::CopyFrom(const ClientCertificateConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ClientCertificateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCertificateConfig::IsInitialized() const {
  return true;
}

void ClientCertificateConfig::Swap(ClientCertificateConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCertificateConfig::InternalSwap(ClientCertificateConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(issue_client_certificate_, other->issue_client_certificate_);
}

::google::protobuf::Metadata ClientCertificateConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AddonsConfig::InitAsDefaultInstance() {
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->http_load_balancing_ = const_cast< ::google::container::v1::HttpLoadBalancing*>(
      ::google::container::v1::HttpLoadBalancing::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->horizontal_pod_autoscaling_ = const_cast< ::google::container::v1::HorizontalPodAutoscaling*>(
      ::google::container::v1::HorizontalPodAutoscaling::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->kubernetes_dashboard_ = const_cast< ::google::container::v1::KubernetesDashboard*>(
      ::google::container::v1::KubernetesDashboard::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->network_policy_config_ = const_cast< ::google::container::v1::NetworkPolicyConfig*>(
      ::google::container::v1::NetworkPolicyConfig::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->cloud_run_config_ = const_cast< ::google::container::v1::CloudRunConfig*>(
      ::google::container::v1::CloudRunConfig::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->dns_cache_config_ = const_cast< ::google::container::v1::DnsCacheConfig*>(
      ::google::container::v1::DnsCacheConfig::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->config_connector_config_ = const_cast< ::google::container::v1::ConfigConnectorConfig*>(
      ::google::container::v1::ConfigConnectorConfig::internal_default_instance());
}
class AddonsConfig::HasBitSetters {
 public:
  static const ::google::container::v1::HttpLoadBalancing& http_load_balancing(const AddonsConfig* msg);
  static const ::google::container::v1::HorizontalPodAutoscaling& horizontal_pod_autoscaling(const AddonsConfig* msg);
  static const ::google::container::v1::KubernetesDashboard& kubernetes_dashboard(const AddonsConfig* msg);
  static const ::google::container::v1::NetworkPolicyConfig& network_policy_config(const AddonsConfig* msg);
  static const ::google::container::v1::CloudRunConfig& cloud_run_config(const AddonsConfig* msg);
  static const ::google::container::v1::DnsCacheConfig& dns_cache_config(const AddonsConfig* msg);
  static const ::google::container::v1::ConfigConnectorConfig& config_connector_config(const AddonsConfig* msg);
};

const ::google::container::v1::HttpLoadBalancing&
AddonsConfig::HasBitSetters::http_load_balancing(const AddonsConfig* msg) {
  return *msg->http_load_balancing_;
}
const ::google::container::v1::HorizontalPodAutoscaling&
AddonsConfig::HasBitSetters::horizontal_pod_autoscaling(const AddonsConfig* msg) {
  return *msg->horizontal_pod_autoscaling_;
}
const ::google::container::v1::KubernetesDashboard&
AddonsConfig::HasBitSetters::kubernetes_dashboard(const AddonsConfig* msg) {
  return *msg->kubernetes_dashboard_;
}
const ::google::container::v1::NetworkPolicyConfig&
AddonsConfig::HasBitSetters::network_policy_config(const AddonsConfig* msg) {
  return *msg->network_policy_config_;
}
const ::google::container::v1::CloudRunConfig&
AddonsConfig::HasBitSetters::cloud_run_config(const AddonsConfig* msg) {
  return *msg->cloud_run_config_;
}
const ::google::container::v1::DnsCacheConfig&
AddonsConfig::HasBitSetters::dns_cache_config(const AddonsConfig* msg) {
  return *msg->dns_cache_config_;
}
const ::google::container::v1::ConfigConnectorConfig&
AddonsConfig::HasBitSetters::config_connector_config(const AddonsConfig* msg) {
  return *msg->config_connector_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddonsConfig::kHttpLoadBalancingFieldNumber;
const int AddonsConfig::kHorizontalPodAutoscalingFieldNumber;
const int AddonsConfig::kKubernetesDashboardFieldNumber;
const int AddonsConfig::kNetworkPolicyConfigFieldNumber;
const int AddonsConfig::kCloudRunConfigFieldNumber;
const int AddonsConfig::kDnsCacheConfigFieldNumber;
const int AddonsConfig::kConfigConnectorConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddonsConfig::AddonsConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.AddonsConfig)
}
AddonsConfig::AddonsConfig(const AddonsConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_http_load_balancing()) {
    http_load_balancing_ = new ::google::container::v1::HttpLoadBalancing(*from.http_load_balancing_);
  } else {
    http_load_balancing_ = nullptr;
  }
  if (from.has_horizontal_pod_autoscaling()) {
    horizontal_pod_autoscaling_ = new ::google::container::v1::HorizontalPodAutoscaling(*from.horizontal_pod_autoscaling_);
  } else {
    horizontal_pod_autoscaling_ = nullptr;
  }
  if (from.has_kubernetes_dashboard()) {
    kubernetes_dashboard_ = new ::google::container::v1::KubernetesDashboard(*from.kubernetes_dashboard_);
  } else {
    kubernetes_dashboard_ = nullptr;
  }
  if (from.has_network_policy_config()) {
    network_policy_config_ = new ::google::container::v1::NetworkPolicyConfig(*from.network_policy_config_);
  } else {
    network_policy_config_ = nullptr;
  }
  if (from.has_cloud_run_config()) {
    cloud_run_config_ = new ::google::container::v1::CloudRunConfig(*from.cloud_run_config_);
  } else {
    cloud_run_config_ = nullptr;
  }
  if (from.has_dns_cache_config()) {
    dns_cache_config_ = new ::google::container::v1::DnsCacheConfig(*from.dns_cache_config_);
  } else {
    dns_cache_config_ = nullptr;
  }
  if (from.has_config_connector_config()) {
    config_connector_config_ = new ::google::container::v1::ConfigConnectorConfig(*from.config_connector_config_);
  } else {
    config_connector_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.AddonsConfig)
}

void AddonsConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::memset(&http_load_balancing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_connector_config_) -
      reinterpret_cast<char*>(&http_load_balancing_)) + sizeof(config_connector_config_));
}

AddonsConfig::~AddonsConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.AddonsConfig)
  SharedDtor();
}

void AddonsConfig::SharedDtor() {
  if (this != internal_default_instance()) delete http_load_balancing_;
  if (this != internal_default_instance()) delete horizontal_pod_autoscaling_;
  if (this != internal_default_instance()) delete kubernetes_dashboard_;
  if (this != internal_default_instance()) delete network_policy_config_;
  if (this != internal_default_instance()) delete cloud_run_config_;
  if (this != internal_default_instance()) delete dns_cache_config_;
  if (this != internal_default_instance()) delete config_connector_config_;
}

void AddonsConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddonsConfig& AddonsConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AddonsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AddonsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && http_load_balancing_ != nullptr) {
    delete http_load_balancing_;
  }
  http_load_balancing_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && horizontal_pod_autoscaling_ != nullptr) {
    delete horizontal_pod_autoscaling_;
  }
  horizontal_pod_autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && kubernetes_dashboard_ != nullptr) {
    delete kubernetes_dashboard_;
  }
  kubernetes_dashboard_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && network_policy_config_ != nullptr) {
    delete network_policy_config_;
  }
  network_policy_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && cloud_run_config_ != nullptr) {
    delete cloud_run_config_;
  }
  cloud_run_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dns_cache_config_ != nullptr) {
    delete dns_cache_config_;
  }
  dns_cache_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && config_connector_config_ != nullptr) {
    delete config_connector_config_;
  }
  config_connector_config_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AddonsConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AddonsConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::HttpLoadBalancing::_InternalParse;
        object = msg->mutable_http_load_balancing();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::HorizontalPodAutoscaling::_InternalParse;
        object = msg->mutable_horizontal_pod_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::KubernetesDashboard::_InternalParse;
        object = msg->mutable_kubernetes_dashboard();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NetworkPolicyConfig::_InternalParse;
        object = msg->mutable_network_policy_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.CloudRunConfig cloud_run_config = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::CloudRunConfig::_InternalParse;
        object = msg->mutable_cloud_run_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.DnsCacheConfig dns_cache_config = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::DnsCacheConfig::_InternalParse;
        object = msg->mutable_dns_cache_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ConfigConnectorConfig config_connector_config = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ConfigConnectorConfig::_InternalParse;
        object = msg->mutable_config_connector_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AddonsConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.AddonsConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http_load_balancing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_horizontal_pod_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kubernetes_dashboard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.CloudRunConfig cloud_run_config = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cloud_run_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.DnsCacheConfig dns_cache_config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dns_cache_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ConfigConnectorConfig config_connector_config = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config_connector_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.AddonsConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.AddonsConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AddonsConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::http_load_balancing(this), output);
  }

  // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::horizontal_pod_autoscaling(this), output);
  }

  // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3 [deprecated = true];
  if (this->has_kubernetes_dashboard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::kubernetes_dashboard(this), output);
  }

  // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::network_policy_config(this), output);
  }

  // .google.container.v1.CloudRunConfig cloud_run_config = 7;
  if (this->has_cloud_run_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::cloud_run_config(this), output);
  }

  // .google.container.v1.DnsCacheConfig dns_cache_config = 8;
  if (this->has_dns_cache_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::dns_cache_config(this), output);
  }

  // .google.container.v1.ConfigConnectorConfig config_connector_config = 10;
  if (this->has_config_connector_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::config_connector_config(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.AddonsConfig)
}

::google::protobuf::uint8* AddonsConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::http_load_balancing(this), target);
  }

  // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::horizontal_pod_autoscaling(this), target);
  }

  // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3 [deprecated = true];
  if (this->has_kubernetes_dashboard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::kubernetes_dashboard(this), target);
  }

  // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::network_policy_config(this), target);
  }

  // .google.container.v1.CloudRunConfig cloud_run_config = 7;
  if (this->has_cloud_run_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::cloud_run_config(this), target);
  }

  // .google.container.v1.DnsCacheConfig dns_cache_config = 8;
  if (this->has_dns_cache_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::dns_cache_config(this), target);
  }

  // .google.container.v1.ConfigConnectorConfig config_connector_config = 10;
  if (this->has_config_connector_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::config_connector_config(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.AddonsConfig)
  return target;
}

size_t AddonsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.AddonsConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *http_load_balancing_);
  }

  // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *horizontal_pod_autoscaling_);
  }

  // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3 [deprecated = true];
  if (this->has_kubernetes_dashboard()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kubernetes_dashboard_);
  }

  // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *network_policy_config_);
  }

  // .google.container.v1.CloudRunConfig cloud_run_config = 7;
  if (this->has_cloud_run_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cloud_run_config_);
  }

  // .google.container.v1.DnsCacheConfig dns_cache_config = 8;
  if (this->has_dns_cache_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dns_cache_config_);
  }

  // .google.container.v1.ConfigConnectorConfig config_connector_config = 10;
  if (this->has_config_connector_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_connector_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddonsConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.AddonsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AddonsConfig* source =
      ::google::protobuf::DynamicCastToGenerated<AddonsConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.AddonsConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.AddonsConfig)
    MergeFrom(*source);
  }
}

void AddonsConfig::MergeFrom(const AddonsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.AddonsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_http_load_balancing()) {
    mutable_http_load_balancing()->::google::container::v1::HttpLoadBalancing::MergeFrom(from.http_load_balancing());
  }
  if (from.has_horizontal_pod_autoscaling()) {
    mutable_horizontal_pod_autoscaling()->::google::container::v1::HorizontalPodAutoscaling::MergeFrom(from.horizontal_pod_autoscaling());
  }
  if (from.has_kubernetes_dashboard()) {
    mutable_kubernetes_dashboard()->::google::container::v1::KubernetesDashboard::MergeFrom(from.kubernetes_dashboard());
  }
  if (from.has_network_policy_config()) {
    mutable_network_policy_config()->::google::container::v1::NetworkPolicyConfig::MergeFrom(from.network_policy_config());
  }
  if (from.has_cloud_run_config()) {
    mutable_cloud_run_config()->::google::container::v1::CloudRunConfig::MergeFrom(from.cloud_run_config());
  }
  if (from.has_dns_cache_config()) {
    mutable_dns_cache_config()->::google::container::v1::DnsCacheConfig::MergeFrom(from.dns_cache_config());
  }
  if (from.has_config_connector_config()) {
    mutable_config_connector_config()->::google::container::v1::ConfigConnectorConfig::MergeFrom(from.config_connector_config());
  }
}

void AddonsConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.AddonsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddonsConfig::CopyFrom(const AddonsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.AddonsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddonsConfig::IsInitialized() const {
  return true;
}

void AddonsConfig::Swap(AddonsConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddonsConfig::InternalSwap(AddonsConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(http_load_balancing_, other->http_load_balancing_);
  swap(horizontal_pod_autoscaling_, other->horizontal_pod_autoscaling_);
  swap(kubernetes_dashboard_, other->kubernetes_dashboard_);
  swap(network_policy_config_, other->network_policy_config_);
  swap(cloud_run_config_, other->cloud_run_config_);
  swap(dns_cache_config_, other->dns_cache_config_);
  swap(config_connector_config_, other->config_connector_config_);
}

::google::protobuf::Metadata AddonsConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HttpLoadBalancing::InitAsDefaultInstance() {
}
class HttpLoadBalancing::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpLoadBalancing::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpLoadBalancing::HttpLoadBalancing()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.HttpLoadBalancing)
}
HttpLoadBalancing::HttpLoadBalancing(const HttpLoadBalancing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.HttpLoadBalancing)
}

void HttpLoadBalancing::SharedCtor() {
  disabled_ = false;
}

HttpLoadBalancing::~HttpLoadBalancing() {
  // @@protoc_insertion_point(destructor:google.container.v1.HttpLoadBalancing)
  SharedDtor();
}

void HttpLoadBalancing::SharedDtor() {
}

void HttpLoadBalancing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HttpLoadBalancing& HttpLoadBalancing::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HttpLoadBalancing_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void HttpLoadBalancing::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HttpLoadBalancing::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HttpLoadBalancing*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HttpLoadBalancing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.HttpLoadBalancing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.HttpLoadBalancing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.HttpLoadBalancing)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HttpLoadBalancing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.HttpLoadBalancing)
}

::google::protobuf::uint8* HttpLoadBalancing::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.HttpLoadBalancing)
  return target;
}

size_t HttpLoadBalancing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.HttpLoadBalancing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HttpLoadBalancing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.HttpLoadBalancing)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpLoadBalancing* source =
      ::google::protobuf::DynamicCastToGenerated<HttpLoadBalancing>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.HttpLoadBalancing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.HttpLoadBalancing)
    MergeFrom(*source);
  }
}

void HttpLoadBalancing::MergeFrom(const HttpLoadBalancing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.HttpLoadBalancing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void HttpLoadBalancing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.HttpLoadBalancing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpLoadBalancing::CopyFrom(const HttpLoadBalancing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.HttpLoadBalancing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpLoadBalancing::IsInitialized() const {
  return true;
}

void HttpLoadBalancing::Swap(HttpLoadBalancing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpLoadBalancing::InternalSwap(HttpLoadBalancing* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata HttpLoadBalancing::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HorizontalPodAutoscaling::InitAsDefaultInstance() {
}
class HorizontalPodAutoscaling::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HorizontalPodAutoscaling::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HorizontalPodAutoscaling::HorizontalPodAutoscaling()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.HorizontalPodAutoscaling)
}
HorizontalPodAutoscaling::HorizontalPodAutoscaling(const HorizontalPodAutoscaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.HorizontalPodAutoscaling)
}

void HorizontalPodAutoscaling::SharedCtor() {
  disabled_ = false;
}

HorizontalPodAutoscaling::~HorizontalPodAutoscaling() {
  // @@protoc_insertion_point(destructor:google.container.v1.HorizontalPodAutoscaling)
  SharedDtor();
}

void HorizontalPodAutoscaling::SharedDtor() {
}

void HorizontalPodAutoscaling::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HorizontalPodAutoscaling& HorizontalPodAutoscaling::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void HorizontalPodAutoscaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HorizontalPodAutoscaling::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HorizontalPodAutoscaling*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HorizontalPodAutoscaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.HorizontalPodAutoscaling)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.HorizontalPodAutoscaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.HorizontalPodAutoscaling)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HorizontalPodAutoscaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.HorizontalPodAutoscaling)
}

::google::protobuf::uint8* HorizontalPodAutoscaling::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.HorizontalPodAutoscaling)
  return target;
}

size_t HorizontalPodAutoscaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.HorizontalPodAutoscaling)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HorizontalPodAutoscaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.HorizontalPodAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  const HorizontalPodAutoscaling* source =
      ::google::protobuf::DynamicCastToGenerated<HorizontalPodAutoscaling>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.HorizontalPodAutoscaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.HorizontalPodAutoscaling)
    MergeFrom(*source);
  }
}

void HorizontalPodAutoscaling::MergeFrom(const HorizontalPodAutoscaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.HorizontalPodAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void HorizontalPodAutoscaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.HorizontalPodAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HorizontalPodAutoscaling::CopyFrom(const HorizontalPodAutoscaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.HorizontalPodAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HorizontalPodAutoscaling::IsInitialized() const {
  return true;
}

void HorizontalPodAutoscaling::Swap(HorizontalPodAutoscaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HorizontalPodAutoscaling::InternalSwap(HorizontalPodAutoscaling* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata HorizontalPodAutoscaling::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void KubernetesDashboard::InitAsDefaultInstance() {
}
class KubernetesDashboard::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KubernetesDashboard::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KubernetesDashboard::KubernetesDashboard()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.KubernetesDashboard)
}
KubernetesDashboard::KubernetesDashboard(const KubernetesDashboard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.KubernetesDashboard)
}

void KubernetesDashboard::SharedCtor() {
  disabled_ = false;
}

KubernetesDashboard::~KubernetesDashboard() {
  // @@protoc_insertion_point(destructor:google.container.v1.KubernetesDashboard)
  SharedDtor();
}

void KubernetesDashboard::SharedDtor() {
}

void KubernetesDashboard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KubernetesDashboard& KubernetesDashboard::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_KubernetesDashboard_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void KubernetesDashboard::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KubernetesDashboard::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<KubernetesDashboard*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KubernetesDashboard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.KubernetesDashboard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.KubernetesDashboard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.KubernetesDashboard)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KubernetesDashboard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.KubernetesDashboard)
}

::google::protobuf::uint8* KubernetesDashboard::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.KubernetesDashboard)
  return target;
}

size_t KubernetesDashboard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.KubernetesDashboard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KubernetesDashboard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.KubernetesDashboard)
  GOOGLE_DCHECK_NE(&from, this);
  const KubernetesDashboard* source =
      ::google::protobuf::DynamicCastToGenerated<KubernetesDashboard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.KubernetesDashboard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.KubernetesDashboard)
    MergeFrom(*source);
  }
}

void KubernetesDashboard::MergeFrom(const KubernetesDashboard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.KubernetesDashboard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void KubernetesDashboard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.KubernetesDashboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KubernetesDashboard::CopyFrom(const KubernetesDashboard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.KubernetesDashboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KubernetesDashboard::IsInitialized() const {
  return true;
}

void KubernetesDashboard::Swap(KubernetesDashboard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KubernetesDashboard::InternalSwap(KubernetesDashboard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata KubernetesDashboard::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NetworkPolicyConfig::InitAsDefaultInstance() {
}
class NetworkPolicyConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkPolicyConfig::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkPolicyConfig::NetworkPolicyConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NetworkPolicyConfig)
}
NetworkPolicyConfig::NetworkPolicyConfig(const NetworkPolicyConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NetworkPolicyConfig)
}

void NetworkPolicyConfig::SharedCtor() {
  disabled_ = false;
}

NetworkPolicyConfig::~NetworkPolicyConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.NetworkPolicyConfig)
  SharedDtor();
}

void NetworkPolicyConfig::SharedDtor() {
}

void NetworkPolicyConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkPolicyConfig& NetworkPolicyConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NetworkPolicyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkPolicyConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NetworkPolicyConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkPolicyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NetworkPolicyConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NetworkPolicyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NetworkPolicyConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkPolicyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NetworkPolicyConfig)
}

::google::protobuf::uint8* NetworkPolicyConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NetworkPolicyConfig)
  return target;
}

size_t NetworkPolicyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NetworkPolicyConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkPolicyConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NetworkPolicyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkPolicyConfig* source =
      ::google::protobuf::DynamicCastToGenerated<NetworkPolicyConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NetworkPolicyConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NetworkPolicyConfig)
    MergeFrom(*source);
  }
}

void NetworkPolicyConfig::MergeFrom(const NetworkPolicyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NetworkPolicyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void NetworkPolicyConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NetworkPolicyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkPolicyConfig::CopyFrom(const NetworkPolicyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NetworkPolicyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkPolicyConfig::IsInitialized() const {
  return true;
}

void NetworkPolicyConfig::Swap(NetworkPolicyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkPolicyConfig::InternalSwap(NetworkPolicyConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata NetworkPolicyConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DnsCacheConfig::InitAsDefaultInstance() {
}
class DnsCacheConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DnsCacheConfig::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DnsCacheConfig::DnsCacheConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DnsCacheConfig)
}
DnsCacheConfig::DnsCacheConfig(const DnsCacheConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DnsCacheConfig)
}

void DnsCacheConfig::SharedCtor() {
  enabled_ = false;
}

DnsCacheConfig::~DnsCacheConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.DnsCacheConfig)
  SharedDtor();
}

void DnsCacheConfig::SharedDtor() {
}

void DnsCacheConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DnsCacheConfig& DnsCacheConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DnsCacheConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DnsCacheConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DnsCacheConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DnsCacheConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DnsCacheConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DnsCacheConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DnsCacheConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DnsCacheConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DnsCacheConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DnsCacheConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DnsCacheConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DnsCacheConfig)
}

::google::protobuf::uint8* DnsCacheConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DnsCacheConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DnsCacheConfig)
  return target;
}

size_t DnsCacheConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DnsCacheConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DnsCacheConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DnsCacheConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DnsCacheConfig* source =
      ::google::protobuf::DynamicCastToGenerated<DnsCacheConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DnsCacheConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DnsCacheConfig)
    MergeFrom(*source);
  }
}

void DnsCacheConfig::MergeFrom(const DnsCacheConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DnsCacheConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void DnsCacheConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DnsCacheConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DnsCacheConfig::CopyFrom(const DnsCacheConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DnsCacheConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DnsCacheConfig::IsInitialized() const {
  return true;
}

void DnsCacheConfig::Swap(DnsCacheConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DnsCacheConfig::InternalSwap(DnsCacheConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata DnsCacheConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PrivateClusterMasterGlobalAccessConfig::InitAsDefaultInstance() {
}
class PrivateClusterMasterGlobalAccessConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrivateClusterMasterGlobalAccessConfig::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivateClusterMasterGlobalAccessConfig::PrivateClusterMasterGlobalAccessConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
}
PrivateClusterMasterGlobalAccessConfig::PrivateClusterMasterGlobalAccessConfig(const PrivateClusterMasterGlobalAccessConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
}

void PrivateClusterMasterGlobalAccessConfig::SharedCtor() {
  enabled_ = false;
}

PrivateClusterMasterGlobalAccessConfig::~PrivateClusterMasterGlobalAccessConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  SharedDtor();
}

void PrivateClusterMasterGlobalAccessConfig::SharedDtor() {
}

void PrivateClusterMasterGlobalAccessConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateClusterMasterGlobalAccessConfig& PrivateClusterMasterGlobalAccessConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PrivateClusterMasterGlobalAccessConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void PrivateClusterMasterGlobalAccessConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrivateClusterMasterGlobalAccessConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PrivateClusterMasterGlobalAccessConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrivateClusterMasterGlobalAccessConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrivateClusterMasterGlobalAccessConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
}

::google::protobuf::uint8* PrivateClusterMasterGlobalAccessConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  return target;
}

size_t PrivateClusterMasterGlobalAccessConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateClusterMasterGlobalAccessConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateClusterMasterGlobalAccessConfig* source =
      ::google::protobuf::DynamicCastToGenerated<PrivateClusterMasterGlobalAccessConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
    MergeFrom(*source);
  }
}

void PrivateClusterMasterGlobalAccessConfig::MergeFrom(const PrivateClusterMasterGlobalAccessConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void PrivateClusterMasterGlobalAccessConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateClusterMasterGlobalAccessConfig::CopyFrom(const PrivateClusterMasterGlobalAccessConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.PrivateClusterMasterGlobalAccessConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateClusterMasterGlobalAccessConfig::IsInitialized() const {
  return true;
}

void PrivateClusterMasterGlobalAccessConfig::Swap(PrivateClusterMasterGlobalAccessConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivateClusterMasterGlobalAccessConfig::InternalSwap(PrivateClusterMasterGlobalAccessConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata PrivateClusterMasterGlobalAccessConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PrivateClusterConfig::InitAsDefaultInstance() {
  ::google::container::v1::_PrivateClusterConfig_default_instance_._instance.get_mutable()->master_global_access_config_ = const_cast< ::google::container::v1::PrivateClusterMasterGlobalAccessConfig*>(
      ::google::container::v1::PrivateClusterMasterGlobalAccessConfig::internal_default_instance());
}
class PrivateClusterConfig::HasBitSetters {
 public:
  static const ::google::container::v1::PrivateClusterMasterGlobalAccessConfig& master_global_access_config(const PrivateClusterConfig* msg);
};

const ::google::container::v1::PrivateClusterMasterGlobalAccessConfig&
PrivateClusterConfig::HasBitSetters::master_global_access_config(const PrivateClusterConfig* msg) {
  return *msg->master_global_access_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrivateClusterConfig::kEnablePrivateNodesFieldNumber;
const int PrivateClusterConfig::kEnablePrivateEndpointFieldNumber;
const int PrivateClusterConfig::kMasterIpv4CidrBlockFieldNumber;
const int PrivateClusterConfig::kPrivateEndpointFieldNumber;
const int PrivateClusterConfig::kPublicEndpointFieldNumber;
const int PrivateClusterConfig::kPeeringNameFieldNumber;
const int PrivateClusterConfig::kMasterGlobalAccessConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivateClusterConfig::PrivateClusterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.PrivateClusterConfig)
}
PrivateClusterConfig::PrivateClusterConfig(const PrivateClusterConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  master_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.master_ipv4_cidr_block().size() > 0) {
    master_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_ipv4_cidr_block_);
  }
  private_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.private_endpoint().size() > 0) {
    private_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_endpoint_);
  }
  public_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_endpoint().size() > 0) {
    public_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_endpoint_);
  }
  peering_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.peering_name().size() > 0) {
    peering_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peering_name_);
  }
  if (from.has_master_global_access_config()) {
    master_global_access_config_ = new ::google::container::v1::PrivateClusterMasterGlobalAccessConfig(*from.master_global_access_config_);
  } else {
    master_global_access_config_ = nullptr;
  }
  ::memcpy(&enable_private_nodes_, &from.enable_private_nodes_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_private_endpoint_) -
    reinterpret_cast<char*>(&enable_private_nodes_)) + sizeof(enable_private_endpoint_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.PrivateClusterConfig)
}

void PrivateClusterConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  master_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peering_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&master_global_access_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_private_endpoint_) -
      reinterpret_cast<char*>(&master_global_access_config_)) + sizeof(enable_private_endpoint_));
}

PrivateClusterConfig::~PrivateClusterConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.PrivateClusterConfig)
  SharedDtor();
}

void PrivateClusterConfig::SharedDtor() {
  master_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peering_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete master_global_access_config_;
}

void PrivateClusterConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateClusterConfig& PrivateClusterConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PrivateClusterConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void PrivateClusterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.PrivateClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  master_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peering_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && master_global_access_config_ != nullptr) {
    delete master_global_access_config_;
  }
  master_global_access_config_ = nullptr;
  ::memset(&enable_private_nodes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_private_endpoint_) -
      reinterpret_cast<char*>(&enable_private_nodes_)) + sizeof(enable_private_endpoint_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrivateClusterConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PrivateClusterConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enable_private_nodes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enable_private_nodes(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool enable_private_endpoint = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_enable_private_endpoint(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string master_ipv4_cidr_block = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.PrivateClusterConfig.master_ipv4_cidr_block");
        object = msg->mutable_master_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string private_endpoint = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.PrivateClusterConfig.private_endpoint");
        object = msg->mutable_private_endpoint();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string public_endpoint = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.PrivateClusterConfig.public_endpoint");
        object = msg->mutable_public_endpoint();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string peering_name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.PrivateClusterConfig.peering_name");
        object = msg->mutable_peering_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.PrivateClusterMasterGlobalAccessConfig master_global_access_config = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::PrivateClusterMasterGlobalAccessConfig::_InternalParse;
        object = msg->mutable_master_global_access_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrivateClusterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.PrivateClusterConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable_private_nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_private_nodes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_private_endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_private_endpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string master_ipv4_cidr_block = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->master_ipv4_cidr_block().data(), static_cast<int>(this->master_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.PrivateClusterConfig.master_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string private_endpoint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_private_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->private_endpoint().data(), static_cast<int>(this->private_endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.PrivateClusterConfig.private_endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string public_endpoint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_endpoint().data(), static_cast<int>(this->public_endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.PrivateClusterConfig.public_endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string peering_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peering_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peering_name().data(), static_cast<int>(this->peering_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.PrivateClusterConfig.peering_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.PrivateClusterMasterGlobalAccessConfig master_global_access_config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_global_access_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.PrivateClusterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.PrivateClusterConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrivateClusterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.PrivateClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_private_nodes = 1;
  if (this->enable_private_nodes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable_private_nodes(), output);
  }

  // bool enable_private_endpoint = 2;
  if (this->enable_private_endpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable_private_endpoint(), output);
  }

  // string master_ipv4_cidr_block = 3;
  if (this->master_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_ipv4_cidr_block().data(), static_cast<int>(this->master_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.PrivateClusterConfig.master_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->master_ipv4_cidr_block(), output);
  }

  // string private_endpoint = 4;
  if (this->private_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_endpoint().data(), static_cast<int>(this->private_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.PrivateClusterConfig.private_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->private_endpoint(), output);
  }

  // string public_endpoint = 5;
  if (this->public_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_endpoint().data(), static_cast<int>(this->public_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.PrivateClusterConfig.public_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->public_endpoint(), output);
  }

  // string peering_name = 7;
  if (this->peering_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peering_name().data(), static_cast<int>(this->peering_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.PrivateClusterConfig.peering_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->peering_name(), output);
  }

  // .google.container.v1.PrivateClusterMasterGlobalAccessConfig master_global_access_config = 8;
  if (this->has_master_global_access_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::master_global_access_config(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.PrivateClusterConfig)
}

::google::protobuf::uint8* PrivateClusterConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.PrivateClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_private_nodes = 1;
  if (this->enable_private_nodes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable_private_nodes(), target);
  }

  // bool enable_private_endpoint = 2;
  if (this->enable_private_endpoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable_private_endpoint(), target);
  }

  // string master_ipv4_cidr_block = 3;
  if (this->master_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_ipv4_cidr_block().data(), static_cast<int>(this->master_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.PrivateClusterConfig.master_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->master_ipv4_cidr_block(), target);
  }

  // string private_endpoint = 4;
  if (this->private_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_endpoint().data(), static_cast<int>(this->private_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.PrivateClusterConfig.private_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->private_endpoint(), target);
  }

  // string public_endpoint = 5;
  if (this->public_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_endpoint().data(), static_cast<int>(this->public_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.PrivateClusterConfig.public_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->public_endpoint(), target);
  }

  // string peering_name = 7;
  if (this->peering_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peering_name().data(), static_cast<int>(this->peering_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.PrivateClusterConfig.peering_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->peering_name(), target);
  }

  // .google.container.v1.PrivateClusterMasterGlobalAccessConfig master_global_access_config = 8;
  if (this->has_master_global_access_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::master_global_access_config(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.PrivateClusterConfig)
  return target;
}

size_t PrivateClusterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.PrivateClusterConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string master_ipv4_cidr_block = 3;
  if (this->master_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->master_ipv4_cidr_block());
  }

  // string private_endpoint = 4;
  if (this->private_endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->private_endpoint());
  }

  // string public_endpoint = 5;
  if (this->public_endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_endpoint());
  }

  // string peering_name = 7;
  if (this->peering_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peering_name());
  }

  // .google.container.v1.PrivateClusterMasterGlobalAccessConfig master_global_access_config = 8;
  if (this->has_master_global_access_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *master_global_access_config_);
  }

  // bool enable_private_nodes = 1;
  if (this->enable_private_nodes() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_private_endpoint = 2;
  if (this->enable_private_endpoint() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateClusterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.PrivateClusterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateClusterConfig* source =
      ::google::protobuf::DynamicCastToGenerated<PrivateClusterConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.PrivateClusterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.PrivateClusterConfig)
    MergeFrom(*source);
  }
}

void PrivateClusterConfig::MergeFrom(const PrivateClusterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.PrivateClusterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.master_ipv4_cidr_block().size() > 0) {

    master_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_ipv4_cidr_block_);
  }
  if (from.private_endpoint().size() > 0) {

    private_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_endpoint_);
  }
  if (from.public_endpoint().size() > 0) {

    public_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_endpoint_);
  }
  if (from.peering_name().size() > 0) {

    peering_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peering_name_);
  }
  if (from.has_master_global_access_config()) {
    mutable_master_global_access_config()->::google::container::v1::PrivateClusterMasterGlobalAccessConfig::MergeFrom(from.master_global_access_config());
  }
  if (from.enable_private_nodes() != 0) {
    set_enable_private_nodes(from.enable_private_nodes());
  }
  if (from.enable_private_endpoint() != 0) {
    set_enable_private_endpoint(from.enable_private_endpoint());
  }
}

void PrivateClusterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.PrivateClusterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateClusterConfig::CopyFrom(const PrivateClusterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.PrivateClusterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateClusterConfig::IsInitialized() const {
  return true;
}

void PrivateClusterConfig::Swap(PrivateClusterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivateClusterConfig::InternalSwap(PrivateClusterConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  master_ipv4_cidr_block_.Swap(&other->master_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  private_endpoint_.Swap(&other->private_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  public_endpoint_.Swap(&other->public_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  peering_name_.Swap(&other->peering_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(master_global_access_config_, other->master_global_access_config_);
  swap(enable_private_nodes_, other->enable_private_nodes_);
  swap(enable_private_endpoint_, other->enable_private_endpoint_);
}

::google::protobuf::Metadata PrivateClusterConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AuthenticatorGroupsConfig::InitAsDefaultInstance() {
}
class AuthenticatorGroupsConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticatorGroupsConfig::kEnabledFieldNumber;
const int AuthenticatorGroupsConfig::kSecurityGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticatorGroupsConfig::AuthenticatorGroupsConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.AuthenticatorGroupsConfig)
}
AuthenticatorGroupsConfig::AuthenticatorGroupsConfig(const AuthenticatorGroupsConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  security_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.security_group().size() > 0) {
    security_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_group_);
  }
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.AuthenticatorGroupsConfig)
}

void AuthenticatorGroupsConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AuthenticatorGroupsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  security_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
}

AuthenticatorGroupsConfig::~AuthenticatorGroupsConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.AuthenticatorGroupsConfig)
  SharedDtor();
}

void AuthenticatorGroupsConfig::SharedDtor() {
  security_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticatorGroupsConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticatorGroupsConfig& AuthenticatorGroupsConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AuthenticatorGroupsConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AuthenticatorGroupsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.AuthenticatorGroupsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  security_group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AuthenticatorGroupsConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AuthenticatorGroupsConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string security_group = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AuthenticatorGroupsConfig.security_group");
        object = msg->mutable_security_group();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AuthenticatorGroupsConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.AuthenticatorGroupsConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string security_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_security_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->security_group().data(), static_cast<int>(this->security_group().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AuthenticatorGroupsConfig.security_group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.AuthenticatorGroupsConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.AuthenticatorGroupsConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AuthenticatorGroupsConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.AuthenticatorGroupsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // string security_group = 2;
  if (this->security_group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->security_group().data(), static_cast<int>(this->security_group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AuthenticatorGroupsConfig.security_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->security_group(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.AuthenticatorGroupsConfig)
}

::google::protobuf::uint8* AuthenticatorGroupsConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.AuthenticatorGroupsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // string security_group = 2;
  if (this->security_group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->security_group().data(), static_cast<int>(this->security_group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AuthenticatorGroupsConfig.security_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->security_group(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.AuthenticatorGroupsConfig)
  return target;
}

size_t AuthenticatorGroupsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.AuthenticatorGroupsConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string security_group = 2;
  if (this->security_group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->security_group());
  }

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticatorGroupsConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.AuthenticatorGroupsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticatorGroupsConfig* source =
      ::google::protobuf::DynamicCastToGenerated<AuthenticatorGroupsConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.AuthenticatorGroupsConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.AuthenticatorGroupsConfig)
    MergeFrom(*source);
  }
}

void AuthenticatorGroupsConfig::MergeFrom(const AuthenticatorGroupsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.AuthenticatorGroupsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.security_group().size() > 0) {

    security_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_group_);
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void AuthenticatorGroupsConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.AuthenticatorGroupsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticatorGroupsConfig::CopyFrom(const AuthenticatorGroupsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.AuthenticatorGroupsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticatorGroupsConfig::IsInitialized() const {
  return true;
}

void AuthenticatorGroupsConfig::Swap(AuthenticatorGroupsConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticatorGroupsConfig::InternalSwap(AuthenticatorGroupsConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  security_group_.Swap(&other->security_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata AuthenticatorGroupsConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CloudRunConfig::InitAsDefaultInstance() {
}
class CloudRunConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudRunConfig::kDisabledFieldNumber;
const int CloudRunConfig::kLoadBalancerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudRunConfig::CloudRunConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CloudRunConfig)
}
CloudRunConfig::CloudRunConfig(const CloudRunConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&disabled_, &from.disabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&load_balancer_type_) -
    reinterpret_cast<char*>(&disabled_)) + sizeof(load_balancer_type_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CloudRunConfig)
}

void CloudRunConfig::SharedCtor() {
  ::memset(&disabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&load_balancer_type_) -
      reinterpret_cast<char*>(&disabled_)) + sizeof(load_balancer_type_));
}

CloudRunConfig::~CloudRunConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.CloudRunConfig)
  SharedDtor();
}

void CloudRunConfig::SharedDtor() {
}

void CloudRunConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloudRunConfig& CloudRunConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CloudRunConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CloudRunConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CloudRunConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&disabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&load_balancer_type_) -
      reinterpret_cast<char*>(&disabled_)) + sizeof(load_balancer_type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CloudRunConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CloudRunConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1.CloudRunConfig.LoadBalancerType load_balancer_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_load_balancer_type(static_cast<::google::container::v1::CloudRunConfig_LoadBalancerType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CloudRunConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CloudRunConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.CloudRunConfig.LoadBalancerType load_balancer_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_load_balancer_type(static_cast< ::google::container::v1::CloudRunConfig_LoadBalancerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CloudRunConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CloudRunConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CloudRunConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CloudRunConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  // .google.container.v1.CloudRunConfig.LoadBalancerType load_balancer_type = 3;
  if (this->load_balancer_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->load_balancer_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CloudRunConfig)
}

::google::protobuf::uint8* CloudRunConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CloudRunConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  // .google.container.v1.CloudRunConfig.LoadBalancerType load_balancer_type = 3;
  if (this->load_balancer_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->load_balancer_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CloudRunConfig)
  return target;
}

size_t CloudRunConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CloudRunConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  // .google.container.v1.CloudRunConfig.LoadBalancerType load_balancer_type = 3;
  if (this->load_balancer_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->load_balancer_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloudRunConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CloudRunConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudRunConfig* source =
      ::google::protobuf::DynamicCastToGenerated<CloudRunConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CloudRunConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CloudRunConfig)
    MergeFrom(*source);
  }
}

void CloudRunConfig::MergeFrom(const CloudRunConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CloudRunConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
  if (from.load_balancer_type() != 0) {
    set_load_balancer_type(from.load_balancer_type());
  }
}

void CloudRunConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CloudRunConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudRunConfig::CopyFrom(const CloudRunConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CloudRunConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudRunConfig::IsInitialized() const {
  return true;
}

void CloudRunConfig::Swap(CloudRunConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudRunConfig::InternalSwap(CloudRunConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
  swap(load_balancer_type_, other->load_balancer_type_);
}

::google::protobuf::Metadata CloudRunConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConfigConnectorConfig::InitAsDefaultInstance() {
}
class ConfigConnectorConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigConnectorConfig::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigConnectorConfig::ConfigConnectorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ConfigConnectorConfig)
}
ConfigConnectorConfig::ConfigConnectorConfig(const ConfigConnectorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ConfigConnectorConfig)
}

void ConfigConnectorConfig::SharedCtor() {
  enabled_ = false;
}

ConfigConnectorConfig::~ConfigConnectorConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ConfigConnectorConfig)
  SharedDtor();
}

void ConfigConnectorConfig::SharedDtor() {
}

void ConfigConnectorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigConnectorConfig& ConfigConnectorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConfigConnectorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ConfigConnectorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ConfigConnectorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConfigConnectorConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConfigConnectorConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConfigConnectorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ConfigConnectorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ConfigConnectorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ConfigConnectorConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConfigConnectorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ConfigConnectorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ConfigConnectorConfig)
}

::google::protobuf::uint8* ConfigConnectorConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ConfigConnectorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ConfigConnectorConfig)
  return target;
}

size_t ConfigConnectorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ConfigConnectorConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigConnectorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ConfigConnectorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigConnectorConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ConfigConnectorConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ConfigConnectorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ConfigConnectorConfig)
    MergeFrom(*source);
  }
}

void ConfigConnectorConfig::MergeFrom(const ConfigConnectorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ConfigConnectorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void ConfigConnectorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ConfigConnectorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigConnectorConfig::CopyFrom(const ConfigConnectorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ConfigConnectorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigConnectorConfig::IsInitialized() const {
  return true;
}

void ConfigConnectorConfig::Swap(ConfigConnectorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigConnectorConfig::InternalSwap(ConfigConnectorConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata ConfigConnectorConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MasterAuthorizedNetworksConfig_CidrBlock::InitAsDefaultInstance() {
}
class MasterAuthorizedNetworksConfig_CidrBlock::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuthorizedNetworksConfig_CidrBlock::kDisplayNameFieldNumber;
const int MasterAuthorizedNetworksConfig_CidrBlock::kCidrBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuthorizedNetworksConfig_CidrBlock::MasterAuthorizedNetworksConfig_CidrBlock()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
}
MasterAuthorizedNetworksConfig_CidrBlock::MasterAuthorizedNetworksConfig_CidrBlock(const MasterAuthorizedNetworksConfig_CidrBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cidr_block().size() > 0) {
    cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cidr_block_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
}

void MasterAuthorizedNetworksConfig_CidrBlock::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MasterAuthorizedNetworksConfig_CidrBlock::~MasterAuthorizedNetworksConfig_CidrBlock() {
  // @@protoc_insertion_point(destructor:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  SharedDtor();
}

void MasterAuthorizedNetworksConfig_CidrBlock::SharedDtor() {
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MasterAuthorizedNetworksConfig_CidrBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterAuthorizedNetworksConfig_CidrBlock& MasterAuthorizedNetworksConfig_CidrBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MasterAuthorizedNetworksConfig_CidrBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MasterAuthorizedNetworksConfig_CidrBlock::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MasterAuthorizedNetworksConfig_CidrBlock*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string display_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cidr_block = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block");
        object = msg->mutable_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MasterAuthorizedNetworksConfig_CidrBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string display_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cidr_block = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MasterAuthorizedNetworksConfig_CidrBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string display_name = 1;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->display_name(), output);
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cidr_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
}

::google::protobuf::uint8* MasterAuthorizedNetworksConfig_CidrBlock::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string display_name = 1;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->display_name(), target);
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cidr_block(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  return target;
}

size_t MasterAuthorizedNetworksConfig_CidrBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string display_name = 1;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cidr_block());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterAuthorizedNetworksConfig_CidrBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuthorizedNetworksConfig_CidrBlock* source =
      ::google::protobuf::DynamicCastToGenerated<MasterAuthorizedNetworksConfig_CidrBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
    MergeFrom(*source);
  }
}

void MasterAuthorizedNetworksConfig_CidrBlock::MergeFrom(const MasterAuthorizedNetworksConfig_CidrBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.cidr_block().size() > 0) {

    cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cidr_block_);
  }
}

void MasterAuthorizedNetworksConfig_CidrBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuthorizedNetworksConfig_CidrBlock::CopyFrom(const MasterAuthorizedNetworksConfig_CidrBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuthorizedNetworksConfig_CidrBlock::IsInitialized() const {
  return true;
}

void MasterAuthorizedNetworksConfig_CidrBlock::Swap(MasterAuthorizedNetworksConfig_CidrBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuthorizedNetworksConfig_CidrBlock::InternalSwap(MasterAuthorizedNetworksConfig_CidrBlock* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cidr_block_.Swap(&other->cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MasterAuthorizedNetworksConfig_CidrBlock::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MasterAuthorizedNetworksConfig::InitAsDefaultInstance() {
}
class MasterAuthorizedNetworksConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuthorizedNetworksConfig::kEnabledFieldNumber;
const int MasterAuthorizedNetworksConfig::kCidrBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuthorizedNetworksConfig::MasterAuthorizedNetworksConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MasterAuthorizedNetworksConfig)
}
MasterAuthorizedNetworksConfig::MasterAuthorizedNetworksConfig(const MasterAuthorizedNetworksConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      cidr_blocks_(from.cidr_blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MasterAuthorizedNetworksConfig)
}

void MasterAuthorizedNetworksConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  enabled_ = false;
}

MasterAuthorizedNetworksConfig::~MasterAuthorizedNetworksConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.MasterAuthorizedNetworksConfig)
  SharedDtor();
}

void MasterAuthorizedNetworksConfig::SharedDtor() {
}

void MasterAuthorizedNetworksConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterAuthorizedNetworksConfig& MasterAuthorizedNetworksConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MasterAuthorizedNetworksConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cidr_blocks_.Clear();
  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MasterAuthorizedNetworksConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MasterAuthorizedNetworksConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock::_InternalParse;
          object = msg->add_cidr_blocks();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MasterAuthorizedNetworksConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MasterAuthorizedNetworksConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cidr_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MasterAuthorizedNetworksConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MasterAuthorizedNetworksConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MasterAuthorizedNetworksConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cidr_blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->cidr_blocks(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MasterAuthorizedNetworksConfig)
}

::google::protobuf::uint8* MasterAuthorizedNetworksConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cidr_blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->cidr_blocks(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MasterAuthorizedNetworksConfig)
  return target;
}

size_t MasterAuthorizedNetworksConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MasterAuthorizedNetworksConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cidr_blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cidr_blocks(static_cast<int>(i)));
    }
  }

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterAuthorizedNetworksConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MasterAuthorizedNetworksConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuthorizedNetworksConfig* source =
      ::google::protobuf::DynamicCastToGenerated<MasterAuthorizedNetworksConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MasterAuthorizedNetworksConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MasterAuthorizedNetworksConfig)
    MergeFrom(*source);
  }
}

void MasterAuthorizedNetworksConfig::MergeFrom(const MasterAuthorizedNetworksConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MasterAuthorizedNetworksConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cidr_blocks_.MergeFrom(from.cidr_blocks_);
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void MasterAuthorizedNetworksConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MasterAuthorizedNetworksConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuthorizedNetworksConfig::CopyFrom(const MasterAuthorizedNetworksConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MasterAuthorizedNetworksConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuthorizedNetworksConfig::IsInitialized() const {
  return true;
}

void MasterAuthorizedNetworksConfig::Swap(MasterAuthorizedNetworksConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuthorizedNetworksConfig::InternalSwap(MasterAuthorizedNetworksConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&cidr_blocks_)->InternalSwap(CastToBase(&other->cidr_blocks_));
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata MasterAuthorizedNetworksConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LegacyAbac::InitAsDefaultInstance() {
}
class LegacyAbac::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LegacyAbac::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LegacyAbac::LegacyAbac()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.LegacyAbac)
}
LegacyAbac::LegacyAbac(const LegacyAbac& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.LegacyAbac)
}

void LegacyAbac::SharedCtor() {
  enabled_ = false;
}

LegacyAbac::~LegacyAbac() {
  // @@protoc_insertion_point(destructor:google.container.v1.LegacyAbac)
  SharedDtor();
}

void LegacyAbac::SharedDtor() {
}

void LegacyAbac::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LegacyAbac& LegacyAbac::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LegacyAbac_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LegacyAbac::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.LegacyAbac)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LegacyAbac::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LegacyAbac*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LegacyAbac::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.LegacyAbac)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.LegacyAbac)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.LegacyAbac)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LegacyAbac::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.LegacyAbac)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.LegacyAbac)
}

::google::protobuf::uint8* LegacyAbac::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.LegacyAbac)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.LegacyAbac)
  return target;
}

size_t LegacyAbac::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.LegacyAbac)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LegacyAbac::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.LegacyAbac)
  GOOGLE_DCHECK_NE(&from, this);
  const LegacyAbac* source =
      ::google::protobuf::DynamicCastToGenerated<LegacyAbac>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.LegacyAbac)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.LegacyAbac)
    MergeFrom(*source);
  }
}

void LegacyAbac::MergeFrom(const LegacyAbac& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.LegacyAbac)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void LegacyAbac::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.LegacyAbac)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LegacyAbac::CopyFrom(const LegacyAbac& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.LegacyAbac)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LegacyAbac::IsInitialized() const {
  return true;
}

void LegacyAbac::Swap(LegacyAbac* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LegacyAbac::InternalSwap(LegacyAbac* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata LegacyAbac::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NetworkPolicy::InitAsDefaultInstance() {
}
class NetworkPolicy::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkPolicy::kProviderFieldNumber;
const int NetworkPolicy::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkPolicy::NetworkPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NetworkPolicy)
}
NetworkPolicy::NetworkPolicy(const NetworkPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&provider_, &from.provider_,
    static_cast<size_t>(reinterpret_cast<char*>(&enabled_) -
    reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NetworkPolicy)
}

void NetworkPolicy::SharedCtor() {
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
}

NetworkPolicy::~NetworkPolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1.NetworkPolicy)
  SharedDtor();
}

void NetworkPolicy::SharedDtor() {
}

void NetworkPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkPolicy& NetworkPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NetworkPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NetworkPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkPolicy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NetworkPolicy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.NetworkPolicy.Provider provider = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_provider(static_cast<::google::container::v1::NetworkPolicy_Provider>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool enabled = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NetworkPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.NetworkPolicy.Provider provider = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_provider(static_cast< ::google::container::v1::NetworkPolicy_Provider >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NetworkPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NetworkPolicy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->provider(), output);
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NetworkPolicy)
}

::google::protobuf::uint8* NetworkPolicy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->provider(), target);
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NetworkPolicy)
  return target;
}

size_t NetworkPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NetworkPolicy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->provider());
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NetworkPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkPolicy* source =
      ::google::protobuf::DynamicCastToGenerated<NetworkPolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NetworkPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NetworkPolicy)
    MergeFrom(*source);
  }
}

void NetworkPolicy::MergeFrom(const NetworkPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NetworkPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.provider() != 0) {
    set_provider(from.provider());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void NetworkPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NetworkPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkPolicy::CopyFrom(const NetworkPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NetworkPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkPolicy::IsInitialized() const {
  return true;
}

void NetworkPolicy::Swap(NetworkPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkPolicy::InternalSwap(NetworkPolicy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(provider_, other->provider_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata NetworkPolicy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BinaryAuthorization::InitAsDefaultInstance() {
}
class BinaryAuthorization::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinaryAuthorization::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinaryAuthorization::BinaryAuthorization()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.BinaryAuthorization)
}
BinaryAuthorization::BinaryAuthorization(const BinaryAuthorization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.BinaryAuthorization)
}

void BinaryAuthorization::SharedCtor() {
  enabled_ = false;
}

BinaryAuthorization::~BinaryAuthorization() {
  // @@protoc_insertion_point(destructor:google.container.v1.BinaryAuthorization)
  SharedDtor();
}

void BinaryAuthorization::SharedDtor() {
}

void BinaryAuthorization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BinaryAuthorization& BinaryAuthorization::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BinaryAuthorization_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void BinaryAuthorization::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.BinaryAuthorization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BinaryAuthorization::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BinaryAuthorization*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BinaryAuthorization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.BinaryAuthorization)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.BinaryAuthorization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.BinaryAuthorization)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BinaryAuthorization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.BinaryAuthorization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.BinaryAuthorization)
}

::google::protobuf::uint8* BinaryAuthorization::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.BinaryAuthorization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.BinaryAuthorization)
  return target;
}

size_t BinaryAuthorization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.BinaryAuthorization)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BinaryAuthorization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.BinaryAuthorization)
  GOOGLE_DCHECK_NE(&from, this);
  const BinaryAuthorization* source =
      ::google::protobuf::DynamicCastToGenerated<BinaryAuthorization>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.BinaryAuthorization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.BinaryAuthorization)
    MergeFrom(*source);
  }
}

void BinaryAuthorization::MergeFrom(const BinaryAuthorization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.BinaryAuthorization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void BinaryAuthorization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.BinaryAuthorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryAuthorization::CopyFrom(const BinaryAuthorization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.BinaryAuthorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinaryAuthorization::IsInitialized() const {
  return true;
}

void BinaryAuthorization::Swap(BinaryAuthorization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinaryAuthorization::InternalSwap(BinaryAuthorization* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata BinaryAuthorization::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IPAllocationPolicy::InitAsDefaultInstance() {
}
class IPAllocationPolicy::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IPAllocationPolicy::kUseIpAliasesFieldNumber;
const int IPAllocationPolicy::kCreateSubnetworkFieldNumber;
const int IPAllocationPolicy::kSubnetworkNameFieldNumber;
const int IPAllocationPolicy::kClusterIpv4CidrFieldNumber;
const int IPAllocationPolicy::kNodeIpv4CidrFieldNumber;
const int IPAllocationPolicy::kServicesIpv4CidrFieldNumber;
const int IPAllocationPolicy::kClusterSecondaryRangeNameFieldNumber;
const int IPAllocationPolicy::kServicesSecondaryRangeNameFieldNumber;
const int IPAllocationPolicy::kClusterIpv4CidrBlockFieldNumber;
const int IPAllocationPolicy::kNodeIpv4CidrBlockFieldNumber;
const int IPAllocationPolicy::kServicesIpv4CidrBlockFieldNumber;
const int IPAllocationPolicy::kTpuIpv4CidrBlockFieldNumber;
const int IPAllocationPolicy::kUseRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IPAllocationPolicy::IPAllocationPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.IPAllocationPolicy)
}
IPAllocationPolicy::IPAllocationPolicy(const IPAllocationPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subnetwork_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork_name().size() > 0) {
    subnetwork_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_name_);
  }
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr().size() > 0) {
    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  node_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_ipv4_cidr().size() > 0) {
    node_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_);
  }
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr().size() > 0) {
    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  cluster_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_secondary_range_name().size() > 0) {
    cluster_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_secondary_range_name_);
  }
  services_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_secondary_range_name().size() > 0) {
    services_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_secondary_range_name_);
  }
  cluster_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr_block().size() > 0) {
    cluster_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_block_);
  }
  node_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_ipv4_cidr_block().size() > 0) {
    node_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_block_);
  }
  services_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr_block().size() > 0) {
    services_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_block_);
  }
  tpu_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tpu_ipv4_cidr_block().size() > 0) {
    tpu_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tpu_ipv4_cidr_block_);
  }
  ::memcpy(&use_ip_aliases_, &from.use_ip_aliases_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_routes_) -
    reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(use_routes_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.IPAllocationPolicy)
}

void IPAllocationPolicy::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IPAllocationPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  subnetwork_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tpu_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_ip_aliases_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_routes_) -
      reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(use_routes_));
}

IPAllocationPolicy::~IPAllocationPolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1.IPAllocationPolicy)
  SharedDtor();
}

void IPAllocationPolicy::SharedDtor() {
  subnetwork_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tpu_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IPAllocationPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IPAllocationPolicy& IPAllocationPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IPAllocationPolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void IPAllocationPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnetwork_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tpu_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_ip_aliases_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_routes_) -
      reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(use_routes_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IPAllocationPolicy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IPAllocationPolicy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool use_ip_aliases = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_use_ip_aliases(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool create_subnetwork = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_create_subnetwork(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string subnetwork_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.subnetwork_name");
        object = msg->mutable_subnetwork_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_ipv4_cidr = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr");
        object = msg->mutable_cluster_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_ipv4_cidr = 5 [deprecated = true];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.node_ipv4_cidr");
        object = msg->mutable_node_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string services_ipv4_cidr = 6 [deprecated = true];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.services_ipv4_cidr");
        object = msg->mutable_services_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_secondary_range_name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.cluster_secondary_range_name");
        object = msg->mutable_cluster_secondary_range_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string services_secondary_range_name = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.services_secondary_range_name");
        object = msg->mutable_services_secondary_range_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_ipv4_cidr_block = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr_block");
        object = msg->mutable_cluster_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_ipv4_cidr_block = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.node_ipv4_cidr_block");
        object = msg->mutable_node_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string services_ipv4_cidr_block = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.services_ipv4_cidr_block");
        object = msg->mutable_services_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string tpu_ipv4_cidr_block = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.IPAllocationPolicy.tpu_ipv4_cidr_block");
        object = msg->mutable_tpu_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool use_routes = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        msg->set_use_routes(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IPAllocationPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.IPAllocationPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool use_ip_aliases = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_ip_aliases_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool create_subnetwork = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_subnetwork_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subnetwork_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.subnetwork_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_ipv4_cidr = 5 [deprecated = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.node_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr = 6 [deprecated = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.services_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_secondary_range_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_secondary_range_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.cluster_secondary_range_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_secondary_range_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_secondary_range_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.services_secondary_range_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr_block = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_ipv4_cidr_block = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.node_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr_block = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.services_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tpu_ipv4_cidr_block = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tpu_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tpu_ipv4_cidr_block().data(), static_cast<int>(this->tpu_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.tpu_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_routes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_routes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.IPAllocationPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.IPAllocationPolicy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IPAllocationPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_ip_aliases(), output);
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->create_subnetwork(), output);
  }

  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.subnetwork_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->subnetwork_name(), output);
  }

  // string cluster_ipv4_cidr = 4 [deprecated = true];
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cluster_ipv4_cidr(), output);
  }

  // string node_ipv4_cidr = 5 [deprecated = true];
  if (this->node_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.node_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->node_ipv4_cidr(), output);
  }

  // string services_ipv4_cidr = 6 [deprecated = true];
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->services_ipv4_cidr(), output);
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_secondary_range_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cluster_secondary_range_name(), output);
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_secondary_range_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->services_secondary_range_name(), output);
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cluster_ipv4_cidr_block(), output);
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.node_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->node_ipv4_cidr_block(), output);
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->services_ipv4_cidr_block(), output);
  }

  // string tpu_ipv4_cidr_block = 13;
  if (this->tpu_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tpu_ipv4_cidr_block().data(), static_cast<int>(this->tpu_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.tpu_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->tpu_ipv4_cidr_block(), output);
  }

  // bool use_routes = 15;
  if (this->use_routes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->use_routes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.IPAllocationPolicy)
}

::google::protobuf::uint8* IPAllocationPolicy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_ip_aliases(), target);
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->create_subnetwork(), target);
  }

  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.subnetwork_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->subnetwork_name(), target);
  }

  // string cluster_ipv4_cidr = 4 [deprecated = true];
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cluster_ipv4_cidr(), target);
  }

  // string node_ipv4_cidr = 5 [deprecated = true];
  if (this->node_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.node_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->node_ipv4_cidr(), target);
  }

  // string services_ipv4_cidr = 6 [deprecated = true];
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->services_ipv4_cidr(), target);
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_secondary_range_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cluster_secondary_range_name(), target);
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_secondary_range_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->services_secondary_range_name(), target);
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cluster_ipv4_cidr_block(), target);
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.node_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->node_ipv4_cidr_block(), target);
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->services_ipv4_cidr_block(), target);
  }

  // string tpu_ipv4_cidr_block = 13;
  if (this->tpu_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tpu_ipv4_cidr_block().data(), static_cast<int>(this->tpu_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.tpu_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->tpu_ipv4_cidr_block(), target);
  }

  // bool use_routes = 15;
  if (this->use_routes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->use_routes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.IPAllocationPolicy)
  return target;
}

size_t IPAllocationPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.IPAllocationPolicy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork_name());
  }

  // string cluster_ipv4_cidr = 4 [deprecated = true];
  if (this->cluster_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr());
  }

  // string node_ipv4_cidr = 5 [deprecated = true];
  if (this->node_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_ipv4_cidr());
  }

  // string services_ipv4_cidr = 6 [deprecated = true];
  if (this->services_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr());
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_secondary_range_name());
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_secondary_range_name());
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr_block());
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_ipv4_cidr_block());
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr_block());
  }

  // string tpu_ipv4_cidr_block = 13;
  if (this->tpu_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tpu_ipv4_cidr_block());
  }

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    total_size += 1 + 1;
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    total_size += 1 + 1;
  }

  // bool use_routes = 15;
  if (this->use_routes() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IPAllocationPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.IPAllocationPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const IPAllocationPolicy* source =
      ::google::protobuf::DynamicCastToGenerated<IPAllocationPolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.IPAllocationPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.IPAllocationPolicy)
    MergeFrom(*source);
  }
}

void IPAllocationPolicy::MergeFrom(const IPAllocationPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.IPAllocationPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subnetwork_name().size() > 0) {

    subnetwork_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_name_);
  }
  if (from.cluster_ipv4_cidr().size() > 0) {

    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  if (from.node_ipv4_cidr().size() > 0) {

    node_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_);
  }
  if (from.services_ipv4_cidr().size() > 0) {

    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  if (from.cluster_secondary_range_name().size() > 0) {

    cluster_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_secondary_range_name_);
  }
  if (from.services_secondary_range_name().size() > 0) {

    services_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_secondary_range_name_);
  }
  if (from.cluster_ipv4_cidr_block().size() > 0) {

    cluster_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_block_);
  }
  if (from.node_ipv4_cidr_block().size() > 0) {

    node_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_block_);
  }
  if (from.services_ipv4_cidr_block().size() > 0) {

    services_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_block_);
  }
  if (from.tpu_ipv4_cidr_block().size() > 0) {

    tpu_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tpu_ipv4_cidr_block_);
  }
  if (from.use_ip_aliases() != 0) {
    set_use_ip_aliases(from.use_ip_aliases());
  }
  if (from.create_subnetwork() != 0) {
    set_create_subnetwork(from.create_subnetwork());
  }
  if (from.use_routes() != 0) {
    set_use_routes(from.use_routes());
  }
}

void IPAllocationPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.IPAllocationPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IPAllocationPolicy::CopyFrom(const IPAllocationPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.IPAllocationPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IPAllocationPolicy::IsInitialized() const {
  return true;
}

void IPAllocationPolicy::Swap(IPAllocationPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IPAllocationPolicy::InternalSwap(IPAllocationPolicy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  subnetwork_name_.Swap(&other->subnetwork_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_ipv4_cidr_.Swap(&other->cluster_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_ipv4_cidr_.Swap(&other->node_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  services_ipv4_cidr_.Swap(&other->services_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_secondary_range_name_.Swap(&other->cluster_secondary_range_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  services_secondary_range_name_.Swap(&other->services_secondary_range_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_ipv4_cidr_block_.Swap(&other->cluster_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_ipv4_cidr_block_.Swap(&other->node_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  services_ipv4_cidr_block_.Swap(&other->services_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tpu_ipv4_cidr_block_.Swap(&other->tpu_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(use_ip_aliases_, other->use_ip_aliases_);
  swap(create_subnetwork_, other->create_subnetwork_);
  swap(use_routes_, other->use_routes_);
}

::google::protobuf::Metadata IPAllocationPolicy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

Cluster_ResourceLabelsEntry_DoNotUse::Cluster_ResourceLabelsEntry_DoNotUse() {}
Cluster_ResourceLabelsEntry_DoNotUse::Cluster_ResourceLabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Cluster_ResourceLabelsEntry_DoNotUse::MergeFrom(const Cluster_ResourceLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Cluster_ResourceLabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[26];
}
void Cluster_ResourceLabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Cluster_ResourceLabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      Cluster_ResourceLabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.Cluster.ResourceLabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.Cluster.ResourceLabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void Cluster::InitAsDefaultInstance() {
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->node_config_ = const_cast< ::google::container::v1::NodeConfig*>(
      ::google::container::v1::NodeConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->master_auth_ = const_cast< ::google::container::v1::MasterAuth*>(
      ::google::container::v1::MasterAuth::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->addons_config_ = const_cast< ::google::container::v1::AddonsConfig*>(
      ::google::container::v1::AddonsConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->legacy_abac_ = const_cast< ::google::container::v1::LegacyAbac*>(
      ::google::container::v1::LegacyAbac::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->network_policy_ = const_cast< ::google::container::v1::NetworkPolicy*>(
      ::google::container::v1::NetworkPolicy::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->ip_allocation_policy_ = const_cast< ::google::container::v1::IPAllocationPolicy*>(
      ::google::container::v1::IPAllocationPolicy::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->master_authorized_networks_config_ = const_cast< ::google::container::v1::MasterAuthorizedNetworksConfig*>(
      ::google::container::v1::MasterAuthorizedNetworksConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->maintenance_policy_ = const_cast< ::google::container::v1::MaintenancePolicy*>(
      ::google::container::v1::MaintenancePolicy::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->binary_authorization_ = const_cast< ::google::container::v1::BinaryAuthorization*>(
      ::google::container::v1::BinaryAuthorization::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->autoscaling_ = const_cast< ::google::container::v1::ClusterAutoscaling*>(
      ::google::container::v1::ClusterAutoscaling::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->network_config_ = const_cast< ::google::container::v1::NetworkConfig*>(
      ::google::container::v1::NetworkConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->default_max_pods_constraint_ = const_cast< ::google::container::v1::MaxPodsConstraint*>(
      ::google::container::v1::MaxPodsConstraint::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->resource_usage_export_config_ = const_cast< ::google::container::v1::ResourceUsageExportConfig*>(
      ::google::container::v1::ResourceUsageExportConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->authenticator_groups_config_ = const_cast< ::google::container::v1::AuthenticatorGroupsConfig*>(
      ::google::container::v1::AuthenticatorGroupsConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->private_cluster_config_ = const_cast< ::google::container::v1::PrivateClusterConfig*>(
      ::google::container::v1::PrivateClusterConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->database_encryption_ = const_cast< ::google::container::v1::DatabaseEncryption*>(
      ::google::container::v1::DatabaseEncryption::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->vertical_pod_autoscaling_ = const_cast< ::google::container::v1::VerticalPodAutoscaling*>(
      ::google::container::v1::VerticalPodAutoscaling::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->shielded_nodes_ = const_cast< ::google::container::v1::ShieldedNodes*>(
      ::google::container::v1::ShieldedNodes::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->release_channel_ = const_cast< ::google::container::v1::ReleaseChannel*>(
      ::google::container::v1::ReleaseChannel::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->workload_identity_config_ = const_cast< ::google::container::v1::WorkloadIdentityConfig*>(
      ::google::container::v1::WorkloadIdentityConfig::internal_default_instance());
}
class Cluster::HasBitSetters {
 public:
  static const ::google::container::v1::NodeConfig& node_config(const Cluster* msg);
  static const ::google::container::v1::MasterAuth& master_auth(const Cluster* msg);
  static const ::google::container::v1::AddonsConfig& addons_config(const Cluster* msg);
  static const ::google::container::v1::LegacyAbac& legacy_abac(const Cluster* msg);
  static const ::google::container::v1::NetworkPolicy& network_policy(const Cluster* msg);
  static const ::google::container::v1::IPAllocationPolicy& ip_allocation_policy(const Cluster* msg);
  static const ::google::container::v1::MasterAuthorizedNetworksConfig& master_authorized_networks_config(const Cluster* msg);
  static const ::google::container::v1::MaintenancePolicy& maintenance_policy(const Cluster* msg);
  static const ::google::container::v1::BinaryAuthorization& binary_authorization(const Cluster* msg);
  static const ::google::container::v1::ClusterAutoscaling& autoscaling(const Cluster* msg);
  static const ::google::container::v1::NetworkConfig& network_config(const Cluster* msg);
  static const ::google::container::v1::MaxPodsConstraint& default_max_pods_constraint(const Cluster* msg);
  static const ::google::container::v1::ResourceUsageExportConfig& resource_usage_export_config(const Cluster* msg);
  static const ::google::container::v1::AuthenticatorGroupsConfig& authenticator_groups_config(const Cluster* msg);
  static const ::google::container::v1::PrivateClusterConfig& private_cluster_config(const Cluster* msg);
  static const ::google::container::v1::DatabaseEncryption& database_encryption(const Cluster* msg);
  static const ::google::container::v1::VerticalPodAutoscaling& vertical_pod_autoscaling(const Cluster* msg);
  static const ::google::container::v1::ShieldedNodes& shielded_nodes(const Cluster* msg);
  static const ::google::container::v1::ReleaseChannel& release_channel(const Cluster* msg);
  static const ::google::container::v1::WorkloadIdentityConfig& workload_identity_config(const Cluster* msg);
};

const ::google::container::v1::NodeConfig&
Cluster::HasBitSetters::node_config(const Cluster* msg) {
  return *msg->node_config_;
}
const ::google::container::v1::MasterAuth&
Cluster::HasBitSetters::master_auth(const Cluster* msg) {
  return *msg->master_auth_;
}
const ::google::container::v1::AddonsConfig&
Cluster::HasBitSetters::addons_config(const Cluster* msg) {
  return *msg->addons_config_;
}
const ::google::container::v1::LegacyAbac&
Cluster::HasBitSetters::legacy_abac(const Cluster* msg) {
  return *msg->legacy_abac_;
}
const ::google::container::v1::NetworkPolicy&
Cluster::HasBitSetters::network_policy(const Cluster* msg) {
  return *msg->network_policy_;
}
const ::google::container::v1::IPAllocationPolicy&
Cluster::HasBitSetters::ip_allocation_policy(const Cluster* msg) {
  return *msg->ip_allocation_policy_;
}
const ::google::container::v1::MasterAuthorizedNetworksConfig&
Cluster::HasBitSetters::master_authorized_networks_config(const Cluster* msg) {
  return *msg->master_authorized_networks_config_;
}
const ::google::container::v1::MaintenancePolicy&
Cluster::HasBitSetters::maintenance_policy(const Cluster* msg) {
  return *msg->maintenance_policy_;
}
const ::google::container::v1::BinaryAuthorization&
Cluster::HasBitSetters::binary_authorization(const Cluster* msg) {
  return *msg->binary_authorization_;
}
const ::google::container::v1::ClusterAutoscaling&
Cluster::HasBitSetters::autoscaling(const Cluster* msg) {
  return *msg->autoscaling_;
}
const ::google::container::v1::NetworkConfig&
Cluster::HasBitSetters::network_config(const Cluster* msg) {
  return *msg->network_config_;
}
const ::google::container::v1::MaxPodsConstraint&
Cluster::HasBitSetters::default_max_pods_constraint(const Cluster* msg) {
  return *msg->default_max_pods_constraint_;
}
const ::google::container::v1::ResourceUsageExportConfig&
Cluster::HasBitSetters::resource_usage_export_config(const Cluster* msg) {
  return *msg->resource_usage_export_config_;
}
const ::google::container::v1::AuthenticatorGroupsConfig&
Cluster::HasBitSetters::authenticator_groups_config(const Cluster* msg) {
  return *msg->authenticator_groups_config_;
}
const ::google::container::v1::PrivateClusterConfig&
Cluster::HasBitSetters::private_cluster_config(const Cluster* msg) {
  return *msg->private_cluster_config_;
}
const ::google::container::v1::DatabaseEncryption&
Cluster::HasBitSetters::database_encryption(const Cluster* msg) {
  return *msg->database_encryption_;
}
const ::google::container::v1::VerticalPodAutoscaling&
Cluster::HasBitSetters::vertical_pod_autoscaling(const Cluster* msg) {
  return *msg->vertical_pod_autoscaling_;
}
const ::google::container::v1::ShieldedNodes&
Cluster::HasBitSetters::shielded_nodes(const Cluster* msg) {
  return *msg->shielded_nodes_;
}
const ::google::container::v1::ReleaseChannel&
Cluster::HasBitSetters::release_channel(const Cluster* msg) {
  return *msg->release_channel_;
}
const ::google::container::v1::WorkloadIdentityConfig&
Cluster::HasBitSetters::workload_identity_config(const Cluster* msg) {
  return *msg->workload_identity_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster::kNameFieldNumber;
const int Cluster::kDescriptionFieldNumber;
const int Cluster::kInitialNodeCountFieldNumber;
const int Cluster::kNodeConfigFieldNumber;
const int Cluster::kMasterAuthFieldNumber;
const int Cluster::kLoggingServiceFieldNumber;
const int Cluster::kMonitoringServiceFieldNumber;
const int Cluster::kNetworkFieldNumber;
const int Cluster::kClusterIpv4CidrFieldNumber;
const int Cluster::kAddonsConfigFieldNumber;
const int Cluster::kSubnetworkFieldNumber;
const int Cluster::kNodePoolsFieldNumber;
const int Cluster::kLocationsFieldNumber;
const int Cluster::kEnableKubernetesAlphaFieldNumber;
const int Cluster::kResourceLabelsFieldNumber;
const int Cluster::kLabelFingerprintFieldNumber;
const int Cluster::kLegacyAbacFieldNumber;
const int Cluster::kNetworkPolicyFieldNumber;
const int Cluster::kIpAllocationPolicyFieldNumber;
const int Cluster::kMasterAuthorizedNetworksConfigFieldNumber;
const int Cluster::kMaintenancePolicyFieldNumber;
const int Cluster::kBinaryAuthorizationFieldNumber;
const int Cluster::kAutoscalingFieldNumber;
const int Cluster::kNetworkConfigFieldNumber;
const int Cluster::kDefaultMaxPodsConstraintFieldNumber;
const int Cluster::kResourceUsageExportConfigFieldNumber;
const int Cluster::kAuthenticatorGroupsConfigFieldNumber;
const int Cluster::kPrivateClusterConfigFieldNumber;
const int Cluster::kDatabaseEncryptionFieldNumber;
const int Cluster::kVerticalPodAutoscalingFieldNumber;
const int Cluster::kShieldedNodesFieldNumber;
const int Cluster::kReleaseChannelFieldNumber;
const int Cluster::kWorkloadIdentityConfigFieldNumber;
const int Cluster::kSelfLinkFieldNumber;
const int Cluster::kZoneFieldNumber;
const int Cluster::kEndpointFieldNumber;
const int Cluster::kInitialClusterVersionFieldNumber;
const int Cluster::kCurrentMasterVersionFieldNumber;
const int Cluster::kCurrentNodeVersionFieldNumber;
const int Cluster::kCreateTimeFieldNumber;
const int Cluster::kStatusFieldNumber;
const int Cluster::kStatusMessageFieldNumber;
const int Cluster::kNodeIpv4CidrSizeFieldNumber;
const int Cluster::kServicesIpv4CidrFieldNumber;
const int Cluster::kInstanceGroupUrlsFieldNumber;
const int Cluster::kCurrentNodeCountFieldNumber;
const int Cluster::kExpireTimeFieldNumber;
const int Cluster::kLocationFieldNumber;
const int Cluster::kEnableTpuFieldNumber;
const int Cluster::kTpuIpv4CidrBlockFieldNumber;
const int Cluster::kConditionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster::Cluster()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.Cluster)
}
Cluster::Cluster(const Cluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      node_pools_(from.node_pools_),
      locations_(from.locations_),
      instance_group_urls_(from.instance_group_urls_),
      conditions_(from.conditions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_labels_.MergeFrom(from.resource_labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logging_service().size() > 0) {
    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.monitoring_service().size() > 0) {
    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.network().size() > 0) {
    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr().size() > 0) {
    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork().size() > 0) {
    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label_fingerprint().size() > 0) {
    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.endpoint().size() > 0) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  initial_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.initial_cluster_version().size() > 0) {
    initial_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_cluster_version_);
  }
  current_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_master_version().size() > 0) {
    current_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_master_version_);
  }
  current_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_node_version().size() > 0) {
    current_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_node_version_);
  }
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.create_time().size() > 0) {
    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr().size() > 0) {
    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  expire_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expire_time().size() > 0) {
    expire_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expire_time_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  tpu_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tpu_ipv4_cidr_block().size() > 0) {
    tpu_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tpu_ipv4_cidr_block_);
  }
  if (from.has_node_config()) {
    node_config_ = new ::google::container::v1::NodeConfig(*from.node_config_);
  } else {
    node_config_ = nullptr;
  }
  if (from.has_master_auth()) {
    master_auth_ = new ::google::container::v1::MasterAuth(*from.master_auth_);
  } else {
    master_auth_ = nullptr;
  }
  if (from.has_addons_config()) {
    addons_config_ = new ::google::container::v1::AddonsConfig(*from.addons_config_);
  } else {
    addons_config_ = nullptr;
  }
  if (from.has_legacy_abac()) {
    legacy_abac_ = new ::google::container::v1::LegacyAbac(*from.legacy_abac_);
  } else {
    legacy_abac_ = nullptr;
  }
  if (from.has_network_policy()) {
    network_policy_ = new ::google::container::v1::NetworkPolicy(*from.network_policy_);
  } else {
    network_policy_ = nullptr;
  }
  if (from.has_ip_allocation_policy()) {
    ip_allocation_policy_ = new ::google::container::v1::IPAllocationPolicy(*from.ip_allocation_policy_);
  } else {
    ip_allocation_policy_ = nullptr;
  }
  if (from.has_master_authorized_networks_config()) {
    master_authorized_networks_config_ = new ::google::container::v1::MasterAuthorizedNetworksConfig(*from.master_authorized_networks_config_);
  } else {
    master_authorized_networks_config_ = nullptr;
  }
  if (from.has_maintenance_policy()) {
    maintenance_policy_ = new ::google::container::v1::MaintenancePolicy(*from.maintenance_policy_);
  } else {
    maintenance_policy_ = nullptr;
  }
  if (from.has_binary_authorization()) {
    binary_authorization_ = new ::google::container::v1::BinaryAuthorization(*from.binary_authorization_);
  } else {
    binary_authorization_ = nullptr;
  }
  if (from.has_autoscaling()) {
    autoscaling_ = new ::google::container::v1::ClusterAutoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  if (from.has_network_config()) {
    network_config_ = new ::google::container::v1::NetworkConfig(*from.network_config_);
  } else {
    network_config_ = nullptr;
  }
  if (from.has_default_max_pods_constraint()) {
    default_max_pods_constraint_ = new ::google::container::v1::MaxPodsConstraint(*from.default_max_pods_constraint_);
  } else {
    default_max_pods_constraint_ = nullptr;
  }
  if (from.has_resource_usage_export_config()) {
    resource_usage_export_config_ = new ::google::container::v1::ResourceUsageExportConfig(*from.resource_usage_export_config_);
  } else {
    resource_usage_export_config_ = nullptr;
  }
  if (from.has_authenticator_groups_config()) {
    authenticator_groups_config_ = new ::google::container::v1::AuthenticatorGroupsConfig(*from.authenticator_groups_config_);
  } else {
    authenticator_groups_config_ = nullptr;
  }
  if (from.has_private_cluster_config()) {
    private_cluster_config_ = new ::google::container::v1::PrivateClusterConfig(*from.private_cluster_config_);
  } else {
    private_cluster_config_ = nullptr;
  }
  if (from.has_database_encryption()) {
    database_encryption_ = new ::google::container::v1::DatabaseEncryption(*from.database_encryption_);
  } else {
    database_encryption_ = nullptr;
  }
  if (from.has_vertical_pod_autoscaling()) {
    vertical_pod_autoscaling_ = new ::google::container::v1::VerticalPodAutoscaling(*from.vertical_pod_autoscaling_);
  } else {
    vertical_pod_autoscaling_ = nullptr;
  }
  if (from.has_shielded_nodes()) {
    shielded_nodes_ = new ::google::container::v1::ShieldedNodes(*from.shielded_nodes_);
  } else {
    shielded_nodes_ = nullptr;
  }
  if (from.has_release_channel()) {
    release_channel_ = new ::google::container::v1::ReleaseChannel(*from.release_channel_);
  } else {
    release_channel_ = nullptr;
  }
  if (from.has_workload_identity_config()) {
    workload_identity_config_ = new ::google::container::v1::WorkloadIdentityConfig(*from.workload_identity_config_);
  } else {
    workload_identity_config_ = nullptr;
  }
  ::memcpy(&initial_node_count_, &from.initial_node_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
    reinterpret_cast<char*>(&initial_node_count_)) + sizeof(node_ipv4_cidr_size_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.Cluster)
}

void Cluster::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Cluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tpu_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
      reinterpret_cast<char*>(&node_config_)) + sizeof(node_ipv4_cidr_size_));
}

Cluster::~Cluster() {
  // @@protoc_insertion_point(destructor:google.container.v1.Cluster)
  SharedDtor();
}

void Cluster::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tpu_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_config_;
  if (this != internal_default_instance()) delete master_auth_;
  if (this != internal_default_instance()) delete addons_config_;
  if (this != internal_default_instance()) delete legacy_abac_;
  if (this != internal_default_instance()) delete network_policy_;
  if (this != internal_default_instance()) delete ip_allocation_policy_;
  if (this != internal_default_instance()) delete master_authorized_networks_config_;
  if (this != internal_default_instance()) delete maintenance_policy_;
  if (this != internal_default_instance()) delete binary_authorization_;
  if (this != internal_default_instance()) delete autoscaling_;
  if (this != internal_default_instance()) delete network_config_;
  if (this != internal_default_instance()) delete default_max_pods_constraint_;
  if (this != internal_default_instance()) delete resource_usage_export_config_;
  if (this != internal_default_instance()) delete authenticator_groups_config_;
  if (this != internal_default_instance()) delete private_cluster_config_;
  if (this != internal_default_instance()) delete database_encryption_;
  if (this != internal_default_instance()) delete vertical_pod_autoscaling_;
  if (this != internal_default_instance()) delete shielded_nodes_;
  if (this != internal_default_instance()) delete release_channel_;
  if (this != internal_default_instance()) delete workload_identity_config_;
}

void Cluster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cluster& Cluster::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Cluster_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_pools_.Clear();
  locations_.Clear();
  resource_labels_.Clear();
  instance_group_urls_.Clear();
  conditions_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tpu_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && node_config_ != nullptr) {
    delete node_config_;
  }
  node_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && master_auth_ != nullptr) {
    delete master_auth_;
  }
  master_auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && addons_config_ != nullptr) {
    delete addons_config_;
  }
  addons_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && legacy_abac_ != nullptr) {
    delete legacy_abac_;
  }
  legacy_abac_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && network_policy_ != nullptr) {
    delete network_policy_;
  }
  network_policy_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && ip_allocation_policy_ != nullptr) {
    delete ip_allocation_policy_;
  }
  ip_allocation_policy_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && master_authorized_networks_config_ != nullptr) {
    delete master_authorized_networks_config_;
  }
  master_authorized_networks_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && maintenance_policy_ != nullptr) {
    delete maintenance_policy_;
  }
  maintenance_policy_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && binary_authorization_ != nullptr) {
    delete binary_authorization_;
  }
  binary_authorization_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && network_config_ != nullptr) {
    delete network_config_;
  }
  network_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && default_max_pods_constraint_ != nullptr) {
    delete default_max_pods_constraint_;
  }
  default_max_pods_constraint_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resource_usage_export_config_ != nullptr) {
    delete resource_usage_export_config_;
  }
  resource_usage_export_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && authenticator_groups_config_ != nullptr) {
    delete authenticator_groups_config_;
  }
  authenticator_groups_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && private_cluster_config_ != nullptr) {
    delete private_cluster_config_;
  }
  private_cluster_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && database_encryption_ != nullptr) {
    delete database_encryption_;
  }
  database_encryption_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && vertical_pod_autoscaling_ != nullptr) {
    delete vertical_pod_autoscaling_;
  }
  vertical_pod_autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && shielded_nodes_ != nullptr) {
    delete shielded_nodes_;
  }
  shielded_nodes_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && release_channel_ != nullptr) {
    delete release_channel_;
  }
  release_channel_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && workload_identity_config_ != nullptr) {
    delete workload_identity_config_;
  }
  workload_identity_config_ = nullptr;
  ::memset(&initial_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
      reinterpret_cast<char*>(&initial_node_count_)) + sizeof(node_ipv4_cidr_size_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Cluster::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Cluster*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 initial_node_count = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_initial_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1.NodeConfig node_config = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodeConfig::_InternalParse;
        object = msg->mutable_node_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.MasterAuth master_auth = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MasterAuth::_InternalParse;
        object = msg->mutable_master_auth();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string logging_service = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.logging_service");
        object = msg->mutable_logging_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string monitoring_service = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.monitoring_service");
        object = msg->mutable_monitoring_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string network = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.network");
        object = msg->mutable_network();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_ipv4_cidr = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.cluster_ipv4_cidr");
        object = msg->mutable_cluster_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.AddonsConfig addons_config = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::AddonsConfig::_InternalParse;
        object = msg->mutable_addons_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string subnetwork = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.subnetwork");
        object = msg->mutable_subnetwork();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .google.container.v1.NodePool node_pools = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::NodePool::_InternalParse;
          object = msg->add_node_pools();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 98 && (ptr += 1));
        break;
      }
      // repeated string locations = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.locations");
          object = msg->add_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 106 && (ptr += 1));
        break;
      }
      // bool enable_kubernetes_alpha = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_enable_kubernetes_alpha(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, string> resource_labels = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->resource_labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 122 && (ptr += 1));
        break;
      }
      // string label_fingerprint = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.label_fingerprint");
        object = msg->mutable_label_fingerprint();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.LegacyAbac legacy_abac = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::LegacyAbac::_InternalParse;
        object = msg->mutable_legacy_abac();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.NetworkPolicy network_policy = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NetworkPolicy::_InternalParse;
        object = msg->mutable_network_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::IPAllocationPolicy::_InternalParse;
        object = msg->mutable_ip_allocation_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MasterAuthorizedNetworksConfig::_InternalParse;
        object = msg->mutable_master_authorized_networks_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MaintenancePolicy::_InternalParse;
        object = msg->mutable_maintenance_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.BinaryAuthorization binary_authorization = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 194) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::BinaryAuthorization::_InternalParse;
        object = msg->mutable_binary_authorization();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ClusterAutoscaling autoscaling = 26;
      case 26: {
        if (static_cast<::google::protobuf::uint8>(tag) != 210) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ClusterAutoscaling::_InternalParse;
        object = msg->mutable_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.NetworkConfig network_config = 27;
      case 27: {
        if (static_cast<::google::protobuf::uint8>(tag) != 218) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NetworkConfig::_InternalParse;
        object = msg->mutable_network_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.MaxPodsConstraint default_max_pods_constraint = 30;
      case 30: {
        if (static_cast<::google::protobuf::uint8>(tag) != 242) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MaxPodsConstraint::_InternalParse;
        object = msg->mutable_default_max_pods_constraint();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ResourceUsageExportConfig resource_usage_export_config = 33;
      case 33: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ResourceUsageExportConfig::_InternalParse;
        object = msg->mutable_resource_usage_export_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.AuthenticatorGroupsConfig authenticator_groups_config = 34;
      case 34: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::AuthenticatorGroupsConfig::_InternalParse;
        object = msg->mutable_authenticator_groups_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.PrivateClusterConfig private_cluster_config = 37;
      case 37: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::PrivateClusterConfig::_InternalParse;
        object = msg->mutable_private_cluster_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.DatabaseEncryption database_encryption = 38;
      case 38: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::DatabaseEncryption::_InternalParse;
        object = msg->mutable_database_encryption();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.VerticalPodAutoscaling vertical_pod_autoscaling = 39;
      case 39: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::VerticalPodAutoscaling::_InternalParse;
        object = msg->mutable_vertical_pod_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ShieldedNodes shielded_nodes = 40;
      case 40: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ShieldedNodes::_InternalParse;
        object = msg->mutable_shielded_nodes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ReleaseChannel release_channel = 41;
      case 41: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ReleaseChannel::_InternalParse;
        object = msg->mutable_release_channel();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.WorkloadIdentityConfig workload_identity_config = 43;
      case 43: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::WorkloadIdentityConfig::_InternalParse;
        object = msg->mutable_workload_identity_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string self_link = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.self_link");
        object = msg->mutable_self_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 101 [deprecated = true];
      case 101: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string endpoint = 102;
      case 102: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.endpoint");
        object = msg->mutable_endpoint();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string initial_cluster_version = 103;
      case 103: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.initial_cluster_version");
        object = msg->mutable_initial_cluster_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string current_master_version = 104;
      case 104: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.current_master_version");
        object = msg->mutable_current_master_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string current_node_version = 105 [deprecated = true];
      case 105: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.current_node_version");
        object = msg->mutable_current_node_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string create_time = 106;
      case 106: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.create_time");
        object = msg->mutable_create_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.Cluster.Status status = 107;
      case 107: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::container::v1::Cluster_Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string status_message = 108 [deprecated = true];
      case 108: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.status_message");
        object = msg->mutable_status_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 node_ipv4_cidr_size = 109;
      case 109: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_node_ipv4_cidr_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string services_ipv4_cidr = 110;
      case 110: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.services_ipv4_cidr");
        object = msg->mutable_services_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string instance_group_urls = 111 [deprecated = true];
      case 111: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.instance_group_urls");
          object = msg->add_instance_group_urls();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 1786 && (ptr += 2));
        break;
      }
      // int32 current_node_count = 112 [deprecated = true];
      case 112: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_current_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string expire_time = 113;
      case 113: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.expire_time");
        object = msg->mutable_expire_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string location = 114;
      case 114: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.location");
        object = msg->mutable_location();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool enable_tpu = 115;
      case 115: {
        if (static_cast<::google::protobuf::uint8>(tag) != 152) goto handle_unusual;
        msg->set_enable_tpu(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string tpu_ipv4_cidr_block = 116;
      case 116: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Cluster.tpu_ipv4_cidr_block");
        object = msg->mutable_tpu_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .google.container.v1.StatusCondition conditions = 118;
      case 118: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::StatusCondition::_InternalParse;
          object = msg->add_conditions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 1970 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.Cluster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 initial_node_count = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initial_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeConfig node_config = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MasterAuth master_auth = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logging_service = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logging_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logging_service().data(), static_cast<int>(this->logging_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.logging_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string monitoring_service = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string network = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), static_cast<int>(this->network().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.network"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.cluster_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AddonsConfig addons_config = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subnetwork = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.subnetwork"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.NodePool node_pools = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_node_pools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locations = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            static_cast<int>(this->locations(this->locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_kubernetes_alpha = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_kubernetes_alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> resource_labels = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          Cluster_ResourceLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Cluster_ResourceLabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&resource_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.ResourceLabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.ResourceLabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label_fingerprint = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label_fingerprint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.label_fingerprint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.LegacyAbac legacy_abac = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_legacy_abac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NetworkPolicy network_policy = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ip_allocation_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_authorized_networks_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maintenance_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.BinaryAuthorization binary_authorization = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (194 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_binary_authorization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ClusterAutoscaling autoscaling = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (210 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NetworkConfig network_config = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (218 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MaxPodsConstraint default_max_pods_constraint = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (242 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_max_pods_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ResourceUsageExportConfig resource_usage_export_config = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (266 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource_usage_export_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AuthenticatorGroupsConfig authenticator_groups_config = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (274 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_authenticator_groups_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.PrivateClusterConfig private_cluster_config = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (298 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_private_cluster_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.DatabaseEncryption database_encryption = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (306 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_database_encryption()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.VerticalPodAutoscaling vertical_pod_autoscaling = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (314 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vertical_pod_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ShieldedNodes shielded_nodes = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (322 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shielded_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ReleaseChannel release_channel = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (330 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_release_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.WorkloadIdentityConfig workload_identity_config = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (346 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_workload_identity_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 101 [deprecated = true];
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (810 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string endpoint = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (818 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string initial_cluster_version = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (826 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initial_cluster_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.initial_cluster_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_master_version = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (834 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.current_master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_node_version = 105 [deprecated = true];
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (842 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.current_node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string create_time = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (850 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_time().data(), static_cast<int>(this->create_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.create_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Cluster.Status status = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (856 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1::Cluster_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 108 [deprecated = true];
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (866 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_ipv4_cidr_size = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (872 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_ipv4_cidr_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (882 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.services_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string instance_group_urls = 111 [deprecated = true];
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (890 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_instance_group_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_group_urls(this->instance_group_urls_size() - 1).data(),
            static_cast<int>(this->instance_group_urls(this->instance_group_urls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.instance_group_urls"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current_node_count = 112 [deprecated = true];
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (896 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expire_time = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (906 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expire_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expire_time().data(), static_cast<int>(this->expire_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.expire_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (914 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_tpu = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (920 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_tpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tpu_ipv4_cidr_block = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (930 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tpu_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tpu_ipv4_cidr_block().data(), static_cast<int>(this->tpu_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.tpu_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.StatusCondition conditions = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (946 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.Cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.Cluster)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // int32 initial_node_count = 3 [deprecated = true];
  if (this->initial_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->initial_node_count(), output);
  }

  // .google.container.v1.NodeConfig node_config = 4 [deprecated = true];
  if (this->has_node_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::node_config(this), output);
  }

  // .google.container.v1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::master_auth(this), output);
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.logging_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->logging_service(), output);
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->monitoring_service(), output);
  }

  // string network = 8;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->network(), output);
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.cluster_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cluster_ipv4_cidr(), output);
  }

  // .google.container.v1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::addons_config(this), output);
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.subnetwork");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->subnetwork(), output);
  }

  // repeated .google.container.v1.NodePool node_pools = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->node_pools(static_cast<int>(i)),
      output);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->locations(i), output);
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->enable_kubernetes_alpha(), output);
  }

  // map<string, string> resource_labels = 15;
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.Cluster.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.Cluster.ResourceLabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->resource_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(15, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(15, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string label_fingerprint = 16;
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.label_fingerprint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->label_fingerprint(), output);
  }

  // .google.container.v1.LegacyAbac legacy_abac = 18;
  if (this->has_legacy_abac()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, HasBitSetters::legacy_abac(this), output);
  }

  // .google.container.v1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, HasBitSetters::network_policy(this), output);
  }

  // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, HasBitSetters::ip_allocation_policy(this), output);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, HasBitSetters::master_authorized_networks_config(this), output);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, HasBitSetters::maintenance_policy(this), output);
  }

  // .google.container.v1.BinaryAuthorization binary_authorization = 24;
  if (this->has_binary_authorization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, HasBitSetters::binary_authorization(this), output);
  }

  // .google.container.v1.ClusterAutoscaling autoscaling = 26;
  if (this->has_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, HasBitSetters::autoscaling(this), output);
  }

  // .google.container.v1.NetworkConfig network_config = 27;
  if (this->has_network_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, HasBitSetters::network_config(this), output);
  }

  // .google.container.v1.MaxPodsConstraint default_max_pods_constraint = 30;
  if (this->has_default_max_pods_constraint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, HasBitSetters::default_max_pods_constraint(this), output);
  }

  // .google.container.v1.ResourceUsageExportConfig resource_usage_export_config = 33;
  if (this->has_resource_usage_export_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, HasBitSetters::resource_usage_export_config(this), output);
  }

  // .google.container.v1.AuthenticatorGroupsConfig authenticator_groups_config = 34;
  if (this->has_authenticator_groups_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, HasBitSetters::authenticator_groups_config(this), output);
  }

  // .google.container.v1.PrivateClusterConfig private_cluster_config = 37;
  if (this->has_private_cluster_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, HasBitSetters::private_cluster_config(this), output);
  }

  // .google.container.v1.DatabaseEncryption database_encryption = 38;
  if (this->has_database_encryption()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, HasBitSetters::database_encryption(this), output);
  }

  // .google.container.v1.VerticalPodAutoscaling vertical_pod_autoscaling = 39;
  if (this->has_vertical_pod_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, HasBitSetters::vertical_pod_autoscaling(this), output);
  }

  // .google.container.v1.ShieldedNodes shielded_nodes = 40;
  if (this->has_shielded_nodes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, HasBitSetters::shielded_nodes(this), output);
  }

  // .google.container.v1.ReleaseChannel release_channel = 41;
  if (this->has_release_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, HasBitSetters::release_channel(this), output);
  }

  // .google.container.v1.WorkloadIdentityConfig workload_identity_config = 43;
  if (this->has_workload_identity_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, HasBitSetters::workload_identity_config(this), output);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->self_link(), output);
  }

  // string zone = 101 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->zone(), output);
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->endpoint(), output);
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.initial_cluster_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->initial_cluster_version(), output);
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.current_master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->current_master_version(), output);
  }

  // string current_node_version = 105 [deprecated = true];
  if (this->current_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.current_node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      105, this->current_node_version(), output);
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), static_cast<int>(this->create_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.create_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      106, this->create_time(), output);
  }

  // .google.container.v1.Cluster.Status status = 107;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      107, this->status(), output);
  }

  // string status_message = 108 [deprecated = true];
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      108, this->status_message(), output);
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(109, this->node_ipv4_cidr_size(), output);
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.services_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      110, this->services_ipv4_cidr(), output);
  }

  // repeated string instance_group_urls = 111 [deprecated = true];
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.instance_group_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      111, this->instance_group_urls(i), output);
  }

  // int32 current_node_count = 112 [deprecated = true];
  if (this->current_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(112, this->current_node_count(), output);
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expire_time().data(), static_cast<int>(this->expire_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.expire_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      113, this->expire_time(), output);
  }

  // string location = 114;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      114, this->location(), output);
  }

  // bool enable_tpu = 115;
  if (this->enable_tpu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(115, this->enable_tpu(), output);
  }

  // string tpu_ipv4_cidr_block = 116;
  if (this->tpu_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tpu_ipv4_cidr_block().data(), static_cast<int>(this->tpu_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.tpu_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      116, this->tpu_ipv4_cidr_block(), output);
  }

  // repeated .google.container.v1.StatusCondition conditions = 118;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      118,
      this->conditions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.Cluster)
}

::google::protobuf::uint8* Cluster::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // int32 initial_node_count = 3 [deprecated = true];
  if (this->initial_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->initial_node_count(), target);
  }

  // .google.container.v1.NodeConfig node_config = 4 [deprecated = true];
  if (this->has_node_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::node_config(this), target);
  }

  // .google.container.v1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::master_auth(this), target);
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.logging_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->logging_service(), target);
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->monitoring_service(), target);
  }

  // string network = 8;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->network(), target);
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.cluster_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cluster_ipv4_cidr(), target);
  }

  // .google.container.v1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::addons_config(this), target);
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.subnetwork");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->subnetwork(), target);
  }

  // repeated .google.container.v1.NodePool node_pools = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->node_pools(static_cast<int>(i)), target);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->locations(i), target);
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->enable_kubernetes_alpha(), target);
  }

  // map<string, string> resource_labels = 15;
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.Cluster.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.Cluster.ResourceLabelsEntry.value");
      }
    };

    if (false &&
        this->resource_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(15, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(15, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string label_fingerprint = 16;
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.label_fingerprint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->label_fingerprint(), target);
  }

  // .google.container.v1.LegacyAbac legacy_abac = 18;
  if (this->has_legacy_abac()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, HasBitSetters::legacy_abac(this), target);
  }

  // .google.container.v1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, HasBitSetters::network_policy(this), target);
  }

  // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, HasBitSetters::ip_allocation_policy(this), target);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, HasBitSetters::master_authorized_networks_config(this), target);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, HasBitSetters::maintenance_policy(this), target);
  }

  // .google.container.v1.BinaryAuthorization binary_authorization = 24;
  if (this->has_binary_authorization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, HasBitSetters::binary_authorization(this), target);
  }

  // .google.container.v1.ClusterAutoscaling autoscaling = 26;
  if (this->has_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, HasBitSetters::autoscaling(this), target);
  }

  // .google.container.v1.NetworkConfig network_config = 27;
  if (this->has_network_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, HasBitSetters::network_config(this), target);
  }

  // .google.container.v1.MaxPodsConstraint default_max_pods_constraint = 30;
  if (this->has_default_max_pods_constraint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, HasBitSetters::default_max_pods_constraint(this), target);
  }

  // .google.container.v1.ResourceUsageExportConfig resource_usage_export_config = 33;
  if (this->has_resource_usage_export_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, HasBitSetters::resource_usage_export_config(this), target);
  }

  // .google.container.v1.AuthenticatorGroupsConfig authenticator_groups_config = 34;
  if (this->has_authenticator_groups_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, HasBitSetters::authenticator_groups_config(this), target);
  }

  // .google.container.v1.PrivateClusterConfig private_cluster_config = 37;
  if (this->has_private_cluster_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, HasBitSetters::private_cluster_config(this), target);
  }

  // .google.container.v1.DatabaseEncryption database_encryption = 38;
  if (this->has_database_encryption()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, HasBitSetters::database_encryption(this), target);
  }

  // .google.container.v1.VerticalPodAutoscaling vertical_pod_autoscaling = 39;
  if (this->has_vertical_pod_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39, HasBitSetters::vertical_pod_autoscaling(this), target);
  }

  // .google.container.v1.ShieldedNodes shielded_nodes = 40;
  if (this->has_shielded_nodes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, HasBitSetters::shielded_nodes(this), target);
  }

  // .google.container.v1.ReleaseChannel release_channel = 41;
  if (this->has_release_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, HasBitSetters::release_channel(this), target);
  }

  // .google.container.v1.WorkloadIdentityConfig workload_identity_config = 43;
  if (this->has_workload_identity_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        43, HasBitSetters::workload_identity_config(this), target);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->self_link(), target);
  }

  // string zone = 101 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->zone(), target);
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->endpoint(), target);
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.initial_cluster_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->initial_cluster_version(), target);
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.current_master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->current_master_version(), target);
  }

  // string current_node_version = 105 [deprecated = true];
  if (this->current_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.current_node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        105, this->current_node_version(), target);
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), static_cast<int>(this->create_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.create_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        106, this->create_time(), target);
  }

  // .google.container.v1.Cluster.Status status = 107;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      107, this->status(), target);
  }

  // string status_message = 108 [deprecated = true];
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        108, this->status_message(), target);
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(109, this->node_ipv4_cidr_size(), target);
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.services_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        110, this->services_ipv4_cidr(), target);
  }

  // repeated string instance_group_urls = 111 [deprecated = true];
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.instance_group_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(111, this->instance_group_urls(i), target);
  }

  // int32 current_node_count = 112 [deprecated = true];
  if (this->current_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(112, this->current_node_count(), target);
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expire_time().data(), static_cast<int>(this->expire_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.expire_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        113, this->expire_time(), target);
  }

  // string location = 114;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        114, this->location(), target);
  }

  // bool enable_tpu = 115;
  if (this->enable_tpu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(115, this->enable_tpu(), target);
  }

  // string tpu_ipv4_cidr_block = 116;
  if (this->tpu_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tpu_ipv4_cidr_block().data(), static_cast<int>(this->tpu_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.tpu_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        116, this->tpu_ipv4_cidr_block(), target);
  }

  // repeated .google.container.v1.StatusCondition conditions = 118;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        118, this->conditions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.Cluster)
  return target;
}

size_t Cluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.Cluster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.NodePool node_pools = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->node_pools_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_pools(static_cast<int>(i)));
    }
  }

  // repeated string locations = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locations_size());
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // map<string, string> resource_labels = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_labels_size());
  {
    ::std::unique_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->resource_labels().begin();
        it != this->resource_labels().end(); ++it) {
      entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string instance_group_urls = 111 [deprecated = true];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->instance_group_urls_size());
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->instance_group_urls(i));
  }

  // repeated .google.container.v1.StatusCondition conditions = 118;
  {
    unsigned int count = static_cast<unsigned int>(this->conditions_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conditions(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logging_service());
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitoring_service());
  }

  // string network = 8;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr());
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork());
  }

  // string label_fingerprint = 16;
  if (this->label_fingerprint().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label_fingerprint());
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string zone = 101 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->initial_cluster_version());
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_master_version());
  }

  // string current_node_version = 105 [deprecated = true];
  if (this->current_node_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_node_version());
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_time());
  }

  // string status_message = 108 [deprecated = true];
  if (this->status_message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr());
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expire_time());
  }

  // string location = 114;
  if (this->location().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // string tpu_ipv4_cidr_block = 116;
  if (this->tpu_ipv4_cidr_block().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tpu_ipv4_cidr_block());
  }

  // .google.container.v1.NodeConfig node_config = 4 [deprecated = true];
  if (this->has_node_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_config_);
  }

  // .google.container.v1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *master_auth_);
  }

  // .google.container.v1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *addons_config_);
  }

  // .google.container.v1.LegacyAbac legacy_abac = 18;
  if (this->has_legacy_abac()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *legacy_abac_);
  }

  // .google.container.v1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *network_policy_);
  }

  // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ip_allocation_policy_);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *master_authorized_networks_config_);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *maintenance_policy_);
  }

  // .google.container.v1.BinaryAuthorization binary_authorization = 24;
  if (this->has_binary_authorization()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *binary_authorization_);
  }

  // .google.container.v1.ClusterAutoscaling autoscaling = 26;
  if (this->has_autoscaling()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  // .google.container.v1.NetworkConfig network_config = 27;
  if (this->has_network_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *network_config_);
  }

  // .google.container.v1.MaxPodsConstraint default_max_pods_constraint = 30;
  if (this->has_default_max_pods_constraint()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *default_max_pods_constraint_);
  }

  // .google.container.v1.ResourceUsageExportConfig resource_usage_export_config = 33;
  if (this->has_resource_usage_export_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_usage_export_config_);
  }

  // .google.container.v1.AuthenticatorGroupsConfig authenticator_groups_config = 34;
  if (this->has_authenticator_groups_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *authenticator_groups_config_);
  }

  // .google.container.v1.PrivateClusterConfig private_cluster_config = 37;
  if (this->has_private_cluster_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *private_cluster_config_);
  }

  // .google.container.v1.DatabaseEncryption database_encryption = 38;
  if (this->has_database_encryption()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *database_encryption_);
  }

  // .google.container.v1.VerticalPodAutoscaling vertical_pod_autoscaling = 39;
  if (this->has_vertical_pod_autoscaling()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vertical_pod_autoscaling_);
  }

  // .google.container.v1.ShieldedNodes shielded_nodes = 40;
  if (this->has_shielded_nodes()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shielded_nodes_);
  }

  // .google.container.v1.ReleaseChannel release_channel = 41;
  if (this->has_release_channel()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *release_channel_);
  }

  // .google.container.v1.WorkloadIdentityConfig workload_identity_config = 43;
  if (this->has_workload_identity_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *workload_identity_config_);
  }

  // int32 initial_node_count = 3 [deprecated = true];
  if (this->initial_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->initial_node_count());
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_tpu = 115;
  if (this->enable_tpu() != 0) {
    total_size += 2 + 1;
  }

  // int32 current_node_count = 112 [deprecated = true];
  if (this->current_node_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_node_count());
  }

  // .google.container.v1.Cluster.Status status = 107;
  if (this->status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_ipv4_cidr_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  const Cluster* source =
      ::google::protobuf::DynamicCastToGenerated<Cluster>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.Cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.Cluster)
    MergeFrom(*source);
  }
}

void Cluster::MergeFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_pools_.MergeFrom(from.node_pools_);
  locations_.MergeFrom(from.locations_);
  resource_labels_.MergeFrom(from.resource_labels_);
  instance_group_urls_.MergeFrom(from.instance_group_urls_);
  conditions_.MergeFrom(from.conditions_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.logging_service().size() > 0) {

    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  if (from.monitoring_service().size() > 0) {

    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.cluster_ipv4_cidr().size() > 0) {

    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  if (from.subnetwork().size() > 0) {

    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  if (from.label_fingerprint().size() > 0) {

    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.endpoint().size() > 0) {

    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  if (from.initial_cluster_version().size() > 0) {

    initial_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_cluster_version_);
  }
  if (from.current_master_version().size() > 0) {

    current_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_master_version_);
  }
  if (from.current_node_version().size() > 0) {

    current_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_node_version_);
  }
  if (from.create_time().size() > 0) {

    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.services_ipv4_cidr().size() > 0) {

    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  if (from.expire_time().size() > 0) {

    expire_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expire_time_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.tpu_ipv4_cidr_block().size() > 0) {

    tpu_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tpu_ipv4_cidr_block_);
  }
  if (from.has_node_config()) {
    mutable_node_config()->::google::container::v1::NodeConfig::MergeFrom(from.node_config());
  }
  if (from.has_master_auth()) {
    mutable_master_auth()->::google::container::v1::MasterAuth::MergeFrom(from.master_auth());
  }
  if (from.has_addons_config()) {
    mutable_addons_config()->::google::container::v1::AddonsConfig::MergeFrom(from.addons_config());
  }
  if (from.has_legacy_abac()) {
    mutable_legacy_abac()->::google::container::v1::LegacyAbac::MergeFrom(from.legacy_abac());
  }
  if (from.has_network_policy()) {
    mutable_network_policy()->::google::container::v1::NetworkPolicy::MergeFrom(from.network_policy());
  }
  if (from.has_ip_allocation_policy()) {
    mutable_ip_allocation_policy()->::google::container::v1::IPAllocationPolicy::MergeFrom(from.ip_allocation_policy());
  }
  if (from.has_master_authorized_networks_config()) {
    mutable_master_authorized_networks_config()->::google::container::v1::MasterAuthorizedNetworksConfig::MergeFrom(from.master_authorized_networks_config());
  }
  if (from.has_maintenance_policy()) {
    mutable_maintenance_policy()->::google::container::v1::MaintenancePolicy::MergeFrom(from.maintenance_policy());
  }
  if (from.has_binary_authorization()) {
    mutable_binary_authorization()->::google::container::v1::BinaryAuthorization::MergeFrom(from.binary_authorization());
  }
  if (from.has_autoscaling()) {
    mutable_autoscaling()->::google::container::v1::ClusterAutoscaling::MergeFrom(from.autoscaling());
  }
  if (from.has_network_config()) {
    mutable_network_config()->::google::container::v1::NetworkConfig::MergeFrom(from.network_config());
  }
  if (from.has_default_max_pods_constraint()) {
    mutable_default_max_pods_constraint()->::google::container::v1::MaxPodsConstraint::MergeFrom(from.default_max_pods_constraint());
  }
  if (from.has_resource_usage_export_config()) {
    mutable_resource_usage_export_config()->::google::container::v1::ResourceUsageExportConfig::MergeFrom(from.resource_usage_export_config());
  }
  if (from.has_authenticator_groups_config()) {
    mutable_authenticator_groups_config()->::google::container::v1::AuthenticatorGroupsConfig::MergeFrom(from.authenticator_groups_config());
  }
  if (from.has_private_cluster_config()) {
    mutable_private_cluster_config()->::google::container::v1::PrivateClusterConfig::MergeFrom(from.private_cluster_config());
  }
  if (from.has_database_encryption()) {
    mutable_database_encryption()->::google::container::v1::DatabaseEncryption::MergeFrom(from.database_encryption());
  }
  if (from.has_vertical_pod_autoscaling()) {
    mutable_vertical_pod_autoscaling()->::google::container::v1::VerticalPodAutoscaling::MergeFrom(from.vertical_pod_autoscaling());
  }
  if (from.has_shielded_nodes()) {
    mutable_shielded_nodes()->::google::container::v1::ShieldedNodes::MergeFrom(from.shielded_nodes());
  }
  if (from.has_release_channel()) {
    mutable_release_channel()->::google::container::v1::ReleaseChannel::MergeFrom(from.release_channel());
  }
  if (from.has_workload_identity_config()) {
    mutable_workload_identity_config()->::google::container::v1::WorkloadIdentityConfig::MergeFrom(from.workload_identity_config());
  }
  if (from.initial_node_count() != 0) {
    set_initial_node_count(from.initial_node_count());
  }
  if (from.enable_kubernetes_alpha() != 0) {
    set_enable_kubernetes_alpha(from.enable_kubernetes_alpha());
  }
  if (from.enable_tpu() != 0) {
    set_enable_tpu(from.enable_tpu());
  }
  if (from.current_node_count() != 0) {
    set_current_node_count(from.current_node_count());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.node_ipv4_cidr_size() != 0) {
    set_node_ipv4_cidr_size(from.node_ipv4_cidr_size());
  }
}

void Cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cluster::CopyFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster::IsInitialized() const {
  return true;
}

void Cluster::Swap(Cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster::InternalSwap(Cluster* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&node_pools_)->InternalSwap(CastToBase(&other->node_pools_));
  locations_.InternalSwap(CastToBase(&other->locations_));
  resource_labels_.Swap(&other->resource_labels_);
  instance_group_urls_.InternalSwap(CastToBase(&other->instance_group_urls_));
  CastToBase(&conditions_)->InternalSwap(CastToBase(&other->conditions_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logging_service_.Swap(&other->logging_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  monitoring_service_.Swap(&other->monitoring_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  network_.Swap(&other->network_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_ipv4_cidr_.Swap(&other->cluster_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subnetwork_.Swap(&other->subnetwork_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_fingerprint_.Swap(&other->label_fingerprint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  self_link_.Swap(&other->self_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  initial_cluster_version_.Swap(&other->initial_cluster_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  current_master_version_.Swap(&other->current_master_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  current_node_version_.Swap(&other->current_node_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  create_time_.Swap(&other->create_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_message_.Swap(&other->status_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  services_ipv4_cidr_.Swap(&other->services_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  expire_time_.Swap(&other->expire_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tpu_ipv4_cidr_block_.Swap(&other->tpu_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_config_, other->node_config_);
  swap(master_auth_, other->master_auth_);
  swap(addons_config_, other->addons_config_);
  swap(legacy_abac_, other->legacy_abac_);
  swap(network_policy_, other->network_policy_);
  swap(ip_allocation_policy_, other->ip_allocation_policy_);
  swap(master_authorized_networks_config_, other->master_authorized_networks_config_);
  swap(maintenance_policy_, other->maintenance_policy_);
  swap(binary_authorization_, other->binary_authorization_);
  swap(autoscaling_, other->autoscaling_);
  swap(network_config_, other->network_config_);
  swap(default_max_pods_constraint_, other->default_max_pods_constraint_);
  swap(resource_usage_export_config_, other->resource_usage_export_config_);
  swap(authenticator_groups_config_, other->authenticator_groups_config_);
  swap(private_cluster_config_, other->private_cluster_config_);
  swap(database_encryption_, other->database_encryption_);
  swap(vertical_pod_autoscaling_, other->vertical_pod_autoscaling_);
  swap(shielded_nodes_, other->shielded_nodes_);
  swap(release_channel_, other->release_channel_);
  swap(workload_identity_config_, other->workload_identity_config_);
  swap(initial_node_count_, other->initial_node_count_);
  swap(enable_kubernetes_alpha_, other->enable_kubernetes_alpha_);
  swap(enable_tpu_, other->enable_tpu_);
  swap(current_node_count_, other->current_node_count_);
  swap(status_, other->status_);
  swap(node_ipv4_cidr_size_, other->node_ipv4_cidr_size_);
}

::google::protobuf::Metadata Cluster::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClusterUpdate::InitAsDefaultInstance() {
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_addons_config_ = const_cast< ::google::container::v1::AddonsConfig*>(
      ::google::container::v1::AddonsConfig::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_database_encryption_ = const_cast< ::google::container::v1::DatabaseEncryption*>(
      ::google::container::v1::DatabaseEncryption::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_workload_identity_config_ = const_cast< ::google::container::v1::WorkloadIdentityConfig*>(
      ::google::container::v1::WorkloadIdentityConfig::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_shielded_nodes_ = const_cast< ::google::container::v1::ShieldedNodes*>(
      ::google::container::v1::ShieldedNodes::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_node_pool_autoscaling_ = const_cast< ::google::container::v1::NodePoolAutoscaling*>(
      ::google::container::v1::NodePoolAutoscaling::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_master_authorized_networks_config_ = const_cast< ::google::container::v1::MasterAuthorizedNetworksConfig*>(
      ::google::container::v1::MasterAuthorizedNetworksConfig::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_cluster_autoscaling_ = const_cast< ::google::container::v1::ClusterAutoscaling*>(
      ::google::container::v1::ClusterAutoscaling::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_binary_authorization_ = const_cast< ::google::container::v1::BinaryAuthorization*>(
      ::google::container::v1::BinaryAuthorization::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_resource_usage_export_config_ = const_cast< ::google::container::v1::ResourceUsageExportConfig*>(
      ::google::container::v1::ResourceUsageExportConfig::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_vertical_pod_autoscaling_ = const_cast< ::google::container::v1::VerticalPodAutoscaling*>(
      ::google::container::v1::VerticalPodAutoscaling::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_private_cluster_config_ = const_cast< ::google::container::v1::PrivateClusterConfig*>(
      ::google::container::v1::PrivateClusterConfig::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_intra_node_visibility_config_ = const_cast< ::google::container::v1::IntraNodeVisibilityConfig*>(
      ::google::container::v1::IntraNodeVisibilityConfig::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_default_snat_status_ = const_cast< ::google::container::v1::DefaultSnatStatus*>(
      ::google::container::v1::DefaultSnatStatus::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_release_channel_ = const_cast< ::google::container::v1::ReleaseChannel*>(
      ::google::container::v1::ReleaseChannel::internal_default_instance());
}
class ClusterUpdate::HasBitSetters {
 public:
  static const ::google::container::v1::AddonsConfig& desired_addons_config(const ClusterUpdate* msg);
  static const ::google::container::v1::DatabaseEncryption& desired_database_encryption(const ClusterUpdate* msg);
  static const ::google::container::v1::WorkloadIdentityConfig& desired_workload_identity_config(const ClusterUpdate* msg);
  static const ::google::container::v1::ShieldedNodes& desired_shielded_nodes(const ClusterUpdate* msg);
  static const ::google::container::v1::NodePoolAutoscaling& desired_node_pool_autoscaling(const ClusterUpdate* msg);
  static const ::google::container::v1::MasterAuthorizedNetworksConfig& desired_master_authorized_networks_config(const ClusterUpdate* msg);
  static const ::google::container::v1::ClusterAutoscaling& desired_cluster_autoscaling(const ClusterUpdate* msg);
  static const ::google::container::v1::BinaryAuthorization& desired_binary_authorization(const ClusterUpdate* msg);
  static const ::google::container::v1::ResourceUsageExportConfig& desired_resource_usage_export_config(const ClusterUpdate* msg);
  static const ::google::container::v1::VerticalPodAutoscaling& desired_vertical_pod_autoscaling(const ClusterUpdate* msg);
  static const ::google::container::v1::PrivateClusterConfig& desired_private_cluster_config(const ClusterUpdate* msg);
  static const ::google::container::v1::IntraNodeVisibilityConfig& desired_intra_node_visibility_config(const ClusterUpdate* msg);
  static const ::google::container::v1::DefaultSnatStatus& desired_default_snat_status(const ClusterUpdate* msg);
  static const ::google::container::v1::ReleaseChannel& desired_release_channel(const ClusterUpdate* msg);
};

const ::google::container::v1::AddonsConfig&
ClusterUpdate::HasBitSetters::desired_addons_config(const ClusterUpdate* msg) {
  return *msg->desired_addons_config_;
}
const ::google::container::v1::DatabaseEncryption&
ClusterUpdate::HasBitSetters::desired_database_encryption(const ClusterUpdate* msg) {
  return *msg->desired_database_encryption_;
}
const ::google::container::v1::WorkloadIdentityConfig&
ClusterUpdate::HasBitSetters::desired_workload_identity_config(const ClusterUpdate* msg) {
  return *msg->desired_workload_identity_config_;
}
const ::google::container::v1::ShieldedNodes&
ClusterUpdate::HasBitSetters::desired_shielded_nodes(const ClusterUpdate* msg) {
  return *msg->desired_shielded_nodes_;
}
const ::google::container::v1::NodePoolAutoscaling&
ClusterUpdate::HasBitSetters::desired_node_pool_autoscaling(const ClusterUpdate* msg) {
  return *msg->desired_node_pool_autoscaling_;
}
const ::google::container::v1::MasterAuthorizedNetworksConfig&
ClusterUpdate::HasBitSetters::desired_master_authorized_networks_config(const ClusterUpdate* msg) {
  return *msg->desired_master_authorized_networks_config_;
}
const ::google::container::v1::ClusterAutoscaling&
ClusterUpdate::HasBitSetters::desired_cluster_autoscaling(const ClusterUpdate* msg) {
  return *msg->desired_cluster_autoscaling_;
}
const ::google::container::v1::BinaryAuthorization&
ClusterUpdate::HasBitSetters::desired_binary_authorization(const ClusterUpdate* msg) {
  return *msg->desired_binary_authorization_;
}
const ::google::container::v1::ResourceUsageExportConfig&
ClusterUpdate::HasBitSetters::desired_resource_usage_export_config(const ClusterUpdate* msg) {
  return *msg->desired_resource_usage_export_config_;
}
const ::google::container::v1::VerticalPodAutoscaling&
ClusterUpdate::HasBitSetters::desired_vertical_pod_autoscaling(const ClusterUpdate* msg) {
  return *msg->desired_vertical_pod_autoscaling_;
}
const ::google::container::v1::PrivateClusterConfig&
ClusterUpdate::HasBitSetters::desired_private_cluster_config(const ClusterUpdate* msg) {
  return *msg->desired_private_cluster_config_;
}
const ::google::container::v1::IntraNodeVisibilityConfig&
ClusterUpdate::HasBitSetters::desired_intra_node_visibility_config(const ClusterUpdate* msg) {
  return *msg->desired_intra_node_visibility_config_;
}
const ::google::container::v1::DefaultSnatStatus&
ClusterUpdate::HasBitSetters::desired_default_snat_status(const ClusterUpdate* msg) {
  return *msg->desired_default_snat_status_;
}
const ::google::container::v1::ReleaseChannel&
ClusterUpdate::HasBitSetters::desired_release_channel(const ClusterUpdate* msg) {
  return *msg->desired_release_channel_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterUpdate::kDesiredNodeVersionFieldNumber;
const int ClusterUpdate::kDesiredMonitoringServiceFieldNumber;
const int ClusterUpdate::kDesiredAddonsConfigFieldNumber;
const int ClusterUpdate::kDesiredNodePoolIdFieldNumber;
const int ClusterUpdate::kDesiredImageTypeFieldNumber;
const int ClusterUpdate::kDesiredDatabaseEncryptionFieldNumber;
const int ClusterUpdate::kDesiredWorkloadIdentityConfigFieldNumber;
const int ClusterUpdate::kDesiredShieldedNodesFieldNumber;
const int ClusterUpdate::kDesiredNodePoolAutoscalingFieldNumber;
const int ClusterUpdate::kDesiredLocationsFieldNumber;
const int ClusterUpdate::kDesiredMasterAuthorizedNetworksConfigFieldNumber;
const int ClusterUpdate::kDesiredClusterAutoscalingFieldNumber;
const int ClusterUpdate::kDesiredBinaryAuthorizationFieldNumber;
const int ClusterUpdate::kDesiredLoggingServiceFieldNumber;
const int ClusterUpdate::kDesiredResourceUsageExportConfigFieldNumber;
const int ClusterUpdate::kDesiredVerticalPodAutoscalingFieldNumber;
const int ClusterUpdate::kDesiredPrivateClusterConfigFieldNumber;
const int ClusterUpdate::kDesiredIntraNodeVisibilityConfigFieldNumber;
const int ClusterUpdate::kDesiredDefaultSnatStatusFieldNumber;
const int ClusterUpdate::kDesiredReleaseChannelFieldNumber;
const int ClusterUpdate::kDesiredMasterVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterUpdate::ClusterUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ClusterUpdate)
}
ClusterUpdate::ClusterUpdate(const ClusterUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      desired_locations_(from.desired_locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desired_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_node_version().size() > 0) {
    desired_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_version_);
  }
  desired_monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_monitoring_service().size() > 0) {
    desired_monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_monitoring_service_);
  }
  desired_node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_node_pool_id().size() > 0) {
    desired_node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_pool_id_);
  }
  desired_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_image_type().size() > 0) {
    desired_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_image_type_);
  }
  desired_logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_logging_service().size() > 0) {
    desired_logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_logging_service_);
  }
  desired_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_master_version().size() > 0) {
    desired_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_master_version_);
  }
  if (from.has_desired_addons_config()) {
    desired_addons_config_ = new ::google::container::v1::AddonsConfig(*from.desired_addons_config_);
  } else {
    desired_addons_config_ = nullptr;
  }
  if (from.has_desired_node_pool_autoscaling()) {
    desired_node_pool_autoscaling_ = new ::google::container::v1::NodePoolAutoscaling(*from.desired_node_pool_autoscaling_);
  } else {
    desired_node_pool_autoscaling_ = nullptr;
  }
  if (from.has_desired_master_authorized_networks_config()) {
    desired_master_authorized_networks_config_ = new ::google::container::v1::MasterAuthorizedNetworksConfig(*from.desired_master_authorized_networks_config_);
  } else {
    desired_master_authorized_networks_config_ = nullptr;
  }
  if (from.has_desired_cluster_autoscaling()) {
    desired_cluster_autoscaling_ = new ::google::container::v1::ClusterAutoscaling(*from.desired_cluster_autoscaling_);
  } else {
    desired_cluster_autoscaling_ = nullptr;
  }
  if (from.has_desired_binary_authorization()) {
    desired_binary_authorization_ = new ::google::container::v1::BinaryAuthorization(*from.desired_binary_authorization_);
  } else {
    desired_binary_authorization_ = nullptr;
  }
  if (from.has_desired_resource_usage_export_config()) {
    desired_resource_usage_export_config_ = new ::google::container::v1::ResourceUsageExportConfig(*from.desired_resource_usage_export_config_);
  } else {
    desired_resource_usage_export_config_ = nullptr;
  }
  if (from.has_desired_vertical_pod_autoscaling()) {
    desired_vertical_pod_autoscaling_ = new ::google::container::v1::VerticalPodAutoscaling(*from.desired_vertical_pod_autoscaling_);
  } else {
    desired_vertical_pod_autoscaling_ = nullptr;
  }
  if (from.has_desired_private_cluster_config()) {
    desired_private_cluster_config_ = new ::google::container::v1::PrivateClusterConfig(*from.desired_private_cluster_config_);
  } else {
    desired_private_cluster_config_ = nullptr;
  }
  if (from.has_desired_intra_node_visibility_config()) {
    desired_intra_node_visibility_config_ = new ::google::container::v1::IntraNodeVisibilityConfig(*from.desired_intra_node_visibility_config_);
  } else {
    desired_intra_node_visibility_config_ = nullptr;
  }
  if (from.has_desired_default_snat_status()) {
    desired_default_snat_status_ = new ::google::container::v1::DefaultSnatStatus(*from.desired_default_snat_status_);
  } else {
    desired_default_snat_status_ = nullptr;
  }
  if (from.has_desired_release_channel()) {
    desired_release_channel_ = new ::google::container::v1::ReleaseChannel(*from.desired_release_channel_);
  } else {
    desired_release_channel_ = nullptr;
  }
  if (from.has_desired_database_encryption()) {
    desired_database_encryption_ = new ::google::container::v1::DatabaseEncryption(*from.desired_database_encryption_);
  } else {
    desired_database_encryption_ = nullptr;
  }
  if (from.has_desired_workload_identity_config()) {
    desired_workload_identity_config_ = new ::google::container::v1::WorkloadIdentityConfig(*from.desired_workload_identity_config_);
  } else {
    desired_workload_identity_config_ = nullptr;
  }
  if (from.has_desired_shielded_nodes()) {
    desired_shielded_nodes_ = new ::google::container::v1::ShieldedNodes(*from.desired_shielded_nodes_);
  } else {
    desired_shielded_nodes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ClusterUpdate)
}

void ClusterUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClusterUpdate_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  desired_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&desired_addons_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&desired_shielded_nodes_) -
      reinterpret_cast<char*>(&desired_addons_config_)) + sizeof(desired_shielded_nodes_));
}

ClusterUpdate::~ClusterUpdate() {
  // @@protoc_insertion_point(destructor:google.container.v1.ClusterUpdate)
  SharedDtor();
}

void ClusterUpdate::SharedDtor() {
  desired_node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_logging_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete desired_addons_config_;
  if (this != internal_default_instance()) delete desired_node_pool_autoscaling_;
  if (this != internal_default_instance()) delete desired_master_authorized_networks_config_;
  if (this != internal_default_instance()) delete desired_cluster_autoscaling_;
  if (this != internal_default_instance()) delete desired_binary_authorization_;
  if (this != internal_default_instance()) delete desired_resource_usage_export_config_;
  if (this != internal_default_instance()) delete desired_vertical_pod_autoscaling_;
  if (this != internal_default_instance()) delete desired_private_cluster_config_;
  if (this != internal_default_instance()) delete desired_intra_node_visibility_config_;
  if (this != internal_default_instance()) delete desired_default_snat_status_;
  if (this != internal_default_instance()) delete desired_release_channel_;
  if (this != internal_default_instance()) delete desired_database_encryption_;
  if (this != internal_default_instance()) delete desired_workload_identity_config_;
  if (this != internal_default_instance()) delete desired_shielded_nodes_;
}

void ClusterUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClusterUpdate& ClusterUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClusterUpdate_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ClusterUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  desired_locations_.Clear();
  desired_node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_logging_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && desired_addons_config_ != nullptr) {
    delete desired_addons_config_;
  }
  desired_addons_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_node_pool_autoscaling_ != nullptr) {
    delete desired_node_pool_autoscaling_;
  }
  desired_node_pool_autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_master_authorized_networks_config_ != nullptr) {
    delete desired_master_authorized_networks_config_;
  }
  desired_master_authorized_networks_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_cluster_autoscaling_ != nullptr) {
    delete desired_cluster_autoscaling_;
  }
  desired_cluster_autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_binary_authorization_ != nullptr) {
    delete desired_binary_authorization_;
  }
  desired_binary_authorization_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_resource_usage_export_config_ != nullptr) {
    delete desired_resource_usage_export_config_;
  }
  desired_resource_usage_export_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_vertical_pod_autoscaling_ != nullptr) {
    delete desired_vertical_pod_autoscaling_;
  }
  desired_vertical_pod_autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_private_cluster_config_ != nullptr) {
    delete desired_private_cluster_config_;
  }
  desired_private_cluster_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_intra_node_visibility_config_ != nullptr) {
    delete desired_intra_node_visibility_config_;
  }
  desired_intra_node_visibility_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_default_snat_status_ != nullptr) {
    delete desired_default_snat_status_;
  }
  desired_default_snat_status_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_release_channel_ != nullptr) {
    delete desired_release_channel_;
  }
  desired_release_channel_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_database_encryption_ != nullptr) {
    delete desired_database_encryption_;
  }
  desired_database_encryption_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_workload_identity_config_ != nullptr) {
    delete desired_workload_identity_config_;
  }
  desired_workload_identity_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_shielded_nodes_ != nullptr) {
    delete desired_shielded_nodes_;
  }
  desired_shielded_nodes_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClusterUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClusterUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string desired_node_version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ClusterUpdate.desired_node_version");
        object = msg->mutable_desired_node_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string desired_monitoring_service = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ClusterUpdate.desired_monitoring_service");
        object = msg->mutable_desired_monitoring_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.AddonsConfig desired_addons_config = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::AddonsConfig::_InternalParse;
        object = msg->mutable_desired_addons_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string desired_node_pool_id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ClusterUpdate.desired_node_pool_id");
        object = msg->mutable_desired_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string desired_image_type = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ClusterUpdate.desired_image_type");
        object = msg->mutable_desired_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodePoolAutoscaling::_InternalParse;
        object = msg->mutable_desired_node_pool_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated string desired_locations = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ClusterUpdate.desired_locations");
          object = msg->add_desired_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MasterAuthorizedNetworksConfig::_InternalParse;
        object = msg->mutable_desired_master_authorized_networks_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ClusterAutoscaling desired_cluster_autoscaling = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ClusterAutoscaling::_InternalParse;
        object = msg->mutable_desired_cluster_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.BinaryAuthorization desired_binary_authorization = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::BinaryAuthorization::_InternalParse;
        object = msg->mutable_desired_binary_authorization();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string desired_logging_service = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ClusterUpdate.desired_logging_service");
        object = msg->mutable_desired_logging_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.ResourceUsageExportConfig desired_resource_usage_export_config = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ResourceUsageExportConfig::_InternalParse;
        object = msg->mutable_desired_resource_usage_export_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.VerticalPodAutoscaling desired_vertical_pod_autoscaling = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::VerticalPodAutoscaling::_InternalParse;
        object = msg->mutable_desired_vertical_pod_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.PrivateClusterConfig desired_private_cluster_config = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::PrivateClusterConfig::_InternalParse;
        object = msg->mutable_desired_private_cluster_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.IntraNodeVisibilityConfig desired_intra_node_visibility_config = 26;
      case 26: {
        if (static_cast<::google::protobuf::uint8>(tag) != 210) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::IntraNodeVisibilityConfig::_InternalParse;
        object = msg->mutable_desired_intra_node_visibility_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.DefaultSnatStatus desired_default_snat_status = 28;
      case 28: {
        if (static_cast<::google::protobuf::uint8>(tag) != 226) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::DefaultSnatStatus::_InternalParse;
        object = msg->mutable_desired_default_snat_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ReleaseChannel desired_release_channel = 31;
      case 31: {
        if (static_cast<::google::protobuf::uint8>(tag) != 250) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ReleaseChannel::_InternalParse;
        object = msg->mutable_desired_release_channel();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.DatabaseEncryption desired_database_encryption = 46;
      case 46: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::DatabaseEncryption::_InternalParse;
        object = msg->mutable_desired_database_encryption();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.WorkloadIdentityConfig desired_workload_identity_config = 47;
      case 47: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::WorkloadIdentityConfig::_InternalParse;
        object = msg->mutable_desired_workload_identity_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.ShieldedNodes desired_shielded_nodes = 48;
      case 48: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ShieldedNodes::_InternalParse;
        object = msg->mutable_desired_shielded_nodes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string desired_master_version = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ClusterUpdate.desired_master_version");
        object = msg->mutable_desired_master_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClusterUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ClusterUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string desired_node_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_monitoring_service = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AddonsConfig desired_addons_config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_node_pool_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_image_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_node_pool_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string desired_locations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_desired_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_locations(this->desired_locations_size() - 1).data(),
            static_cast<int>(this->desired_locations(this->desired_locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_master_authorized_networks_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ClusterAutoscaling desired_cluster_autoscaling = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_cluster_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.BinaryAuthorization desired_binary_authorization = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_binary_authorization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_logging_service = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_logging_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_logging_service().data(), static_cast<int>(this->desired_logging_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_logging_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ResourceUsageExportConfig desired_resource_usage_export_config = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_resource_usage_export_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.VerticalPodAutoscaling desired_vertical_pod_autoscaling = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_vertical_pod_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.PrivateClusterConfig desired_private_cluster_config = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_private_cluster_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.IntraNodeVisibilityConfig desired_intra_node_visibility_config = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (210 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_intra_node_visibility_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.DefaultSnatStatus desired_default_snat_status = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (226 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_default_snat_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ReleaseChannel desired_release_channel = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (250 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_release_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.DatabaseEncryption desired_database_encryption = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (370 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_database_encryption()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.WorkloadIdentityConfig desired_workload_identity_config = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (378 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_workload_identity_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ShieldedNodes desired_shielded_nodes = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (386 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_shielded_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_master_version = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ClusterUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ClusterUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClusterUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->desired_node_version(), output);
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desired_monitoring_service(), output);
  }

  // .google.container.v1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::desired_addons_config(this), output);
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->desired_node_pool_id(), output);
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->desired_image_type(), output);
  }

  // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::desired_node_pool_autoscaling(this), output);
  }

  // repeated string desired_locations = 10;
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_locations(i).data(), static_cast<int>(this->desired_locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->desired_locations(i), output);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::desired_master_authorized_networks_config(this), output);
  }

  // .google.container.v1.ClusterAutoscaling desired_cluster_autoscaling = 15;
  if (this->has_desired_cluster_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::desired_cluster_autoscaling(this), output);
  }

  // .google.container.v1.BinaryAuthorization desired_binary_authorization = 16;
  if (this->has_desired_binary_authorization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, HasBitSetters::desired_binary_authorization(this), output);
  }

  // string desired_logging_service = 19;
  if (this->desired_logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_logging_service().data(), static_cast<int>(this->desired_logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_logging_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->desired_logging_service(), output);
  }

  // .google.container.v1.ResourceUsageExportConfig desired_resource_usage_export_config = 21;
  if (this->has_desired_resource_usage_export_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, HasBitSetters::desired_resource_usage_export_config(this), output);
  }

  // .google.container.v1.VerticalPodAutoscaling desired_vertical_pod_autoscaling = 22;
  if (this->has_desired_vertical_pod_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, HasBitSetters::desired_vertical_pod_autoscaling(this), output);
  }

  // .google.container.v1.PrivateClusterConfig desired_private_cluster_config = 25;
  if (this->has_desired_private_cluster_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, HasBitSetters::desired_private_cluster_config(this), output);
  }

  // .google.container.v1.IntraNodeVisibilityConfig desired_intra_node_visibility_config = 26;
  if (this->has_desired_intra_node_visibility_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, HasBitSetters::desired_intra_node_visibility_config(this), output);
  }

  // .google.container.v1.DefaultSnatStatus desired_default_snat_status = 28;
  if (this->has_desired_default_snat_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, HasBitSetters::desired_default_snat_status(this), output);
  }

  // .google.container.v1.ReleaseChannel desired_release_channel = 31;
  if (this->has_desired_release_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, HasBitSetters::desired_release_channel(this), output);
  }

  // .google.container.v1.DatabaseEncryption desired_database_encryption = 46;
  if (this->has_desired_database_encryption()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, HasBitSetters::desired_database_encryption(this), output);
  }

  // .google.container.v1.WorkloadIdentityConfig desired_workload_identity_config = 47;
  if (this->has_desired_workload_identity_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, HasBitSetters::desired_workload_identity_config(this), output);
  }

  // .google.container.v1.ShieldedNodes desired_shielded_nodes = 48;
  if (this->has_desired_shielded_nodes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, HasBitSetters::desired_shielded_nodes(this), output);
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->desired_master_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ClusterUpdate)
}

::google::protobuf::uint8* ClusterUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desired_node_version(), target);
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desired_monitoring_service(), target);
  }

  // .google.container.v1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::desired_addons_config(this), target);
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->desired_node_pool_id(), target);
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->desired_image_type(), target);
  }

  // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::desired_node_pool_autoscaling(this), target);
  }

  // repeated string desired_locations = 10;
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_locations(i).data(), static_cast<int>(this->desired_locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->desired_locations(i), target);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::desired_master_authorized_networks_config(this), target);
  }

  // .google.container.v1.ClusterAutoscaling desired_cluster_autoscaling = 15;
  if (this->has_desired_cluster_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::desired_cluster_autoscaling(this), target);
  }

  // .google.container.v1.BinaryAuthorization desired_binary_authorization = 16;
  if (this->has_desired_binary_authorization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, HasBitSetters::desired_binary_authorization(this), target);
  }

  // string desired_logging_service = 19;
  if (this->desired_logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_logging_service().data(), static_cast<int>(this->desired_logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_logging_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->desired_logging_service(), target);
  }

  // .google.container.v1.ResourceUsageExportConfig desired_resource_usage_export_config = 21;
  if (this->has_desired_resource_usage_export_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, HasBitSetters::desired_resource_usage_export_config(this), target);
  }

  // .google.container.v1.VerticalPodAutoscaling desired_vertical_pod_autoscaling = 22;
  if (this->has_desired_vertical_pod_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, HasBitSetters::desired_vertical_pod_autoscaling(this), target);
  }

  // .google.container.v1.PrivateClusterConfig desired_private_cluster_config = 25;
  if (this->has_desired_private_cluster_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, HasBitSetters::desired_private_cluster_config(this), target);
  }

  // .google.container.v1.IntraNodeVisibilityConfig desired_intra_node_visibility_config = 26;
  if (this->has_desired_intra_node_visibility_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, HasBitSetters::desired_intra_node_visibility_config(this), target);
  }

  // .google.container.v1.DefaultSnatStatus desired_default_snat_status = 28;
  if (this->has_desired_default_snat_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, HasBitSetters::desired_default_snat_status(this), target);
  }

  // .google.container.v1.ReleaseChannel desired_release_channel = 31;
  if (this->has_desired_release_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, HasBitSetters::desired_release_channel(this), target);
  }

  // .google.container.v1.DatabaseEncryption desired_database_encryption = 46;
  if (this->has_desired_database_encryption()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        46, HasBitSetters::desired_database_encryption(this), target);
  }

  // .google.container.v1.WorkloadIdentityConfig desired_workload_identity_config = 47;
  if (this->has_desired_workload_identity_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        47, HasBitSetters::desired_workload_identity_config(this), target);
  }

  // .google.container.v1.ShieldedNodes desired_shielded_nodes = 48;
  if (this->has_desired_shielded_nodes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48, HasBitSetters::desired_shielded_nodes(this), target);
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->desired_master_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ClusterUpdate)
  return target;
}

size_t ClusterUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ClusterUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string desired_locations = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->desired_locations_size());
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->desired_locations(i));
  }

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_node_version());
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_monitoring_service());
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_node_pool_id());
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_image_type());
  }

  // string desired_logging_service = 19;
  if (this->desired_logging_service().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_logging_service());
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_master_version());
  }

  // .google.container.v1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_addons_config_);
  }

  // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_node_pool_autoscaling_);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_master_authorized_networks_config_);
  }

  // .google.container.v1.ClusterAutoscaling desired_cluster_autoscaling = 15;
  if (this->has_desired_cluster_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_cluster_autoscaling_);
  }

  // .google.container.v1.BinaryAuthorization desired_binary_authorization = 16;
  if (this->has_desired_binary_authorization()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_binary_authorization_);
  }

  // .google.container.v1.ResourceUsageExportConfig desired_resource_usage_export_config = 21;
  if (this->has_desired_resource_usage_export_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_resource_usage_export_config_);
  }

  // .google.container.v1.VerticalPodAutoscaling desired_vertical_pod_autoscaling = 22;
  if (this->has_desired_vertical_pod_autoscaling()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_vertical_pod_autoscaling_);
  }

  // .google.container.v1.PrivateClusterConfig desired_private_cluster_config = 25;
  if (this->has_desired_private_cluster_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_private_cluster_config_);
  }

  // .google.container.v1.IntraNodeVisibilityConfig desired_intra_node_visibility_config = 26;
  if (this->has_desired_intra_node_visibility_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_intra_node_visibility_config_);
  }

  // .google.container.v1.DefaultSnatStatus desired_default_snat_status = 28;
  if (this->has_desired_default_snat_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_default_snat_status_);
  }

  // .google.container.v1.ReleaseChannel desired_release_channel = 31;
  if (this->has_desired_release_channel()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_release_channel_);
  }

  // .google.container.v1.DatabaseEncryption desired_database_encryption = 46;
  if (this->has_desired_database_encryption()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_database_encryption_);
  }

  // .google.container.v1.WorkloadIdentityConfig desired_workload_identity_config = 47;
  if (this->has_desired_workload_identity_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_workload_identity_config_);
  }

  // .google.container.v1.ShieldedNodes desired_shielded_nodes = 48;
  if (this->has_desired_shielded_nodes()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_shielded_nodes_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ClusterUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<ClusterUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ClusterUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ClusterUpdate)
    MergeFrom(*source);
  }
}

void ClusterUpdate::MergeFrom(const ClusterUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ClusterUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  desired_locations_.MergeFrom(from.desired_locations_);
  if (from.desired_node_version().size() > 0) {

    desired_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_version_);
  }
  if (from.desired_monitoring_service().size() > 0) {

    desired_monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_monitoring_service_);
  }
  if (from.desired_node_pool_id().size() > 0) {

    desired_node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_pool_id_);
  }
  if (from.desired_image_type().size() > 0) {

    desired_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_image_type_);
  }
  if (from.desired_logging_service().size() > 0) {

    desired_logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_logging_service_);
  }
  if (from.desired_master_version().size() > 0) {

    desired_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_master_version_);
  }
  if (from.has_desired_addons_config()) {
    mutable_desired_addons_config()->::google::container::v1::AddonsConfig::MergeFrom(from.desired_addons_config());
  }
  if (from.has_desired_node_pool_autoscaling()) {
    mutable_desired_node_pool_autoscaling()->::google::container::v1::NodePoolAutoscaling::MergeFrom(from.desired_node_pool_autoscaling());
  }
  if (from.has_desired_master_authorized_networks_config()) {
    mutable_desired_master_authorized_networks_config()->::google::container::v1::MasterAuthorizedNetworksConfig::MergeFrom(from.desired_master_authorized_networks_config());
  }
  if (from.has_desired_cluster_autoscaling()) {
    mutable_desired_cluster_autoscaling()->::google::container::v1::ClusterAutoscaling::MergeFrom(from.desired_cluster_autoscaling());
  }
  if (from.has_desired_binary_authorization()) {
    mutable_desired_binary_authorization()->::google::container::v1::BinaryAuthorization::MergeFrom(from.desired_binary_authorization());
  }
  if (from.has_desired_resource_usage_export_config()) {
    mutable_desired_resource_usage_export_config()->::google::container::v1::ResourceUsageExportConfig::MergeFrom(from.desired_resource_usage_export_config());
  }
  if (from.has_desired_vertical_pod_autoscaling()) {
    mutable_desired_vertical_pod_autoscaling()->::google::container::v1::VerticalPodAutoscaling::MergeFrom(from.desired_vertical_pod_autoscaling());
  }
  if (from.has_desired_private_cluster_config()) {
    mutable_desired_private_cluster_config()->::google::container::v1::PrivateClusterConfig::MergeFrom(from.desired_private_cluster_config());
  }
  if (from.has_desired_intra_node_visibility_config()) {
    mutable_desired_intra_node_visibility_config()->::google::container::v1::IntraNodeVisibilityConfig::MergeFrom(from.desired_intra_node_visibility_config());
  }
  if (from.has_desired_default_snat_status()) {
    mutable_desired_default_snat_status()->::google::container::v1::DefaultSnatStatus::MergeFrom(from.desired_default_snat_status());
  }
  if (from.has_desired_release_channel()) {
    mutable_desired_release_channel()->::google::container::v1::ReleaseChannel::MergeFrom(from.desired_release_channel());
  }
  if (from.has_desired_database_encryption()) {
    mutable_desired_database_encryption()->::google::container::v1::DatabaseEncryption::MergeFrom(from.desired_database_encryption());
  }
  if (from.has_desired_workload_identity_config()) {
    mutable_desired_workload_identity_config()->::google::container::v1::WorkloadIdentityConfig::MergeFrom(from.desired_workload_identity_config());
  }
  if (from.has_desired_shielded_nodes()) {
    mutable_desired_shielded_nodes()->::google::container::v1::ShieldedNodes::MergeFrom(from.desired_shielded_nodes());
  }
}

void ClusterUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ClusterUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterUpdate::CopyFrom(const ClusterUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ClusterUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterUpdate::IsInitialized() const {
  return true;
}

void ClusterUpdate::Swap(ClusterUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterUpdate::InternalSwap(ClusterUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  desired_locations_.InternalSwap(CastToBase(&other->desired_locations_));
  desired_node_version_.Swap(&other->desired_node_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_monitoring_service_.Swap(&other->desired_monitoring_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_node_pool_id_.Swap(&other->desired_node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_image_type_.Swap(&other->desired_image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_logging_service_.Swap(&other->desired_logging_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_master_version_.Swap(&other->desired_master_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(desired_addons_config_, other->desired_addons_config_);
  swap(desired_node_pool_autoscaling_, other->desired_node_pool_autoscaling_);
  swap(desired_master_authorized_networks_config_, other->desired_master_authorized_networks_config_);
  swap(desired_cluster_autoscaling_, other->desired_cluster_autoscaling_);
  swap(desired_binary_authorization_, other->desired_binary_authorization_);
  swap(desired_resource_usage_export_config_, other->desired_resource_usage_export_config_);
  swap(desired_vertical_pod_autoscaling_, other->desired_vertical_pod_autoscaling_);
  swap(desired_private_cluster_config_, other->desired_private_cluster_config_);
  swap(desired_intra_node_visibility_config_, other->desired_intra_node_visibility_config_);
  swap(desired_default_snat_status_, other->desired_default_snat_status_);
  swap(desired_release_channel_, other->desired_release_channel_);
  swap(desired_database_encryption_, other->desired_database_encryption_);
  swap(desired_workload_identity_config_, other->desired_workload_identity_config_);
  swap(desired_shielded_nodes_, other->desired_shielded_nodes_);
}

::google::protobuf::Metadata ClusterUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Operation::InitAsDefaultInstance() {
  ::google::container::v1::_Operation_default_instance_._instance.get_mutable()->progress_ = const_cast< ::google::container::v1::OperationProgress*>(
      ::google::container::v1::OperationProgress::internal_default_instance());
}
class Operation::HasBitSetters {
 public:
  static const ::google::container::v1::OperationProgress& progress(const Operation* msg);
};

const ::google::container::v1::OperationProgress&
Operation::HasBitSetters::progress(const Operation* msg) {
  return *msg->progress_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operation::kNameFieldNumber;
const int Operation::kZoneFieldNumber;
const int Operation::kOperationTypeFieldNumber;
const int Operation::kStatusFieldNumber;
const int Operation::kDetailFieldNumber;
const int Operation::kStatusMessageFieldNumber;
const int Operation::kSelfLinkFieldNumber;
const int Operation::kTargetLinkFieldNumber;
const int Operation::kLocationFieldNumber;
const int Operation::kStartTimeFieldNumber;
const int Operation::kEndTimeFieldNumber;
const int Operation::kProgressFieldNumber;
const int Operation::kClusterConditionsFieldNumber;
const int Operation::kNodepoolConditionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operation::Operation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.Operation)
}
Operation::Operation(const Operation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      cluster_conditions_(from.cluster_conditions_),
      nodepool_conditions_(from.nodepool_conditions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  target_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_link().size() > 0) {
    target_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_link_);
  }
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail().size() > 0) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_time().size() > 0) {
    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  if (from.has_progress()) {
    progress_ = new ::google::container::v1::OperationProgress(*from.progress_);
  } else {
    progress_ = nullptr;
  }
  ::memcpy(&operation_type_, &from.operation_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&operation_type_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.Operation)
}

void Operation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Operation_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&progress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&progress_)) + sizeof(status_));
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:google.container.v1.Operation)
  SharedDtor();
}

void Operation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete progress_;
}

void Operation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Operation& Operation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Operation_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_conditions_.Clear();
  nodepool_conditions_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && progress_ != nullptr) {
    delete progress_;
  }
  progress_ = nullptr;
  ::memset(&operation_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&operation_type_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Operation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Operation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.Operation.Type operation_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_operation_type(static_cast<::google::container::v1::Operation_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1.Operation.Status status = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::container::v1::Operation_Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string status_message = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.status_message");
        object = msg->mutable_status_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string self_link = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.self_link");
        object = msg->mutable_self_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string target_link = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.target_link");
        object = msg->mutable_target_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string detail = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.detail");
        object = msg->mutable_detail();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string location = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.location");
        object = msg->mutable_location();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string start_time = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.start_time");
        object = msg->mutable_start_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string end_time = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Operation.end_time");
        object = msg->mutable_end_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.OperationProgress progress = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::OperationProgress::_InternalParse;
        object = msg->mutable_progress();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .google.container.v1.StatusCondition cluster_conditions = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::StatusCondition::_InternalParse;
          object = msg->add_cluster_conditions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 106 && (ptr += 1));
        break;
      }
      // repeated .google.container.v1.StatusCondition nodepool_conditions = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::StatusCondition::_InternalParse;
          object = msg->add_nodepool_conditions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 114 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Operation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.Operation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Operation.Type operation_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::google::container::v1::Operation_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Operation.Status status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1::Operation_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_link = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_link().data(), static_cast<int>(this->target_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.target_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail().data(), static_cast<int>(this->detail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string start_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string end_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end_time().data(), static_cast<int>(this->end_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.end_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.OperationProgress progress = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.StatusCondition cluster_conditions = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cluster_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.StatusCondition nodepool_conditions = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodepool_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.Operation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.Operation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Operation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // .google.container.v1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->operation_type(), output);
  }

  // .google.container.v1.Operation.Status status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // string status_message = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->status_message(), output);
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->self_link(), output);
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_link().data(), static_cast<int>(this->target_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.target_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->target_link(), output);
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->detail(), output);
  }

  // string location = 9;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->location(), output);
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->start_time(), output);
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.end_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->end_time(), output);
  }

  // .google.container.v1.OperationProgress progress = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::progress(this), output);
  }

  // repeated .google.container.v1.StatusCondition cluster_conditions = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cluster_conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->cluster_conditions(static_cast<int>(i)),
      output);
  }

  // repeated .google.container.v1.StatusCondition nodepool_conditions = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodepool_conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->nodepool_conditions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.Operation)
}

::google::protobuf::uint8* Operation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // .google.container.v1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->operation_type(), target);
  }

  // .google.container.v1.Operation.Status status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // string status_message = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->status_message(), target);
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->self_link(), target);
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_link().data(), static_cast<int>(this->target_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.target_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->target_link(), target);
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->detail(), target);
  }

  // string location = 9;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->location(), target);
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->start_time(), target);
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.end_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->end_time(), target);
  }

  // .google.container.v1.OperationProgress progress = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::progress(this), target);
  }

  // repeated .google.container.v1.StatusCondition cluster_conditions = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cluster_conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->cluster_conditions(static_cast<int>(i)), target);
  }

  // repeated .google.container.v1.StatusCondition nodepool_conditions = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodepool_conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->nodepool_conditions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.Operation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.StatusCondition cluster_conditions = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->cluster_conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cluster_conditions(static_cast<int>(i)));
    }
  }

  // repeated .google.container.v1.StatusCondition nodepool_conditions = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->nodepool_conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodepool_conditions(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string status_message = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->status_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_link());
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  // string location = 9;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_time());
  }

  // .google.container.v1.OperationProgress progress = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_progress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *progress_);
  }

  // .google.container.v1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  // .google.container.v1.Operation.Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  const Operation* source =
      ::google::protobuf::DynamicCastToGenerated<Operation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.Operation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.Operation)
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cluster_conditions_.MergeFrom(from.cluster_conditions_);
  nodepool_conditions_.MergeFrom(from.nodepool_conditions_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.target_link().size() > 0) {

    target_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_link_);
  }
  if (from.detail().size() > 0) {

    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  if (from.end_time().size() > 0) {

    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  if (from.has_progress()) {
    mutable_progress()->::google::container::v1::OperationProgress::MergeFrom(from.progress());
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Operation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::Swap(Operation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operation::InternalSwap(Operation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&cluster_conditions_)->InternalSwap(CastToBase(&other->cluster_conditions_));
  CastToBase(&nodepool_conditions_)->InternalSwap(CastToBase(&other->nodepool_conditions_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_message_.Swap(&other->status_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  self_link_.Swap(&other->self_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_link_.Swap(&other->target_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  detail_.Swap(&other->detail_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  start_time_.Swap(&other->start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_time_.Swap(&other->end_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(progress_, other->progress_);
  swap(operation_type_, other->operation_type_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OperationProgress_Metric::InitAsDefaultInstance() {
  ::google::container::v1::_OperationProgress_Metric_default_instance_.int_value_ = PROTOBUF_LONGLONG(0);
  ::google::container::v1::_OperationProgress_Metric_default_instance_.double_value_ = 0;
  ::google::container::v1::_OperationProgress_Metric_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class OperationProgress_Metric::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationProgress_Metric::kNameFieldNumber;
const int OperationProgress_Metric::kIntValueFieldNumber;
const int OperationProgress_Metric::kDoubleValueFieldNumber;
const int OperationProgress_Metric::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationProgress_Metric::OperationProgress_Metric()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.OperationProgress.Metric)
}
OperationProgress_Metric::OperationProgress_Metric(const OperationProgress_Metric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.OperationProgress.Metric)
}

void OperationProgress_Metric::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OperationProgress_Metric_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}

OperationProgress_Metric::~OperationProgress_Metric() {
  // @@protoc_insertion_point(destructor:google.container.v1.OperationProgress.Metric)
  SharedDtor();
}

void OperationProgress_Metric::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void OperationProgress_Metric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperationProgress_Metric& OperationProgress_Metric::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OperationProgress_Metric_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void OperationProgress_Metric::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.container.v1.OperationProgress.Metric)
  switch (value_case()) {
    case kIntValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void OperationProgress_Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.OperationProgress.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_value();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OperationProgress_Metric::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OperationProgress_Metric*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.OperationProgress.Metric.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 int_value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_int_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double double_value = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_double_value(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // string string_value = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.OperationProgress.Metric.string_value");
        object = msg->mutable_string_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OperationProgress_Metric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.OperationProgress.Metric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.OperationProgress.Metric.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.OperationProgress.Metric.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.OperationProgress.Metric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.OperationProgress.Metric)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OperationProgress_Metric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.OperationProgress.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.OperationProgress.Metric.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int64 int_value = 2;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int_value(), output);
  }

  // double double_value = 3;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_value(), output);
  }

  // string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.OperationProgress.Metric.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->string_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.OperationProgress.Metric)
}

::google::protobuf::uint8* OperationProgress_Metric::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.OperationProgress.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.OperationProgress.Metric.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int64 int_value = 2;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int_value(), target);
  }

  // double double_value = 3;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_value(), target);
  }

  // string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.OperationProgress.Metric.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->string_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.OperationProgress.Metric)
  return target;
}

size_t OperationProgress_Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.OperationProgress.Metric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (value_case()) {
    // int64 int_value = 2;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_value());
      break;
    }
    // double double_value = 3;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string string_value = 4;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationProgress_Metric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.OperationProgress.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationProgress_Metric* source =
      ::google::protobuf::DynamicCastToGenerated<OperationProgress_Metric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.OperationProgress.Metric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.OperationProgress.Metric)
    MergeFrom(*source);
  }
}

void OperationProgress_Metric::MergeFrom(const OperationProgress_Metric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.OperationProgress.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.value_case()) {
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void OperationProgress_Metric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.OperationProgress.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationProgress_Metric::CopyFrom(const OperationProgress_Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.OperationProgress.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationProgress_Metric::IsInitialized() const {
  return true;
}

void OperationProgress_Metric::Swap(OperationProgress_Metric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationProgress_Metric::InternalSwap(OperationProgress_Metric* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata OperationProgress_Metric::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OperationProgress::InitAsDefaultInstance() {
}
class OperationProgress::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationProgress::kNameFieldNumber;
const int OperationProgress::kStatusFieldNumber;
const int OperationProgress::kMetricsFieldNumber;
const int OperationProgress::kStagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationProgress::OperationProgress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.OperationProgress)
}
OperationProgress::OperationProgress(const OperationProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      metrics_(from.metrics_),
      stages_(from.stages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.OperationProgress)
}

void OperationProgress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OperationProgress_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

OperationProgress::~OperationProgress() {
  // @@protoc_insertion_point(destructor:google.container.v1.OperationProgress)
  SharedDtor();
}

void OperationProgress::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperationProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperationProgress& OperationProgress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OperationProgress_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void OperationProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.OperationProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  stages_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OperationProgress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OperationProgress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.OperationProgress.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.Operation.Status status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::container::v1::Operation_Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.container.v1.OperationProgress.Metric metrics = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::OperationProgress_Metric::_InternalParse;
          object = msg->add_metrics();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .google.container.v1.OperationProgress stages = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::OperationProgress::_InternalParse;
          object = msg->add_stages();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OperationProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.OperationProgress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.OperationProgress.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Operation.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1::Operation_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.OperationProgress.Metric metrics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.OperationProgress stages = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.OperationProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.OperationProgress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OperationProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.OperationProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.OperationProgress.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.container.v1.Operation.Status status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // repeated .google.container.v1.OperationProgress.Metric metrics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->metrics(static_cast<int>(i)),
      output);
  }

  // repeated .google.container.v1.OperationProgress stages = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->stages(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.OperationProgress)
}

::google::protobuf::uint8* OperationProgress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.OperationProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.OperationProgress.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.container.v1.Operation.Status status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // repeated .google.container.v1.OperationProgress.Metric metrics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->metrics(static_cast<int>(i)), target);
  }

  // repeated .google.container.v1.OperationProgress stages = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->stages(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.OperationProgress)
  return target;
}

size_t OperationProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.OperationProgress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.OperationProgress.Metric metrics = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metrics(static_cast<int>(i)));
    }
  }

  // repeated .google.container.v1.OperationProgress stages = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->stages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stages(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.Operation.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.OperationProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationProgress* source =
      ::google::protobuf::DynamicCastToGenerated<OperationProgress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.OperationProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.OperationProgress)
    MergeFrom(*source);
  }
}

void OperationProgress::MergeFrom(const OperationProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.OperationProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  stages_.MergeFrom(from.stages_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void OperationProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.OperationProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationProgress::CopyFrom(const OperationProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.OperationProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationProgress::IsInitialized() const {
  return true;
}

void OperationProgress::Swap(OperationProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationProgress::InternalSwap(OperationProgress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&metrics_)->InternalSwap(CastToBase(&other->metrics_));
  CastToBase(&stages_)->InternalSwap(CastToBase(&other->stages_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::google::protobuf::Metadata OperationProgress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateClusterRequest::InitAsDefaultInstance() {
  ::google::container::v1::_CreateClusterRequest_default_instance_._instance.get_mutable()->cluster_ = const_cast< ::google::container::v1::Cluster*>(
      ::google::container::v1::Cluster::internal_default_instance());
}
class CreateClusterRequest::HasBitSetters {
 public:
  static const ::google::container::v1::Cluster& cluster(const CreateClusterRequest* msg);
};

const ::google::container::v1::Cluster&
CreateClusterRequest::HasBitSetters::cluster(const CreateClusterRequest* msg) {
  return *msg->cluster_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterRequest::kProjectIdFieldNumber;
const int CreateClusterRequest::kZoneFieldNumber;
const int CreateClusterRequest::kClusterFieldNumber;
const int CreateClusterRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterRequest::CreateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CreateClusterRequest)
}
CreateClusterRequest::CreateClusterRequest(const CreateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_cluster()) {
    cluster_ = new ::google::container::v1::Cluster(*from.cluster_);
  } else {
    cluster_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CreateClusterRequest)
}

void CreateClusterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ = nullptr;
}

CreateClusterRequest::~CreateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.CreateClusterRequest)
  SharedDtor();
}

void CreateClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cluster_;
}

void CreateClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateClusterRequest& CreateClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CreateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && cluster_ != nullptr) {
    delete cluster_;
  }
  cluster_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateClusterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateClusterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CreateClusterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CreateClusterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.Cluster cluster = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::Cluster::_InternalParse;
        object = msg->mutable_cluster();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string parent = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CreateClusterRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CreateClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Cluster cluster = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateClusterRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CreateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CreateClusterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // .google.container.v1.Cluster cluster = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::cluster(this), output);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CreateClusterRequest)
}

::google::protobuf::uint8* CreateClusterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // .google.container.v1.Cluster cluster = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::cluster(this), target);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CreateClusterRequest)
  return target;
}

size_t CreateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CreateClusterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.container.v1.Cluster cluster = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateClusterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CreateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CreateClusterRequest)
    MergeFrom(*source);
  }
}

void CreateClusterRequest::MergeFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_cluster()) {
    mutable_cluster()->::google::container::v1::Cluster::MergeFrom(from.cluster());
  }
}

void CreateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterRequest::CopyFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterRequest::IsInitialized() const {
  return true;
}

void CreateClusterRequest::Swap(CreateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterRequest::InternalSwap(CreateClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cluster_, other->cluster_);
}

::google::protobuf::Metadata CreateClusterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetClusterRequest::InitAsDefaultInstance() {
}
class GetClusterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterRequest::kProjectIdFieldNumber;
const int GetClusterRequest::kZoneFieldNumber;
const int GetClusterRequest::kClusterIdFieldNumber;
const int GetClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterRequest::GetClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetClusterRequest)
}
GetClusterRequest::GetClusterRequest(const GetClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetClusterRequest)
}

void GetClusterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetClusterRequest::~GetClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetClusterRequest)
  SharedDtor();
}

void GetClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetClusterRequest& GetClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetClusterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetClusterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetClusterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetClusterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetClusterRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetClusterRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetClusterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetClusterRequest)
}

::google::protobuf::uint8* GetClusterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetClusterRequest)
  return target;
}

size_t GetClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetClusterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetClusterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetClusterRequest)
    MergeFrom(*source);
  }
}

void GetClusterRequest::MergeFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterRequest::CopyFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterRequest::IsInitialized() const {
  return true;
}

void GetClusterRequest::Swap(GetClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterRequest::InternalSwap(GetClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetClusterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateClusterRequest::InitAsDefaultInstance() {
  ::google::container::v1::_UpdateClusterRequest_default_instance_._instance.get_mutable()->update_ = const_cast< ::google::container::v1::ClusterUpdate*>(
      ::google::container::v1::ClusterUpdate::internal_default_instance());
}
class UpdateClusterRequest::HasBitSetters {
 public:
  static const ::google::container::v1::ClusterUpdate& update(const UpdateClusterRequest* msg);
};

const ::google::container::v1::ClusterUpdate&
UpdateClusterRequest::HasBitSetters::update(const UpdateClusterRequest* msg) {
  return *msg->update_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterRequest::kProjectIdFieldNumber;
const int UpdateClusterRequest::kZoneFieldNumber;
const int UpdateClusterRequest::kClusterIdFieldNumber;
const int UpdateClusterRequest::kUpdateFieldNumber;
const int UpdateClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterRequest::UpdateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.UpdateClusterRequest)
}
UpdateClusterRequest::UpdateClusterRequest(const UpdateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_update()) {
    update_ = new ::google::container::v1::ClusterUpdate(*from.update_);
  } else {
    update_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.UpdateClusterRequest)
}

void UpdateClusterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_ = nullptr;
}

UpdateClusterRequest::~UpdateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.UpdateClusterRequest)
  SharedDtor();
}

void UpdateClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete update_;
}

void UpdateClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateClusterRequest& UpdateClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpdateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && update_ != nullptr) {
    delete update_;
  }
  update_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateClusterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateClusterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateClusterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateClusterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateClusterRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.ClusterUpdate update = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ClusterUpdate::_InternalParse;
        object = msg->mutable_update();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateClusterRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.UpdateClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ClusterUpdate update = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.UpdateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.UpdateClusterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.ClusterUpdate update = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::update(this), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.UpdateClusterRequest)
}

::google::protobuf::uint8* UpdateClusterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.ClusterUpdate update = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::update(this), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.UpdateClusterRequest)
  return target;
}

size_t UpdateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.UpdateClusterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.ClusterUpdate update = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.UpdateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateClusterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.UpdateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.UpdateClusterRequest)
    MergeFrom(*source);
  }
}

void UpdateClusterRequest::MergeFrom(const UpdateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.UpdateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_update()) {
    mutable_update()->::google::container::v1::ClusterUpdate::MergeFrom(from.update());
  }
}

void UpdateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.UpdateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterRequest::CopyFrom(const UpdateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.UpdateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterRequest::IsInitialized() const {
  return true;
}

void UpdateClusterRequest::Swap(UpdateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterRequest::InternalSwap(UpdateClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(update_, other->update_);
}

::google::protobuf::Metadata UpdateClusterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateNodePoolRequest::InitAsDefaultInstance() {
  ::google::container::v1::_UpdateNodePoolRequest_default_instance_._instance.get_mutable()->workload_metadata_config_ = const_cast< ::google::container::v1::WorkloadMetadataConfig*>(
      ::google::container::v1::WorkloadMetadataConfig::internal_default_instance());
  ::google::container::v1::_UpdateNodePoolRequest_default_instance_._instance.get_mutable()->upgrade_settings_ = const_cast< ::google::container::v1::NodePool_UpgradeSettings*>(
      ::google::container::v1::NodePool_UpgradeSettings::internal_default_instance());
}
class UpdateNodePoolRequest::HasBitSetters {
 public:
  static const ::google::container::v1::WorkloadMetadataConfig& workload_metadata_config(const UpdateNodePoolRequest* msg);
  static const ::google::container::v1::NodePool_UpgradeSettings& upgrade_settings(const UpdateNodePoolRequest* msg);
};

const ::google::container::v1::WorkloadMetadataConfig&
UpdateNodePoolRequest::HasBitSetters::workload_metadata_config(const UpdateNodePoolRequest* msg) {
  return *msg->workload_metadata_config_;
}
const ::google::container::v1::NodePool_UpgradeSettings&
UpdateNodePoolRequest::HasBitSetters::upgrade_settings(const UpdateNodePoolRequest* msg) {
  return *msg->upgrade_settings_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateNodePoolRequest::kProjectIdFieldNumber;
const int UpdateNodePoolRequest::kZoneFieldNumber;
const int UpdateNodePoolRequest::kClusterIdFieldNumber;
const int UpdateNodePoolRequest::kNodePoolIdFieldNumber;
const int UpdateNodePoolRequest::kNodeVersionFieldNumber;
const int UpdateNodePoolRequest::kImageTypeFieldNumber;
const int UpdateNodePoolRequest::kNameFieldNumber;
const int UpdateNodePoolRequest::kLocationsFieldNumber;
const int UpdateNodePoolRequest::kWorkloadMetadataConfigFieldNumber;
const int UpdateNodePoolRequest::kUpgradeSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateNodePoolRequest::UpdateNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.UpdateNodePoolRequest)
}
UpdateNodePoolRequest::UpdateNodePoolRequest(const UpdateNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_version().size() > 0) {
    node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_version_);
  }
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_type().size() > 0) {
    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_workload_metadata_config()) {
    workload_metadata_config_ = new ::google::container::v1::WorkloadMetadataConfig(*from.workload_metadata_config_);
  } else {
    workload_metadata_config_ = nullptr;
  }
  if (from.has_upgrade_settings()) {
    upgrade_settings_ = new ::google::container::v1::NodePool_UpgradeSettings(*from.upgrade_settings_);
  } else {
    upgrade_settings_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.UpdateNodePoolRequest)
}

void UpdateNodePoolRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&workload_metadata_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upgrade_settings_) -
      reinterpret_cast<char*>(&workload_metadata_config_)) + sizeof(upgrade_settings_));
}

UpdateNodePoolRequest::~UpdateNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.UpdateNodePoolRequest)
  SharedDtor();
}

void UpdateNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete workload_metadata_config_;
  if (this != internal_default_instance()) delete upgrade_settings_;
}

void UpdateNodePoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateNodePoolRequest& UpdateNodePoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpdateNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && workload_metadata_config_ != nullptr) {
    delete workload_metadata_config_;
  }
  workload_metadata_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && upgrade_settings_ != nullptr) {
    delete upgrade_settings_;
  }
  upgrade_settings_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateNodePoolRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateNodePoolRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateNodePoolRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateNodePoolRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateNodePoolRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateNodePoolRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_version = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateNodePoolRequest.node_version");
        object = msg->mutable_node_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string image_type = 6 [(.google.api.field_behavior) = REQUIRED];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateNodePoolRequest.image_type");
        object = msg->mutable_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateNodePoolRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string locations = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateNodePoolRequest.locations");
          object = msg->add_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 106 && (ptr += 1));
        break;
      }
      // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::WorkloadMetadataConfig::_InternalParse;
        object = msg->mutable_workload_metadata_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodePool_UpgradeSettings::_InternalParse;
        object = msg->mutable_upgrade_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.UpdateNodePoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_version = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_version().data(), static_cast<int>(this->node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_type = 6 [(.google.api.field_behavior) = REQUIRED];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_type().data(), static_cast<int>(this->image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locations = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            static_cast<int>(this->locations(this->locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_workload_metadata_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upgrade_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.UpdateNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.UpdateNodePoolRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string node_version = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_version().data(), static_cast<int>(this->node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->node_version(), output);
  }

  // string image_type = 6 [(.google.api.field_behavior) = REQUIRED];
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->image_type(), output);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->locations(i), output);
  }

  // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
  if (this->has_workload_metadata_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::workload_metadata_config(this), output);
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 15;
  if (this->has_upgrade_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::upgrade_settings(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.UpdateNodePoolRequest)
}

::google::protobuf::uint8* UpdateNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string node_version = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_version().data(), static_cast<int>(this->node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->node_version(), target);
  }

  // string image_type = 6 [(.google.api.field_behavior) = REQUIRED];
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->image_type(), target);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->locations(i), target);
  }

  // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
  if (this->has_workload_metadata_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::workload_metadata_config(this), target);
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 15;
  if (this->has_upgrade_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::upgrade_settings(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.UpdateNodePoolRequest)
  return target;
}

size_t UpdateNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.UpdateNodePoolRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string locations = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locations_size());
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string node_version = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->node_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_version());
  }

  // string image_type = 6 [(.google.api.field_behavior) = REQUIRED];
  if (this->image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_type());
  }

  // string name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
  if (this->has_workload_metadata_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *workload_metadata_config_);
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 15;
  if (this->has_upgrade_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upgrade_settings_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.UpdateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateNodePoolRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateNodePoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.UpdateNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.UpdateNodePoolRequest)
    MergeFrom(*source);
  }
}

void UpdateNodePoolRequest::MergeFrom(const UpdateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.UpdateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.node_version().size() > 0) {

    node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_version_);
  }
  if (from.image_type().size() > 0) {

    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_workload_metadata_config()) {
    mutable_workload_metadata_config()->::google::container::v1::WorkloadMetadataConfig::MergeFrom(from.workload_metadata_config());
  }
  if (from.has_upgrade_settings()) {
    mutable_upgrade_settings()->::google::container::v1::NodePool_UpgradeSettings::MergeFrom(from.upgrade_settings());
  }
}

void UpdateNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.UpdateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNodePoolRequest::CopyFrom(const UpdateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.UpdateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNodePoolRequest::IsInitialized() const {
  return true;
}

void UpdateNodePoolRequest::Swap(UpdateNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateNodePoolRequest::InternalSwap(UpdateNodePoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  locations_.InternalSwap(CastToBase(&other->locations_));
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_version_.Swap(&other->node_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_type_.Swap(&other->image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(workload_metadata_config_, other->workload_metadata_config_);
  swap(upgrade_settings_, other->upgrade_settings_);
}

::google::protobuf::Metadata UpdateNodePoolRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolAutoscalingRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetNodePoolAutoscalingRequest_default_instance_._instance.get_mutable()->autoscaling_ = const_cast< ::google::container::v1::NodePoolAutoscaling*>(
      ::google::container::v1::NodePoolAutoscaling::internal_default_instance());
}
class SetNodePoolAutoscalingRequest::HasBitSetters {
 public:
  static const ::google::container::v1::NodePoolAutoscaling& autoscaling(const SetNodePoolAutoscalingRequest* msg);
};

const ::google::container::v1::NodePoolAutoscaling&
SetNodePoolAutoscalingRequest::HasBitSetters::autoscaling(const SetNodePoolAutoscalingRequest* msg) {
  return *msg->autoscaling_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolAutoscalingRequest::kProjectIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kZoneFieldNumber;
const int SetNodePoolAutoscalingRequest::kClusterIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kNodePoolIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kAutoscalingFieldNumber;
const int SetNodePoolAutoscalingRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolAutoscalingRequest::SetNodePoolAutoscalingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetNodePoolAutoscalingRequest)
}
SetNodePoolAutoscalingRequest::SetNodePoolAutoscalingRequest(const SetNodePoolAutoscalingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_autoscaling()) {
    autoscaling_ = new ::google::container::v1::NodePoolAutoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetNodePoolAutoscalingRequest)
}

void SetNodePoolAutoscalingRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNodePoolAutoscalingRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autoscaling_ = nullptr;
}

SetNodePoolAutoscalingRequest::~SetNodePoolAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetNodePoolAutoscalingRequest)
  SharedDtor();
}

void SetNodePoolAutoscalingRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void SetNodePoolAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNodePoolAutoscalingRequest& SetNodePoolAutoscalingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNodePoolAutoscalingRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetNodePoolAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNodePoolAutoscalingRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNodePoolAutoscalingRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolAutoscalingRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolAutoscalingRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolAutoscalingRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolAutoscalingRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.NodePoolAutoscaling autoscaling = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodePoolAutoscaling::_InternalParse;
        object = msg->mutable_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolAutoscalingRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNodePoolAutoscalingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetNodePoolAutoscalingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePoolAutoscaling autoscaling = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetNodePoolAutoscalingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetNodePoolAutoscalingRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNodePoolAutoscalingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::autoscaling(this), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetNodePoolAutoscalingRequest)
}

::google::protobuf::uint8* SetNodePoolAutoscalingRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::autoscaling(this), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetNodePoolAutoscalingRequest)
  return target;
}

size_t SetNodePoolAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetNodePoolAutoscalingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNodePoolAutoscalingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetNodePoolAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolAutoscalingRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNodePoolAutoscalingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetNodePoolAutoscalingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetNodePoolAutoscalingRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolAutoscalingRequest::MergeFrom(const SetNodePoolAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetNodePoolAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_autoscaling()) {
    mutable_autoscaling()->::google::container::v1::NodePoolAutoscaling::MergeFrom(from.autoscaling());
  }
}

void SetNodePoolAutoscalingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetNodePoolAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolAutoscalingRequest::CopyFrom(const SetNodePoolAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetNodePoolAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolAutoscalingRequest::IsInitialized() const {
  return true;
}

void SetNodePoolAutoscalingRequest::Swap(SetNodePoolAutoscalingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolAutoscalingRequest::InternalSwap(SetNodePoolAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(autoscaling_, other->autoscaling_);
}

::google::protobuf::Metadata SetNodePoolAutoscalingRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetLoggingServiceRequest::InitAsDefaultInstance() {
}
class SetLoggingServiceRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLoggingServiceRequest::kProjectIdFieldNumber;
const int SetLoggingServiceRequest::kZoneFieldNumber;
const int SetLoggingServiceRequest::kClusterIdFieldNumber;
const int SetLoggingServiceRequest::kLoggingServiceFieldNumber;
const int SetLoggingServiceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLoggingServiceRequest::SetLoggingServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetLoggingServiceRequest)
}
SetLoggingServiceRequest::SetLoggingServiceRequest(const SetLoggingServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logging_service().size() > 0) {
    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetLoggingServiceRequest)
}

void SetLoggingServiceRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetLoggingServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetLoggingServiceRequest::~SetLoggingServiceRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetLoggingServiceRequest)
  SharedDtor();
}

void SetLoggingServiceRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLoggingServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLoggingServiceRequest& SetLoggingServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetLoggingServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetLoggingServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetLoggingServiceRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetLoggingServiceRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLoggingServiceRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLoggingServiceRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLoggingServiceRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string logging_service = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLoggingServiceRequest.logging_service");
        object = msg->mutable_logging_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLoggingServiceRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLoggingServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetLoggingServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logging_service = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logging_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logging_service().data(), static_cast<int>(this->logging_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.logging_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetLoggingServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetLoggingServiceRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetLoggingServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string logging_service = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.logging_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->logging_service(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetLoggingServiceRequest)
}

::google::protobuf::uint8* SetLoggingServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string logging_service = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.logging_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->logging_service(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetLoggingServiceRequest)
  return target;
}

size_t SetLoggingServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetLoggingServiceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string logging_service = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->logging_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logging_service());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLoggingServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetLoggingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLoggingServiceRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetLoggingServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetLoggingServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetLoggingServiceRequest)
    MergeFrom(*source);
  }
}

void SetLoggingServiceRequest::MergeFrom(const SetLoggingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetLoggingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.logging_service().size() > 0) {

    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SetLoggingServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetLoggingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLoggingServiceRequest::CopyFrom(const SetLoggingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetLoggingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLoggingServiceRequest::IsInitialized() const {
  return true;
}

void SetLoggingServiceRequest::Swap(SetLoggingServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLoggingServiceRequest::InternalSwap(SetLoggingServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logging_service_.Swap(&other->logging_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetLoggingServiceRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetMonitoringServiceRequest::InitAsDefaultInstance() {
}
class SetMonitoringServiceRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMonitoringServiceRequest::kProjectIdFieldNumber;
const int SetMonitoringServiceRequest::kZoneFieldNumber;
const int SetMonitoringServiceRequest::kClusterIdFieldNumber;
const int SetMonitoringServiceRequest::kMonitoringServiceFieldNumber;
const int SetMonitoringServiceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMonitoringServiceRequest::SetMonitoringServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetMonitoringServiceRequest)
}
SetMonitoringServiceRequest::SetMonitoringServiceRequest(const SetMonitoringServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.monitoring_service().size() > 0) {
    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetMonitoringServiceRequest)
}

void SetMonitoringServiceRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetMonitoringServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetMonitoringServiceRequest::~SetMonitoringServiceRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetMonitoringServiceRequest)
  SharedDtor();
}

void SetMonitoringServiceRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetMonitoringServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMonitoringServiceRequest& SetMonitoringServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetMonitoringServiceRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetMonitoringServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetMonitoringServiceRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetMonitoringServiceRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMonitoringServiceRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMonitoringServiceRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMonitoringServiceRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string monitoring_service = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMonitoringServiceRequest.monitoring_service");
        object = msg->mutable_monitoring_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMonitoringServiceRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetMonitoringServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetMonitoringServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string monitoring_service = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetMonitoringServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetMonitoringServiceRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetMonitoringServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string monitoring_service = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->monitoring_service(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetMonitoringServiceRequest)
}

::google::protobuf::uint8* SetMonitoringServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string monitoring_service = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->monitoring_service(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetMonitoringServiceRequest)
  return target;
}

size_t SetMonitoringServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetMonitoringServiceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string monitoring_service = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitoring_service());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMonitoringServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetMonitoringServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMonitoringServiceRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetMonitoringServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetMonitoringServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetMonitoringServiceRequest)
    MergeFrom(*source);
  }
}

void SetMonitoringServiceRequest::MergeFrom(const SetMonitoringServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetMonitoringServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.monitoring_service().size() > 0) {

    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SetMonitoringServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetMonitoringServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMonitoringServiceRequest::CopyFrom(const SetMonitoringServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetMonitoringServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMonitoringServiceRequest::IsInitialized() const {
  return true;
}

void SetMonitoringServiceRequest::Swap(SetMonitoringServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMonitoringServiceRequest::InternalSwap(SetMonitoringServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  monitoring_service_.Swap(&other->monitoring_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetMonitoringServiceRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetAddonsConfigRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetAddonsConfigRequest_default_instance_._instance.get_mutable()->addons_config_ = const_cast< ::google::container::v1::AddonsConfig*>(
      ::google::container::v1::AddonsConfig::internal_default_instance());
}
class SetAddonsConfigRequest::HasBitSetters {
 public:
  static const ::google::container::v1::AddonsConfig& addons_config(const SetAddonsConfigRequest* msg);
};

const ::google::container::v1::AddonsConfig&
SetAddonsConfigRequest::HasBitSetters::addons_config(const SetAddonsConfigRequest* msg) {
  return *msg->addons_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAddonsConfigRequest::kProjectIdFieldNumber;
const int SetAddonsConfigRequest::kZoneFieldNumber;
const int SetAddonsConfigRequest::kClusterIdFieldNumber;
const int SetAddonsConfigRequest::kAddonsConfigFieldNumber;
const int SetAddonsConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAddonsConfigRequest::SetAddonsConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetAddonsConfigRequest)
}
SetAddonsConfigRequest::SetAddonsConfigRequest(const SetAddonsConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_addons_config()) {
    addons_config_ = new ::google::container::v1::AddonsConfig(*from.addons_config_);
  } else {
    addons_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetAddonsConfigRequest)
}

void SetAddonsConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetAddonsConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addons_config_ = nullptr;
}

SetAddonsConfigRequest::~SetAddonsConfigRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetAddonsConfigRequest)
  SharedDtor();
}

void SetAddonsConfigRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete addons_config_;
}

void SetAddonsConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAddonsConfigRequest& SetAddonsConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetAddonsConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetAddonsConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && addons_config_ != nullptr) {
    delete addons_config_;
  }
  addons_config_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetAddonsConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetAddonsConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetAddonsConfigRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetAddonsConfigRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetAddonsConfigRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.AddonsConfig addons_config = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::AddonsConfig::_InternalParse;
        object = msg->mutable_addons_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetAddonsConfigRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetAddonsConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetAddonsConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetAddonsConfigRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetAddonsConfigRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetAddonsConfigRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AddonsConfig addons_config = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetAddonsConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetAddonsConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetAddonsConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetAddonsConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.AddonsConfig addons_config = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::addons_config(this), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetAddonsConfigRequest)
}

::google::protobuf::uint8* SetAddonsConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.AddonsConfig addons_config = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::addons_config(this), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetAddonsConfigRequest)
  return target;
}

size_t SetAddonsConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetAddonsConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.AddonsConfig addons_config = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *addons_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAddonsConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetAddonsConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAddonsConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetAddonsConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetAddonsConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetAddonsConfigRequest)
    MergeFrom(*source);
  }
}

void SetAddonsConfigRequest::MergeFrom(const SetAddonsConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetAddonsConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_addons_config()) {
    mutable_addons_config()->::google::container::v1::AddonsConfig::MergeFrom(from.addons_config());
  }
}

void SetAddonsConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetAddonsConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAddonsConfigRequest::CopyFrom(const SetAddonsConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetAddonsConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAddonsConfigRequest::IsInitialized() const {
  return true;
}

void SetAddonsConfigRequest::Swap(SetAddonsConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAddonsConfigRequest::InternalSwap(SetAddonsConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(addons_config_, other->addons_config_);
}

::google::protobuf::Metadata SetAddonsConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetLocationsRequest::InitAsDefaultInstance() {
}
class SetLocationsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLocationsRequest::kProjectIdFieldNumber;
const int SetLocationsRequest::kZoneFieldNumber;
const int SetLocationsRequest::kClusterIdFieldNumber;
const int SetLocationsRequest::kLocationsFieldNumber;
const int SetLocationsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLocationsRequest::SetLocationsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetLocationsRequest)
}
SetLocationsRequest::SetLocationsRequest(const SetLocationsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetLocationsRequest)
}

void SetLocationsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetLocationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetLocationsRequest::~SetLocationsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetLocationsRequest)
  SharedDtor();
}

void SetLocationsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLocationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLocationsRequest& SetLocationsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetLocationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetLocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetLocationsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetLocationsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLocationsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLocationsRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLocationsRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string locations = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.SetLocationsRequest.locations");
          object = msg->add_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLocationsRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLocationsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetLocationsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locations = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            static_cast<int>(this->locations(this->locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetLocationsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetLocationsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetLocationsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // repeated string locations = 4 [(.google.api.field_behavior) = REQUIRED];
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->locations(i), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetLocationsRequest)
}

::google::protobuf::uint8* SetLocationsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // repeated string locations = 4 [(.google.api.field_behavior) = REQUIRED];
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->locations(i), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetLocationsRequest)
  return target;
}

size_t SetLocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetLocationsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string locations = 4 [(.google.api.field_behavior) = REQUIRED];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locations_size());
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLocationsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLocationsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetLocationsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetLocationsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetLocationsRequest)
    MergeFrom(*source);
  }
}

void SetLocationsRequest::MergeFrom(const SetLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SetLocationsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLocationsRequest::CopyFrom(const SetLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLocationsRequest::IsInitialized() const {
  return true;
}

void SetLocationsRequest::Swap(SetLocationsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLocationsRequest::InternalSwap(SetLocationsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  locations_.InternalSwap(CastToBase(&other->locations_));
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetLocationsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateMasterRequest::InitAsDefaultInstance() {
}
class UpdateMasterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateMasterRequest::kProjectIdFieldNumber;
const int UpdateMasterRequest::kZoneFieldNumber;
const int UpdateMasterRequest::kClusterIdFieldNumber;
const int UpdateMasterRequest::kMasterVersionFieldNumber;
const int UpdateMasterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateMasterRequest::UpdateMasterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.UpdateMasterRequest)
}
UpdateMasterRequest::UpdateMasterRequest(const UpdateMasterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.master_version().size() > 0) {
    master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_version_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.UpdateMasterRequest)
}

void UpdateMasterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateMasterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateMasterRequest::~UpdateMasterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.UpdateMasterRequest)
  SharedDtor();
}

void UpdateMasterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateMasterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateMasterRequest& UpdateMasterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateMasterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpdateMasterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateMasterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateMasterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateMasterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateMasterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateMasterRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string master_version = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateMasterRequest.master_version");
        object = msg->mutable_master_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UpdateMasterRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateMasterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.UpdateMasterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string master_version = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->master_version().data(), static_cast<int>(this->master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.UpdateMasterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.UpdateMasterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateMasterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string master_version = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_version().data(), static_cast<int>(this->master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->master_version(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.UpdateMasterRequest)
}

::google::protobuf::uint8* UpdateMasterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string master_version = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_version().data(), static_cast<int>(this->master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->master_version(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.UpdateMasterRequest)
  return target;
}

size_t UpdateMasterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.UpdateMasterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string master_version = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->master_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->master_version());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateMasterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.UpdateMasterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateMasterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateMasterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.UpdateMasterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.UpdateMasterRequest)
    MergeFrom(*source);
  }
}

void UpdateMasterRequest::MergeFrom(const UpdateMasterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.UpdateMasterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.master_version().size() > 0) {

    master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_version_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void UpdateMasterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.UpdateMasterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateMasterRequest::CopyFrom(const UpdateMasterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.UpdateMasterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMasterRequest::IsInitialized() const {
  return true;
}

void UpdateMasterRequest::Swap(UpdateMasterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateMasterRequest::InternalSwap(UpdateMasterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  master_version_.Swap(&other->master_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UpdateMasterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetMasterAuthRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetMasterAuthRequest_default_instance_._instance.get_mutable()->update_ = const_cast< ::google::container::v1::MasterAuth*>(
      ::google::container::v1::MasterAuth::internal_default_instance());
}
class SetMasterAuthRequest::HasBitSetters {
 public:
  static const ::google::container::v1::MasterAuth& update(const SetMasterAuthRequest* msg);
};

const ::google::container::v1::MasterAuth&
SetMasterAuthRequest::HasBitSetters::update(const SetMasterAuthRequest* msg) {
  return *msg->update_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMasterAuthRequest::kProjectIdFieldNumber;
const int SetMasterAuthRequest::kZoneFieldNumber;
const int SetMasterAuthRequest::kClusterIdFieldNumber;
const int SetMasterAuthRequest::kActionFieldNumber;
const int SetMasterAuthRequest::kUpdateFieldNumber;
const int SetMasterAuthRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMasterAuthRequest::SetMasterAuthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetMasterAuthRequest)
}
SetMasterAuthRequest::SetMasterAuthRequest(const SetMasterAuthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_update()) {
    update_ = new ::google::container::v1::MasterAuth(*from.update_);
  } else {
    update_ = nullptr;
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetMasterAuthRequest)
}

void SetMasterAuthRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetMasterAuthRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&update_)) + sizeof(action_));
}

SetMasterAuthRequest::~SetMasterAuthRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetMasterAuthRequest)
  SharedDtor();
}

void SetMasterAuthRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete update_;
}

void SetMasterAuthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMasterAuthRequest& SetMasterAuthRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetMasterAuthRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetMasterAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && update_ != nullptr) {
    delete update_;
  }
  update_ = nullptr;
  action_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetMasterAuthRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetMasterAuthRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMasterAuthRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMasterAuthRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMasterAuthRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.SetMasterAuthRequest.Action action = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_action(static_cast<::google::container::v1::SetMasterAuthRequest_Action>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1.MasterAuth update = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MasterAuth::_InternalParse;
        object = msg->mutable_update();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMasterAuthRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetMasterAuthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetMasterAuthRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMasterAuthRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMasterAuthRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMasterAuthRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.SetMasterAuthRequest.Action action = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::google::container::v1::SetMasterAuthRequest_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MasterAuth update = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMasterAuthRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetMasterAuthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetMasterAuthRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetMasterAuthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.SetMasterAuthRequest.Action action = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->action(), output);
  }

  // .google.container.v1.MasterAuth update = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::update(this), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetMasterAuthRequest)
}

::google::protobuf::uint8* SetMasterAuthRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.SetMasterAuthRequest.Action action = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->action(), target);
  }

  // .google.container.v1.MasterAuth update = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::update(this), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetMasterAuthRequest)
  return target;
}

size_t SetMasterAuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetMasterAuthRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.MasterAuth update = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_);
  }

  // .google.container.v1.SetMasterAuthRequest.Action action = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMasterAuthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetMasterAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMasterAuthRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetMasterAuthRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetMasterAuthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetMasterAuthRequest)
    MergeFrom(*source);
  }
}

void SetMasterAuthRequest::MergeFrom(const SetMasterAuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetMasterAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_update()) {
    mutable_update()->::google::container::v1::MasterAuth::MergeFrom(from.update());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void SetMasterAuthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetMasterAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMasterAuthRequest::CopyFrom(const SetMasterAuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetMasterAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMasterAuthRequest::IsInitialized() const {
  return true;
}

void SetMasterAuthRequest::Swap(SetMasterAuthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMasterAuthRequest::InternalSwap(SetMasterAuthRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(update_, other->update_);
  swap(action_, other->action_);
}

::google::protobuf::Metadata SetMasterAuthRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteClusterRequest::InitAsDefaultInstance() {
}
class DeleteClusterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterRequest::kProjectIdFieldNumber;
const int DeleteClusterRequest::kZoneFieldNumber;
const int DeleteClusterRequest::kClusterIdFieldNumber;
const int DeleteClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterRequest::DeleteClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DeleteClusterRequest)
}
DeleteClusterRequest::DeleteClusterRequest(const DeleteClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DeleteClusterRequest)
}

void DeleteClusterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteClusterRequest::~DeleteClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.DeleteClusterRequest)
  SharedDtor();
}

void DeleteClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteClusterRequest& DeleteClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteClusterRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DeleteClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteClusterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteClusterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteClusterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteClusterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteClusterRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteClusterRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DeleteClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DeleteClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DeleteClusterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DeleteClusterRequest)
}

::google::protobuf::uint8* DeleteClusterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DeleteClusterRequest)
  return target;
}

size_t DeleteClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DeleteClusterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteClusterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DeleteClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DeleteClusterRequest)
    MergeFrom(*source);
  }
}

void DeleteClusterRequest::MergeFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterRequest::CopyFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterRequest::IsInitialized() const {
  return true;
}

void DeleteClusterRequest::Swap(DeleteClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterRequest::InternalSwap(DeleteClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteClusterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListClustersRequest::InitAsDefaultInstance() {
}
class ListClustersRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersRequest::kProjectIdFieldNumber;
const int ListClustersRequest::kZoneFieldNumber;
const int ListClustersRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersRequest::ListClustersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListClustersRequest)
}
ListClustersRequest::ListClustersRequest(const ListClustersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListClustersRequest)
}

void ListClustersRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListClustersRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListClustersRequest::~ListClustersRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListClustersRequest)
  SharedDtor();
}

void ListClustersRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClustersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListClustersRequest& ListClustersRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListClustersRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListClustersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListClustersRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListClustersRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListClustersRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListClustersRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListClustersRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListClustersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListClustersRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListClustersRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListClustersRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListClustersRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListClustersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListClustersRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListClustersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListClustersRequest)
}

::google::protobuf::uint8* ListClustersRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListClustersRequest)
  return target;
}

size_t ListClustersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListClustersRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListClustersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListClustersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListClustersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListClustersRequest)
    MergeFrom(*source);
  }
}

void ListClustersRequest::MergeFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void ListClustersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersRequest::CopyFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersRequest::IsInitialized() const {
  return true;
}

void ListClustersRequest::Swap(ListClustersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersRequest::InternalSwap(ListClustersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListClustersRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListClustersResponse::InitAsDefaultInstance() {
}
class ListClustersResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersResponse::kClustersFieldNumber;
const int ListClustersResponse::kMissingZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersResponse::ListClustersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListClustersResponse)
}
ListClustersResponse::ListClustersResponse(const ListClustersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      clusters_(from.clusters_),
      missing_zones_(from.missing_zones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListClustersResponse)
}

void ListClustersResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListClustersResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
}

ListClustersResponse::~ListClustersResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListClustersResponse)
  SharedDtor();
}

void ListClustersResponse::SharedDtor() {
}

void ListClustersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListClustersResponse& ListClustersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListClustersResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListClustersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  missing_zones_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListClustersResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListClustersResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.container.v1.Cluster clusters = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::Cluster::_InternalParse;
          object = msg->add_clusters();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ListClustersResponse.missing_zones");
          object = msg->add_missing_zones();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListClustersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListClustersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1.Cluster clusters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_missing_zones()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->missing_zones(this->missing_zones_size() - 1).data(),
            static_cast<int>(this->missing_zones(this->missing_zones_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListClustersResponse.missing_zones"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListClustersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListClustersResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListClustersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->clusters(static_cast<int>(i)),
      output);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersResponse.missing_zones");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->missing_zones(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListClustersResponse)
}

::google::protobuf::uint8* ListClustersResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->clusters(static_cast<int>(i)), target);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersResponse.missing_zones");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->missing_zones(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListClustersResponse)
  return target;
}

size_t ListClustersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListClustersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.Cluster clusters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->clusters(static_cast<int>(i)));
    }
  }

  // repeated string missing_zones = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->missing_zones_size());
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->missing_zones(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListClustersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListClustersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListClustersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListClustersResponse)
    MergeFrom(*source);
  }
}

void ListClustersResponse::MergeFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  missing_zones_.MergeFrom(from.missing_zones_);
}

void ListClustersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersResponse::CopyFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersResponse::IsInitialized() const {
  return true;
}

void ListClustersResponse::Swap(ListClustersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersResponse::InternalSwap(ListClustersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&clusters_)->InternalSwap(CastToBase(&other->clusters_));
  missing_zones_.InternalSwap(CastToBase(&other->missing_zones_));
}

::google::protobuf::Metadata ListClustersResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetOperationRequest::InitAsDefaultInstance() {
}
class GetOperationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOperationRequest::kProjectIdFieldNumber;
const int GetOperationRequest::kZoneFieldNumber;
const int GetOperationRequest::kOperationIdFieldNumber;
const int GetOperationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOperationRequest::GetOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetOperationRequest)
}
GetOperationRequest::GetOperationRequest(const GetOperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetOperationRequest)
}

void GetOperationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetOperationRequest::~GetOperationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetOperationRequest)
  SharedDtor();
}

void GetOperationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOperationRequest& GetOperationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetOperationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetOperationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetOperationRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetOperationRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string operation_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetOperationRequest.operation_id");
        object = msg->mutable_operation_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetOperationRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetOperationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOperationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOperationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOperationRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOperationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetOperationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string operation_id = 3 [deprecated = true];
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operation_id(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetOperationRequest)
}

::google::protobuf::uint8* GetOperationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string operation_id = 3 [deprecated = true];
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operation_id(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetOperationRequest)
  return target;
}

size_t GetOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetOperationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string operation_id = 3 [deprecated = true];
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOperationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetOperationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetOperationRequest)
    MergeFrom(*source);
  }
}

void GetOperationRequest::MergeFrom(const GetOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.operation_id().size() > 0) {

    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOperationRequest::CopyFrom(const GetOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOperationRequest::IsInitialized() const {
  return true;
}

void GetOperationRequest::Swap(GetOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOperationRequest::InternalSwap(GetOperationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetOperationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListOperationsRequest::InitAsDefaultInstance() {
}
class ListOperationsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOperationsRequest::kProjectIdFieldNumber;
const int ListOperationsRequest::kZoneFieldNumber;
const int ListOperationsRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOperationsRequest::ListOperationsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListOperationsRequest)
}
ListOperationsRequest::ListOperationsRequest(const ListOperationsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListOperationsRequest)
}

void ListOperationsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListOperationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListOperationsRequest::~ListOperationsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListOperationsRequest)
  SharedDtor();
}

void ListOperationsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListOperationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListOperationsRequest& ListOperationsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListOperationsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListOperationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListOperationsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListOperationsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListOperationsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListOperationsRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListOperationsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListOperationsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListOperationsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListOperationsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListOperationsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListOperationsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListOperationsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListOperationsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListOperationsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListOperationsRequest)
}

::google::protobuf::uint8* ListOperationsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListOperationsRequest)
  return target;
}

size_t ListOperationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListOperationsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOperationsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListOperationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOperationsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListOperationsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListOperationsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListOperationsRequest)
    MergeFrom(*source);
  }
}

void ListOperationsRequest::MergeFrom(const ListOperationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListOperationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void ListOperationsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListOperationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOperationsRequest::CopyFrom(const ListOperationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListOperationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOperationsRequest::IsInitialized() const {
  return true;
}

void ListOperationsRequest::Swap(ListOperationsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOperationsRequest::InternalSwap(ListOperationsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListOperationsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CancelOperationRequest::InitAsDefaultInstance() {
}
class CancelOperationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelOperationRequest::kProjectIdFieldNumber;
const int CancelOperationRequest::kZoneFieldNumber;
const int CancelOperationRequest::kOperationIdFieldNumber;
const int CancelOperationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelOperationRequest::CancelOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CancelOperationRequest)
}
CancelOperationRequest::CancelOperationRequest(const CancelOperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CancelOperationRequest)
}

void CancelOperationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CancelOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CancelOperationRequest::~CancelOperationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.CancelOperationRequest)
  SharedDtor();
}

void CancelOperationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelOperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelOperationRequest& CancelOperationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CancelOperationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CancelOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CancelOperationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CancelOperationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CancelOperationRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CancelOperationRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string operation_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CancelOperationRequest.operation_id");
        object = msg->mutable_operation_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CancelOperationRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CancelOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CancelOperationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CancelOperationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CancelOperationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CancelOperationRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CancelOperationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CancelOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CancelOperationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CancelOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string operation_id = 3 [deprecated = true];
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operation_id(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CancelOperationRequest)
}

::google::protobuf::uint8* CancelOperationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string operation_id = 3 [deprecated = true];
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operation_id(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CancelOperationRequest)
  return target;
}

size_t CancelOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CancelOperationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string operation_id = 3 [deprecated = true];
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CancelOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelOperationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CancelOperationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CancelOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CancelOperationRequest)
    MergeFrom(*source);
  }
}

void CancelOperationRequest::MergeFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CancelOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.operation_id().size() > 0) {

    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CancelOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CancelOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOperationRequest::CopyFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CancelOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOperationRequest::IsInitialized() const {
  return true;
}

void CancelOperationRequest::Swap(CancelOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelOperationRequest::InternalSwap(CancelOperationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CancelOperationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListOperationsResponse::InitAsDefaultInstance() {
}
class ListOperationsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOperationsResponse::kOperationsFieldNumber;
const int ListOperationsResponse::kMissingZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOperationsResponse::ListOperationsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListOperationsResponse)
}
ListOperationsResponse::ListOperationsResponse(const ListOperationsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      operations_(from.operations_),
      missing_zones_(from.missing_zones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListOperationsResponse)
}

void ListOperationsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListOperationsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
}

ListOperationsResponse::~ListOperationsResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListOperationsResponse)
  SharedDtor();
}

void ListOperationsResponse::SharedDtor() {
}

void ListOperationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListOperationsResponse& ListOperationsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListOperationsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListOperationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  missing_zones_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListOperationsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListOperationsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.container.v1.Operation operations = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::Operation::_InternalParse;
          object = msg->add_operations();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ListOperationsResponse.missing_zones");
          object = msg->add_missing_zones();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListOperationsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListOperationsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1.Operation operations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_operations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_missing_zones()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->missing_zones(this->missing_zones_size() - 1).data(),
            static_cast<int>(this->missing_zones(this->missing_zones_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListOperationsResponse.missing_zones"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListOperationsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListOperationsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListOperationsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Operation operations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->operations(static_cast<int>(i)),
      output);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsResponse.missing_zones");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->missing_zones(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListOperationsResponse)
}

::google::protobuf::uint8* ListOperationsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Operation operations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->operations(static_cast<int>(i)), target);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsResponse.missing_zones");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->missing_zones(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListOperationsResponse)
  return target;
}

size_t ListOperationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListOperationsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.Operation operations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->operations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operations(static_cast<int>(i)));
    }
  }

  // repeated string missing_zones = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->missing_zones_size());
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->missing_zones(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOperationsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListOperationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOperationsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListOperationsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListOperationsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListOperationsResponse)
    MergeFrom(*source);
  }
}

void ListOperationsResponse::MergeFrom(const ListOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListOperationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  missing_zones_.MergeFrom(from.missing_zones_);
}

void ListOperationsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListOperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOperationsResponse::CopyFrom(const ListOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListOperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOperationsResponse::IsInitialized() const {
  return true;
}

void ListOperationsResponse::Swap(ListOperationsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOperationsResponse::InternalSwap(ListOperationsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&operations_)->InternalSwap(CastToBase(&other->operations_));
  missing_zones_.InternalSwap(CastToBase(&other->missing_zones_));
}

::google::protobuf::Metadata ListOperationsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetServerConfigRequest::InitAsDefaultInstance() {
}
class GetServerConfigRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServerConfigRequest::kProjectIdFieldNumber;
const int GetServerConfigRequest::kZoneFieldNumber;
const int GetServerConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServerConfigRequest::GetServerConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetServerConfigRequest)
}
GetServerConfigRequest::GetServerConfigRequest(const GetServerConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetServerConfigRequest)
}

void GetServerConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetServerConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetServerConfigRequest::~GetServerConfigRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetServerConfigRequest)
  SharedDtor();
}

void GetServerConfigRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServerConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetServerConfigRequest& GetServerConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetServerConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetServerConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetServerConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetServerConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetServerConfigRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetServerConfigRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetServerConfigRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetServerConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetServerConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetServerConfigRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetServerConfigRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetServerConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetServerConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetServerConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetServerConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetServerConfigRequest)
}

::google::protobuf::uint8* GetServerConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetServerConfigRequest)
  return target;
}

size_t GetServerConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetServerConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServerConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetServerConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServerConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetServerConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetServerConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetServerConfigRequest)
    MergeFrom(*source);
  }
}

void GetServerConfigRequest::MergeFrom(const GetServerConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetServerConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetServerConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetServerConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServerConfigRequest::CopyFrom(const GetServerConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetServerConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServerConfigRequest::IsInitialized() const {
  return true;
}

void GetServerConfigRequest::Swap(GetServerConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServerConfigRequest::InternalSwap(GetServerConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetServerConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerConfig_ReleaseChannelConfig::InitAsDefaultInstance() {
}
class ServerConfig_ReleaseChannelConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConfig_ReleaseChannelConfig::kChannelFieldNumber;
const int ServerConfig_ReleaseChannelConfig::kDefaultVersionFieldNumber;
const int ServerConfig_ReleaseChannelConfig::kValidVersionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConfig_ReleaseChannelConfig::ServerConfig_ReleaseChannelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ServerConfig.ReleaseChannelConfig)
}
ServerConfig_ReleaseChannelConfig::ServerConfig_ReleaseChannelConfig(const ServerConfig_ReleaseChannelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      valid_versions_(from.valid_versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  default_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_version().size() > 0) {
    default_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_version_);
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ServerConfig.ReleaseChannelConfig)
}

void ServerConfig_ReleaseChannelConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServerConfig_ReleaseChannelConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  default_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
}

ServerConfig_ReleaseChannelConfig::~ServerConfig_ReleaseChannelConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ServerConfig.ReleaseChannelConfig)
  SharedDtor();
}

void ServerConfig_ReleaseChannelConfig::SharedDtor() {
  default_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerConfig_ReleaseChannelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerConfig_ReleaseChannelConfig& ServerConfig_ReleaseChannelConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerConfig_ReleaseChannelConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerConfig_ReleaseChannelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valid_versions_.Clear();
  default_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerConfig_ReleaseChannelConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerConfig_ReleaseChannelConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.ReleaseChannel.Channel channel = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_channel(static_cast<::google::container::v1::ReleaseChannel_Channel>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string default_version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ServerConfig.ReleaseChannelConfig.default_version");
        object = msg->mutable_default_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string valid_versions = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ServerConfig.ReleaseChannelConfig.valid_versions");
          object = msg->add_valid_versions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerConfig_ReleaseChannelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.ReleaseChannel.Channel channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_channel(static_cast< ::google::container::v1::ReleaseChannel_Channel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_version().data(), static_cast<int>(this->default_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.ReleaseChannelConfig.default_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_versions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_versions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_versions(this->valid_versions_size() - 1).data(),
            static_cast<int>(this->valid_versions(this->valid_versions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.ReleaseChannelConfig.valid_versions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ServerConfig.ReleaseChannelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ServerConfig.ReleaseChannelConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerConfig_ReleaseChannelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.ReleaseChannel.Channel channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->channel(), output);
  }

  // string default_version = 2;
  if (this->default_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_version().data(), static_cast<int>(this->default_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.ReleaseChannelConfig.default_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->default_version(), output);
  }

  // repeated string valid_versions = 4;
  for (int i = 0, n = this->valid_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_versions(i).data(), static_cast<int>(this->valid_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.ReleaseChannelConfig.valid_versions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->valid_versions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ServerConfig.ReleaseChannelConfig)
}

::google::protobuf::uint8* ServerConfig_ReleaseChannelConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.ReleaseChannel.Channel channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->channel(), target);
  }

  // string default_version = 2;
  if (this->default_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_version().data(), static_cast<int>(this->default_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.ReleaseChannelConfig.default_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->default_version(), target);
  }

  // repeated string valid_versions = 4;
  for (int i = 0, n = this->valid_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_versions(i).data(), static_cast<int>(this->valid_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.ReleaseChannelConfig.valid_versions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->valid_versions(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ServerConfig.ReleaseChannelConfig)
  return target;
}

size_t ServerConfig_ReleaseChannelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string valid_versions = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_versions_size());
  for (int i = 0, n = this->valid_versions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_versions(i));
  }

  // string default_version = 2;
  if (this->default_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_version());
  }

  // .google.container.v1.ReleaseChannel.Channel channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerConfig_ReleaseChannelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerConfig_ReleaseChannelConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ServerConfig_ReleaseChannelConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ServerConfig.ReleaseChannelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ServerConfig.ReleaseChannelConfig)
    MergeFrom(*source);
  }
}

void ServerConfig_ReleaseChannelConfig::MergeFrom(const ServerConfig_ReleaseChannelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  valid_versions_.MergeFrom(from.valid_versions_);
  if (from.default_version().size() > 0) {

    default_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_version_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void ServerConfig_ReleaseChannelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConfig_ReleaseChannelConfig::CopyFrom(const ServerConfig_ReleaseChannelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ServerConfig.ReleaseChannelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerConfig_ReleaseChannelConfig::IsInitialized() const {
  return true;
}

void ServerConfig_ReleaseChannelConfig::Swap(ServerConfig_ReleaseChannelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConfig_ReleaseChannelConfig::InternalSwap(ServerConfig_ReleaseChannelConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  valid_versions_.InternalSwap(CastToBase(&other->valid_versions_));
  default_version_.Swap(&other->default_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_, other->channel_);
}

::google::protobuf::Metadata ServerConfig_ReleaseChannelConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerConfig::InitAsDefaultInstance() {
}
class ServerConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConfig::kDefaultClusterVersionFieldNumber;
const int ServerConfig::kValidNodeVersionsFieldNumber;
const int ServerConfig::kDefaultImageTypeFieldNumber;
const int ServerConfig::kValidImageTypesFieldNumber;
const int ServerConfig::kValidMasterVersionsFieldNumber;
const int ServerConfig::kChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConfig::ServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ServerConfig)
}
ServerConfig::ServerConfig(const ServerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      valid_node_versions_(from.valid_node_versions_),
      valid_image_types_(from.valid_image_types_),
      valid_master_versions_(from.valid_master_versions_),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  default_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_cluster_version().size() > 0) {
    default_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_cluster_version_);
  }
  default_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_image_type().size() > 0) {
    default_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_image_type_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ServerConfig)
}

void ServerConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServerConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  default_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerConfig::~ServerConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ServerConfig)
  SharedDtor();
}

void ServerConfig::SharedDtor() {
  default_cluster_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerConfig& ServerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valid_node_versions_.Clear();
  valid_image_types_.Clear();
  valid_master_versions_.Clear();
  channels_.Clear();
  default_cluster_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string default_cluster_version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ServerConfig.default_cluster_version");
        object = msg->mutable_default_cluster_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string valid_node_versions = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ServerConfig.valid_node_versions");
          object = msg->add_valid_node_versions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // string default_image_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ServerConfig.default_image_type");
        object = msg->mutable_default_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string valid_image_types = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ServerConfig.valid_image_types");
          object = msg->add_valid_image_types();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated string valid_master_versions = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ServerConfig.valid_master_versions");
          object = msg->add_valid_master_versions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // repeated .google.container.v1.ServerConfig.ReleaseChannelConfig channels = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::ServerConfig_ReleaseChannelConfig::_InternalParse;
          object = msg->add_channels();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 74 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ServerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string default_cluster_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_cluster_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.default_cluster_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_node_versions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_node_versions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_node_versions(this->valid_node_versions_size() - 1).data(),
            static_cast<int>(this->valid_node_versions(this->valid_node_versions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.valid_node_versions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_image_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.default_image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_image_types = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_image_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_image_types(this->valid_image_types_size() - 1).data(),
            static_cast<int>(this->valid_image_types(this->valid_image_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.valid_image_types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_master_versions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_master_versions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_master_versions(this->valid_master_versions_size() - 1).data(),
            static_cast<int>(this->valid_master_versions(this->valid_master_versions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.valid_master_versions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.ServerConfig.ReleaseChannelConfig channels = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ServerConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.default_cluster_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->default_cluster_version(), output);
  }

  // repeated string valid_node_versions = 3;
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_node_versions(i).data(), static_cast<int>(this->valid_node_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_node_versions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->valid_node_versions(i), output);
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.default_image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->default_image_type(), output);
  }

  // repeated string valid_image_types = 5;
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_image_types(i).data(), static_cast<int>(this->valid_image_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_image_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->valid_image_types(i), output);
  }

  // repeated string valid_master_versions = 6;
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_master_versions(i).data(), static_cast<int>(this->valid_master_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_master_versions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->valid_master_versions(i), output);
  }

  // repeated .google.container.v1.ServerConfig.ReleaseChannelConfig channels = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->channels(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ServerConfig)
}

::google::protobuf::uint8* ServerConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.default_cluster_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->default_cluster_version(), target);
  }

  // repeated string valid_node_versions = 3;
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_node_versions(i).data(), static_cast<int>(this->valid_node_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_node_versions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->valid_node_versions(i), target);
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.default_image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->default_image_type(), target);
  }

  // repeated string valid_image_types = 5;
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_image_types(i).data(), static_cast<int>(this->valid_image_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_image_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->valid_image_types(i), target);
  }

  // repeated string valid_master_versions = 6;
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_master_versions(i).data(), static_cast<int>(this->valid_master_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_master_versions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->valid_master_versions(i), target);
  }

  // repeated .google.container.v1.ServerConfig.ReleaseChannelConfig channels = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->channels(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ServerConfig)
  return target;
}

size_t ServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ServerConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string valid_node_versions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_node_versions_size());
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_node_versions(i));
  }

  // repeated string valid_image_types = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_image_types_size());
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_image_types(i));
  }

  // repeated string valid_master_versions = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_master_versions_size());
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_master_versions(i));
  }

  // repeated .google.container.v1.ServerConfig.ReleaseChannelConfig channels = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_cluster_version());
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_image_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ServerConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ServerConfig)
    MergeFrom(*source);
  }
}

void ServerConfig::MergeFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  valid_node_versions_.MergeFrom(from.valid_node_versions_);
  valid_image_types_.MergeFrom(from.valid_image_types_);
  valid_master_versions_.MergeFrom(from.valid_master_versions_);
  channels_.MergeFrom(from.channels_);
  if (from.default_cluster_version().size() > 0) {

    default_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_cluster_version_);
  }
  if (from.default_image_type().size() > 0) {

    default_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_image_type_);
  }
}

void ServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConfig::CopyFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerConfig::IsInitialized() const {
  return true;
}

void ServerConfig::Swap(ServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConfig::InternalSwap(ServerConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  valid_node_versions_.InternalSwap(CastToBase(&other->valid_node_versions_));
  valid_image_types_.InternalSwap(CastToBase(&other->valid_image_types_));
  valid_master_versions_.InternalSwap(CastToBase(&other->valid_master_versions_));
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  default_cluster_version_.Swap(&other->default_cluster_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_image_type_.Swap(&other->default_image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ServerConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateNodePoolRequest::InitAsDefaultInstance() {
  ::google::container::v1::_CreateNodePoolRequest_default_instance_._instance.get_mutable()->node_pool_ = const_cast< ::google::container::v1::NodePool*>(
      ::google::container::v1::NodePool::internal_default_instance());
}
class CreateNodePoolRequest::HasBitSetters {
 public:
  static const ::google::container::v1::NodePool& node_pool(const CreateNodePoolRequest* msg);
};

const ::google::container::v1::NodePool&
CreateNodePoolRequest::HasBitSetters::node_pool(const CreateNodePoolRequest* msg) {
  return *msg->node_pool_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNodePoolRequest::kProjectIdFieldNumber;
const int CreateNodePoolRequest::kZoneFieldNumber;
const int CreateNodePoolRequest::kClusterIdFieldNumber;
const int CreateNodePoolRequest::kNodePoolFieldNumber;
const int CreateNodePoolRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNodePoolRequest::CreateNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CreateNodePoolRequest)
}
CreateNodePoolRequest::CreateNodePoolRequest(const CreateNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_node_pool()) {
    node_pool_ = new ::google::container::v1::NodePool(*from.node_pool_);
  } else {
    node_pool_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CreateNodePoolRequest)
}

void CreateNodePoolRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_ = nullptr;
}

CreateNodePoolRequest::~CreateNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.CreateNodePoolRequest)
  SharedDtor();
}

void CreateNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_pool_;
}

void CreateNodePoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateNodePoolRequest& CreateNodePoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CreateNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && node_pool_ != nullptr) {
    delete node_pool_;
  }
  node_pool_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateNodePoolRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateNodePoolRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CreateNodePoolRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CreateNodePoolRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CreateNodePoolRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.NodePool node_pool = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodePool::_InternalParse;
        object = msg->mutable_node_pool();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string parent = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CreateNodePoolRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CreateNodePoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePool node_pool = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_pool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateNodePoolRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CreateNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CreateNodePoolRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.NodePool node_pool = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_node_pool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::node_pool(this), output);
  }

  // string parent = 6;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CreateNodePoolRequest)
}

::google::protobuf::uint8* CreateNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.NodePool node_pool = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_node_pool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::node_pool(this), target);
  }

  // string parent = 6;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CreateNodePoolRequest)
  return target;
}

size_t CreateNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CreateNodePoolRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string parent = 6;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.container.v1.NodePool node_pool = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_node_pool()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_pool_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CreateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNodePoolRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateNodePoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CreateNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CreateNodePoolRequest)
    MergeFrom(*source);
  }
}

void CreateNodePoolRequest::MergeFrom(const CreateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CreateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_node_pool()) {
    mutable_node_pool()->::google::container::v1::NodePool::MergeFrom(from.node_pool());
  }
}

void CreateNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CreateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNodePoolRequest::CopyFrom(const CreateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CreateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNodePoolRequest::IsInitialized() const {
  return true;
}

void CreateNodePoolRequest::Swap(CreateNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNodePoolRequest::InternalSwap(CreateNodePoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_pool_, other->node_pool_);
}

::google::protobuf::Metadata CreateNodePoolRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteNodePoolRequest::InitAsDefaultInstance() {
}
class DeleteNodePoolRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteNodePoolRequest::kProjectIdFieldNumber;
const int DeleteNodePoolRequest::kZoneFieldNumber;
const int DeleteNodePoolRequest::kClusterIdFieldNumber;
const int DeleteNodePoolRequest::kNodePoolIdFieldNumber;
const int DeleteNodePoolRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteNodePoolRequest::DeleteNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DeleteNodePoolRequest)
}
DeleteNodePoolRequest::DeleteNodePoolRequest(const DeleteNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DeleteNodePoolRequest)
}

void DeleteNodePoolRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteNodePoolRequest::~DeleteNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.DeleteNodePoolRequest)
  SharedDtor();
}

void DeleteNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteNodePoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteNodePoolRequest& DeleteNodePoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DeleteNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteNodePoolRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteNodePoolRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteNodePoolRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteNodePoolRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteNodePoolRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteNodePoolRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DeleteNodePoolRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DeleteNodePoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DeleteNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DeleteNodePoolRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DeleteNodePoolRequest)
}

::google::protobuf::uint8* DeleteNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DeleteNodePoolRequest)
  return target;
}

size_t DeleteNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DeleteNodePoolRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DeleteNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNodePoolRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteNodePoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DeleteNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DeleteNodePoolRequest)
    MergeFrom(*source);
  }
}

void DeleteNodePoolRequest::MergeFrom(const DeleteNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DeleteNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DeleteNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNodePoolRequest::CopyFrom(const DeleteNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DeleteNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNodePoolRequest::IsInitialized() const {
  return true;
}

void DeleteNodePoolRequest::Swap(DeleteNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteNodePoolRequest::InternalSwap(DeleteNodePoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteNodePoolRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListNodePoolsRequest::InitAsDefaultInstance() {
}
class ListNodePoolsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNodePoolsRequest::kProjectIdFieldNumber;
const int ListNodePoolsRequest::kZoneFieldNumber;
const int ListNodePoolsRequest::kClusterIdFieldNumber;
const int ListNodePoolsRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNodePoolsRequest::ListNodePoolsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListNodePoolsRequest)
}
ListNodePoolsRequest::ListNodePoolsRequest(const ListNodePoolsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListNodePoolsRequest)
}

void ListNodePoolsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListNodePoolsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListNodePoolsRequest::~ListNodePoolsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListNodePoolsRequest)
  SharedDtor();
}

void ListNodePoolsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNodePoolsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListNodePoolsRequest& ListNodePoolsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListNodePoolsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListNodePoolsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListNodePoolsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListNodePoolsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListNodePoolsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListNodePoolsRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListNodePoolsRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListNodePoolsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListNodePoolsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListNodePoolsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListNodePoolsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListNodePoolsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListNodePoolsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListNodePoolsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListNodePoolsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListNodePoolsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListNodePoolsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListNodePoolsRequest)
}

::google::protobuf::uint8* ListNodePoolsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListNodePoolsRequest)
  return target;
}

size_t ListNodePoolsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListNodePoolsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodePoolsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListNodePoolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodePoolsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListNodePoolsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListNodePoolsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListNodePoolsRequest)
    MergeFrom(*source);
  }
}

void ListNodePoolsRequest::MergeFrom(const ListNodePoolsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListNodePoolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void ListNodePoolsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListNodePoolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodePoolsRequest::CopyFrom(const ListNodePoolsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListNodePoolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodePoolsRequest::IsInitialized() const {
  return true;
}

void ListNodePoolsRequest::Swap(ListNodePoolsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNodePoolsRequest::InternalSwap(ListNodePoolsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListNodePoolsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetNodePoolRequest::InitAsDefaultInstance() {
}
class GetNodePoolRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNodePoolRequest::kProjectIdFieldNumber;
const int GetNodePoolRequest::kZoneFieldNumber;
const int GetNodePoolRequest::kClusterIdFieldNumber;
const int GetNodePoolRequest::kNodePoolIdFieldNumber;
const int GetNodePoolRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNodePoolRequest::GetNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetNodePoolRequest)
}
GetNodePoolRequest::GetNodePoolRequest(const GetNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetNodePoolRequest)
}

void GetNodePoolRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNodePoolRequest::~GetNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetNodePoolRequest)
  SharedDtor();
}

void GetNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNodePoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetNodePoolRequest& GetNodePoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetNodePoolRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetNodePoolRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetNodePoolRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetNodePoolRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetNodePoolRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetNodePoolRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetNodePoolRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetNodePoolRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetNodePoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetNodePoolRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetNodePoolRequest)
}

::google::protobuf::uint8* GetNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetNodePoolRequest)
  return target;
}

size_t GetNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetNodePoolRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNodePoolRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetNodePoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetNodePoolRequest)
    MergeFrom(*source);
  }
}

void GetNodePoolRequest::MergeFrom(const GetNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodePoolRequest::CopyFrom(const GetNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodePoolRequest::IsInitialized() const {
  return true;
}

void GetNodePoolRequest::Swap(GetNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNodePoolRequest::InternalSwap(GetNodePoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetNodePoolRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodePool_UpgradeSettings::InitAsDefaultInstance() {
}
class NodePool_UpgradeSettings::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodePool_UpgradeSettings::kMaxSurgeFieldNumber;
const int NodePool_UpgradeSettings::kMaxUnavailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodePool_UpgradeSettings::NodePool_UpgradeSettings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodePool.UpgradeSettings)
}
NodePool_UpgradeSettings::NodePool_UpgradeSettings(const NodePool_UpgradeSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_surge_, &from.max_surge_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_unavailable_) -
    reinterpret_cast<char*>(&max_surge_)) + sizeof(max_unavailable_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodePool.UpgradeSettings)
}

void NodePool_UpgradeSettings::SharedCtor() {
  ::memset(&max_surge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_unavailable_) -
      reinterpret_cast<char*>(&max_surge_)) + sizeof(max_unavailable_));
}

NodePool_UpgradeSettings::~NodePool_UpgradeSettings() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodePool.UpgradeSettings)
  SharedDtor();
}

void NodePool_UpgradeSettings::SharedDtor() {
}

void NodePool_UpgradeSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodePool_UpgradeSettings& NodePool_UpgradeSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodePool_UpgradeSettings_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodePool_UpgradeSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodePool.UpgradeSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&max_surge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_unavailable_) -
      reinterpret_cast<char*>(&max_surge_)) + sizeof(max_unavailable_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodePool_UpgradeSettings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodePool_UpgradeSettings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 max_surge = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_max_surge(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 max_unavailable = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_max_unavailable(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodePool_UpgradeSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodePool.UpgradeSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 max_surge = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_surge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_unavailable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_unavailable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodePool.UpgradeSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodePool.UpgradeSettings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodePool_UpgradeSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodePool.UpgradeSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_surge = 1;
  if (this->max_surge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_surge(), output);
  }

  // int32 max_unavailable = 2;
  if (this->max_unavailable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_unavailable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodePool.UpgradeSettings)
}

::google::protobuf::uint8* NodePool_UpgradeSettings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodePool.UpgradeSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_surge = 1;
  if (this->max_surge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_surge(), target);
  }

  // int32 max_unavailable = 2;
  if (this->max_unavailable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_unavailable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodePool.UpgradeSettings)
  return target;
}

size_t NodePool_UpgradeSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodePool.UpgradeSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 max_surge = 1;
  if (this->max_surge() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_surge());
  }

  // int32 max_unavailable = 2;
  if (this->max_unavailable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_unavailable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodePool_UpgradeSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodePool.UpgradeSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const NodePool_UpgradeSettings* source =
      ::google::protobuf::DynamicCastToGenerated<NodePool_UpgradeSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodePool.UpgradeSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodePool.UpgradeSettings)
    MergeFrom(*source);
  }
}

void NodePool_UpgradeSettings::MergeFrom(const NodePool_UpgradeSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodePool.UpgradeSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.max_surge() != 0) {
    set_max_surge(from.max_surge());
  }
  if (from.max_unavailable() != 0) {
    set_max_unavailable(from.max_unavailable());
  }
}

void NodePool_UpgradeSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodePool.UpgradeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodePool_UpgradeSettings::CopyFrom(const NodePool_UpgradeSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodePool.UpgradeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodePool_UpgradeSettings::IsInitialized() const {
  return true;
}

void NodePool_UpgradeSettings::Swap(NodePool_UpgradeSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodePool_UpgradeSettings::InternalSwap(NodePool_UpgradeSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(max_surge_, other->max_surge_);
  swap(max_unavailable_, other->max_unavailable_);
}

::google::protobuf::Metadata NodePool_UpgradeSettings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodePool::InitAsDefaultInstance() {
  ::google::container::v1::_NodePool_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::container::v1::NodeConfig*>(
      ::google::container::v1::NodeConfig::internal_default_instance());
  ::google::container::v1::_NodePool_default_instance_._instance.get_mutable()->autoscaling_ = const_cast< ::google::container::v1::NodePoolAutoscaling*>(
      ::google::container::v1::NodePoolAutoscaling::internal_default_instance());
  ::google::container::v1::_NodePool_default_instance_._instance.get_mutable()->management_ = const_cast< ::google::container::v1::NodeManagement*>(
      ::google::container::v1::NodeManagement::internal_default_instance());
  ::google::container::v1::_NodePool_default_instance_._instance.get_mutable()->max_pods_constraint_ = const_cast< ::google::container::v1::MaxPodsConstraint*>(
      ::google::container::v1::MaxPodsConstraint::internal_default_instance());
  ::google::container::v1::_NodePool_default_instance_._instance.get_mutable()->upgrade_settings_ = const_cast< ::google::container::v1::NodePool_UpgradeSettings*>(
      ::google::container::v1::NodePool_UpgradeSettings::internal_default_instance());
}
class NodePool::HasBitSetters {
 public:
  static const ::google::container::v1::NodeConfig& config(const NodePool* msg);
  static const ::google::container::v1::NodePoolAutoscaling& autoscaling(const NodePool* msg);
  static const ::google::container::v1::NodeManagement& management(const NodePool* msg);
  static const ::google::container::v1::MaxPodsConstraint& max_pods_constraint(const NodePool* msg);
  static const ::google::container::v1::NodePool_UpgradeSettings& upgrade_settings(const NodePool* msg);
};

const ::google::container::v1::NodeConfig&
NodePool::HasBitSetters::config(const NodePool* msg) {
  return *msg->config_;
}
const ::google::container::v1::NodePoolAutoscaling&
NodePool::HasBitSetters::autoscaling(const NodePool* msg) {
  return *msg->autoscaling_;
}
const ::google::container::v1::NodeManagement&
NodePool::HasBitSetters::management(const NodePool* msg) {
  return *msg->management_;
}
const ::google::container::v1::MaxPodsConstraint&
NodePool::HasBitSetters::max_pods_constraint(const NodePool* msg) {
  return *msg->max_pods_constraint_;
}
const ::google::container::v1::NodePool_UpgradeSettings&
NodePool::HasBitSetters::upgrade_settings(const NodePool* msg) {
  return *msg->upgrade_settings_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodePool::kNameFieldNumber;
const int NodePool::kConfigFieldNumber;
const int NodePool::kInitialNodeCountFieldNumber;
const int NodePool::kLocationsFieldNumber;
const int NodePool::kSelfLinkFieldNumber;
const int NodePool::kVersionFieldNumber;
const int NodePool::kInstanceGroupUrlsFieldNumber;
const int NodePool::kStatusFieldNumber;
const int NodePool::kStatusMessageFieldNumber;
const int NodePool::kAutoscalingFieldNumber;
const int NodePool::kManagementFieldNumber;
const int NodePool::kMaxPodsConstraintFieldNumber;
const int NodePool::kConditionsFieldNumber;
const int NodePool::kPodIpv4CidrSizeFieldNumber;
const int NodePool::kUpgradeSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodePool::NodePool()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodePool)
}
NodePool::NodePool(const NodePool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locations_(from.locations_),
      instance_group_urls_(from.instance_group_urls_),
      conditions_(from.conditions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.has_config()) {
    config_ = new ::google::container::v1::NodeConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  if (from.has_autoscaling()) {
    autoscaling_ = new ::google::container::v1::NodePoolAutoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  if (from.has_management()) {
    management_ = new ::google::container::v1::NodeManagement(*from.management_);
  } else {
    management_ = nullptr;
  }
  if (from.has_max_pods_constraint()) {
    max_pods_constraint_ = new ::google::container::v1::MaxPodsConstraint(*from.max_pods_constraint_);
  } else {
    max_pods_constraint_ = nullptr;
  }
  if (from.has_upgrade_settings()) {
    upgrade_settings_ = new ::google::container::v1::NodePool_UpgradeSettings(*from.upgrade_settings_);
  } else {
    upgrade_settings_ = nullptr;
  }
  ::memcpy(&initial_node_count_, &from.initial_node_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&initial_node_count_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodePool)
}

void NodePool::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&config_)) + sizeof(status_));
}

NodePool::~NodePool() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodePool)
  SharedDtor();
}

void NodePool::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete autoscaling_;
  if (this != internal_default_instance()) delete management_;
  if (this != internal_default_instance()) delete max_pods_constraint_;
  if (this != internal_default_instance()) delete upgrade_settings_;
}

void NodePool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodePool& NodePool::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodePool_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodePool::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  instance_group_urls_.Clear();
  conditions_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && management_ != nullptr) {
    delete management_;
  }
  management_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && max_pods_constraint_ != nullptr) {
    delete max_pods_constraint_;
  }
  max_pods_constraint_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && upgrade_settings_ != nullptr) {
    delete upgrade_settings_;
  }
  upgrade_settings_ = nullptr;
  ::memset(&initial_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&initial_node_count_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodePool::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodePool*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodePool.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.NodeConfig config = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodeConfig::_InternalParse;
        object = msg->mutable_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 initial_node_count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_initial_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodePoolAutoscaling::_InternalParse;
        object = msg->mutable_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.NodeManagement management = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodeManagement::_InternalParse;
        object = msg->mutable_management();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.MaxPodsConstraint max_pods_constraint = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MaxPodsConstraint::_InternalParse;
        object = msg->mutable_max_pods_constraint();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 pod_ipv4_cidr_size = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pod_ipv4_cidr_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string locations = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.NodePool.locations");
          object = msg->add_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 106 && (ptr += 1));
        break;
      }
      // string self_link = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodePool.self_link");
        object = msg->mutable_self_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string version = 101;
      case 101: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodePool.version");
        object = msg->mutable_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string instance_group_urls = 102;
      case 102: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.NodePool.instance_group_urls");
          object = msg->add_instance_group_urls();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 1714 && (ptr += 2));
        break;
      }
      // .google.container.v1.NodePool.Status status = 103;
      case 103: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::container::v1::NodePool_Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string status_message = 104 [deprecated = true];
      case 104: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NodePool.status_message");
        object = msg->mutable_status_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .google.container.v1.StatusCondition conditions = 105;
      case 105: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::StatusCondition::_InternalParse;
          object = msg->add_conditions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 1738 && (ptr += 2));
        break;
      }
      // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 107;
      case 107: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodePool_UpgradeSettings::_InternalParse;
        object = msg->mutable_upgrade_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodePool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodePool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeConfig config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 initial_node_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initial_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeManagement management = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_management()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MaxPodsConstraint max_pods_constraint = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_pods_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pod_ipv4_cidr_size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pod_ipv4_cidr_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locations = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            static_cast<int>(this->locations(this->locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (810 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string instance_group_urls = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (818 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_instance_group_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_group_urls(this->instance_group_urls_size() - 1).data(),
            static_cast<int>(this->instance_group_urls(this->instance_group_urls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.instance_group_urls"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePool.Status status = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (824 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1::NodePool_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 104 [deprecated = true];
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (834 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.StatusCondition conditions = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (842 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (858 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upgrade_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodePool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodePool)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodePool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.container.v1.NodeConfig config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::config(this), output);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->initial_node_count(), output);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::autoscaling(this), output);
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::management(this), output);
  }

  // .google.container.v1.MaxPodsConstraint max_pods_constraint = 6;
  if (this->has_max_pods_constraint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::max_pods_constraint(this), output);
  }

  // int32 pod_ipv4_cidr_size = 7;
  if (this->pod_ipv4_cidr_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->pod_ipv4_cidr_size(), output);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->locations(i), output);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->self_link(), output);
  }

  // string version = 101;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->version(), output);
  }

  // repeated string instance_group_urls = 102;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.instance_group_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      102, this->instance_group_urls(i), output);
  }

  // .google.container.v1.NodePool.Status status = 103;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      103, this->status(), output);
  }

  // string status_message = 104 [deprecated = true];
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->status_message(), output);
  }

  // repeated .google.container.v1.StatusCondition conditions = 105;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105,
      this->conditions(static_cast<int>(i)),
      output);
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 107;
  if (this->has_upgrade_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107, HasBitSetters::upgrade_settings(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodePool)
}

::google::protobuf::uint8* NodePool::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.container.v1.NodeConfig config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::config(this), target);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->initial_node_count(), target);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::autoscaling(this), target);
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::management(this), target);
  }

  // .google.container.v1.MaxPodsConstraint max_pods_constraint = 6;
  if (this->has_max_pods_constraint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::max_pods_constraint(this), target);
  }

  // int32 pod_ipv4_cidr_size = 7;
  if (this->pod_ipv4_cidr_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->pod_ipv4_cidr_size(), target);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->locations(i), target);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->self_link(), target);
  }

  // string version = 101;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->version(), target);
  }

  // repeated string instance_group_urls = 102;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.instance_group_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(102, this->instance_group_urls(i), target);
  }

  // .google.container.v1.NodePool.Status status = 103;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      103, this->status(), target);
  }

  // string status_message = 104 [deprecated = true];
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->status_message(), target);
  }

  // repeated .google.container.v1.StatusCondition conditions = 105;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        105, this->conditions(static_cast<int>(i)), target);
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 107;
  if (this->has_upgrade_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        107, HasBitSetters::upgrade_settings(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodePool)
  return target;
}

size_t NodePool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodePool)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string locations = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locations_size());
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // repeated string instance_group_urls = 102;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->instance_group_urls_size());
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->instance_group_urls(i));
  }

  // repeated .google.container.v1.StatusCondition conditions = 105;
  {
    unsigned int count = static_cast<unsigned int>(this->conditions_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conditions(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string version = 101;
  if (this->version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string status_message = 104 [deprecated = true];
  if (this->status_message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // .google.container.v1.NodeConfig config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *management_);
  }

  // .google.container.v1.MaxPodsConstraint max_pods_constraint = 6;
  if (this->has_max_pods_constraint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_pods_constraint_);
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 107;
  if (this->has_upgrade_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upgrade_settings_);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->initial_node_count());
  }

  // int32 pod_ipv4_cidr_size = 7;
  if (this->pod_ipv4_cidr_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pod_ipv4_cidr_size());
  }

  // .google.container.v1.NodePool.Status status = 103;
  if (this->status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodePool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodePool)
  GOOGLE_DCHECK_NE(&from, this);
  const NodePool* source =
      ::google::protobuf::DynamicCastToGenerated<NodePool>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodePool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodePool)
    MergeFrom(*source);
  }
}

void NodePool::MergeFrom(const NodePool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodePool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  instance_group_urls_.MergeFrom(from.instance_group_urls_);
  conditions_.MergeFrom(from.conditions_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.has_config()) {
    mutable_config()->::google::container::v1::NodeConfig::MergeFrom(from.config());
  }
  if (from.has_autoscaling()) {
    mutable_autoscaling()->::google::container::v1::NodePoolAutoscaling::MergeFrom(from.autoscaling());
  }
  if (from.has_management()) {
    mutable_management()->::google::container::v1::NodeManagement::MergeFrom(from.management());
  }
  if (from.has_max_pods_constraint()) {
    mutable_max_pods_constraint()->::google::container::v1::MaxPodsConstraint::MergeFrom(from.max_pods_constraint());
  }
  if (from.has_upgrade_settings()) {
    mutable_upgrade_settings()->::google::container::v1::NodePool_UpgradeSettings::MergeFrom(from.upgrade_settings());
  }
  if (from.initial_node_count() != 0) {
    set_initial_node_count(from.initial_node_count());
  }
  if (from.pod_ipv4_cidr_size() != 0) {
    set_pod_ipv4_cidr_size(from.pod_ipv4_cidr_size());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void NodePool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodePool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodePool::CopyFrom(const NodePool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodePool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodePool::IsInitialized() const {
  return true;
}

void NodePool::Swap(NodePool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodePool::InternalSwap(NodePool* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  locations_.InternalSwap(CastToBase(&other->locations_));
  instance_group_urls_.InternalSwap(CastToBase(&other->instance_group_urls_));
  CastToBase(&conditions_)->InternalSwap(CastToBase(&other->conditions_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  self_link_.Swap(&other->self_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_message_.Swap(&other->status_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_, other->config_);
  swap(autoscaling_, other->autoscaling_);
  swap(management_, other->management_);
  swap(max_pods_constraint_, other->max_pods_constraint_);
  swap(upgrade_settings_, other->upgrade_settings_);
  swap(initial_node_count_, other->initial_node_count_);
  swap(pod_ipv4_cidr_size_, other->pod_ipv4_cidr_size_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata NodePool::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodeManagement::InitAsDefaultInstance() {
  ::google::container::v1::_NodeManagement_default_instance_._instance.get_mutable()->upgrade_options_ = const_cast< ::google::container::v1::AutoUpgradeOptions*>(
      ::google::container::v1::AutoUpgradeOptions::internal_default_instance());
}
class NodeManagement::HasBitSetters {
 public:
  static const ::google::container::v1::AutoUpgradeOptions& upgrade_options(const NodeManagement* msg);
};

const ::google::container::v1::AutoUpgradeOptions&
NodeManagement::HasBitSetters::upgrade_options(const NodeManagement* msg) {
  return *msg->upgrade_options_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeManagement::kAutoUpgradeFieldNumber;
const int NodeManagement::kAutoRepairFieldNumber;
const int NodeManagement::kUpgradeOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeManagement::NodeManagement()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodeManagement)
}
NodeManagement::NodeManagement(const NodeManagement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_upgrade_options()) {
    upgrade_options_ = new ::google::container::v1::AutoUpgradeOptions(*from.upgrade_options_);
  } else {
    upgrade_options_ = nullptr;
  }
  ::memcpy(&auto_upgrade_, &from.auto_upgrade_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_repair_) -
    reinterpret_cast<char*>(&auto_upgrade_)) + sizeof(auto_repair_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodeManagement)
}

void NodeManagement::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::memset(&upgrade_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_repair_) -
      reinterpret_cast<char*>(&upgrade_options_)) + sizeof(auto_repair_));
}

NodeManagement::~NodeManagement() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodeManagement)
  SharedDtor();
}

void NodeManagement::SharedDtor() {
  if (this != internal_default_instance()) delete upgrade_options_;
}

void NodeManagement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeManagement& NodeManagement::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodeManagement_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodeManagement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && upgrade_options_ != nullptr) {
    delete upgrade_options_;
  }
  upgrade_options_ = nullptr;
  ::memset(&auto_upgrade_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_repair_) -
      reinterpret_cast<char*>(&auto_upgrade_)) + sizeof(auto_repair_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeManagement::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodeManagement*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool auto_upgrade = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_auto_upgrade(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool auto_repair = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_auto_repair(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::AutoUpgradeOptions::_InternalParse;
        object = msg->mutable_upgrade_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeManagement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodeManagement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool auto_upgrade = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_upgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool auto_repair = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_repair_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upgrade_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodeManagement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodeManagement)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeManagement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->auto_upgrade(), output);
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->auto_repair(), output);
  }

  // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::upgrade_options(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodeManagement)
}

::google::protobuf::uint8* NodeManagement::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->auto_upgrade(), target);
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->auto_repair(), target);
  }

  // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::upgrade_options(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodeManagement)
  return target;
}

size_t NodeManagement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodeManagement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upgrade_options_);
  }

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeManagement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodeManagement)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeManagement* source =
      ::google::protobuf::DynamicCastToGenerated<NodeManagement>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodeManagement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodeManagement)
    MergeFrom(*source);
  }
}

void NodeManagement::MergeFrom(const NodeManagement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodeManagement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_upgrade_options()) {
    mutable_upgrade_options()->::google::container::v1::AutoUpgradeOptions::MergeFrom(from.upgrade_options());
  }
  if (from.auto_upgrade() != 0) {
    set_auto_upgrade(from.auto_upgrade());
  }
  if (from.auto_repair() != 0) {
    set_auto_repair(from.auto_repair());
  }
}

void NodeManagement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodeManagement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeManagement::CopyFrom(const NodeManagement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodeManagement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeManagement::IsInitialized() const {
  return true;
}

void NodeManagement::Swap(NodeManagement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeManagement::InternalSwap(NodeManagement* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(upgrade_options_, other->upgrade_options_);
  swap(auto_upgrade_, other->auto_upgrade_);
  swap(auto_repair_, other->auto_repair_);
}

::google::protobuf::Metadata NodeManagement::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AutoUpgradeOptions::InitAsDefaultInstance() {
}
class AutoUpgradeOptions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoUpgradeOptions::kAutoUpgradeStartTimeFieldNumber;
const int AutoUpgradeOptions::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoUpgradeOptions::AutoUpgradeOptions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.AutoUpgradeOptions)
}
AutoUpgradeOptions::AutoUpgradeOptions(const AutoUpgradeOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auto_upgrade_start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auto_upgrade_start_time().size() > 0) {
    auto_upgrade_start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auto_upgrade_start_time_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.AutoUpgradeOptions)
}

void AutoUpgradeOptions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  auto_upgrade_start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AutoUpgradeOptions::~AutoUpgradeOptions() {
  // @@protoc_insertion_point(destructor:google.container.v1.AutoUpgradeOptions)
  SharedDtor();
}

void AutoUpgradeOptions::SharedDtor() {
  auto_upgrade_start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AutoUpgradeOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AutoUpgradeOptions& AutoUpgradeOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AutoUpgradeOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auto_upgrade_start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AutoUpgradeOptions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AutoUpgradeOptions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string auto_upgrade_start_time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AutoUpgradeOptions.auto_upgrade_start_time");
        object = msg->mutable_auto_upgrade_start_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AutoUpgradeOptions.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AutoUpgradeOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.AutoUpgradeOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string auto_upgrade_start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auto_upgrade_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoUpgradeOptions.auto_upgrade_start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoUpgradeOptions.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.AutoUpgradeOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.AutoUpgradeOptions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AutoUpgradeOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoUpgradeOptions.auto_upgrade_start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->auto_upgrade_start_time(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoUpgradeOptions.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.AutoUpgradeOptions)
}

::google::protobuf::uint8* AutoUpgradeOptions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoUpgradeOptions.auto_upgrade_start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->auto_upgrade_start_time(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoUpgradeOptions.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.AutoUpgradeOptions)
  return target;
}

size_t AutoUpgradeOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.AutoUpgradeOptions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auto_upgrade_start_time());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutoUpgradeOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.AutoUpgradeOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoUpgradeOptions* source =
      ::google::protobuf::DynamicCastToGenerated<AutoUpgradeOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.AutoUpgradeOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.AutoUpgradeOptions)
    MergeFrom(*source);
  }
}

void AutoUpgradeOptions::MergeFrom(const AutoUpgradeOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.AutoUpgradeOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.auto_upgrade_start_time().size() > 0) {

    auto_upgrade_start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auto_upgrade_start_time_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void AutoUpgradeOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.AutoUpgradeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoUpgradeOptions::CopyFrom(const AutoUpgradeOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.AutoUpgradeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoUpgradeOptions::IsInitialized() const {
  return true;
}

void AutoUpgradeOptions::Swap(AutoUpgradeOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoUpgradeOptions::InternalSwap(AutoUpgradeOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  auto_upgrade_start_time_.Swap(&other->auto_upgrade_start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AutoUpgradeOptions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MaintenancePolicy::InitAsDefaultInstance() {
  ::google::container::v1::_MaintenancePolicy_default_instance_._instance.get_mutable()->window_ = const_cast< ::google::container::v1::MaintenanceWindow*>(
      ::google::container::v1::MaintenanceWindow::internal_default_instance());
}
class MaintenancePolicy::HasBitSetters {
 public:
  static const ::google::container::v1::MaintenanceWindow& window(const MaintenancePolicy* msg);
};

const ::google::container::v1::MaintenanceWindow&
MaintenancePolicy::HasBitSetters::window(const MaintenancePolicy* msg) {
  return *msg->window_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaintenancePolicy::kWindowFieldNumber;
const int MaintenancePolicy::kResourceVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaintenancePolicy::MaintenancePolicy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MaintenancePolicy)
}
MaintenancePolicy::MaintenancePolicy(const MaintenancePolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_version().size() > 0) {
    resource_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_version_);
  }
  if (from.has_window()) {
    window_ = new ::google::container::v1::MaintenanceWindow(*from.window_);
  } else {
    window_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MaintenancePolicy)
}

void MaintenancePolicy::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  resource_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  window_ = nullptr;
}

MaintenancePolicy::~MaintenancePolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1.MaintenancePolicy)
  SharedDtor();
}

void MaintenancePolicy::SharedDtor() {
  resource_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete window_;
}

void MaintenancePolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MaintenancePolicy& MaintenancePolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MaintenancePolicy_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MaintenancePolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && window_ != nullptr) {
    delete window_;
  }
  window_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MaintenancePolicy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MaintenancePolicy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.MaintenanceWindow window = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MaintenanceWindow::_InternalParse;
        object = msg->mutable_window();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string resource_version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.MaintenancePolicy.resource_version");
        object = msg->mutable_resource_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MaintenancePolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MaintenancePolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.MaintenanceWindow window = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_version().data(), static_cast<int>(this->resource_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MaintenancePolicy.resource_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MaintenancePolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MaintenancePolicy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MaintenancePolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::window(this), output);
  }

  // string resource_version = 3;
  if (this->resource_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_version().data(), static_cast<int>(this->resource_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MaintenancePolicy.resource_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->resource_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MaintenancePolicy)
}

::google::protobuf::uint8* MaintenancePolicy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::window(this), target);
  }

  // string resource_version = 3;
  if (this->resource_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_version().data(), static_cast<int>(this->resource_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MaintenancePolicy.resource_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->resource_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MaintenancePolicy)
  return target;
}

size_t MaintenancePolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MaintenancePolicy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_version = 3;
  if (this->resource_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_version());
  }

  // .google.container.v1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *window_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaintenancePolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MaintenancePolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const MaintenancePolicy* source =
      ::google::protobuf::DynamicCastToGenerated<MaintenancePolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MaintenancePolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MaintenancePolicy)
    MergeFrom(*source);
  }
}

void MaintenancePolicy::MergeFrom(const MaintenancePolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MaintenancePolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_version().size() > 0) {

    resource_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_version_);
  }
  if (from.has_window()) {
    mutable_window()->::google::container::v1::MaintenanceWindow::MergeFrom(from.window());
  }
}

void MaintenancePolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MaintenancePolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenancePolicy::CopyFrom(const MaintenancePolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MaintenancePolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenancePolicy::IsInitialized() const {
  return true;
}

void MaintenancePolicy::Swap(MaintenancePolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaintenancePolicy::InternalSwap(MaintenancePolicy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_version_.Swap(&other->resource_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(window_, other->window_);
}

::google::protobuf::Metadata MaintenancePolicy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse() {}
MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::MergeFrom(const MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[62];
}
void MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.MaintenanceWindow.MaintenanceExclusionsEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void MaintenanceWindow::InitAsDefaultInstance() {
  ::google::container::v1::_MaintenanceWindow_default_instance_.daily_maintenance_window_ = const_cast< ::google::container::v1::DailyMaintenanceWindow*>(
      ::google::container::v1::DailyMaintenanceWindow::internal_default_instance());
  ::google::container::v1::_MaintenanceWindow_default_instance_.recurring_window_ = const_cast< ::google::container::v1::RecurringTimeWindow*>(
      ::google::container::v1::RecurringTimeWindow::internal_default_instance());
}
class MaintenanceWindow::HasBitSetters {
 public:
  static const ::google::container::v1::DailyMaintenanceWindow& daily_maintenance_window(const MaintenanceWindow* msg);
  static const ::google::container::v1::RecurringTimeWindow& recurring_window(const MaintenanceWindow* msg);
};

const ::google::container::v1::DailyMaintenanceWindow&
MaintenanceWindow::HasBitSetters::daily_maintenance_window(const MaintenanceWindow* msg) {
  return *msg->policy_.daily_maintenance_window_;
}
const ::google::container::v1::RecurringTimeWindow&
MaintenanceWindow::HasBitSetters::recurring_window(const MaintenanceWindow* msg) {
  return *msg->policy_.recurring_window_;
}
void MaintenanceWindow::set_allocated_daily_maintenance_window(::google::container::v1::DailyMaintenanceWindow* daily_maintenance_window) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_policy();
  if (daily_maintenance_window) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      daily_maintenance_window = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, daily_maintenance_window, submessage_arena);
    }
    set_has_daily_maintenance_window();
    policy_.daily_maintenance_window_ = daily_maintenance_window;
  }
  // @@protoc_insertion_point(field_set_allocated:google.container.v1.MaintenanceWindow.daily_maintenance_window)
}
void MaintenanceWindow::set_allocated_recurring_window(::google::container::v1::RecurringTimeWindow* recurring_window) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_policy();
  if (recurring_window) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      recurring_window = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recurring_window, submessage_arena);
    }
    set_has_recurring_window();
    policy_.recurring_window_ = recurring_window;
  }
  // @@protoc_insertion_point(field_set_allocated:google.container.v1.MaintenanceWindow.recurring_window)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaintenanceWindow::kDailyMaintenanceWindowFieldNumber;
const int MaintenanceWindow::kRecurringWindowFieldNumber;
const int MaintenanceWindow::kMaintenanceExclusionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaintenanceWindow::MaintenanceWindow()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MaintenanceWindow)
}
MaintenanceWindow::MaintenanceWindow(const MaintenanceWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  maintenance_exclusions_.MergeFrom(from.maintenance_exclusions_);
  clear_has_policy();
  switch (from.policy_case()) {
    case kDailyMaintenanceWindow: {
      mutable_daily_maintenance_window()->::google::container::v1::DailyMaintenanceWindow::MergeFrom(from.daily_maintenance_window());
      break;
    }
    case kRecurringWindow: {
      mutable_recurring_window()->::google::container::v1::RecurringTimeWindow::MergeFrom(from.recurring_window());
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MaintenanceWindow)
}

void MaintenanceWindow::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  clear_has_policy();
}

MaintenanceWindow::~MaintenanceWindow() {
  // @@protoc_insertion_point(destructor:google.container.v1.MaintenanceWindow)
  SharedDtor();
}

void MaintenanceWindow::SharedDtor() {
  if (has_policy()) {
    clear_policy();
  }
}

void MaintenanceWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MaintenanceWindow& MaintenanceWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MaintenanceWindow::clear_policy() {
// @@protoc_insertion_point(one_of_clear_start:google.container.v1.MaintenanceWindow)
  switch (policy_case()) {
    case kDailyMaintenanceWindow: {
      delete policy_.daily_maintenance_window_;
      break;
    }
    case kRecurringWindow: {
      delete policy_.recurring_window_;
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = POLICY_NOT_SET;
}


void MaintenanceWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maintenance_exclusions_.Clear();
  clear_policy();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MaintenanceWindow::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MaintenanceWindow*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::DailyMaintenanceWindow::_InternalParse;
        object = msg->mutable_daily_maintenance_window();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.RecurringTimeWindow recurring_window = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::RecurringTimeWindow::_InternalParse;
        object = msg->mutable_recurring_window();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<string, .google.container.v1.TimeWindow> maintenance_exclusions = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->maintenance_exclusions_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MaintenanceWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MaintenanceWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_daily_maintenance_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.RecurringTimeWindow recurring_window = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recurring_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.container.v1.TimeWindow> maintenance_exclusions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse,
              ::std::string, ::google::container::v1::TimeWindow,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow > > parser(&maintenance_exclusions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MaintenanceWindow.MaintenanceExclusionsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MaintenanceWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MaintenanceWindow)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MaintenanceWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
  if (has_daily_maintenance_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::daily_maintenance_window(this), output);
  }

  // .google.container.v1.RecurringTimeWindow recurring_window = 3;
  if (has_recurring_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::recurring_window(this), output);
  }

  // map<string, .google.container.v1.TimeWindow> maintenance_exclusions = 4;
  if (!this->maintenance_exclusions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.MaintenanceWindow.MaintenanceExclusionsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->maintenance_exclusions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->maintenance_exclusions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::const_iterator
          it = this->maintenance_exclusions().begin();
          it != this->maintenance_exclusions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(maintenance_exclusions_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::const_iterator
          it = this->maintenance_exclusions().begin();
          it != this->maintenance_exclusions().end(); ++it) {
        entry.reset(maintenance_exclusions_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MaintenanceWindow)
}

::google::protobuf::uint8* MaintenanceWindow::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
  if (has_daily_maintenance_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::daily_maintenance_window(this), target);
  }

  // .google.container.v1.RecurringTimeWindow recurring_window = 3;
  if (has_recurring_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::recurring_window(this), target);
  }

  // map<string, .google.container.v1.TimeWindow> maintenance_exclusions = 4;
  if (!this->maintenance_exclusions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.MaintenanceWindow.MaintenanceExclusionsEntry.key");
      }
    };

    if (false &&
        this->maintenance_exclusions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->maintenance_exclusions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::const_iterator
          it = this->maintenance_exclusions().begin();
          it != this->maintenance_exclusions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(maintenance_exclusions_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::const_iterator
          it = this->maintenance_exclusions().begin();
          it != this->maintenance_exclusions().end(); ++it) {
        entry.reset(maintenance_exclusions_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MaintenanceWindow)
  return target;
}

size_t MaintenanceWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MaintenanceWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.container.v1.TimeWindow> maintenance_exclusions = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->maintenance_exclusions_size());
  {
    ::std::unique_ptr<MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::container::v1::TimeWindow >::const_iterator
        it = this->maintenance_exclusions().begin();
        it != this->maintenance_exclusions().end(); ++it) {
      entry.reset(maintenance_exclusions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  switch (policy_case()) {
    // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
    case kDailyMaintenanceWindow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *policy_.daily_maintenance_window_);
      break;
    }
    // .google.container.v1.RecurringTimeWindow recurring_window = 3;
    case kRecurringWindow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *policy_.recurring_window_);
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaintenanceWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const MaintenanceWindow* source =
      ::google::protobuf::DynamicCastToGenerated<MaintenanceWindow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MaintenanceWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MaintenanceWindow)
    MergeFrom(*source);
  }
}

void MaintenanceWindow::MergeFrom(const MaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  maintenance_exclusions_.MergeFrom(from.maintenance_exclusions_);
  switch (from.policy_case()) {
    case kDailyMaintenanceWindow: {
      mutable_daily_maintenance_window()->::google::container::v1::DailyMaintenanceWindow::MergeFrom(from.daily_maintenance_window());
      break;
    }
    case kRecurringWindow: {
      mutable_recurring_window()->::google::container::v1::RecurringTimeWindow::MergeFrom(from.recurring_window());
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
}

void MaintenanceWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenanceWindow::CopyFrom(const MaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenanceWindow::IsInitialized() const {
  return true;
}

void MaintenanceWindow::Swap(MaintenanceWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaintenanceWindow::InternalSwap(MaintenanceWindow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  maintenance_exclusions_.Swap(&other->maintenance_exclusions_);
  swap(policy_, other->policy_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata MaintenanceWindow::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TimeWindow::InitAsDefaultInstance() {
  ::google::container::v1::_TimeWindow_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::container::v1::_TimeWindow_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class TimeWindow::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& start_time(const TimeWindow* msg);
  static const ::google::protobuf::Timestamp& end_time(const TimeWindow* msg);
};

const ::google::protobuf::Timestamp&
TimeWindow::HasBitSetters::start_time(const TimeWindow* msg) {
  return *msg->start_time_;
}
const ::google::protobuf::Timestamp&
TimeWindow::HasBitSetters::end_time(const TimeWindow* msg) {
  return *msg->end_time_;
}
void TimeWindow::clear_start_time() {
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void TimeWindow::clear_end_time() {
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeWindow::kStartTimeFieldNumber;
const int TimeWindow::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeWindow::TimeWindow()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.TimeWindow)
}
TimeWindow::TimeWindow(const TimeWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.TimeWindow)
}

void TimeWindow::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
}

TimeWindow::~TimeWindow() {
  // @@protoc_insertion_point(destructor:google.container.v1.TimeWindow)
  SharedDtor();
}

void TimeWindow::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void TimeWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TimeWindow& TimeWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TimeWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.TimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TimeWindow::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TimeWindow*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_start_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_end_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TimeWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.TimeWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.TimeWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.TimeWindow)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TimeWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.TimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::start_time(this), output);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::end_time(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.TimeWindow)
}

::google::protobuf::uint8* TimeWindow::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.TimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::start_time(this), target);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::end_time(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.TimeWindow)
  return target;
}

size_t TimeWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.TimeWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.TimeWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeWindow* source =
      ::google::protobuf::DynamicCastToGenerated<TimeWindow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.TimeWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.TimeWindow)
    MergeFrom(*source);
  }
}

void TimeWindow::MergeFrom(const TimeWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.TimeWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void TimeWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.TimeWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeWindow::CopyFrom(const TimeWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.TimeWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeWindow::IsInitialized() const {
  return true;
}

void TimeWindow::Swap(TimeWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeWindow::InternalSwap(TimeWindow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
}

::google::protobuf::Metadata TimeWindow::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RecurringTimeWindow::InitAsDefaultInstance() {
  ::google::container::v1::_RecurringTimeWindow_default_instance_._instance.get_mutable()->window_ = const_cast< ::google::container::v1::TimeWindow*>(
      ::google::container::v1::TimeWindow::internal_default_instance());
}
class RecurringTimeWindow::HasBitSetters {
 public:
  static const ::google::container::v1::TimeWindow& window(const RecurringTimeWindow* msg);
};

const ::google::container::v1::TimeWindow&
RecurringTimeWindow::HasBitSetters::window(const RecurringTimeWindow* msg) {
  return *msg->window_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecurringTimeWindow::kWindowFieldNumber;
const int RecurringTimeWindow::kRecurrenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecurringTimeWindow::RecurringTimeWindow()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.RecurringTimeWindow)
}
RecurringTimeWindow::RecurringTimeWindow(const RecurringTimeWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recurrence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recurrence().size() > 0) {
    recurrence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recurrence_);
  }
  if (from.has_window()) {
    window_ = new ::google::container::v1::TimeWindow(*from.window_);
  } else {
    window_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.RecurringTimeWindow)
}

void RecurringTimeWindow::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RecurringTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  recurrence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  window_ = nullptr;
}

RecurringTimeWindow::~RecurringTimeWindow() {
  // @@protoc_insertion_point(destructor:google.container.v1.RecurringTimeWindow)
  SharedDtor();
}

void RecurringTimeWindow::SharedDtor() {
  recurrence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete window_;
}

void RecurringTimeWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecurringTimeWindow& RecurringTimeWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RecurringTimeWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RecurringTimeWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.RecurringTimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recurrence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && window_ != nullptr) {
    delete window_;
  }
  window_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecurringTimeWindow::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RecurringTimeWindow*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.TimeWindow window = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::TimeWindow::_InternalParse;
        object = msg->mutable_window();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string recurrence = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.RecurringTimeWindow.recurrence");
        object = msg->mutable_recurrence();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecurringTimeWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.RecurringTimeWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.TimeWindow window = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string recurrence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recurrence()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recurrence().data(), static_cast<int>(this->recurrence().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RecurringTimeWindow.recurrence"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.RecurringTimeWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.RecurringTimeWindow)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecurringTimeWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.RecurringTimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.TimeWindow window = 1;
  if (this->has_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::window(this), output);
  }

  // string recurrence = 2;
  if (this->recurrence().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recurrence().data(), static_cast<int>(this->recurrence().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RecurringTimeWindow.recurrence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->recurrence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.RecurringTimeWindow)
}

::google::protobuf::uint8* RecurringTimeWindow::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.RecurringTimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.TimeWindow window = 1;
  if (this->has_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::window(this), target);
  }

  // string recurrence = 2;
  if (this->recurrence().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recurrence().data(), static_cast<int>(this->recurrence().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RecurringTimeWindow.recurrence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->recurrence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.RecurringTimeWindow)
  return target;
}

size_t RecurringTimeWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.RecurringTimeWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recurrence = 2;
  if (this->recurrence().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recurrence());
  }

  // .google.container.v1.TimeWindow window = 1;
  if (this->has_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *window_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecurringTimeWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.RecurringTimeWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const RecurringTimeWindow* source =
      ::google::protobuf::DynamicCastToGenerated<RecurringTimeWindow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.RecurringTimeWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.RecurringTimeWindow)
    MergeFrom(*source);
  }
}

void RecurringTimeWindow::MergeFrom(const RecurringTimeWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.RecurringTimeWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recurrence().size() > 0) {

    recurrence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recurrence_);
  }
  if (from.has_window()) {
    mutable_window()->::google::container::v1::TimeWindow::MergeFrom(from.window());
  }
}

void RecurringTimeWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.RecurringTimeWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecurringTimeWindow::CopyFrom(const RecurringTimeWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.RecurringTimeWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecurringTimeWindow::IsInitialized() const {
  return true;
}

void RecurringTimeWindow::Swap(RecurringTimeWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecurringTimeWindow::InternalSwap(RecurringTimeWindow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  recurrence_.Swap(&other->recurrence_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(window_, other->window_);
}

::google::protobuf::Metadata RecurringTimeWindow::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DailyMaintenanceWindow::InitAsDefaultInstance() {
}
class DailyMaintenanceWindow::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyMaintenanceWindow::kStartTimeFieldNumber;
const int DailyMaintenanceWindow::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyMaintenanceWindow::DailyMaintenanceWindow()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DailyMaintenanceWindow)
}
DailyMaintenanceWindow::DailyMaintenanceWindow(const DailyMaintenanceWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duration().size() > 0) {
    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DailyMaintenanceWindow)
}

void DailyMaintenanceWindow::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DailyMaintenanceWindow::~DailyMaintenanceWindow() {
  // @@protoc_insertion_point(destructor:google.container.v1.DailyMaintenanceWindow)
  SharedDtor();
}

void DailyMaintenanceWindow::SharedDtor() {
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DailyMaintenanceWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DailyMaintenanceWindow& DailyMaintenanceWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DailyMaintenanceWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DailyMaintenanceWindow::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DailyMaintenanceWindow*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string start_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DailyMaintenanceWindow.start_time");
        object = msg->mutable_start_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string duration = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DailyMaintenanceWindow.duration");
        object = msg->mutable_duration();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DailyMaintenanceWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DailyMaintenanceWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DailyMaintenanceWindow.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duration().data(), static_cast<int>(this->duration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DailyMaintenanceWindow.duration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DailyMaintenanceWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DailyMaintenanceWindow)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DailyMaintenanceWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_time = 2;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DailyMaintenanceWindow.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->start_time(), output);
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DailyMaintenanceWindow.duration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DailyMaintenanceWindow)
}

::google::protobuf::uint8* DailyMaintenanceWindow::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_time = 2;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DailyMaintenanceWindow.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->start_time(), target);
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DailyMaintenanceWindow.duration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DailyMaintenanceWindow)
  return target;
}

size_t DailyMaintenanceWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DailyMaintenanceWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string start_time = 2;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyMaintenanceWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DailyMaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyMaintenanceWindow* source =
      ::google::protobuf::DynamicCastToGenerated<DailyMaintenanceWindow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DailyMaintenanceWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DailyMaintenanceWindow)
    MergeFrom(*source);
  }
}

void DailyMaintenanceWindow::MergeFrom(const DailyMaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DailyMaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  if (from.duration().size() > 0) {

    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
}

void DailyMaintenanceWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DailyMaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyMaintenanceWindow::CopyFrom(const DailyMaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DailyMaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyMaintenanceWindow::IsInitialized() const {
  return true;
}

void DailyMaintenanceWindow::Swap(DailyMaintenanceWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyMaintenanceWindow::InternalSwap(DailyMaintenanceWindow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  start_time_.Swap(&other->start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  duration_.Swap(&other->duration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DailyMaintenanceWindow::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolManagementRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetNodePoolManagementRequest_default_instance_._instance.get_mutable()->management_ = const_cast< ::google::container::v1::NodeManagement*>(
      ::google::container::v1::NodeManagement::internal_default_instance());
}
class SetNodePoolManagementRequest::HasBitSetters {
 public:
  static const ::google::container::v1::NodeManagement& management(const SetNodePoolManagementRequest* msg);
};

const ::google::container::v1::NodeManagement&
SetNodePoolManagementRequest::HasBitSetters::management(const SetNodePoolManagementRequest* msg) {
  return *msg->management_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolManagementRequest::kProjectIdFieldNumber;
const int SetNodePoolManagementRequest::kZoneFieldNumber;
const int SetNodePoolManagementRequest::kClusterIdFieldNumber;
const int SetNodePoolManagementRequest::kNodePoolIdFieldNumber;
const int SetNodePoolManagementRequest::kManagementFieldNumber;
const int SetNodePoolManagementRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolManagementRequest::SetNodePoolManagementRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetNodePoolManagementRequest)
}
SetNodePoolManagementRequest::SetNodePoolManagementRequest(const SetNodePoolManagementRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_management()) {
    management_ = new ::google::container::v1::NodeManagement(*from.management_);
  } else {
    management_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetNodePoolManagementRequest)
}

void SetNodePoolManagementRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNodePoolManagementRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  management_ = nullptr;
}

SetNodePoolManagementRequest::~SetNodePoolManagementRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetNodePoolManagementRequest)
  SharedDtor();
}

void SetNodePoolManagementRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete management_;
}

void SetNodePoolManagementRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNodePoolManagementRequest& SetNodePoolManagementRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNodePoolManagementRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetNodePoolManagementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && management_ != nullptr) {
    delete management_;
  }
  management_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNodePoolManagementRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNodePoolManagementRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolManagementRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolManagementRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolManagementRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolManagementRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.NodeManagement management = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodeManagement::_InternalParse;
        object = msg->mutable_management();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolManagementRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNodePoolManagementRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetNodePoolManagementRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeManagement management = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_management()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetNodePoolManagementRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetNodePoolManagementRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNodePoolManagementRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // .google.container.v1.NodeManagement management = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_management()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::management(this), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetNodePoolManagementRequest)
}

::google::protobuf::uint8* SetNodePoolManagementRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // .google.container.v1.NodeManagement management = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_management()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::management(this), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetNodePoolManagementRequest)
  return target;
}

size_t SetNodePoolManagementRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetNodePoolManagementRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.NodeManagement management = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_management()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *management_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNodePoolManagementRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetNodePoolManagementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolManagementRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNodePoolManagementRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetNodePoolManagementRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetNodePoolManagementRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolManagementRequest::MergeFrom(const SetNodePoolManagementRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetNodePoolManagementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_management()) {
    mutable_management()->::google::container::v1::NodeManagement::MergeFrom(from.management());
  }
}

void SetNodePoolManagementRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetNodePoolManagementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolManagementRequest::CopyFrom(const SetNodePoolManagementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetNodePoolManagementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolManagementRequest::IsInitialized() const {
  return true;
}

void SetNodePoolManagementRequest::Swap(SetNodePoolManagementRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolManagementRequest::InternalSwap(SetNodePoolManagementRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(management_, other->management_);
}

::google::protobuf::Metadata SetNodePoolManagementRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolSizeRequest::InitAsDefaultInstance() {
}
class SetNodePoolSizeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolSizeRequest::kProjectIdFieldNumber;
const int SetNodePoolSizeRequest::kZoneFieldNumber;
const int SetNodePoolSizeRequest::kClusterIdFieldNumber;
const int SetNodePoolSizeRequest::kNodePoolIdFieldNumber;
const int SetNodePoolSizeRequest::kNodeCountFieldNumber;
const int SetNodePoolSizeRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolSizeRequest::SetNodePoolSizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetNodePoolSizeRequest)
}
SetNodePoolSizeRequest::SetNodePoolSizeRequest(const SetNodePoolSizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  node_count_ = from.node_count_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetNodePoolSizeRequest)
}

void SetNodePoolSizeRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNodePoolSizeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_count_ = 0;
}

SetNodePoolSizeRequest::~SetNodePoolSizeRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetNodePoolSizeRequest)
  SharedDtor();
}

void SetNodePoolSizeRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetNodePoolSizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNodePoolSizeRequest& SetNodePoolSizeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNodePoolSizeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetNodePoolSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_count_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNodePoolSizeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNodePoolSizeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolSizeRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolSizeRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolSizeRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolSizeRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 node_count = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNodePoolSizeRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNodePoolSizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetNodePoolSizeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_count = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetNodePoolSizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetNodePoolSizeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNodePoolSizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // int32 node_count = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->node_count(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetNodePoolSizeRequest)
}

::google::protobuf::uint8* SetNodePoolSizeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // int32 node_count = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->node_count(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetNodePoolSizeRequest)
  return target;
}

size_t SetNodePoolSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetNodePoolSizeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 node_count = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNodePoolSizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetNodePoolSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolSizeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNodePoolSizeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetNodePoolSizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetNodePoolSizeRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolSizeRequest::MergeFrom(const SetNodePoolSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetNodePoolSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.node_count() != 0) {
    set_node_count(from.node_count());
  }
}

void SetNodePoolSizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetNodePoolSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolSizeRequest::CopyFrom(const SetNodePoolSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetNodePoolSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolSizeRequest::IsInitialized() const {
  return true;
}

void SetNodePoolSizeRequest::Swap(SetNodePoolSizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolSizeRequest::InternalSwap(SetNodePoolSizeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_count_, other->node_count_);
}

::google::protobuf::Metadata SetNodePoolSizeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RollbackNodePoolUpgradeRequest::InitAsDefaultInstance() {
}
class RollbackNodePoolUpgradeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollbackNodePoolUpgradeRequest::kProjectIdFieldNumber;
const int RollbackNodePoolUpgradeRequest::kZoneFieldNumber;
const int RollbackNodePoolUpgradeRequest::kClusterIdFieldNumber;
const int RollbackNodePoolUpgradeRequest::kNodePoolIdFieldNumber;
const int RollbackNodePoolUpgradeRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackNodePoolUpgradeRequest::RollbackNodePoolUpgradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.RollbackNodePoolUpgradeRequest)
}
RollbackNodePoolUpgradeRequest::RollbackNodePoolUpgradeRequest(const RollbackNodePoolUpgradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.RollbackNodePoolUpgradeRequest)
}

void RollbackNodePoolUpgradeRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RollbackNodePoolUpgradeRequest::~RollbackNodePoolUpgradeRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.RollbackNodePoolUpgradeRequest)
  SharedDtor();
}

void RollbackNodePoolUpgradeRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RollbackNodePoolUpgradeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RollbackNodePoolUpgradeRequest& RollbackNodePoolUpgradeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RollbackNodePoolUpgradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RollbackNodePoolUpgradeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RollbackNodePoolUpgradeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.RollbackNodePoolUpgradeRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.RollbackNodePoolUpgradeRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.RollbackNodePoolUpgradeRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.RollbackNodePoolUpgradeRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.RollbackNodePoolUpgradeRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RollbackNodePoolUpgradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.RollbackNodePoolUpgradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.RollbackNodePoolUpgradeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RollbackNodePoolUpgradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.RollbackNodePoolUpgradeRequest)
}

::google::protobuf::uint8* RollbackNodePoolUpgradeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.RollbackNodePoolUpgradeRequest)
  return target;
}

size_t RollbackNodePoolUpgradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4 [deprecated = true];
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RollbackNodePoolUpgradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RollbackNodePoolUpgradeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RollbackNodePoolUpgradeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.RollbackNodePoolUpgradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.RollbackNodePoolUpgradeRequest)
    MergeFrom(*source);
  }
}

void RollbackNodePoolUpgradeRequest::MergeFrom(const RollbackNodePoolUpgradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RollbackNodePoolUpgradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackNodePoolUpgradeRequest::CopyFrom(const RollbackNodePoolUpgradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackNodePoolUpgradeRequest::IsInitialized() const {
  return true;
}

void RollbackNodePoolUpgradeRequest::Swap(RollbackNodePoolUpgradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackNodePoolUpgradeRequest::InternalSwap(RollbackNodePoolUpgradeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RollbackNodePoolUpgradeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListNodePoolsResponse::InitAsDefaultInstance() {
}
class ListNodePoolsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNodePoolsResponse::kNodePoolsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNodePoolsResponse::ListNodePoolsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListNodePoolsResponse)
}
ListNodePoolsResponse::ListNodePoolsResponse(const ListNodePoolsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      node_pools_(from.node_pools_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListNodePoolsResponse)
}

void ListNodePoolsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListNodePoolsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
}

ListNodePoolsResponse::~ListNodePoolsResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListNodePoolsResponse)
  SharedDtor();
}

void ListNodePoolsResponse::SharedDtor() {
}

void ListNodePoolsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListNodePoolsResponse& ListNodePoolsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListNodePoolsResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListNodePoolsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_pools_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListNodePoolsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListNodePoolsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.container.v1.NodePool node_pools = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::NodePool::_InternalParse;
          object = msg->add_node_pools();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListNodePoolsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListNodePoolsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1.NodePool node_pools = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_node_pools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListNodePoolsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListNodePoolsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListNodePoolsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.NodePool node_pools = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->node_pools(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListNodePoolsResponse)
}

::google::protobuf::uint8* ListNodePoolsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.NodePool node_pools = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->node_pools(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListNodePoolsResponse)
  return target;
}

size_t ListNodePoolsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListNodePoolsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.NodePool node_pools = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->node_pools_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_pools(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodePoolsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListNodePoolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodePoolsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListNodePoolsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListNodePoolsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListNodePoolsResponse)
    MergeFrom(*source);
  }
}

void ListNodePoolsResponse::MergeFrom(const ListNodePoolsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListNodePoolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_pools_.MergeFrom(from.node_pools_);
}

void ListNodePoolsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListNodePoolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodePoolsResponse::CopyFrom(const ListNodePoolsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListNodePoolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodePoolsResponse::IsInitialized() const {
  return true;
}

void ListNodePoolsResponse::Swap(ListNodePoolsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNodePoolsResponse::InternalSwap(ListNodePoolsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&node_pools_)->InternalSwap(CastToBase(&other->node_pools_));
}

::google::protobuf::Metadata ListNodePoolsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClusterAutoscaling::InitAsDefaultInstance() {
  ::google::container::v1::_ClusterAutoscaling_default_instance_._instance.get_mutable()->autoprovisioning_node_pool_defaults_ = const_cast< ::google::container::v1::AutoprovisioningNodePoolDefaults*>(
      ::google::container::v1::AutoprovisioningNodePoolDefaults::internal_default_instance());
}
class ClusterAutoscaling::HasBitSetters {
 public:
  static const ::google::container::v1::AutoprovisioningNodePoolDefaults& autoprovisioning_node_pool_defaults(const ClusterAutoscaling* msg);
};

const ::google::container::v1::AutoprovisioningNodePoolDefaults&
ClusterAutoscaling::HasBitSetters::autoprovisioning_node_pool_defaults(const ClusterAutoscaling* msg) {
  return *msg->autoprovisioning_node_pool_defaults_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterAutoscaling::kEnableNodeAutoprovisioningFieldNumber;
const int ClusterAutoscaling::kResourceLimitsFieldNumber;
const int ClusterAutoscaling::kAutoprovisioningNodePoolDefaultsFieldNumber;
const int ClusterAutoscaling::kAutoprovisioningLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterAutoscaling::ClusterAutoscaling()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ClusterAutoscaling)
}
ClusterAutoscaling::ClusterAutoscaling(const ClusterAutoscaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      resource_limits_(from.resource_limits_),
      autoprovisioning_locations_(from.autoprovisioning_locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_autoprovisioning_node_pool_defaults()) {
    autoprovisioning_node_pool_defaults_ = new ::google::container::v1::AutoprovisioningNodePoolDefaults(*from.autoprovisioning_node_pool_defaults_);
  } else {
    autoprovisioning_node_pool_defaults_ = nullptr;
  }
  enable_node_autoprovisioning_ = from.enable_node_autoprovisioning_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ClusterAutoscaling)
}

void ClusterAutoscaling::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::memset(&autoprovisioning_node_pool_defaults_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_node_autoprovisioning_) -
      reinterpret_cast<char*>(&autoprovisioning_node_pool_defaults_)) + sizeof(enable_node_autoprovisioning_));
}

ClusterAutoscaling::~ClusterAutoscaling() {
  // @@protoc_insertion_point(destructor:google.container.v1.ClusterAutoscaling)
  SharedDtor();
}

void ClusterAutoscaling::SharedDtor() {
  if (this != internal_default_instance()) delete autoprovisioning_node_pool_defaults_;
}

void ClusterAutoscaling::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClusterAutoscaling& ClusterAutoscaling::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClusterAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ClusterAutoscaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ClusterAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_limits_.Clear();
  autoprovisioning_locations_.Clear();
  if (GetArenaNoVirtual() == nullptr && autoprovisioning_node_pool_defaults_ != nullptr) {
    delete autoprovisioning_node_pool_defaults_;
  }
  autoprovisioning_node_pool_defaults_ = nullptr;
  enable_node_autoprovisioning_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClusterAutoscaling::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClusterAutoscaling*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enable_node_autoprovisioning = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enable_node_autoprovisioning(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.container.v1.ResourceLimit resource_limits = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::ResourceLimit::_InternalParse;
          object = msg->add_resource_limits();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .google.container.v1.AutoprovisioningNodePoolDefaults autoprovisioning_node_pool_defaults = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::AutoprovisioningNodePoolDefaults::_InternalParse;
        object = msg->mutable_autoprovisioning_node_pool_defaults();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated string autoprovisioning_locations = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.ClusterAutoscaling.autoprovisioning_locations");
          object = msg->add_autoprovisioning_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClusterAutoscaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ClusterAutoscaling)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable_node_autoprovisioning = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_node_autoprovisioning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.ResourceLimit resource_limits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_resource_limits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AutoprovisioningNodePoolDefaults autoprovisioning_node_pool_defaults = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_autoprovisioning_node_pool_defaults()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string autoprovisioning_locations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_autoprovisioning_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->autoprovisioning_locations(this->autoprovisioning_locations_size() - 1).data(),
            static_cast<int>(this->autoprovisioning_locations(this->autoprovisioning_locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterAutoscaling.autoprovisioning_locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ClusterAutoscaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ClusterAutoscaling)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClusterAutoscaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ClusterAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_node_autoprovisioning = 1;
  if (this->enable_node_autoprovisioning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable_node_autoprovisioning(), output);
  }

  // repeated .google.container.v1.ResourceLimit resource_limits = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resource_limits_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->resource_limits(static_cast<int>(i)),
      output);
  }

  // .google.container.v1.AutoprovisioningNodePoolDefaults autoprovisioning_node_pool_defaults = 4;
  if (this->has_autoprovisioning_node_pool_defaults()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::autoprovisioning_node_pool_defaults(this), output);
  }

  // repeated string autoprovisioning_locations = 5;
  for (int i = 0, n = this->autoprovisioning_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->autoprovisioning_locations(i).data(), static_cast<int>(this->autoprovisioning_locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterAutoscaling.autoprovisioning_locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->autoprovisioning_locations(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ClusterAutoscaling)
}

::google::protobuf::uint8* ClusterAutoscaling::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ClusterAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_node_autoprovisioning = 1;
  if (this->enable_node_autoprovisioning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable_node_autoprovisioning(), target);
  }

  // repeated .google.container.v1.ResourceLimit resource_limits = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resource_limits_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->resource_limits(static_cast<int>(i)), target);
  }

  // .google.container.v1.AutoprovisioningNodePoolDefaults autoprovisioning_node_pool_defaults = 4;
  if (this->has_autoprovisioning_node_pool_defaults()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::autoprovisioning_node_pool_defaults(this), target);
  }

  // repeated string autoprovisioning_locations = 5;
  for (int i = 0, n = this->autoprovisioning_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->autoprovisioning_locations(i).data(), static_cast<int>(this->autoprovisioning_locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterAutoscaling.autoprovisioning_locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->autoprovisioning_locations(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ClusterAutoscaling)
  return target;
}

size_t ClusterAutoscaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ClusterAutoscaling)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.ResourceLimit resource_limits = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->resource_limits_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->resource_limits(static_cast<int>(i)));
    }
  }

  // repeated string autoprovisioning_locations = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->autoprovisioning_locations_size());
  for (int i = 0, n = this->autoprovisioning_locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->autoprovisioning_locations(i));
  }

  // .google.container.v1.AutoprovisioningNodePoolDefaults autoprovisioning_node_pool_defaults = 4;
  if (this->has_autoprovisioning_node_pool_defaults()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *autoprovisioning_node_pool_defaults_);
  }

  // bool enable_node_autoprovisioning = 1;
  if (this->enable_node_autoprovisioning() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterAutoscaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ClusterAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterAutoscaling* source =
      ::google::protobuf::DynamicCastToGenerated<ClusterAutoscaling>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ClusterAutoscaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ClusterAutoscaling)
    MergeFrom(*source);
  }
}

void ClusterAutoscaling::MergeFrom(const ClusterAutoscaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ClusterAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_limits_.MergeFrom(from.resource_limits_);
  autoprovisioning_locations_.MergeFrom(from.autoprovisioning_locations_);
  if (from.has_autoprovisioning_node_pool_defaults()) {
    mutable_autoprovisioning_node_pool_defaults()->::google::container::v1::AutoprovisioningNodePoolDefaults::MergeFrom(from.autoprovisioning_node_pool_defaults());
  }
  if (from.enable_node_autoprovisioning() != 0) {
    set_enable_node_autoprovisioning(from.enable_node_autoprovisioning());
  }
}

void ClusterAutoscaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ClusterAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterAutoscaling::CopyFrom(const ClusterAutoscaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ClusterAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterAutoscaling::IsInitialized() const {
  return true;
}

void ClusterAutoscaling::Swap(ClusterAutoscaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterAutoscaling::InternalSwap(ClusterAutoscaling* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&resource_limits_)->InternalSwap(CastToBase(&other->resource_limits_));
  autoprovisioning_locations_.InternalSwap(CastToBase(&other->autoprovisioning_locations_));
  swap(autoprovisioning_node_pool_defaults_, other->autoprovisioning_node_pool_defaults_);
  swap(enable_node_autoprovisioning_, other->enable_node_autoprovisioning_);
}

::google::protobuf::Metadata ClusterAutoscaling::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AutoprovisioningNodePoolDefaults::InitAsDefaultInstance() {
  ::google::container::v1::_AutoprovisioningNodePoolDefaults_default_instance_._instance.get_mutable()->upgrade_settings_ = const_cast< ::google::container::v1::NodePool_UpgradeSettings*>(
      ::google::container::v1::NodePool_UpgradeSettings::internal_default_instance());
  ::google::container::v1::_AutoprovisioningNodePoolDefaults_default_instance_._instance.get_mutable()->management_ = const_cast< ::google::container::v1::NodeManagement*>(
      ::google::container::v1::NodeManagement::internal_default_instance());
  ::google::container::v1::_AutoprovisioningNodePoolDefaults_default_instance_._instance.get_mutable()->shielded_instance_config_ = const_cast< ::google::container::v1::ShieldedInstanceConfig*>(
      ::google::container::v1::ShieldedInstanceConfig::internal_default_instance());
}
class AutoprovisioningNodePoolDefaults::HasBitSetters {
 public:
  static const ::google::container::v1::NodePool_UpgradeSettings& upgrade_settings(const AutoprovisioningNodePoolDefaults* msg);
  static const ::google::container::v1::NodeManagement& management(const AutoprovisioningNodePoolDefaults* msg);
  static const ::google::container::v1::ShieldedInstanceConfig& shielded_instance_config(const AutoprovisioningNodePoolDefaults* msg);
};

const ::google::container::v1::NodePool_UpgradeSettings&
AutoprovisioningNodePoolDefaults::HasBitSetters::upgrade_settings(const AutoprovisioningNodePoolDefaults* msg) {
  return *msg->upgrade_settings_;
}
const ::google::container::v1::NodeManagement&
AutoprovisioningNodePoolDefaults::HasBitSetters::management(const AutoprovisioningNodePoolDefaults* msg) {
  return *msg->management_;
}
const ::google::container::v1::ShieldedInstanceConfig&
AutoprovisioningNodePoolDefaults::HasBitSetters::shielded_instance_config(const AutoprovisioningNodePoolDefaults* msg) {
  return *msg->shielded_instance_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoprovisioningNodePoolDefaults::kOauthScopesFieldNumber;
const int AutoprovisioningNodePoolDefaults::kServiceAccountFieldNumber;
const int AutoprovisioningNodePoolDefaults::kUpgradeSettingsFieldNumber;
const int AutoprovisioningNodePoolDefaults::kManagementFieldNumber;
const int AutoprovisioningNodePoolDefaults::kMinCpuPlatformFieldNumber;
const int AutoprovisioningNodePoolDefaults::kDiskSizeGbFieldNumber;
const int AutoprovisioningNodePoolDefaults::kDiskTypeFieldNumber;
const int AutoprovisioningNodePoolDefaults::kShieldedInstanceConfigFieldNumber;
const int AutoprovisioningNodePoolDefaults::kBootDiskKmsKeyFieldNumber;
const int AutoprovisioningNodePoolDefaults::kImageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoprovisioningNodePoolDefaults::AutoprovisioningNodePoolDefaults()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.AutoprovisioningNodePoolDefaults)
}
AutoprovisioningNodePoolDefaults::AutoprovisioningNodePoolDefaults(const AutoprovisioningNodePoolDefaults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      oauth_scopes_(from.oauth_scopes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_account().size() > 0) {
    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.min_cpu_platform().size() > 0) {
    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  disk_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.disk_type().size() > 0) {
    disk_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disk_type_);
  }
  boot_disk_kms_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.boot_disk_kms_key().size() > 0) {
    boot_disk_kms_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.boot_disk_kms_key_);
  }
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_type().size() > 0) {
    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  if (from.has_upgrade_settings()) {
    upgrade_settings_ = new ::google::container::v1::NodePool_UpgradeSettings(*from.upgrade_settings_);
  } else {
    upgrade_settings_ = nullptr;
  }
  if (from.has_management()) {
    management_ = new ::google::container::v1::NodeManagement(*from.management_);
  } else {
    management_ = nullptr;
  }
  if (from.has_shielded_instance_config()) {
    shielded_instance_config_ = new ::google::container::v1::ShieldedInstanceConfig(*from.shielded_instance_config_);
  } else {
    shielded_instance_config_ = nullptr;
  }
  disk_size_gb_ = from.disk_size_gb_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.AutoprovisioningNodePoolDefaults)
}

void AutoprovisioningNodePoolDefaults::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AutoprovisioningNodePoolDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boot_disk_kms_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&upgrade_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disk_size_gb_) -
      reinterpret_cast<char*>(&upgrade_settings_)) + sizeof(disk_size_gb_));
}

AutoprovisioningNodePoolDefaults::~AutoprovisioningNodePoolDefaults() {
  // @@protoc_insertion_point(destructor:google.container.v1.AutoprovisioningNodePoolDefaults)
  SharedDtor();
}

void AutoprovisioningNodePoolDefaults::SharedDtor() {
  service_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boot_disk_kms_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete upgrade_settings_;
  if (this != internal_default_instance()) delete management_;
  if (this != internal_default_instance()) delete shielded_instance_config_;
}

void AutoprovisioningNodePoolDefaults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AutoprovisioningNodePoolDefaults& AutoprovisioningNodePoolDefaults::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AutoprovisioningNodePoolDefaults_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AutoprovisioningNodePoolDefaults::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oauth_scopes_.Clear();
  service_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boot_disk_kms_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && upgrade_settings_ != nullptr) {
    delete upgrade_settings_;
  }
  upgrade_settings_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && management_ != nullptr) {
    delete management_;
  }
  management_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && shielded_instance_config_ != nullptr) {
    delete shielded_instance_config_;
  }
  shielded_instance_config_ = nullptr;
  disk_size_gb_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AutoprovisioningNodePoolDefaults::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AutoprovisioningNodePoolDefaults*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string oauth_scopes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.AutoprovisioningNodePoolDefaults.oauth_scopes");
          object = msg->add_oauth_scopes();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string service_account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AutoprovisioningNodePoolDefaults.service_account");
        object = msg->mutable_service_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodePool_UpgradeSettings::_InternalParse;
        object = msg->mutable_upgrade_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1.NodeManagement management = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NodeManagement::_InternalParse;
        object = msg->mutable_management();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string min_cpu_platform = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AutoprovisioningNodePoolDefaults.min_cpu_platform");
        object = msg->mutable_min_cpu_platform();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 disk_size_gb = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_disk_size_gb(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string disk_type = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AutoprovisioningNodePoolDefaults.disk_type");
        object = msg->mutable_disk_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ShieldedInstanceConfig::_InternalParse;
        object = msg->mutable_shielded_instance_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string boot_disk_kms_key = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AutoprovisioningNodePoolDefaults.boot_disk_kms_key");
        object = msg->mutable_boot_disk_kms_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string image_type = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AutoprovisioningNodePoolDefaults.image_type");
        object = msg->mutable_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AutoprovisioningNodePoolDefaults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string oauth_scopes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_oauth_scopes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oauth_scopes(this->oauth_scopes_size() - 1).data(),
            static_cast<int>(this->oauth_scopes(this->oauth_scopes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoprovisioningNodePoolDefaults.oauth_scopes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account().data(), static_cast<int>(this->service_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoprovisioningNodePoolDefaults.service_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upgrade_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeManagement management = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_management()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string min_cpu_platform = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_min_cpu_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoprovisioningNodePoolDefaults.min_cpu_platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 disk_size_gb = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &disk_size_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string disk_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disk_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->disk_type().data(), static_cast<int>(this->disk_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoprovisioningNodePoolDefaults.disk_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shielded_instance_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string boot_disk_kms_key = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_boot_disk_kms_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->boot_disk_kms_key().data(), static_cast<int>(this->boot_disk_kms_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoprovisioningNodePoolDefaults.boot_disk_kms_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_type().data(), static_cast<int>(this->image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoprovisioningNodePoolDefaults.image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.AutoprovisioningNodePoolDefaults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.AutoprovisioningNodePoolDefaults)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AutoprovisioningNodePoolDefaults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string oauth_scopes = 1;
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_scopes(i).data(), static_cast<int>(this->oauth_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.oauth_scopes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->oauth_scopes(i), output);
  }

  // string service_account = 2;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.service_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service_account(), output);
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 3;
  if (this->has_upgrade_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::upgrade_settings(this), output);
  }

  // .google.container.v1.NodeManagement management = 4;
  if (this->has_management()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::management(this), output);
  }

  // string min_cpu_platform = 5;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.min_cpu_platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->min_cpu_platform(), output);
  }

  // int32 disk_size_gb = 6;
  if (this->disk_size_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->disk_size_gb(), output);
  }

  // string disk_type = 7;
  if (this->disk_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk_type().data(), static_cast<int>(this->disk_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.disk_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->disk_type(), output);
  }

  // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 8;
  if (this->has_shielded_instance_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::shielded_instance_config(this), output);
  }

  // string boot_disk_kms_key = 9;
  if (this->boot_disk_kms_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->boot_disk_kms_key().data(), static_cast<int>(this->boot_disk_kms_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.boot_disk_kms_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->boot_disk_kms_key(), output);
  }

  // string image_type = 10;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->image_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.AutoprovisioningNodePoolDefaults)
}

::google::protobuf::uint8* AutoprovisioningNodePoolDefaults::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string oauth_scopes = 1;
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_scopes(i).data(), static_cast<int>(this->oauth_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.oauth_scopes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->oauth_scopes(i), target);
  }

  // string service_account = 2;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.service_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service_account(), target);
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 3;
  if (this->has_upgrade_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::upgrade_settings(this), target);
  }

  // .google.container.v1.NodeManagement management = 4;
  if (this->has_management()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::management(this), target);
  }

  // string min_cpu_platform = 5;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.min_cpu_platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->min_cpu_platform(), target);
  }

  // int32 disk_size_gb = 6;
  if (this->disk_size_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->disk_size_gb(), target);
  }

  // string disk_type = 7;
  if (this->disk_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk_type().data(), static_cast<int>(this->disk_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.disk_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->disk_type(), target);
  }

  // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 8;
  if (this->has_shielded_instance_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::shielded_instance_config(this), target);
  }

  // string boot_disk_kms_key = 9;
  if (this->boot_disk_kms_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->boot_disk_kms_key().data(), static_cast<int>(this->boot_disk_kms_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.boot_disk_kms_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->boot_disk_kms_key(), target);
  }

  // string image_type = 10;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoprovisioningNodePoolDefaults.image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->image_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.AutoprovisioningNodePoolDefaults)
  return target;
}

size_t AutoprovisioningNodePoolDefaults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string oauth_scopes = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->oauth_scopes_size());
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->oauth_scopes(i));
  }

  // string service_account = 2;
  if (this->service_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_account());
  }

  // string min_cpu_platform = 5;
  if (this->min_cpu_platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->min_cpu_platform());
  }

  // string disk_type = 7;
  if (this->disk_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->disk_type());
  }

  // string boot_disk_kms_key = 9;
  if (this->boot_disk_kms_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->boot_disk_kms_key());
  }

  // string image_type = 10;
  if (this->image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_type());
  }

  // .google.container.v1.NodePool.UpgradeSettings upgrade_settings = 3;
  if (this->has_upgrade_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upgrade_settings_);
  }

  // .google.container.v1.NodeManagement management = 4;
  if (this->has_management()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *management_);
  }

  // .google.container.v1.ShieldedInstanceConfig shielded_instance_config = 8;
  if (this->has_shielded_instance_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shielded_instance_config_);
  }

  // int32 disk_size_gb = 6;
  if (this->disk_size_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->disk_size_gb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutoprovisioningNodePoolDefaults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoprovisioningNodePoolDefaults* source =
      ::google::protobuf::DynamicCastToGenerated<AutoprovisioningNodePoolDefaults>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.AutoprovisioningNodePoolDefaults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.AutoprovisioningNodePoolDefaults)
    MergeFrom(*source);
  }
}

void AutoprovisioningNodePoolDefaults::MergeFrom(const AutoprovisioningNodePoolDefaults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  oauth_scopes_.MergeFrom(from.oauth_scopes_);
  if (from.service_account().size() > 0) {

    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  if (from.min_cpu_platform().size() > 0) {

    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  if (from.disk_type().size() > 0) {

    disk_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disk_type_);
  }
  if (from.boot_disk_kms_key().size() > 0) {

    boot_disk_kms_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.boot_disk_kms_key_);
  }
  if (from.image_type().size() > 0) {

    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  if (from.has_upgrade_settings()) {
    mutable_upgrade_settings()->::google::container::v1::NodePool_UpgradeSettings::MergeFrom(from.upgrade_settings());
  }
  if (from.has_management()) {
    mutable_management()->::google::container::v1::NodeManagement::MergeFrom(from.management());
  }
  if (from.has_shielded_instance_config()) {
    mutable_shielded_instance_config()->::google::container::v1::ShieldedInstanceConfig::MergeFrom(from.shielded_instance_config());
  }
  if (from.disk_size_gb() != 0) {
    set_disk_size_gb(from.disk_size_gb());
  }
}

void AutoprovisioningNodePoolDefaults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoprovisioningNodePoolDefaults::CopyFrom(const AutoprovisioningNodePoolDefaults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.AutoprovisioningNodePoolDefaults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoprovisioningNodePoolDefaults::IsInitialized() const {
  return true;
}

void AutoprovisioningNodePoolDefaults::Swap(AutoprovisioningNodePoolDefaults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoprovisioningNodePoolDefaults::InternalSwap(AutoprovisioningNodePoolDefaults* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oauth_scopes_.InternalSwap(CastToBase(&other->oauth_scopes_));
  service_account_.Swap(&other->service_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  min_cpu_platform_.Swap(&other->min_cpu_platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  disk_type_.Swap(&other->disk_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  boot_disk_kms_key_.Swap(&other->boot_disk_kms_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_type_.Swap(&other->image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(upgrade_settings_, other->upgrade_settings_);
  swap(management_, other->management_);
  swap(shielded_instance_config_, other->shielded_instance_config_);
  swap(disk_size_gb_, other->disk_size_gb_);
}

::google::protobuf::Metadata AutoprovisioningNodePoolDefaults::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResourceLimit::InitAsDefaultInstance() {
}
class ResourceLimit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceLimit::kResourceTypeFieldNumber;
const int ResourceLimit::kMinimumFieldNumber;
const int ResourceLimit::kMaximumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceLimit::ResourceLimit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ResourceLimit)
}
ResourceLimit::ResourceLimit(const ResourceLimit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_type().size() > 0) {
    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
  ::memcpy(&minimum_, &from.minimum_,
    static_cast<size_t>(reinterpret_cast<char*>(&maximum_) -
    reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ResourceLimit)
}

void ResourceLimit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResourceLimit_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
}

ResourceLimit::~ResourceLimit() {
  // @@protoc_insertion_point(destructor:google.container.v1.ResourceLimit)
  SharedDtor();
}

void ResourceLimit::SharedDtor() {
  resource_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceLimit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceLimit& ResourceLimit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResourceLimit_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ResourceLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ResourceLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResourceLimit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResourceLimit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string resource_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ResourceLimit.resource_type");
        object = msg->mutable_resource_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 minimum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_minimum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 maximum = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_maximum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResourceLimit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ResourceLimit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_type().data(), static_cast<int>(this->resource_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ResourceLimit.resource_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 minimum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 maximum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ResourceLimit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ResourceLimit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResourceLimit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ResourceLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_type = 1;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), static_cast<int>(this->resource_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ResourceLimit.resource_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_type(), output);
  }

  // int64 minimum = 2;
  if (this->minimum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->minimum(), output);
  }

  // int64 maximum = 3;
  if (this->maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->maximum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ResourceLimit)
}

::google::protobuf::uint8* ResourceLimit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ResourceLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_type = 1;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), static_cast<int>(this->resource_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ResourceLimit.resource_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_type(), target);
  }

  // int64 minimum = 2;
  if (this->minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->minimum(), target);
  }

  // int64 maximum = 3;
  if (this->maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->maximum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ResourceLimit)
  return target;
}

size_t ResourceLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ResourceLimit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_type = 1;
  if (this->resource_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_type());
  }

  // int64 minimum = 2;
  if (this->minimum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->minimum());
  }

  // int64 maximum = 3;
  if (this->maximum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maximum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceLimit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ResourceLimit)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceLimit* source =
      ::google::protobuf::DynamicCastToGenerated<ResourceLimit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ResourceLimit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ResourceLimit)
    MergeFrom(*source);
  }
}

void ResourceLimit::MergeFrom(const ResourceLimit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ResourceLimit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_type().size() > 0) {

    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
  if (from.minimum() != 0) {
    set_minimum(from.minimum());
  }
  if (from.maximum() != 0) {
    set_maximum(from.maximum());
  }
}

void ResourceLimit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ResourceLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceLimit::CopyFrom(const ResourceLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ResourceLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceLimit::IsInitialized() const {
  return true;
}

void ResourceLimit::Swap(ResourceLimit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceLimit::InternalSwap(ResourceLimit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_type_.Swap(&other->resource_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(minimum_, other->minimum_);
  swap(maximum_, other->maximum_);
}

::google::protobuf::Metadata ResourceLimit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodePoolAutoscaling::InitAsDefaultInstance() {
}
class NodePoolAutoscaling::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodePoolAutoscaling::kEnabledFieldNumber;
const int NodePoolAutoscaling::kMinNodeCountFieldNumber;
const int NodePoolAutoscaling::kMaxNodeCountFieldNumber;
const int NodePoolAutoscaling::kAutoprovisionedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodePoolAutoscaling::NodePoolAutoscaling()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodePoolAutoscaling)
}
NodePoolAutoscaling::NodePoolAutoscaling(const NodePoolAutoscaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_node_count_, &from.min_node_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_node_count_) -
    reinterpret_cast<char*>(&min_node_count_)) + sizeof(max_node_count_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodePoolAutoscaling)
}

void NodePoolAutoscaling::SharedCtor() {
  ::memset(&min_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_node_count_) -
      reinterpret_cast<char*>(&min_node_count_)) + sizeof(max_node_count_));
}

NodePoolAutoscaling::~NodePoolAutoscaling() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodePoolAutoscaling)
  SharedDtor();
}

void NodePoolAutoscaling::SharedDtor() {
}

void NodePoolAutoscaling::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodePoolAutoscaling& NodePoolAutoscaling::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodePoolAutoscaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_node_count_) -
      reinterpret_cast<char*>(&min_node_count_)) + sizeof(max_node_count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodePoolAutoscaling::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodePoolAutoscaling*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 min_node_count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_min_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 max_node_count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_max_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool autoprovisioned = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_autoprovisioned(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodePoolAutoscaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodePoolAutoscaling)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 min_node_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_node_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool autoprovisioned = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autoprovisioned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodePoolAutoscaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodePoolAutoscaling)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodePoolAutoscaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->min_node_count(), output);
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_node_count(), output);
  }

  // bool autoprovisioned = 4;
  if (this->autoprovisioned() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->autoprovisioned(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodePoolAutoscaling)
}

::google::protobuf::uint8* NodePoolAutoscaling::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->min_node_count(), target);
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_node_count(), target);
  }

  // bool autoprovisioned = 4;
  if (this->autoprovisioned() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->autoprovisioned(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodePoolAutoscaling)
  return target;
}

size_t NodePoolAutoscaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodePoolAutoscaling)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_node_count());
  }

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool autoprovisioned = 4;
  if (this->autoprovisioned() != 0) {
    total_size += 1 + 1;
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_node_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodePoolAutoscaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodePoolAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  const NodePoolAutoscaling* source =
      ::google::protobuf::DynamicCastToGenerated<NodePoolAutoscaling>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodePoolAutoscaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodePoolAutoscaling)
    MergeFrom(*source);
  }
}

void NodePoolAutoscaling::MergeFrom(const NodePoolAutoscaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodePoolAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min_node_count() != 0) {
    set_min_node_count(from.min_node_count());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.autoprovisioned() != 0) {
    set_autoprovisioned(from.autoprovisioned());
  }
  if (from.max_node_count() != 0) {
    set_max_node_count(from.max_node_count());
  }
}

void NodePoolAutoscaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodePoolAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodePoolAutoscaling::CopyFrom(const NodePoolAutoscaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodePoolAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodePoolAutoscaling::IsInitialized() const {
  return true;
}

void NodePoolAutoscaling::Swap(NodePoolAutoscaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodePoolAutoscaling::InternalSwap(NodePoolAutoscaling* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(min_node_count_, other->min_node_count_);
  swap(enabled_, other->enabled_);
  swap(autoprovisioned_, other->autoprovisioned_);
  swap(max_node_count_, other->max_node_count_);
}

::google::protobuf::Metadata NodePoolAutoscaling::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

SetLabelsRequest_ResourceLabelsEntry_DoNotUse::SetLabelsRequest_ResourceLabelsEntry_DoNotUse() {}
SetLabelsRequest_ResourceLabelsEntry_DoNotUse::SetLabelsRequest_ResourceLabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void SetLabelsRequest_ResourceLabelsEntry_DoNotUse::MergeFrom(const SetLabelsRequest_ResourceLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SetLabelsRequest_ResourceLabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[75];
}
void SetLabelsRequest_ResourceLabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLabelsRequest_ResourceLabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      SetLabelsRequest_ResourceLabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void SetLabelsRequest::InitAsDefaultInstance() {
}
class SetLabelsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLabelsRequest::kProjectIdFieldNumber;
const int SetLabelsRequest::kZoneFieldNumber;
const int SetLabelsRequest::kClusterIdFieldNumber;
const int SetLabelsRequest::kResourceLabelsFieldNumber;
const int SetLabelsRequest::kLabelFingerprintFieldNumber;
const int SetLabelsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLabelsRequest::SetLabelsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetLabelsRequest)
}
SetLabelsRequest::SetLabelsRequest(const SetLabelsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_labels_.MergeFrom(from.resource_labels_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label_fingerprint().size() > 0) {
    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetLabelsRequest)
}

void SetLabelsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetLabelsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetLabelsRequest::~SetLabelsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetLabelsRequest)
  SharedDtor();
}

void SetLabelsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLabelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLabelsRequest& SetLabelsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetLabelsRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetLabelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_labels_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetLabelsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetLabelsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLabelsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLabelsRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLabelsRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> resource_labels = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->resource_labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // string label_fingerprint = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLabelsRequest.label_fingerprint");
        object = msg->mutable_label_fingerprint();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLabelsRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLabelsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetLabelsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> resource_labels = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          SetLabelsRequest_ResourceLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SetLabelsRequest_ResourceLabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&resource_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label_fingerprint = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label_fingerprint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.label_fingerprint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetLabelsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetLabelsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetLabelsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // map<string, string> resource_labels = 4 [(.google.api.field_behavior) = REQUIRED];
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->resource_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string label_fingerprint = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.label_fingerprint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label_fingerprint(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetLabelsRequest)
}

::google::protobuf::uint8* SetLabelsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // map<string, string> resource_labels = 4 [(.google.api.field_behavior) = REQUIRED];
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.value");
      }
    };

    if (false &&
        this->resource_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string label_fingerprint = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.label_fingerprint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->label_fingerprint(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetLabelsRequest)
  return target;
}

size_t SetLabelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetLabelsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> resource_labels = 4 [(.google.api.field_behavior) = REQUIRED];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_labels_size());
  {
    ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->resource_labels().begin();
        it != this->resource_labels().end(); ++it) {
      entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string label_fingerprint = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->label_fingerprint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label_fingerprint());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLabelsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetLabelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLabelsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetLabelsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetLabelsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetLabelsRequest)
    MergeFrom(*source);
  }
}

void SetLabelsRequest::MergeFrom(const SetLabelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetLabelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_labels_.MergeFrom(from.resource_labels_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.label_fingerprint().size() > 0) {

    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SetLabelsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetLabelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLabelsRequest::CopyFrom(const SetLabelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetLabelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLabelsRequest::IsInitialized() const {
  return true;
}

void SetLabelsRequest::Swap(SetLabelsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLabelsRequest::InternalSwap(SetLabelsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_labels_.Swap(&other->resource_labels_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_fingerprint_.Swap(&other->label_fingerprint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetLabelsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetLegacyAbacRequest::InitAsDefaultInstance() {
}
class SetLegacyAbacRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLegacyAbacRequest::kProjectIdFieldNumber;
const int SetLegacyAbacRequest::kZoneFieldNumber;
const int SetLegacyAbacRequest::kClusterIdFieldNumber;
const int SetLegacyAbacRequest::kEnabledFieldNumber;
const int SetLegacyAbacRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLegacyAbacRequest::SetLegacyAbacRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetLegacyAbacRequest)
}
SetLegacyAbacRequest::SetLegacyAbacRequest(const SetLegacyAbacRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetLegacyAbacRequest)
}

void SetLegacyAbacRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetLegacyAbacRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
}

SetLegacyAbacRequest::~SetLegacyAbacRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetLegacyAbacRequest)
  SharedDtor();
}

void SetLegacyAbacRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLegacyAbacRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLegacyAbacRequest& SetLegacyAbacRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetLegacyAbacRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetLegacyAbacRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetLegacyAbacRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetLegacyAbacRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLegacyAbacRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLegacyAbacRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLegacyAbacRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool enabled = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetLegacyAbacRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLegacyAbacRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetLegacyAbacRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLegacyAbacRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLegacyAbacRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLegacyAbacRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLegacyAbacRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetLegacyAbacRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetLegacyAbacRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetLegacyAbacRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // bool enabled = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enabled(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetLegacyAbacRequest)
}

::google::protobuf::uint8* SetLegacyAbacRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // bool enabled = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enabled(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetLegacyAbacRequest)
  return target;
}

size_t SetLegacyAbacRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetLegacyAbacRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool enabled = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLegacyAbacRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetLegacyAbacRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLegacyAbacRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetLegacyAbacRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetLegacyAbacRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetLegacyAbacRequest)
    MergeFrom(*source);
  }
}

void SetLegacyAbacRequest::MergeFrom(const SetLegacyAbacRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetLegacyAbacRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void SetLegacyAbacRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetLegacyAbacRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLegacyAbacRequest::CopyFrom(const SetLegacyAbacRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetLegacyAbacRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLegacyAbacRequest::IsInitialized() const {
  return true;
}

void SetLegacyAbacRequest::Swap(SetLegacyAbacRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLegacyAbacRequest::InternalSwap(SetLegacyAbacRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata SetLegacyAbacRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StartIPRotationRequest::InitAsDefaultInstance() {
}
class StartIPRotationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartIPRotationRequest::kProjectIdFieldNumber;
const int StartIPRotationRequest::kZoneFieldNumber;
const int StartIPRotationRequest::kClusterIdFieldNumber;
const int StartIPRotationRequest::kNameFieldNumber;
const int StartIPRotationRequest::kRotateCredentialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartIPRotationRequest::StartIPRotationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.StartIPRotationRequest)
}
StartIPRotationRequest::StartIPRotationRequest(const StartIPRotationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  rotate_credentials_ = from.rotate_credentials_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.StartIPRotationRequest)
}

void StartIPRotationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StartIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rotate_credentials_ = false;
}

StartIPRotationRequest::~StartIPRotationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.StartIPRotationRequest)
  SharedDtor();
}

void StartIPRotationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartIPRotationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartIPRotationRequest& StartIPRotationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StartIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StartIPRotationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rotate_credentials_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StartIPRotationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StartIPRotationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.StartIPRotationRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.StartIPRotationRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.StartIPRotationRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.StartIPRotationRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool rotate_credentials = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_rotate_credentials(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StartIPRotationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.StartIPRotationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.StartIPRotationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.StartIPRotationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.StartIPRotationRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.StartIPRotationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool rotate_credentials = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rotate_credentials_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.StartIPRotationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.StartIPRotationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StartIPRotationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // bool rotate_credentials = 7;
  if (this->rotate_credentials() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->rotate_credentials(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.StartIPRotationRequest)
}

::google::protobuf::uint8* StartIPRotationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // bool rotate_credentials = 7;
  if (this->rotate_credentials() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->rotate_credentials(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.StartIPRotationRequest)
  return target;
}

size_t StartIPRotationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.StartIPRotationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool rotate_credentials = 7;
  if (this->rotate_credentials() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartIPRotationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.StartIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartIPRotationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StartIPRotationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.StartIPRotationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.StartIPRotationRequest)
    MergeFrom(*source);
  }
}

void StartIPRotationRequest::MergeFrom(const StartIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.StartIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.rotate_credentials() != 0) {
    set_rotate_credentials(from.rotate_credentials());
  }
}

void StartIPRotationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.StartIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartIPRotationRequest::CopyFrom(const StartIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.StartIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartIPRotationRequest::IsInitialized() const {
  return true;
}

void StartIPRotationRequest::Swap(StartIPRotationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartIPRotationRequest::InternalSwap(StartIPRotationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rotate_credentials_, other->rotate_credentials_);
}

::google::protobuf::Metadata StartIPRotationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CompleteIPRotationRequest::InitAsDefaultInstance() {
}
class CompleteIPRotationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteIPRotationRequest::kProjectIdFieldNumber;
const int CompleteIPRotationRequest::kZoneFieldNumber;
const int CompleteIPRotationRequest::kClusterIdFieldNumber;
const int CompleteIPRotationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteIPRotationRequest::CompleteIPRotationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CompleteIPRotationRequest)
}
CompleteIPRotationRequest::CompleteIPRotationRequest(const CompleteIPRotationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CompleteIPRotationRequest)
}

void CompleteIPRotationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CompleteIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CompleteIPRotationRequest::~CompleteIPRotationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.CompleteIPRotationRequest)
  SharedDtor();
}

void CompleteIPRotationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompleteIPRotationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompleteIPRotationRequest& CompleteIPRotationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CompleteIPRotationRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CompleteIPRotationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CompleteIPRotationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CompleteIPRotationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CompleteIPRotationRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CompleteIPRotationRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CompleteIPRotationRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.CompleteIPRotationRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CompleteIPRotationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CompleteIPRotationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CompleteIPRotationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CompleteIPRotationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CompleteIPRotationRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CompleteIPRotationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CompleteIPRotationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CompleteIPRotationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CompleteIPRotationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CompleteIPRotationRequest)
}

::google::protobuf::uint8* CompleteIPRotationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CompleteIPRotationRequest)
  return target;
}

size_t CompleteIPRotationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CompleteIPRotationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteIPRotationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CompleteIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteIPRotationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CompleteIPRotationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CompleteIPRotationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CompleteIPRotationRequest)
    MergeFrom(*source);
  }
}

void CompleteIPRotationRequest::MergeFrom(const CompleteIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CompleteIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CompleteIPRotationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CompleteIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteIPRotationRequest::CopyFrom(const CompleteIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CompleteIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteIPRotationRequest::IsInitialized() const {
  return true;
}

void CompleteIPRotationRequest::Swap(CompleteIPRotationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompleteIPRotationRequest::InternalSwap(CompleteIPRotationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CompleteIPRotationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AcceleratorConfig::InitAsDefaultInstance() {
}
class AcceleratorConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceleratorConfig::kAcceleratorCountFieldNumber;
const int AcceleratorConfig::kAcceleratorTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceleratorConfig::AcceleratorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.AcceleratorConfig)
}
AcceleratorConfig::AcceleratorConfig(const AcceleratorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accelerator_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accelerator_type().size() > 0) {
    accelerator_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_type_);
  }
  accelerator_count_ = from.accelerator_count_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.AcceleratorConfig)
}

void AcceleratorConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AcceleratorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  accelerator_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accelerator_count_ = PROTOBUF_LONGLONG(0);
}

AcceleratorConfig::~AcceleratorConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.AcceleratorConfig)
  SharedDtor();
}

void AcceleratorConfig::SharedDtor() {
  accelerator_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceleratorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AcceleratorConfig& AcceleratorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AcceleratorConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AcceleratorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accelerator_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accelerator_count_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AcceleratorConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AcceleratorConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 accelerator_count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_accelerator_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string accelerator_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.AcceleratorConfig.accelerator_type");
        object = msg->mutable_accelerator_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AcceleratorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.AcceleratorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 accelerator_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accelerator_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string accelerator_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accelerator_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AcceleratorConfig.accelerator_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.AcceleratorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.AcceleratorConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AcceleratorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accelerator_count(), output);
  }

  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AcceleratorConfig.accelerator_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accelerator_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.AcceleratorConfig)
}

::google::protobuf::uint8* AcceleratorConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accelerator_count(), target);
  }

  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AcceleratorConfig.accelerator_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accelerator_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.AcceleratorConfig)
  return target;
}

size_t AcceleratorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.AcceleratorConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accelerator_type());
  }

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accelerator_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AcceleratorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.AcceleratorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceleratorConfig* source =
      ::google::protobuf::DynamicCastToGenerated<AcceleratorConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.AcceleratorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.AcceleratorConfig)
    MergeFrom(*source);
  }
}

void AcceleratorConfig::MergeFrom(const AcceleratorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.AcceleratorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accelerator_type().size() > 0) {

    accelerator_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_type_);
  }
  if (from.accelerator_count() != 0) {
    set_accelerator_count(from.accelerator_count());
  }
}

void AcceleratorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.AcceleratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceleratorConfig::CopyFrom(const AcceleratorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.AcceleratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceleratorConfig::IsInitialized() const {
  return true;
}

void AcceleratorConfig::Swap(AcceleratorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceleratorConfig::InternalSwap(AcceleratorConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accelerator_type_.Swap(&other->accelerator_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accelerator_count_, other->accelerator_count_);
}

::google::protobuf::Metadata AcceleratorConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WorkloadMetadataConfig::InitAsDefaultInstance() {
}
class WorkloadMetadataConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkloadMetadataConfig::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkloadMetadataConfig::WorkloadMetadataConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.WorkloadMetadataConfig)
}
WorkloadMetadataConfig::WorkloadMetadataConfig(const WorkloadMetadataConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.WorkloadMetadataConfig)
}

void WorkloadMetadataConfig::SharedCtor() {
  mode_ = 0;
}

WorkloadMetadataConfig::~WorkloadMetadataConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.WorkloadMetadataConfig)
  SharedDtor();
}

void WorkloadMetadataConfig::SharedDtor() {
}

void WorkloadMetadataConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkloadMetadataConfig& WorkloadMetadataConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WorkloadMetadataConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void WorkloadMetadataConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.WorkloadMetadataConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WorkloadMetadataConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WorkloadMetadataConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.WorkloadMetadataConfig.Mode mode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_mode(static_cast<::google::container::v1::WorkloadMetadataConfig_Mode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WorkloadMetadataConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.WorkloadMetadataConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.WorkloadMetadataConfig.Mode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::google::container::v1::WorkloadMetadataConfig_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.WorkloadMetadataConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.WorkloadMetadataConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WorkloadMetadataConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.WorkloadMetadataConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.WorkloadMetadataConfig.Mode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.WorkloadMetadataConfig)
}

::google::protobuf::uint8* WorkloadMetadataConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.WorkloadMetadataConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.WorkloadMetadataConfig.Mode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.WorkloadMetadataConfig)
  return target;
}

size_t WorkloadMetadataConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.WorkloadMetadataConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1.WorkloadMetadataConfig.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkloadMetadataConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.WorkloadMetadataConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkloadMetadataConfig* source =
      ::google::protobuf::DynamicCastToGenerated<WorkloadMetadataConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.WorkloadMetadataConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.WorkloadMetadataConfig)
    MergeFrom(*source);
  }
}

void WorkloadMetadataConfig::MergeFrom(const WorkloadMetadataConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.WorkloadMetadataConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void WorkloadMetadataConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.WorkloadMetadataConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkloadMetadataConfig::CopyFrom(const WorkloadMetadataConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.WorkloadMetadataConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkloadMetadataConfig::IsInitialized() const {
  return true;
}

void WorkloadMetadataConfig::Swap(WorkloadMetadataConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkloadMetadataConfig::InternalSwap(WorkloadMetadataConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mode_, other->mode_);
}

::google::protobuf::Metadata WorkloadMetadataConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNetworkPolicyRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetNetworkPolicyRequest_default_instance_._instance.get_mutable()->network_policy_ = const_cast< ::google::container::v1::NetworkPolicy*>(
      ::google::container::v1::NetworkPolicy::internal_default_instance());
}
class SetNetworkPolicyRequest::HasBitSetters {
 public:
  static const ::google::container::v1::NetworkPolicy& network_policy(const SetNetworkPolicyRequest* msg);
};

const ::google::container::v1::NetworkPolicy&
SetNetworkPolicyRequest::HasBitSetters::network_policy(const SetNetworkPolicyRequest* msg) {
  return *msg->network_policy_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNetworkPolicyRequest::kProjectIdFieldNumber;
const int SetNetworkPolicyRequest::kZoneFieldNumber;
const int SetNetworkPolicyRequest::kClusterIdFieldNumber;
const int SetNetworkPolicyRequest::kNetworkPolicyFieldNumber;
const int SetNetworkPolicyRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNetworkPolicyRequest::SetNetworkPolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetNetworkPolicyRequest)
}
SetNetworkPolicyRequest::SetNetworkPolicyRequest(const SetNetworkPolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_network_policy()) {
    network_policy_ = new ::google::container::v1::NetworkPolicy(*from.network_policy_);
  } else {
    network_policy_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetNetworkPolicyRequest)
}

void SetNetworkPolicyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNetworkPolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_policy_ = nullptr;
}

SetNetworkPolicyRequest::~SetNetworkPolicyRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetNetworkPolicyRequest)
  SharedDtor();
}

void SetNetworkPolicyRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete network_policy_;
}

void SetNetworkPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNetworkPolicyRequest& SetNetworkPolicyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNetworkPolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetNetworkPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && network_policy_ != nullptr) {
    delete network_policy_;
  }
  network_policy_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNetworkPolicyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNetworkPolicyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNetworkPolicyRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNetworkPolicyRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNetworkPolicyRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.NetworkPolicy network_policy = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::NetworkPolicy::_InternalParse;
        object = msg->mutable_network_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetNetworkPolicyRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNetworkPolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetNetworkPolicyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNetworkPolicyRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNetworkPolicyRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNetworkPolicyRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NetworkPolicy network_policy = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNetworkPolicyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetNetworkPolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetNetworkPolicyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNetworkPolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.NetworkPolicy network_policy = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_network_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::network_policy(this), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetNetworkPolicyRequest)
}

::google::protobuf::uint8* SetNetworkPolicyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.NetworkPolicy network_policy = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_network_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::network_policy(this), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetNetworkPolicyRequest)
  return target;
}

size_t SetNetworkPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetNetworkPolicyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [deprecated = true];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [deprecated = true];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [deprecated = true];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.NetworkPolicy network_policy = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_network_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *network_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNetworkPolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetNetworkPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNetworkPolicyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNetworkPolicyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetNetworkPolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetNetworkPolicyRequest)
    MergeFrom(*source);
  }
}

void SetNetworkPolicyRequest::MergeFrom(const SetNetworkPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetNetworkPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_network_policy()) {
    mutable_network_policy()->::google::container::v1::NetworkPolicy::MergeFrom(from.network_policy());
  }
}

void SetNetworkPolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetNetworkPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNetworkPolicyRequest::CopyFrom(const SetNetworkPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetNetworkPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNetworkPolicyRequest::IsInitialized() const {
  return true;
}

void SetNetworkPolicyRequest::Swap(SetNetworkPolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNetworkPolicyRequest::InternalSwap(SetNetworkPolicyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_policy_, other->network_policy_);
}

::google::protobuf::Metadata SetNetworkPolicyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetMaintenancePolicyRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetMaintenancePolicyRequest_default_instance_._instance.get_mutable()->maintenance_policy_ = const_cast< ::google::container::v1::MaintenancePolicy*>(
      ::google::container::v1::MaintenancePolicy::internal_default_instance());
}
class SetMaintenancePolicyRequest::HasBitSetters {
 public:
  static const ::google::container::v1::MaintenancePolicy& maintenance_policy(const SetMaintenancePolicyRequest* msg);
};

const ::google::container::v1::MaintenancePolicy&
SetMaintenancePolicyRequest::HasBitSetters::maintenance_policy(const SetMaintenancePolicyRequest* msg) {
  return *msg->maintenance_policy_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMaintenancePolicyRequest::kProjectIdFieldNumber;
const int SetMaintenancePolicyRequest::kZoneFieldNumber;
const int SetMaintenancePolicyRequest::kClusterIdFieldNumber;
const int SetMaintenancePolicyRequest::kMaintenancePolicyFieldNumber;
const int SetMaintenancePolicyRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMaintenancePolicyRequest::SetMaintenancePolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetMaintenancePolicyRequest)
}
SetMaintenancePolicyRequest::SetMaintenancePolicyRequest(const SetMaintenancePolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_maintenance_policy()) {
    maintenance_policy_ = new ::google::container::v1::MaintenancePolicy(*from.maintenance_policy_);
  } else {
    maintenance_policy_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetMaintenancePolicyRequest)
}

void SetMaintenancePolicyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetMaintenancePolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maintenance_policy_ = nullptr;
}

SetMaintenancePolicyRequest::~SetMaintenancePolicyRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetMaintenancePolicyRequest)
  SharedDtor();
}

void SetMaintenancePolicyRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete maintenance_policy_;
}

void SetMaintenancePolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMaintenancePolicyRequest& SetMaintenancePolicyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetMaintenancePolicyRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetMaintenancePolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && maintenance_policy_ != nullptr) {
    delete maintenance_policy_;
  }
  maintenance_policy_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetMaintenancePolicyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetMaintenancePolicyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMaintenancePolicyRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMaintenancePolicyRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMaintenancePolicyRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.MaintenancePolicy maintenance_policy = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::MaintenancePolicy::_InternalParse;
        object = msg->mutable_maintenance_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.SetMaintenancePolicyRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetMaintenancePolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetMaintenancePolicyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMaintenancePolicyRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMaintenancePolicyRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMaintenancePolicyRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MaintenancePolicy maintenance_policy = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maintenance_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMaintenancePolicyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetMaintenancePolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetMaintenancePolicyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetMaintenancePolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_maintenance_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::maintenance_policy(this), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetMaintenancePolicyRequest)
}

::google::protobuf::uint8* SetMaintenancePolicyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_maintenance_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::maintenance_policy(this), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetMaintenancePolicyRequest)
  return target;
}

size_t SetMaintenancePolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetMaintenancePolicyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_maintenance_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *maintenance_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMaintenancePolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetMaintenancePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMaintenancePolicyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetMaintenancePolicyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetMaintenancePolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetMaintenancePolicyRequest)
    MergeFrom(*source);
  }
}

void SetMaintenancePolicyRequest::MergeFrom(const SetMaintenancePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetMaintenancePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_maintenance_policy()) {
    mutable_maintenance_policy()->::google::container::v1::MaintenancePolicy::MergeFrom(from.maintenance_policy());
  }
}

void SetMaintenancePolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetMaintenancePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMaintenancePolicyRequest::CopyFrom(const SetMaintenancePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetMaintenancePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMaintenancePolicyRequest::IsInitialized() const {
  return true;
}

void SetMaintenancePolicyRequest::Swap(SetMaintenancePolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMaintenancePolicyRequest::InternalSwap(SetMaintenancePolicyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(maintenance_policy_, other->maintenance_policy_);
}

::google::protobuf::Metadata SetMaintenancePolicyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusCondition::InitAsDefaultInstance() {
}
class StatusCondition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusCondition::kCodeFieldNumber;
const int StatusCondition::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusCondition::StatusCondition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.StatusCondition)
}
StatusCondition::StatusCondition(const StatusCondition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.StatusCondition)
}

void StatusCondition::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

StatusCondition::~StatusCondition() {
  // @@protoc_insertion_point(destructor:google.container.v1.StatusCondition)
  SharedDtor();
}

void StatusCondition::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StatusCondition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusCondition& StatusCondition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusCondition_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StatusCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.StatusCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusCondition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusCondition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.StatusCondition.Code code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_code(static_cast<::google::container::v1::StatusCondition_Code>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.StatusCondition.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.StatusCondition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.StatusCondition.Code code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::google::container::v1::StatusCondition_Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.StatusCondition.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.StatusCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.StatusCondition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.StatusCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.StatusCondition.Code code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StatusCondition.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.StatusCondition)
}

::google::protobuf::uint8* StatusCondition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.StatusCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.StatusCondition.Code code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StatusCondition.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.StatusCondition)
  return target;
}

size_t StatusCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.StatusCondition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .google.container.v1.StatusCondition.Code code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.StatusCondition)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusCondition* source =
      ::google::protobuf::DynamicCastToGenerated<StatusCondition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.StatusCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.StatusCondition)
    MergeFrom(*source);
  }
}

void StatusCondition::MergeFrom(const StatusCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.StatusCondition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void StatusCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.StatusCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusCondition::CopyFrom(const StatusCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.StatusCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusCondition::IsInitialized() const {
  return true;
}

void StatusCondition::Swap(StatusCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusCondition::InternalSwap(StatusCondition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::google::protobuf::Metadata StatusCondition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NetworkConfig::InitAsDefaultInstance() {
  ::google::container::v1::_NetworkConfig_default_instance_._instance.get_mutable()->default_snat_status_ = const_cast< ::google::container::v1::DefaultSnatStatus*>(
      ::google::container::v1::DefaultSnatStatus::internal_default_instance());
}
class NetworkConfig::HasBitSetters {
 public:
  static const ::google::container::v1::DefaultSnatStatus& default_snat_status(const NetworkConfig* msg);
};

const ::google::container::v1::DefaultSnatStatus&
NetworkConfig::HasBitSetters::default_snat_status(const NetworkConfig* msg) {
  return *msg->default_snat_status_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkConfig::kNetworkFieldNumber;
const int NetworkConfig::kSubnetworkFieldNumber;
const int NetworkConfig::kEnableIntraNodeVisibilityFieldNumber;
const int NetworkConfig::kDefaultSnatStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkConfig::NetworkConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NetworkConfig)
}
NetworkConfig::NetworkConfig(const NetworkConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.network().size() > 0) {
    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork().size() > 0) {
    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  if (from.has_default_snat_status()) {
    default_snat_status_ = new ::google::container::v1::DefaultSnatStatus(*from.default_snat_status_);
  } else {
    default_snat_status_ = nullptr;
  }
  enable_intra_node_visibility_ = from.enable_intra_node_visibility_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NetworkConfig)
}

void NetworkConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NetworkConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&default_snat_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_intra_node_visibility_) -
      reinterpret_cast<char*>(&default_snat_status_)) + sizeof(enable_intra_node_visibility_));
}

NetworkConfig::~NetworkConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.NetworkConfig)
  SharedDtor();
}

void NetworkConfig::SharedDtor() {
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete default_snat_status_;
}

void NetworkConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkConfig& NetworkConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NetworkConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NetworkConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NetworkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && default_snat_status_ != nullptr) {
    delete default_snat_status_;
  }
  default_snat_status_ = nullptr;
  enable_intra_node_visibility_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NetworkConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string network = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NetworkConfig.network");
        object = msg->mutable_network();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string subnetwork = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.NetworkConfig.subnetwork");
        object = msg->mutable_subnetwork();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool enable_intra_node_visibility = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_enable_intra_node_visibility(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1.DefaultSnatStatus default_snat_status = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::DefaultSnatStatus::_InternalParse;
        object = msg->mutable_default_snat_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NetworkConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string network = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), static_cast<int>(this->network().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NetworkConfig.network"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subnetwork = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NetworkConfig.subnetwork"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_intra_node_visibility = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_intra_node_visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.DefaultSnatStatus default_snat_status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_snat_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NetworkConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NetworkConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NetworkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string network = 1;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NetworkConfig.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->network(), output);
  }

  // string subnetwork = 2;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NetworkConfig.subnetwork");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subnetwork(), output);
  }

  // bool enable_intra_node_visibility = 5;
  if (this->enable_intra_node_visibility() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->enable_intra_node_visibility(), output);
  }

  // .google.container.v1.DefaultSnatStatus default_snat_status = 7;
  if (this->has_default_snat_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::default_snat_status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NetworkConfig)
}

::google::protobuf::uint8* NetworkConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NetworkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string network = 1;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NetworkConfig.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->network(), target);
  }

  // string subnetwork = 2;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NetworkConfig.subnetwork");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subnetwork(), target);
  }

  // bool enable_intra_node_visibility = 5;
  if (this->enable_intra_node_visibility() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->enable_intra_node_visibility(), target);
  }

  // .google.container.v1.DefaultSnatStatus default_snat_status = 7;
  if (this->has_default_snat_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::default_snat_status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NetworkConfig)
  return target;
}

size_t NetworkConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NetworkConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string network = 1;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // string subnetwork = 2;
  if (this->subnetwork().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork());
  }

  // .google.container.v1.DefaultSnatStatus default_snat_status = 7;
  if (this->has_default_snat_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *default_snat_status_);
  }

  // bool enable_intra_node_visibility = 5;
  if (this->enable_intra_node_visibility() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NetworkConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkConfig* source =
      ::google::protobuf::DynamicCastToGenerated<NetworkConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NetworkConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NetworkConfig)
    MergeFrom(*source);
  }
}

void NetworkConfig::MergeFrom(const NetworkConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NetworkConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.subnetwork().size() > 0) {

    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  if (from.has_default_snat_status()) {
    mutable_default_snat_status()->::google::container::v1::DefaultSnatStatus::MergeFrom(from.default_snat_status());
  }
  if (from.enable_intra_node_visibility() != 0) {
    set_enable_intra_node_visibility(from.enable_intra_node_visibility());
  }
}

void NetworkConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NetworkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkConfig::CopyFrom(const NetworkConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NetworkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkConfig::IsInitialized() const {
  return true;
}

void NetworkConfig::Swap(NetworkConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkConfig::InternalSwap(NetworkConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  network_.Swap(&other->network_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subnetwork_.Swap(&other->subnetwork_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(default_snat_status_, other->default_snat_status_);
  swap(enable_intra_node_visibility_, other->enable_intra_node_visibility_);
}

::google::protobuf::Metadata NetworkConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetOpenIDConfigRequest::InitAsDefaultInstance() {
}
class GetOpenIDConfigRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOpenIDConfigRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOpenIDConfigRequest::GetOpenIDConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetOpenIDConfigRequest)
}
GetOpenIDConfigRequest::GetOpenIDConfigRequest(const GetOpenIDConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetOpenIDConfigRequest)
}

void GetOpenIDConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetOpenIDConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetOpenIDConfigRequest::~GetOpenIDConfigRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetOpenIDConfigRequest)
  SharedDtor();
}

void GetOpenIDConfigRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOpenIDConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOpenIDConfigRequest& GetOpenIDConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetOpenIDConfigRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetOpenIDConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetOpenIDConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetOpenIDConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetOpenIDConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetOpenIDConfigRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetOpenIDConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetOpenIDConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOpenIDConfigRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetOpenIDConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetOpenIDConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetOpenIDConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetOpenIDConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetOpenIDConfigRequest)
}

::google::protobuf::uint8* GetOpenIDConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetOpenIDConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetOpenIDConfigRequest)
  return target;
}

size_t GetOpenIDConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetOpenIDConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOpenIDConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetOpenIDConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOpenIDConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetOpenIDConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetOpenIDConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetOpenIDConfigRequest)
    MergeFrom(*source);
  }
}

void GetOpenIDConfigRequest::MergeFrom(const GetOpenIDConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetOpenIDConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void GetOpenIDConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetOpenIDConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOpenIDConfigRequest::CopyFrom(const GetOpenIDConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetOpenIDConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOpenIDConfigRequest::IsInitialized() const {
  return true;
}

void GetOpenIDConfigRequest::Swap(GetOpenIDConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOpenIDConfigRequest::InternalSwap(GetOpenIDConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetOpenIDConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetOpenIDConfigResponse::InitAsDefaultInstance() {
}
class GetOpenIDConfigResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOpenIDConfigResponse::kIssuerFieldNumber;
const int GetOpenIDConfigResponse::kJwksUriFieldNumber;
const int GetOpenIDConfigResponse::kResponseTypesSupportedFieldNumber;
const int GetOpenIDConfigResponse::kSubjectTypesSupportedFieldNumber;
const int GetOpenIDConfigResponse::kIdTokenSigningAlgValuesSupportedFieldNumber;
const int GetOpenIDConfigResponse::kClaimsSupportedFieldNumber;
const int GetOpenIDConfigResponse::kGrantTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOpenIDConfigResponse::GetOpenIDConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetOpenIDConfigResponse)
}
GetOpenIDConfigResponse::GetOpenIDConfigResponse(const GetOpenIDConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      response_types_supported_(from.response_types_supported_),
      subject_types_supported_(from.subject_types_supported_),
      id_token_signing_alg_values_supported_(from.id_token_signing_alg_values_supported_),
      claims_supported_(from.claims_supported_),
      grant_types_(from.grant_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.issuer().size() > 0) {
    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  jwks_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jwks_uri().size() > 0) {
    jwks_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jwks_uri_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetOpenIDConfigResponse)
}

void GetOpenIDConfigResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetOpenIDConfigResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetOpenIDConfigResponse::~GetOpenIDConfigResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetOpenIDConfigResponse)
  SharedDtor();
}

void GetOpenIDConfigResponse::SharedDtor() {
  issuer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOpenIDConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOpenIDConfigResponse& GetOpenIDConfigResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetOpenIDConfigResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetOpenIDConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetOpenIDConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_types_supported_.Clear();
  subject_types_supported_.Clear();
  id_token_signing_alg_values_supported_.Clear();
  claims_supported_.Clear();
  grant_types_.Clear();
  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetOpenIDConfigResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetOpenIDConfigResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string issuer = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetOpenIDConfigResponse.issuer");
        object = msg->mutable_issuer();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string jwks_uri = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetOpenIDConfigResponse.jwks_uri");
        object = msg->mutable_jwks_uri();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string response_types_supported = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.GetOpenIDConfigResponse.response_types_supported");
          object = msg->add_response_types_supported();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated string subject_types_supported = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.GetOpenIDConfigResponse.subject_types_supported");
          object = msg->add_subject_types_supported();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated string id_token_signing_alg_values_supported = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.GetOpenIDConfigResponse.id_token_signing_alg_values_supported");
          object = msg->add_id_token_signing_alg_values_supported();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated string claims_supported = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.GetOpenIDConfigResponse.claims_supported");
          object = msg->add_claims_supported();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // repeated string grant_types = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1.GetOpenIDConfigResponse.grant_types");
          object = msg->add_grant_types();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetOpenIDConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetOpenIDConfigResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string issuer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->issuer().data(), static_cast<int>(this->issuer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOpenIDConfigResponse.issuer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jwks_uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jwks_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOpenIDConfigResponse.jwks_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string response_types_supported = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_response_types_supported()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_types_supported(this->response_types_supported_size() - 1).data(),
            static_cast<int>(this->response_types_supported(this->response_types_supported_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOpenIDConfigResponse.response_types_supported"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string subject_types_supported = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_subject_types_supported()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject_types_supported(this->subject_types_supported_size() - 1).data(),
            static_cast<int>(this->subject_types_supported(this->subject_types_supported_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOpenIDConfigResponse.subject_types_supported"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string id_token_signing_alg_values_supported = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_id_token_signing_alg_values_supported()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id_token_signing_alg_values_supported(this->id_token_signing_alg_values_supported_size() - 1).data(),
            static_cast<int>(this->id_token_signing_alg_values_supported(this->id_token_signing_alg_values_supported_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOpenIDConfigResponse.id_token_signing_alg_values_supported"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string claims_supported = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_claims_supported()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->claims_supported(this->claims_supported_size() - 1).data(),
            static_cast<int>(this->claims_supported(this->claims_supported_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOpenIDConfigResponse.claims_supported"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string grant_types = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_grant_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->grant_types(this->grant_types_size() - 1).data(),
            static_cast<int>(this->grant_types(this->grant_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOpenIDConfigResponse.grant_types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetOpenIDConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetOpenIDConfigResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetOpenIDConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetOpenIDConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.issuer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->issuer(), output);
  }

  // string jwks_uri = 2;
  if (this->jwks_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.jwks_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->jwks_uri(), output);
  }

  // repeated string response_types_supported = 3;
  for (int i = 0, n = this->response_types_supported_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_types_supported(i).data(), static_cast<int>(this->response_types_supported(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.response_types_supported");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->response_types_supported(i), output);
  }

  // repeated string subject_types_supported = 4;
  for (int i = 0, n = this->subject_types_supported_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject_types_supported(i).data(), static_cast<int>(this->subject_types_supported(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.subject_types_supported");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->subject_types_supported(i), output);
  }

  // repeated string id_token_signing_alg_values_supported = 5;
  for (int i = 0, n = this->id_token_signing_alg_values_supported_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id_token_signing_alg_values_supported(i).data(), static_cast<int>(this->id_token_signing_alg_values_supported(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.id_token_signing_alg_values_supported");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->id_token_signing_alg_values_supported(i), output);
  }

  // repeated string claims_supported = 6;
  for (int i = 0, n = this->claims_supported_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->claims_supported(i).data(), static_cast<int>(this->claims_supported(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.claims_supported");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->claims_supported(i), output);
  }

  // repeated string grant_types = 7;
  for (int i = 0, n = this->grant_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grant_types(i).data(), static_cast<int>(this->grant_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.grant_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->grant_types(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetOpenIDConfigResponse)
}

::google::protobuf::uint8* GetOpenIDConfigResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetOpenIDConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.issuer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->issuer(), target);
  }

  // string jwks_uri = 2;
  if (this->jwks_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.jwks_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->jwks_uri(), target);
  }

  // repeated string response_types_supported = 3;
  for (int i = 0, n = this->response_types_supported_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_types_supported(i).data(), static_cast<int>(this->response_types_supported(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.response_types_supported");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->response_types_supported(i), target);
  }

  // repeated string subject_types_supported = 4;
  for (int i = 0, n = this->subject_types_supported_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject_types_supported(i).data(), static_cast<int>(this->subject_types_supported(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.subject_types_supported");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->subject_types_supported(i), target);
  }

  // repeated string id_token_signing_alg_values_supported = 5;
  for (int i = 0, n = this->id_token_signing_alg_values_supported_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id_token_signing_alg_values_supported(i).data(), static_cast<int>(this->id_token_signing_alg_values_supported(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.id_token_signing_alg_values_supported");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->id_token_signing_alg_values_supported(i), target);
  }

  // repeated string claims_supported = 6;
  for (int i = 0, n = this->claims_supported_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->claims_supported(i).data(), static_cast<int>(this->claims_supported(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.claims_supported");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->claims_supported(i), target);
  }

  // repeated string grant_types = 7;
  for (int i = 0, n = this->grant_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grant_types(i).data(), static_cast<int>(this->grant_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOpenIDConfigResponse.grant_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->grant_types(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetOpenIDConfigResponse)
  return target;
}

size_t GetOpenIDConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetOpenIDConfigResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string response_types_supported = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->response_types_supported_size());
  for (int i = 0, n = this->response_types_supported_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->response_types_supported(i));
  }

  // repeated string subject_types_supported = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->subject_types_supported_size());
  for (int i = 0, n = this->subject_types_supported_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->subject_types_supported(i));
  }

  // repeated string id_token_signing_alg_values_supported = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->id_token_signing_alg_values_supported_size());
  for (int i = 0, n = this->id_token_signing_alg_values_supported_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->id_token_signing_alg_values_supported(i));
  }

  // repeated string claims_supported = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->claims_supported_size());
  for (int i = 0, n = this->claims_supported_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->claims_supported(i));
  }

  // repeated string grant_types = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->grant_types_size());
  for (int i = 0, n = this->grant_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->grant_types(i));
  }

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->issuer());
  }

  // string jwks_uri = 2;
  if (this->jwks_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jwks_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOpenIDConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetOpenIDConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOpenIDConfigResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetOpenIDConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetOpenIDConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetOpenIDConfigResponse)
    MergeFrom(*source);
  }
}

void GetOpenIDConfigResponse::MergeFrom(const GetOpenIDConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetOpenIDConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  response_types_supported_.MergeFrom(from.response_types_supported_);
  subject_types_supported_.MergeFrom(from.subject_types_supported_);
  id_token_signing_alg_values_supported_.MergeFrom(from.id_token_signing_alg_values_supported_);
  claims_supported_.MergeFrom(from.claims_supported_);
  grant_types_.MergeFrom(from.grant_types_);
  if (from.issuer().size() > 0) {

    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  if (from.jwks_uri().size() > 0) {

    jwks_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jwks_uri_);
  }
}

void GetOpenIDConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetOpenIDConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOpenIDConfigResponse::CopyFrom(const GetOpenIDConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetOpenIDConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOpenIDConfigResponse::IsInitialized() const {
  return true;
}

void GetOpenIDConfigResponse::Swap(GetOpenIDConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOpenIDConfigResponse::InternalSwap(GetOpenIDConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  response_types_supported_.InternalSwap(CastToBase(&other->response_types_supported_));
  subject_types_supported_.InternalSwap(CastToBase(&other->subject_types_supported_));
  id_token_signing_alg_values_supported_.InternalSwap(CastToBase(&other->id_token_signing_alg_values_supported_));
  claims_supported_.InternalSwap(CastToBase(&other->claims_supported_));
  grant_types_.InternalSwap(CastToBase(&other->grant_types_));
  issuer_.Swap(&other->issuer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jwks_uri_.Swap(&other->jwks_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetOpenIDConfigResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetJSONWebKeysRequest::InitAsDefaultInstance() {
}
class GetJSONWebKeysRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJSONWebKeysRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJSONWebKeysRequest::GetJSONWebKeysRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetJSONWebKeysRequest)
}
GetJSONWebKeysRequest::GetJSONWebKeysRequest(const GetJSONWebKeysRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetJSONWebKeysRequest)
}

void GetJSONWebKeysRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetJSONWebKeysRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetJSONWebKeysRequest::~GetJSONWebKeysRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetJSONWebKeysRequest)
  SharedDtor();
}

void GetJSONWebKeysRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetJSONWebKeysRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetJSONWebKeysRequest& GetJSONWebKeysRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetJSONWebKeysRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetJSONWebKeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetJSONWebKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetJSONWebKeysRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetJSONWebKeysRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.GetJSONWebKeysRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetJSONWebKeysRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetJSONWebKeysRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetJSONWebKeysRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetJSONWebKeysRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetJSONWebKeysRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetJSONWebKeysRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetJSONWebKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetJSONWebKeysRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetJSONWebKeysRequest)
}

::google::protobuf::uint8* GetJSONWebKeysRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetJSONWebKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetJSONWebKeysRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetJSONWebKeysRequest)
  return target;
}

size_t GetJSONWebKeysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetJSONWebKeysRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJSONWebKeysRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetJSONWebKeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJSONWebKeysRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetJSONWebKeysRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetJSONWebKeysRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetJSONWebKeysRequest)
    MergeFrom(*source);
  }
}

void GetJSONWebKeysRequest::MergeFrom(const GetJSONWebKeysRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetJSONWebKeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void GetJSONWebKeysRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetJSONWebKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJSONWebKeysRequest::CopyFrom(const GetJSONWebKeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetJSONWebKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJSONWebKeysRequest::IsInitialized() const {
  return true;
}

void GetJSONWebKeysRequest::Swap(GetJSONWebKeysRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJSONWebKeysRequest::InternalSwap(GetJSONWebKeysRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetJSONWebKeysRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Jwk::InitAsDefaultInstance() {
}
class Jwk::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jwk::kKtyFieldNumber;
const int Jwk::kAlgFieldNumber;
const int Jwk::kUseFieldNumber;
const int Jwk::kKidFieldNumber;
const int Jwk::kNFieldNumber;
const int Jwk::kEFieldNumber;
const int Jwk::kXFieldNumber;
const int Jwk::kYFieldNumber;
const int Jwk::kCrvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jwk::Jwk()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.Jwk)
}
Jwk::Jwk(const Jwk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kty_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kty().size() > 0) {
    kty_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kty_);
  }
  alg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alg().size() > 0) {
    alg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alg_);
  }
  use_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.use().size() > 0) {
    use_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.use_);
  }
  kid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kid().size() > 0) {
    kid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kid_);
  }
  n_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.n().size() > 0) {
    n_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_);
  }
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.e().size() > 0) {
    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
  x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.x().size() > 0) {
    x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_);
  }
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.y().size() > 0) {
    y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
  }
  crv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crv().size() > 0) {
    crv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crv_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.Jwk)
}

void Jwk::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Jwk_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  kty_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Jwk::~Jwk() {
  // @@protoc_insertion_point(destructor:google.container.v1.Jwk)
  SharedDtor();
}

void Jwk::SharedDtor() {
  kty_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Jwk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Jwk& Jwk::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Jwk_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Jwk::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.Jwk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Jwk::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Jwk*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string kty = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.kty");
        object = msg->mutable_kty();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string alg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.alg");
        object = msg->mutable_alg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string use = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.use");
        object = msg->mutable_use();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string kid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.kid");
        object = msg->mutable_kid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string n = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.n");
        object = msg->mutable_n();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string e = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.e");
        object = msg->mutable_e();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string x = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.x");
        object = msg->mutable_x();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string y = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.y");
        object = msg->mutable_y();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string crv = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.Jwk.crv");
        object = msg->mutable_crv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Jwk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.Jwk)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string kty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kty()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kty().data(), static_cast<int>(this->kty().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.kty"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alg().data(), static_cast<int>(this->alg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.alg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string use = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_use()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->use().data(), static_cast<int>(this->use().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.use"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kid().data(), static_cast<int>(this->kid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.kid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string n = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_n()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->n().data(), static_cast<int>(this->n().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.n"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string e = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_e()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->e().data(), static_cast<int>(this->e().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.e"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string x = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_x()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->x().data(), static_cast<int>(this->x().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.x"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string y = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_y()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->y().data(), static_cast<int>(this->y().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.y"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string crv = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crv().data(), static_cast<int>(this->crv().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Jwk.crv"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.Jwk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.Jwk)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Jwk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.Jwk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kty = 1;
  if (this->kty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kty().data(), static_cast<int>(this->kty().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.kty");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->kty(), output);
  }

  // string alg = 2;
  if (this->alg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alg().data(), static_cast<int>(this->alg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.alg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alg(), output);
  }

  // string use = 3;
  if (this->use().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->use().data(), static_cast<int>(this->use().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.use");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->use(), output);
  }

  // string kid = 4;
  if (this->kid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kid().data(), static_cast<int>(this->kid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.kid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->kid(), output);
  }

  // string n = 5;
  if (this->n().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->n().data(), static_cast<int>(this->n().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.n");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->n(), output);
  }

  // string e = 6;
  if (this->e().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e().data(), static_cast<int>(this->e().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.e");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->e(), output);
  }

  // string x = 7;
  if (this->x().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x().data(), static_cast<int>(this->x().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.x");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->x(), output);
  }

  // string y = 8;
  if (this->y().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->y().data(), static_cast<int>(this->y().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->y(), output);
  }

  // string crv = 9;
  if (this->crv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crv().data(), static_cast<int>(this->crv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.crv");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->crv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.Jwk)
}

::google::protobuf::uint8* Jwk::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.Jwk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kty = 1;
  if (this->kty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kty().data(), static_cast<int>(this->kty().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.kty");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->kty(), target);
  }

  // string alg = 2;
  if (this->alg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alg().data(), static_cast<int>(this->alg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.alg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alg(), target);
  }

  // string use = 3;
  if (this->use().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->use().data(), static_cast<int>(this->use().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.use");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->use(), target);
  }

  // string kid = 4;
  if (this->kid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kid().data(), static_cast<int>(this->kid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.kid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->kid(), target);
  }

  // string n = 5;
  if (this->n().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->n().data(), static_cast<int>(this->n().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.n");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->n(), target);
  }

  // string e = 6;
  if (this->e().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e().data(), static_cast<int>(this->e().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.e");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->e(), target);
  }

  // string x = 7;
  if (this->x().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x().data(), static_cast<int>(this->x().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.x");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->x(), target);
  }

  // string y = 8;
  if (this->y().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->y().data(), static_cast<int>(this->y().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->y(), target);
  }

  // string crv = 9;
  if (this->crv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crv().data(), static_cast<int>(this->crv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Jwk.crv");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->crv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.Jwk)
  return target;
}

size_t Jwk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.Jwk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string kty = 1;
  if (this->kty().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kty());
  }

  // string alg = 2;
  if (this->alg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alg());
  }

  // string use = 3;
  if (this->use().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->use());
  }

  // string kid = 4;
  if (this->kid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kid());
  }

  // string n = 5;
  if (this->n().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->n());
  }

  // string e = 6;
  if (this->e().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->e());
  }

  // string x = 7;
  if (this->x().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->x());
  }

  // string y = 8;
  if (this->y().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->y());
  }

  // string crv = 9;
  if (this->crv().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crv());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Jwk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.Jwk)
  GOOGLE_DCHECK_NE(&from, this);
  const Jwk* source =
      ::google::protobuf::DynamicCastToGenerated<Jwk>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.Jwk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.Jwk)
    MergeFrom(*source);
  }
}

void Jwk::MergeFrom(const Jwk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.Jwk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kty().size() > 0) {

    kty_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kty_);
  }
  if (from.alg().size() > 0) {

    alg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alg_);
  }
  if (from.use().size() > 0) {

    use_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.use_);
  }
  if (from.kid().size() > 0) {

    kid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kid_);
  }
  if (from.n().size() > 0) {

    n_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_);
  }
  if (from.e().size() > 0) {

    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
  if (from.x().size() > 0) {

    x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_);
  }
  if (from.y().size() > 0) {

    y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
  }
  if (from.crv().size() > 0) {

    crv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crv_);
  }
}

void Jwk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.Jwk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jwk::CopyFrom(const Jwk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.Jwk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jwk::IsInitialized() const {
  return true;
}

void Jwk::Swap(Jwk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jwk::InternalSwap(Jwk* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  kty_.Swap(&other->kty_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alg_.Swap(&other->alg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  use_.Swap(&other->use_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kid_.Swap(&other->kid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  n_.Swap(&other->n_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  e_.Swap(&other->e_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_.Swap(&other->x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_.Swap(&other->y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  crv_.Swap(&other->crv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Jwk::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetJSONWebKeysResponse::InitAsDefaultInstance() {
}
class GetJSONWebKeysResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJSONWebKeysResponse::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJSONWebKeysResponse::GetJSONWebKeysResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetJSONWebKeysResponse)
}
GetJSONWebKeysResponse::GetJSONWebKeysResponse(const GetJSONWebKeysResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetJSONWebKeysResponse)
}

void GetJSONWebKeysResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetJSONWebKeysResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
}

GetJSONWebKeysResponse::~GetJSONWebKeysResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetJSONWebKeysResponse)
  SharedDtor();
}

void GetJSONWebKeysResponse::SharedDtor() {
}

void GetJSONWebKeysResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetJSONWebKeysResponse& GetJSONWebKeysResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetJSONWebKeysResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetJSONWebKeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetJSONWebKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetJSONWebKeysResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetJSONWebKeysResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.container.v1.Jwk keys = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::Jwk::_InternalParse;
          object = msg->add_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetJSONWebKeysResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetJSONWebKeysResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1.Jwk keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetJSONWebKeysResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetJSONWebKeysResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetJSONWebKeysResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetJSONWebKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Jwk keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetJSONWebKeysResponse)
}

::google::protobuf::uint8* GetJSONWebKeysResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetJSONWebKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Jwk keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetJSONWebKeysResponse)
  return target;
}

size_t GetJSONWebKeysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetJSONWebKeysResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.Jwk keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJSONWebKeysResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetJSONWebKeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJSONWebKeysResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetJSONWebKeysResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetJSONWebKeysResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetJSONWebKeysResponse)
    MergeFrom(*source);
  }
}

void GetJSONWebKeysResponse::MergeFrom(const GetJSONWebKeysResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetJSONWebKeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void GetJSONWebKeysResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetJSONWebKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJSONWebKeysResponse::CopyFrom(const GetJSONWebKeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetJSONWebKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJSONWebKeysResponse::IsInitialized() const {
  return true;
}

void GetJSONWebKeysResponse::Swap(GetJSONWebKeysResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJSONWebKeysResponse::InternalSwap(GetJSONWebKeysResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
}

::google::protobuf::Metadata GetJSONWebKeysResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReleaseChannel::InitAsDefaultInstance() {
}
class ReleaseChannel::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReleaseChannel::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReleaseChannel::ReleaseChannel()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ReleaseChannel)
}
ReleaseChannel::ReleaseChannel(const ReleaseChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ReleaseChannel)
}

void ReleaseChannel::SharedCtor() {
  channel_ = 0;
}

ReleaseChannel::~ReleaseChannel() {
  // @@protoc_insertion_point(destructor:google.container.v1.ReleaseChannel)
  SharedDtor();
}

void ReleaseChannel::SharedDtor() {
}

void ReleaseChannel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReleaseChannel& ReleaseChannel::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReleaseChannel_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ReleaseChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ReleaseChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReleaseChannel::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReleaseChannel*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.ReleaseChannel.Channel channel = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_channel(static_cast<::google::container::v1::ReleaseChannel_Channel>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReleaseChannel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ReleaseChannel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.ReleaseChannel.Channel channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_channel(static_cast< ::google::container::v1::ReleaseChannel_Channel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ReleaseChannel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ReleaseChannel)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReleaseChannel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ReleaseChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.ReleaseChannel.Channel channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->channel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ReleaseChannel)
}

::google::protobuf::uint8* ReleaseChannel::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ReleaseChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.ReleaseChannel.Channel channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->channel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ReleaseChannel)
  return target;
}

size_t ReleaseChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ReleaseChannel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1.ReleaseChannel.Channel channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseChannel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ReleaseChannel)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseChannel* source =
      ::google::protobuf::DynamicCastToGenerated<ReleaseChannel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ReleaseChannel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ReleaseChannel)
    MergeFrom(*source);
  }
}

void ReleaseChannel::MergeFrom(const ReleaseChannel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ReleaseChannel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void ReleaseChannel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ReleaseChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseChannel::CopyFrom(const ReleaseChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ReleaseChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseChannel::IsInitialized() const {
  return true;
}

void ReleaseChannel::Swap(ReleaseChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReleaseChannel::InternalSwap(ReleaseChannel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(channel_, other->channel_);
}

::google::protobuf::Metadata ReleaseChannel::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IntraNodeVisibilityConfig::InitAsDefaultInstance() {
}
class IntraNodeVisibilityConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntraNodeVisibilityConfig::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntraNodeVisibilityConfig::IntraNodeVisibilityConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.IntraNodeVisibilityConfig)
}
IntraNodeVisibilityConfig::IntraNodeVisibilityConfig(const IntraNodeVisibilityConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.IntraNodeVisibilityConfig)
}

void IntraNodeVisibilityConfig::SharedCtor() {
  enabled_ = false;
}

IntraNodeVisibilityConfig::~IntraNodeVisibilityConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.IntraNodeVisibilityConfig)
  SharedDtor();
}

void IntraNodeVisibilityConfig::SharedDtor() {
}

void IntraNodeVisibilityConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntraNodeVisibilityConfig& IntraNodeVisibilityConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IntraNodeVisibilityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void IntraNodeVisibilityConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.IntraNodeVisibilityConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntraNodeVisibilityConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IntraNodeVisibilityConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntraNodeVisibilityConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.IntraNodeVisibilityConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.IntraNodeVisibilityConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.IntraNodeVisibilityConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntraNodeVisibilityConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.IntraNodeVisibilityConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.IntraNodeVisibilityConfig)
}

::google::protobuf::uint8* IntraNodeVisibilityConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.IntraNodeVisibilityConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.IntraNodeVisibilityConfig)
  return target;
}

size_t IntraNodeVisibilityConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.IntraNodeVisibilityConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntraNodeVisibilityConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.IntraNodeVisibilityConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const IntraNodeVisibilityConfig* source =
      ::google::protobuf::DynamicCastToGenerated<IntraNodeVisibilityConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.IntraNodeVisibilityConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.IntraNodeVisibilityConfig)
    MergeFrom(*source);
  }
}

void IntraNodeVisibilityConfig::MergeFrom(const IntraNodeVisibilityConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.IntraNodeVisibilityConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void IntraNodeVisibilityConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.IntraNodeVisibilityConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntraNodeVisibilityConfig::CopyFrom(const IntraNodeVisibilityConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.IntraNodeVisibilityConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntraNodeVisibilityConfig::IsInitialized() const {
  return true;
}

void IntraNodeVisibilityConfig::Swap(IntraNodeVisibilityConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntraNodeVisibilityConfig::InternalSwap(IntraNodeVisibilityConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata IntraNodeVisibilityConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MaxPodsConstraint::InitAsDefaultInstance() {
}
class MaxPodsConstraint::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaxPodsConstraint::kMaxPodsPerNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaxPodsConstraint::MaxPodsConstraint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MaxPodsConstraint)
}
MaxPodsConstraint::MaxPodsConstraint(const MaxPodsConstraint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  max_pods_per_node_ = from.max_pods_per_node_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MaxPodsConstraint)
}

void MaxPodsConstraint::SharedCtor() {
  max_pods_per_node_ = PROTOBUF_LONGLONG(0);
}

MaxPodsConstraint::~MaxPodsConstraint() {
  // @@protoc_insertion_point(destructor:google.container.v1.MaxPodsConstraint)
  SharedDtor();
}

void MaxPodsConstraint::SharedDtor() {
}

void MaxPodsConstraint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MaxPodsConstraint& MaxPodsConstraint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MaxPodsConstraint_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MaxPodsConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MaxPodsConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  max_pods_per_node_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MaxPodsConstraint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MaxPodsConstraint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 max_pods_per_node = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_max_pods_per_node(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MaxPodsConstraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MaxPodsConstraint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 max_pods_per_node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_pods_per_node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MaxPodsConstraint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MaxPodsConstraint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MaxPodsConstraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MaxPodsConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_pods_per_node = 1;
  if (this->max_pods_per_node() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->max_pods_per_node(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MaxPodsConstraint)
}

::google::protobuf::uint8* MaxPodsConstraint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MaxPodsConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_pods_per_node = 1;
  if (this->max_pods_per_node() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->max_pods_per_node(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MaxPodsConstraint)
  return target;
}

size_t MaxPodsConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MaxPodsConstraint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 max_pods_per_node = 1;
  if (this->max_pods_per_node() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_pods_per_node());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaxPodsConstraint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MaxPodsConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  const MaxPodsConstraint* source =
      ::google::protobuf::DynamicCastToGenerated<MaxPodsConstraint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MaxPodsConstraint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MaxPodsConstraint)
    MergeFrom(*source);
  }
}

void MaxPodsConstraint::MergeFrom(const MaxPodsConstraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MaxPodsConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.max_pods_per_node() != 0) {
    set_max_pods_per_node(from.max_pods_per_node());
  }
}

void MaxPodsConstraint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MaxPodsConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaxPodsConstraint::CopyFrom(const MaxPodsConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MaxPodsConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaxPodsConstraint::IsInitialized() const {
  return true;
}

void MaxPodsConstraint::Swap(MaxPodsConstraint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaxPodsConstraint::InternalSwap(MaxPodsConstraint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(max_pods_per_node_, other->max_pods_per_node_);
}

::google::protobuf::Metadata MaxPodsConstraint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WorkloadIdentityConfig::InitAsDefaultInstance() {
}
class WorkloadIdentityConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkloadIdentityConfig::kWorkloadPoolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkloadIdentityConfig::WorkloadIdentityConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.WorkloadIdentityConfig)
}
WorkloadIdentityConfig::WorkloadIdentityConfig(const WorkloadIdentityConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  workload_pool_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.workload_pool().size() > 0) {
    workload_pool_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workload_pool_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.WorkloadIdentityConfig)
}

void WorkloadIdentityConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  workload_pool_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WorkloadIdentityConfig::~WorkloadIdentityConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.WorkloadIdentityConfig)
  SharedDtor();
}

void WorkloadIdentityConfig::SharedDtor() {
  workload_pool_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorkloadIdentityConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkloadIdentityConfig& WorkloadIdentityConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WorkloadIdentityConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void WorkloadIdentityConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.WorkloadIdentityConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workload_pool_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WorkloadIdentityConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WorkloadIdentityConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string workload_pool = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.WorkloadIdentityConfig.workload_pool");
        object = msg->mutable_workload_pool();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WorkloadIdentityConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.WorkloadIdentityConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string workload_pool = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_workload_pool()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->workload_pool().data(), static_cast<int>(this->workload_pool().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.WorkloadIdentityConfig.workload_pool"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.WorkloadIdentityConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.WorkloadIdentityConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WorkloadIdentityConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.WorkloadIdentityConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string workload_pool = 2;
  if (this->workload_pool().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workload_pool().data(), static_cast<int>(this->workload_pool().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.WorkloadIdentityConfig.workload_pool");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->workload_pool(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.WorkloadIdentityConfig)
}

::google::protobuf::uint8* WorkloadIdentityConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.WorkloadIdentityConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string workload_pool = 2;
  if (this->workload_pool().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workload_pool().data(), static_cast<int>(this->workload_pool().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.WorkloadIdentityConfig.workload_pool");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->workload_pool(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.WorkloadIdentityConfig)
  return target;
}

size_t WorkloadIdentityConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.WorkloadIdentityConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string workload_pool = 2;
  if (this->workload_pool().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->workload_pool());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkloadIdentityConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.WorkloadIdentityConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkloadIdentityConfig* source =
      ::google::protobuf::DynamicCastToGenerated<WorkloadIdentityConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.WorkloadIdentityConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.WorkloadIdentityConfig)
    MergeFrom(*source);
  }
}

void WorkloadIdentityConfig::MergeFrom(const WorkloadIdentityConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.WorkloadIdentityConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.workload_pool().size() > 0) {

    workload_pool_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workload_pool_);
  }
}

void WorkloadIdentityConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.WorkloadIdentityConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkloadIdentityConfig::CopyFrom(const WorkloadIdentityConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.WorkloadIdentityConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkloadIdentityConfig::IsInitialized() const {
  return true;
}

void WorkloadIdentityConfig::Swap(WorkloadIdentityConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkloadIdentityConfig::InternalSwap(WorkloadIdentityConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  workload_pool_.Swap(&other->workload_pool_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata WorkloadIdentityConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DatabaseEncryption::InitAsDefaultInstance() {
}
class DatabaseEncryption::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatabaseEncryption::kStateFieldNumber;
const int DatabaseEncryption::kKeyNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatabaseEncryption::DatabaseEncryption()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DatabaseEncryption)
}
DatabaseEncryption::DatabaseEncryption(const DatabaseEncryption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_name().size() > 0) {
    key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DatabaseEncryption)
}

void DatabaseEncryption::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
}

DatabaseEncryption::~DatabaseEncryption() {
  // @@protoc_insertion_point(destructor:google.container.v1.DatabaseEncryption)
  SharedDtor();
}

void DatabaseEncryption::SharedDtor() {
  key_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DatabaseEncryption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DatabaseEncryption& DatabaseEncryption::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DatabaseEncryption_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DatabaseEncryption::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DatabaseEncryption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DatabaseEncryption::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DatabaseEncryption*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.DatabaseEncryption.key_name");
        object = msg->mutable_key_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.DatabaseEncryption.State state = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_state(static_cast<::google::container::v1::DatabaseEncryption_State>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DatabaseEncryption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DatabaseEncryption)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_name().data(), static_cast<int>(this->key_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DatabaseEncryption.key_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.DatabaseEncryption.State state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::container::v1::DatabaseEncryption_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DatabaseEncryption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DatabaseEncryption)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DatabaseEncryption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DatabaseEncryption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_name = 1;
  if (this->key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_name().data(), static_cast<int>(this->key_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DatabaseEncryption.key_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key_name(), output);
  }

  // .google.container.v1.DatabaseEncryption.State state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DatabaseEncryption)
}

::google::protobuf::uint8* DatabaseEncryption::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DatabaseEncryption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_name = 1;
  if (this->key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_name().data(), static_cast<int>(this->key_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DatabaseEncryption.key_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key_name(), target);
  }

  // .google.container.v1.DatabaseEncryption.State state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DatabaseEncryption)
  return target;
}

size_t DatabaseEncryption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DatabaseEncryption)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key_name = 1;
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_name());
  }

  // .google.container.v1.DatabaseEncryption.State state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DatabaseEncryption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DatabaseEncryption)
  GOOGLE_DCHECK_NE(&from, this);
  const DatabaseEncryption* source =
      ::google::protobuf::DynamicCastToGenerated<DatabaseEncryption>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DatabaseEncryption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DatabaseEncryption)
    MergeFrom(*source);
  }
}

void DatabaseEncryption::MergeFrom(const DatabaseEncryption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DatabaseEncryption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key_name().size() > 0) {

    key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void DatabaseEncryption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DatabaseEncryption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatabaseEncryption::CopyFrom(const DatabaseEncryption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DatabaseEncryption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatabaseEncryption::IsInitialized() const {
  return true;
}

void DatabaseEncryption::Swap(DatabaseEncryption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatabaseEncryption::InternalSwap(DatabaseEncryption* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_name_.Swap(&other->key_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
}

::google::protobuf::Metadata DatabaseEncryption::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListUsableSubnetworksRequest::InitAsDefaultInstance() {
}
class ListUsableSubnetworksRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUsableSubnetworksRequest::kParentFieldNumber;
const int ListUsableSubnetworksRequest::kFilterFieldNumber;
const int ListUsableSubnetworksRequest::kPageSizeFieldNumber;
const int ListUsableSubnetworksRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUsableSubnetworksRequest::ListUsableSubnetworksRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListUsableSubnetworksRequest)
}
ListUsableSubnetworksRequest::ListUsableSubnetworksRequest(const ListUsableSubnetworksRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListUsableSubnetworksRequest)
}

void ListUsableSubnetworksRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListUsableSubnetworksRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListUsableSubnetworksRequest::~ListUsableSubnetworksRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListUsableSubnetworksRequest)
  SharedDtor();
}

void ListUsableSubnetworksRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListUsableSubnetworksRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListUsableSubnetworksRequest& ListUsableSubnetworksRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListUsableSubnetworksRequest_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListUsableSubnetworksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListUsableSubnetworksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListUsableSubnetworksRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListUsableSubnetworksRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListUsableSubnetworksRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filter = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListUsableSubnetworksRequest.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string page_token = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListUsableSubnetworksRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListUsableSubnetworksRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListUsableSubnetworksRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListUsableSubnetworksRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListUsableSubnetworksRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListUsableSubnetworksRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListUsableSubnetworksRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListUsableSubnetworksRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListUsableSubnetworksRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListUsableSubnetworksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListUsableSubnetworksRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListUsableSubnetworksRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListUsableSubnetworksRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListUsableSubnetworksRequest)
}

::google::protobuf::uint8* ListUsableSubnetworksRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListUsableSubnetworksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListUsableSubnetworksRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListUsableSubnetworksRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListUsableSubnetworksRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListUsableSubnetworksRequest)
  return target;
}

size_t ListUsableSubnetworksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListUsableSubnetworksRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUsableSubnetworksRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListUsableSubnetworksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUsableSubnetworksRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListUsableSubnetworksRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListUsableSubnetworksRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListUsableSubnetworksRequest)
    MergeFrom(*source);
  }
}

void ListUsableSubnetworksRequest::MergeFrom(const ListUsableSubnetworksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListUsableSubnetworksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListUsableSubnetworksRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListUsableSubnetworksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUsableSubnetworksRequest::CopyFrom(const ListUsableSubnetworksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListUsableSubnetworksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUsableSubnetworksRequest::IsInitialized() const {
  return true;
}

void ListUsableSubnetworksRequest::Swap(ListUsableSubnetworksRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUsableSubnetworksRequest::InternalSwap(ListUsableSubnetworksRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListUsableSubnetworksRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListUsableSubnetworksResponse::InitAsDefaultInstance() {
}
class ListUsableSubnetworksResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUsableSubnetworksResponse::kSubnetworksFieldNumber;
const int ListUsableSubnetworksResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUsableSubnetworksResponse::ListUsableSubnetworksResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListUsableSubnetworksResponse)
}
ListUsableSubnetworksResponse::ListUsableSubnetworksResponse(const ListUsableSubnetworksResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      subnetworks_(from.subnetworks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListUsableSubnetworksResponse)
}

void ListUsableSubnetworksResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListUsableSubnetworksResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListUsableSubnetworksResponse::~ListUsableSubnetworksResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListUsableSubnetworksResponse)
  SharedDtor();
}

void ListUsableSubnetworksResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListUsableSubnetworksResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListUsableSubnetworksResponse& ListUsableSubnetworksResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListUsableSubnetworksResponse_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListUsableSubnetworksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListUsableSubnetworksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnetworks_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListUsableSubnetworksResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListUsableSubnetworksResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.container.v1.UsableSubnetwork subnetworks = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::UsableSubnetwork::_InternalParse;
          object = msg->add_subnetworks();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ListUsableSubnetworksResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListUsableSubnetworksResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListUsableSubnetworksResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1.UsableSubnetwork subnetworks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subnetworks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListUsableSubnetworksResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListUsableSubnetworksResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListUsableSubnetworksResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListUsableSubnetworksResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListUsableSubnetworksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.UsableSubnetwork subnetworks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subnetworks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->subnetworks(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListUsableSubnetworksResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListUsableSubnetworksResponse)
}

::google::protobuf::uint8* ListUsableSubnetworksResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListUsableSubnetworksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.UsableSubnetwork subnetworks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subnetworks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->subnetworks(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListUsableSubnetworksResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListUsableSubnetworksResponse)
  return target;
}

size_t ListUsableSubnetworksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListUsableSubnetworksResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.UsableSubnetwork subnetworks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->subnetworks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subnetworks(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUsableSubnetworksResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListUsableSubnetworksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUsableSubnetworksResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListUsableSubnetworksResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListUsableSubnetworksResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListUsableSubnetworksResponse)
    MergeFrom(*source);
  }
}

void ListUsableSubnetworksResponse::MergeFrom(const ListUsableSubnetworksResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListUsableSubnetworksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subnetworks_.MergeFrom(from.subnetworks_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListUsableSubnetworksResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListUsableSubnetworksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUsableSubnetworksResponse::CopyFrom(const ListUsableSubnetworksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListUsableSubnetworksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUsableSubnetworksResponse::IsInitialized() const {
  return true;
}

void ListUsableSubnetworksResponse::Swap(ListUsableSubnetworksResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUsableSubnetworksResponse::InternalSwap(ListUsableSubnetworksResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&subnetworks_)->InternalSwap(CastToBase(&other->subnetworks_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListUsableSubnetworksResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UsableSubnetworkSecondaryRange::InitAsDefaultInstance() {
}
class UsableSubnetworkSecondaryRange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsableSubnetworkSecondaryRange::kRangeNameFieldNumber;
const int UsableSubnetworkSecondaryRange::kIpCidrRangeFieldNumber;
const int UsableSubnetworkSecondaryRange::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsableSubnetworkSecondaryRange::UsableSubnetworkSecondaryRange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.UsableSubnetworkSecondaryRange)
}
UsableSubnetworkSecondaryRange::UsableSubnetworkSecondaryRange(const UsableSubnetworkSecondaryRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.range_name().size() > 0) {
    range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_name_);
  }
  ip_cidr_range_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_cidr_range().size() > 0) {
    ip_cidr_range_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_cidr_range_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.UsableSubnetworkSecondaryRange)
}

void UsableSubnetworkSecondaryRange::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UsableSubnetworkSecondaryRange_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_cidr_range_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

UsableSubnetworkSecondaryRange::~UsableSubnetworkSecondaryRange() {
  // @@protoc_insertion_point(destructor:google.container.v1.UsableSubnetworkSecondaryRange)
  SharedDtor();
}

void UsableSubnetworkSecondaryRange::SharedDtor() {
  range_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_cidr_range_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UsableSubnetworkSecondaryRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsableSubnetworkSecondaryRange& UsableSubnetworkSecondaryRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UsableSubnetworkSecondaryRange_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UsableSubnetworkSecondaryRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.UsableSubnetworkSecondaryRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  range_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_cidr_range_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UsableSubnetworkSecondaryRange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UsableSubnetworkSecondaryRange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string range_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UsableSubnetworkSecondaryRange.range_name");
        object = msg->mutable_range_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ip_cidr_range = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UsableSubnetworkSecondaryRange.ip_cidr_range");
        object = msg->mutable_ip_cidr_range();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1.UsableSubnetworkSecondaryRange.Status status = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::container::v1::UsableSubnetworkSecondaryRange_Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UsableSubnetworkSecondaryRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.UsableSubnetworkSecondaryRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string range_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_range_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->range_name().data(), static_cast<int>(this->range_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UsableSubnetworkSecondaryRange.range_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_cidr_range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_cidr_range()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_cidr_range().data(), static_cast<int>(this->ip_cidr_range().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UsableSubnetworkSecondaryRange.ip_cidr_range"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.UsableSubnetworkSecondaryRange.Status status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1::UsableSubnetworkSecondaryRange_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.UsableSubnetworkSecondaryRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.UsableSubnetworkSecondaryRange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UsableSubnetworkSecondaryRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.UsableSubnetworkSecondaryRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string range_name = 1;
  if (this->range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->range_name().data(), static_cast<int>(this->range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetworkSecondaryRange.range_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->range_name(), output);
  }

  // string ip_cidr_range = 2;
  if (this->ip_cidr_range().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_cidr_range().data(), static_cast<int>(this->ip_cidr_range().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetworkSecondaryRange.ip_cidr_range");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip_cidr_range(), output);
  }

  // .google.container.v1.UsableSubnetworkSecondaryRange.Status status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.UsableSubnetworkSecondaryRange)
}

::google::protobuf::uint8* UsableSubnetworkSecondaryRange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.UsableSubnetworkSecondaryRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string range_name = 1;
  if (this->range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->range_name().data(), static_cast<int>(this->range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetworkSecondaryRange.range_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->range_name(), target);
  }

  // string ip_cidr_range = 2;
  if (this->ip_cidr_range().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_cidr_range().data(), static_cast<int>(this->ip_cidr_range().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetworkSecondaryRange.ip_cidr_range");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip_cidr_range(), target);
  }

  // .google.container.v1.UsableSubnetworkSecondaryRange.Status status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.UsableSubnetworkSecondaryRange)
  return target;
}

size_t UsableSubnetworkSecondaryRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.UsableSubnetworkSecondaryRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string range_name = 1;
  if (this->range_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->range_name());
  }

  // string ip_cidr_range = 2;
  if (this->ip_cidr_range().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_cidr_range());
  }

  // .google.container.v1.UsableSubnetworkSecondaryRange.Status status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsableSubnetworkSecondaryRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.UsableSubnetworkSecondaryRange)
  GOOGLE_DCHECK_NE(&from, this);
  const UsableSubnetworkSecondaryRange* source =
      ::google::protobuf::DynamicCastToGenerated<UsableSubnetworkSecondaryRange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.UsableSubnetworkSecondaryRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.UsableSubnetworkSecondaryRange)
    MergeFrom(*source);
  }
}

void UsableSubnetworkSecondaryRange::MergeFrom(const UsableSubnetworkSecondaryRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.UsableSubnetworkSecondaryRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.range_name().size() > 0) {

    range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_name_);
  }
  if (from.ip_cidr_range().size() > 0) {

    ip_cidr_range_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_cidr_range_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void UsableSubnetworkSecondaryRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.UsableSubnetworkSecondaryRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsableSubnetworkSecondaryRange::CopyFrom(const UsableSubnetworkSecondaryRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.UsableSubnetworkSecondaryRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsableSubnetworkSecondaryRange::IsInitialized() const {
  return true;
}

void UsableSubnetworkSecondaryRange::Swap(UsableSubnetworkSecondaryRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsableSubnetworkSecondaryRange::InternalSwap(UsableSubnetworkSecondaryRange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  range_name_.Swap(&other->range_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_cidr_range_.Swap(&other->ip_cidr_range_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::google::protobuf::Metadata UsableSubnetworkSecondaryRange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UsableSubnetwork::InitAsDefaultInstance() {
}
class UsableSubnetwork::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsableSubnetwork::kSubnetworkFieldNumber;
const int UsableSubnetwork::kNetworkFieldNumber;
const int UsableSubnetwork::kIpCidrRangeFieldNumber;
const int UsableSubnetwork::kSecondaryIpRangesFieldNumber;
const int UsableSubnetwork::kStatusMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsableSubnetwork::UsableSubnetwork()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.UsableSubnetwork)
}
UsableSubnetwork::UsableSubnetwork(const UsableSubnetwork& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      secondary_ip_ranges_(from.secondary_ip_ranges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork().size() > 0) {
    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.network().size() > 0) {
    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  ip_cidr_range_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_cidr_range().size() > 0) {
    ip_cidr_range_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_cidr_range_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.UsableSubnetwork)
}

void UsableSubnetwork::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UsableSubnetwork_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_cidr_range_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UsableSubnetwork::~UsableSubnetwork() {
  // @@protoc_insertion_point(destructor:google.container.v1.UsableSubnetwork)
  SharedDtor();
}

void UsableSubnetwork::SharedDtor() {
  subnetwork_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_cidr_range_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UsableSubnetwork::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsableSubnetwork& UsableSubnetwork::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UsableSubnetwork_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UsableSubnetwork::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.UsableSubnetwork)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secondary_ip_ranges_.Clear();
  subnetwork_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_cidr_range_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UsableSubnetwork::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UsableSubnetwork*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string subnetwork = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UsableSubnetwork.subnetwork");
        object = msg->mutable_subnetwork();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string network = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UsableSubnetwork.network");
        object = msg->mutable_network();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ip_cidr_range = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UsableSubnetwork.ip_cidr_range");
        object = msg->mutable_ip_cidr_range();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .google.container.v1.UsableSubnetworkSecondaryRange secondary_ip_ranges = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1::UsableSubnetworkSecondaryRange::_InternalParse;
          object = msg->add_secondary_ip_ranges();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // string status_message = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.UsableSubnetwork.status_message");
        object = msg->mutable_status_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UsableSubnetwork::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.UsableSubnetwork)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subnetwork = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UsableSubnetwork.subnetwork"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string network = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), static_cast<int>(this->network().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UsableSubnetwork.network"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_cidr_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_cidr_range()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_cidr_range().data(), static_cast<int>(this->ip_cidr_range().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UsableSubnetwork.ip_cidr_range"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.UsableSubnetworkSecondaryRange secondary_ip_ranges = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_secondary_ip_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UsableSubnetwork.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.UsableSubnetwork)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.UsableSubnetwork)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UsableSubnetwork::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.UsableSubnetwork)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subnetwork = 1;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetwork.subnetwork");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subnetwork(), output);
  }

  // string network = 2;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetwork.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->network(), output);
  }

  // string ip_cidr_range = 3;
  if (this->ip_cidr_range().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_cidr_range().data(), static_cast<int>(this->ip_cidr_range().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetwork.ip_cidr_range");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_cidr_range(), output);
  }

  // repeated .google.container.v1.UsableSubnetworkSecondaryRange secondary_ip_ranges = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->secondary_ip_ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->secondary_ip_ranges(static_cast<int>(i)),
      output);
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetwork.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->status_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.UsableSubnetwork)
}

::google::protobuf::uint8* UsableSubnetwork::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.UsableSubnetwork)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subnetwork = 1;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetwork.subnetwork");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subnetwork(), target);
  }

  // string network = 2;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetwork.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->network(), target);
  }

  // string ip_cidr_range = 3;
  if (this->ip_cidr_range().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_cidr_range().data(), static_cast<int>(this->ip_cidr_range().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetwork.ip_cidr_range");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_cidr_range(), target);
  }

  // repeated .google.container.v1.UsableSubnetworkSecondaryRange secondary_ip_ranges = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->secondary_ip_ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->secondary_ip_ranges(static_cast<int>(i)), target);
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UsableSubnetwork.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->status_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.UsableSubnetwork)
  return target;
}

size_t UsableSubnetwork::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.UsableSubnetwork)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1.UsableSubnetworkSecondaryRange secondary_ip_ranges = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->secondary_ip_ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->secondary_ip_ranges(static_cast<int>(i)));
    }
  }

  // string subnetwork = 1;
  if (this->subnetwork().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork());
  }

  // string network = 2;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // string ip_cidr_range = 3;
  if (this->ip_cidr_range().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_cidr_range());
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsableSubnetwork::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.UsableSubnetwork)
  GOOGLE_DCHECK_NE(&from, this);
  const UsableSubnetwork* source =
      ::google::protobuf::DynamicCastToGenerated<UsableSubnetwork>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.UsableSubnetwork)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.UsableSubnetwork)
    MergeFrom(*source);
  }
}

void UsableSubnetwork::MergeFrom(const UsableSubnetwork& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.UsableSubnetwork)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  secondary_ip_ranges_.MergeFrom(from.secondary_ip_ranges_);
  if (from.subnetwork().size() > 0) {

    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.ip_cidr_range().size() > 0) {

    ip_cidr_range_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_cidr_range_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
}

void UsableSubnetwork::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.UsableSubnetwork)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsableSubnetwork::CopyFrom(const UsableSubnetwork& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.UsableSubnetwork)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsableSubnetwork::IsInitialized() const {
  return true;
}

void UsableSubnetwork::Swap(UsableSubnetwork* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsableSubnetwork::InternalSwap(UsableSubnetwork* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&secondary_ip_ranges_)->InternalSwap(CastToBase(&other->secondary_ip_ranges_));
  subnetwork_.Swap(&other->subnetwork_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  network_.Swap(&other->network_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_cidr_range_.Swap(&other->ip_cidr_range_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_message_.Swap(&other->status_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UsableSubnetwork::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResourceUsageExportConfig_BigQueryDestination::InitAsDefaultInstance() {
}
class ResourceUsageExportConfig_BigQueryDestination::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceUsageExportConfig_BigQueryDestination::kDatasetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceUsageExportConfig_BigQueryDestination::ResourceUsageExportConfig_BigQueryDestination()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
}
ResourceUsageExportConfig_BigQueryDestination::ResourceUsageExportConfig_BigQueryDestination(const ResourceUsageExportConfig_BigQueryDestination& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataset_id().size() > 0) {
    dataset_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
}

void ResourceUsageExportConfig_BigQueryDestination::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResourceUsageExportConfig_BigQueryDestination_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResourceUsageExportConfig_BigQueryDestination::~ResourceUsageExportConfig_BigQueryDestination() {
  // @@protoc_insertion_point(destructor:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  SharedDtor();
}

void ResourceUsageExportConfig_BigQueryDestination::SharedDtor() {
  dataset_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceUsageExportConfig_BigQueryDestination::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceUsageExportConfig_BigQueryDestination& ResourceUsageExportConfig_BigQueryDestination::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResourceUsageExportConfig_BigQueryDestination_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ResourceUsageExportConfig_BigQueryDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataset_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResourceUsageExportConfig_BigQueryDestination::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResourceUsageExportConfig_BigQueryDestination*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string dataset_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1.ResourceUsageExportConfig.BigQueryDestination.dataset_id");
        object = msg->mutable_dataset_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResourceUsageExportConfig_BigQueryDestination::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dataset_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataset_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ResourceUsageExportConfig.BigQueryDestination.dataset_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResourceUsageExportConfig_BigQueryDestination::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataset_id = 1;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ResourceUsageExportConfig.BigQueryDestination.dataset_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dataset_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
}

::google::protobuf::uint8* ResourceUsageExportConfig_BigQueryDestination::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataset_id = 1;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ResourceUsageExportConfig.BigQueryDestination.dataset_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dataset_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  return target;
}

size_t ResourceUsageExportConfig_BigQueryDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataset_id = 1;
  if (this->dataset_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dataset_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceUsageExportConfig_BigQueryDestination::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceUsageExportConfig_BigQueryDestination* source =
      ::google::protobuf::DynamicCastToGenerated<ResourceUsageExportConfig_BigQueryDestination>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
    MergeFrom(*source);
  }
}

void ResourceUsageExportConfig_BigQueryDestination::MergeFrom(const ResourceUsageExportConfig_BigQueryDestination& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dataset_id().size() > 0) {

    dataset_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_id_);
  }
}

void ResourceUsageExportConfig_BigQueryDestination::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceUsageExportConfig_BigQueryDestination::CopyFrom(const ResourceUsageExportConfig_BigQueryDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceUsageExportConfig_BigQueryDestination::IsInitialized() const {
  return true;
}

void ResourceUsageExportConfig_BigQueryDestination::Swap(ResourceUsageExportConfig_BigQueryDestination* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceUsageExportConfig_BigQueryDestination::InternalSwap(ResourceUsageExportConfig_BigQueryDestination* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dataset_id_.Swap(&other->dataset_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ResourceUsageExportConfig_BigQueryDestination::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResourceUsageExportConfig_ConsumptionMeteringConfig::InitAsDefaultInstance() {
}
class ResourceUsageExportConfig_ConsumptionMeteringConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceUsageExportConfig_ConsumptionMeteringConfig::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceUsageExportConfig_ConsumptionMeteringConfig::ResourceUsageExportConfig_ConsumptionMeteringConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
}
ResourceUsageExportConfig_ConsumptionMeteringConfig::ResourceUsageExportConfig_ConsumptionMeteringConfig(const ResourceUsageExportConfig_ConsumptionMeteringConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
}

void ResourceUsageExportConfig_ConsumptionMeteringConfig::SharedCtor() {
  enabled_ = false;
}

ResourceUsageExportConfig_ConsumptionMeteringConfig::~ResourceUsageExportConfig_ConsumptionMeteringConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  SharedDtor();
}

void ResourceUsageExportConfig_ConsumptionMeteringConfig::SharedDtor() {
}

void ResourceUsageExportConfig_ConsumptionMeteringConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceUsageExportConfig_ConsumptionMeteringConfig& ResourceUsageExportConfig_ConsumptionMeteringConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResourceUsageExportConfig_ConsumptionMeteringConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ResourceUsageExportConfig_ConsumptionMeteringConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResourceUsageExportConfig_ConsumptionMeteringConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResourceUsageExportConfig_ConsumptionMeteringConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResourceUsageExportConfig_ConsumptionMeteringConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResourceUsageExportConfig_ConsumptionMeteringConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
}

::google::protobuf::uint8* ResourceUsageExportConfig_ConsumptionMeteringConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  return target;
}

size_t ResourceUsageExportConfig_ConsumptionMeteringConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceUsageExportConfig_ConsumptionMeteringConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceUsageExportConfig_ConsumptionMeteringConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ResourceUsageExportConfig_ConsumptionMeteringConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
    MergeFrom(*source);
  }
}

void ResourceUsageExportConfig_ConsumptionMeteringConfig::MergeFrom(const ResourceUsageExportConfig_ConsumptionMeteringConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void ResourceUsageExportConfig_ConsumptionMeteringConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceUsageExportConfig_ConsumptionMeteringConfig::CopyFrom(const ResourceUsageExportConfig_ConsumptionMeteringConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceUsageExportConfig_ConsumptionMeteringConfig::IsInitialized() const {
  return true;
}

void ResourceUsageExportConfig_ConsumptionMeteringConfig::Swap(ResourceUsageExportConfig_ConsumptionMeteringConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceUsageExportConfig_ConsumptionMeteringConfig::InternalSwap(ResourceUsageExportConfig_ConsumptionMeteringConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata ResourceUsageExportConfig_ConsumptionMeteringConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResourceUsageExportConfig::InitAsDefaultInstance() {
  ::google::container::v1::_ResourceUsageExportConfig_default_instance_._instance.get_mutable()->bigquery_destination_ = const_cast< ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination*>(
      ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination::internal_default_instance());
  ::google::container::v1::_ResourceUsageExportConfig_default_instance_._instance.get_mutable()->consumption_metering_config_ = const_cast< ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig*>(
      ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig::internal_default_instance());
}
class ResourceUsageExportConfig::HasBitSetters {
 public:
  static const ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination& bigquery_destination(const ResourceUsageExportConfig* msg);
  static const ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig& consumption_metering_config(const ResourceUsageExportConfig* msg);
};

const ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination&
ResourceUsageExportConfig::HasBitSetters::bigquery_destination(const ResourceUsageExportConfig* msg) {
  return *msg->bigquery_destination_;
}
const ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig&
ResourceUsageExportConfig::HasBitSetters::consumption_metering_config(const ResourceUsageExportConfig* msg) {
  return *msg->consumption_metering_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceUsageExportConfig::kBigqueryDestinationFieldNumber;
const int ResourceUsageExportConfig::kEnableNetworkEgressMeteringFieldNumber;
const int ResourceUsageExportConfig::kConsumptionMeteringConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceUsageExportConfig::ResourceUsageExportConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ResourceUsageExportConfig)
}
ResourceUsageExportConfig::ResourceUsageExportConfig(const ResourceUsageExportConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bigquery_destination()) {
    bigquery_destination_ = new ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination(*from.bigquery_destination_);
  } else {
    bigquery_destination_ = nullptr;
  }
  if (from.has_consumption_metering_config()) {
    consumption_metering_config_ = new ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig(*from.consumption_metering_config_);
  } else {
    consumption_metering_config_ = nullptr;
  }
  enable_network_egress_metering_ = from.enable_network_egress_metering_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ResourceUsageExportConfig)
}

void ResourceUsageExportConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  ::memset(&bigquery_destination_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_network_egress_metering_) -
      reinterpret_cast<char*>(&bigquery_destination_)) + sizeof(enable_network_egress_metering_));
}

ResourceUsageExportConfig::~ResourceUsageExportConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ResourceUsageExportConfig)
  SharedDtor();
}

void ResourceUsageExportConfig::SharedDtor() {
  if (this != internal_default_instance()) delete bigquery_destination_;
  if (this != internal_default_instance()) delete consumption_metering_config_;
}

void ResourceUsageExportConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceUsageExportConfig& ResourceUsageExportConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResourceUsageExportConfig_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ResourceUsageExportConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ResourceUsageExportConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && bigquery_destination_ != nullptr) {
    delete bigquery_destination_;
  }
  bigquery_destination_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && consumption_metering_config_ != nullptr) {
    delete consumption_metering_config_;
  }
  consumption_metering_config_ = nullptr;
  enable_network_egress_metering_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResourceUsageExportConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResourceUsageExportConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1.ResourceUsageExportConfig.BigQueryDestination bigquery_destination = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination::_InternalParse;
        object = msg->mutable_bigquery_destination();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool enable_network_egress_metering = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_enable_network_egress_metering(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig consumption_metering_config = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig::_InternalParse;
        object = msg->mutable_consumption_metering_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResourceUsageExportConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ResourceUsageExportConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.ResourceUsageExportConfig.BigQueryDestination bigquery_destination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bigquery_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_network_egress_metering = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_network_egress_metering_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig consumption_metering_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_consumption_metering_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ResourceUsageExportConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ResourceUsageExportConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResourceUsageExportConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ResourceUsageExportConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.ResourceUsageExportConfig.BigQueryDestination bigquery_destination = 1;
  if (this->has_bigquery_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::bigquery_destination(this), output);
  }

  // bool enable_network_egress_metering = 2;
  if (this->enable_network_egress_metering() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable_network_egress_metering(), output);
  }

  // .google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig consumption_metering_config = 3;
  if (this->has_consumption_metering_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::consumption_metering_config(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ResourceUsageExportConfig)
}

::google::protobuf::uint8* ResourceUsageExportConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ResourceUsageExportConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.ResourceUsageExportConfig.BigQueryDestination bigquery_destination = 1;
  if (this->has_bigquery_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::bigquery_destination(this), target);
  }

  // bool enable_network_egress_metering = 2;
  if (this->enable_network_egress_metering() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable_network_egress_metering(), target);
  }

  // .google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig consumption_metering_config = 3;
  if (this->has_consumption_metering_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::consumption_metering_config(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ResourceUsageExportConfig)
  return target;
}

size_t ResourceUsageExportConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ResourceUsageExportConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1.ResourceUsageExportConfig.BigQueryDestination bigquery_destination = 1;
  if (this->has_bigquery_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bigquery_destination_);
  }

  // .google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig consumption_metering_config = 3;
  if (this->has_consumption_metering_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *consumption_metering_config_);
  }

  // bool enable_network_egress_metering = 2;
  if (this->enable_network_egress_metering() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceUsageExportConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ResourceUsageExportConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceUsageExportConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ResourceUsageExportConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ResourceUsageExportConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ResourceUsageExportConfig)
    MergeFrom(*source);
  }
}

void ResourceUsageExportConfig::MergeFrom(const ResourceUsageExportConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ResourceUsageExportConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bigquery_destination()) {
    mutable_bigquery_destination()->::google::container::v1::ResourceUsageExportConfig_BigQueryDestination::MergeFrom(from.bigquery_destination());
  }
  if (from.has_consumption_metering_config()) {
    mutable_consumption_metering_config()->::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig::MergeFrom(from.consumption_metering_config());
  }
  if (from.enable_network_egress_metering() != 0) {
    set_enable_network_egress_metering(from.enable_network_egress_metering());
  }
}

void ResourceUsageExportConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ResourceUsageExportConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceUsageExportConfig::CopyFrom(const ResourceUsageExportConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ResourceUsageExportConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceUsageExportConfig::IsInitialized() const {
  return true;
}

void ResourceUsageExportConfig::Swap(ResourceUsageExportConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceUsageExportConfig::InternalSwap(ResourceUsageExportConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bigquery_destination_, other->bigquery_destination_);
  swap(consumption_metering_config_, other->consumption_metering_config_);
  swap(enable_network_egress_metering_, other->enable_network_egress_metering_);
}

::google::protobuf::Metadata ResourceUsageExportConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerticalPodAutoscaling::InitAsDefaultInstance() {
}
class VerticalPodAutoscaling::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerticalPodAutoscaling::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerticalPodAutoscaling::VerticalPodAutoscaling()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.VerticalPodAutoscaling)
}
VerticalPodAutoscaling::VerticalPodAutoscaling(const VerticalPodAutoscaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.VerticalPodAutoscaling)
}

void VerticalPodAutoscaling::SharedCtor() {
  enabled_ = false;
}

VerticalPodAutoscaling::~VerticalPodAutoscaling() {
  // @@protoc_insertion_point(destructor:google.container.v1.VerticalPodAutoscaling)
  SharedDtor();
}

void VerticalPodAutoscaling::SharedDtor() {
}

void VerticalPodAutoscaling::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerticalPodAutoscaling& VerticalPodAutoscaling::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerticalPodAutoscaling_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void VerticalPodAutoscaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.VerticalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerticalPodAutoscaling::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerticalPodAutoscaling*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerticalPodAutoscaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.VerticalPodAutoscaling)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.VerticalPodAutoscaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.VerticalPodAutoscaling)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerticalPodAutoscaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.VerticalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.VerticalPodAutoscaling)
}

::google::protobuf::uint8* VerticalPodAutoscaling::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.VerticalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.VerticalPodAutoscaling)
  return target;
}

size_t VerticalPodAutoscaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.VerticalPodAutoscaling)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerticalPodAutoscaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.VerticalPodAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  const VerticalPodAutoscaling* source =
      ::google::protobuf::DynamicCastToGenerated<VerticalPodAutoscaling>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.VerticalPodAutoscaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.VerticalPodAutoscaling)
    MergeFrom(*source);
  }
}

void VerticalPodAutoscaling::MergeFrom(const VerticalPodAutoscaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.VerticalPodAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void VerticalPodAutoscaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.VerticalPodAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerticalPodAutoscaling::CopyFrom(const VerticalPodAutoscaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.VerticalPodAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerticalPodAutoscaling::IsInitialized() const {
  return true;
}

void VerticalPodAutoscaling::Swap(VerticalPodAutoscaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerticalPodAutoscaling::InternalSwap(VerticalPodAutoscaling* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata VerticalPodAutoscaling::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DefaultSnatStatus::InitAsDefaultInstance() {
}
class DefaultSnatStatus::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefaultSnatStatus::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DefaultSnatStatus::DefaultSnatStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DefaultSnatStatus)
}
DefaultSnatStatus::DefaultSnatStatus(const DefaultSnatStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DefaultSnatStatus)
}

void DefaultSnatStatus::SharedCtor() {
  disabled_ = false;
}

DefaultSnatStatus::~DefaultSnatStatus() {
  // @@protoc_insertion_point(destructor:google.container.v1.DefaultSnatStatus)
  SharedDtor();
}

void DefaultSnatStatus::SharedDtor() {
}

void DefaultSnatStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DefaultSnatStatus& DefaultSnatStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DefaultSnatStatus_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DefaultSnatStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DefaultSnatStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DefaultSnatStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DefaultSnatStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DefaultSnatStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DefaultSnatStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DefaultSnatStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DefaultSnatStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DefaultSnatStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DefaultSnatStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DefaultSnatStatus)
}

::google::protobuf::uint8* DefaultSnatStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DefaultSnatStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DefaultSnatStatus)
  return target;
}

size_t DefaultSnatStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DefaultSnatStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DefaultSnatStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DefaultSnatStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const DefaultSnatStatus* source =
      ::google::protobuf::DynamicCastToGenerated<DefaultSnatStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DefaultSnatStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DefaultSnatStatus)
    MergeFrom(*source);
  }
}

void DefaultSnatStatus::MergeFrom(const DefaultSnatStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DefaultSnatStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void DefaultSnatStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DefaultSnatStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefaultSnatStatus::CopyFrom(const DefaultSnatStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DefaultSnatStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultSnatStatus::IsInitialized() const {
  return true;
}

void DefaultSnatStatus::Swap(DefaultSnatStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DefaultSnatStatus::InternalSwap(DefaultSnatStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata DefaultSnatStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ShieldedNodes::InitAsDefaultInstance() {
}
class ShieldedNodes::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShieldedNodes::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShieldedNodes::ShieldedNodes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ShieldedNodes)
}
ShieldedNodes::ShieldedNodes(const ShieldedNodes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ShieldedNodes)
}

void ShieldedNodes::SharedCtor() {
  enabled_ = false;
}

ShieldedNodes::~ShieldedNodes() {
  // @@protoc_insertion_point(destructor:google.container.v1.ShieldedNodes)
  SharedDtor();
}

void ShieldedNodes::SharedDtor() {
}

void ShieldedNodes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShieldedNodes& ShieldedNodes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ShieldedNodes_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ShieldedNodes::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ShieldedNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ShieldedNodes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ShieldedNodes*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ShieldedNodes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ShieldedNodes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ShieldedNodes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ShieldedNodes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ShieldedNodes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ShieldedNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ShieldedNodes)
}

::google::protobuf::uint8* ShieldedNodes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ShieldedNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ShieldedNodes)
  return target;
}

size_t ShieldedNodes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ShieldedNodes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShieldedNodes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ShieldedNodes)
  GOOGLE_DCHECK_NE(&from, this);
  const ShieldedNodes* source =
      ::google::protobuf::DynamicCastToGenerated<ShieldedNodes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ShieldedNodes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ShieldedNodes)
    MergeFrom(*source);
  }
}

void ShieldedNodes::MergeFrom(const ShieldedNodes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ShieldedNodes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void ShieldedNodes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ShieldedNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShieldedNodes::CopyFrom(const ShieldedNodes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ShieldedNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShieldedNodes::IsInitialized() const {
  return true;
}

void ShieldedNodes::Swap(ShieldedNodes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShieldedNodes::InternalSwap(ShieldedNodes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata ShieldedNodes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace container
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::container::v1::NodeConfig_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::container::v1::NodeConfig_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NodeConfig_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NodeConfig_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::container::v1::NodeConfig_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NodeConfig_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NodeConfig* Arena::CreateMaybeMessage< ::google::container::v1::NodeConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NodeConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ShieldedInstanceConfig* Arena::CreateMaybeMessage< ::google::container::v1::ShieldedInstanceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ShieldedInstanceConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SandboxConfig* Arena::CreateMaybeMessage< ::google::container::v1::SandboxConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SandboxConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ReservationAffinity* Arena::CreateMaybeMessage< ::google::container::v1::ReservationAffinity >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ReservationAffinity >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NodeTaint* Arena::CreateMaybeMessage< ::google::container::v1::NodeTaint >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NodeTaint >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::MasterAuth* Arena::CreateMaybeMessage< ::google::container::v1::MasterAuth >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::MasterAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ClientCertificateConfig* Arena::CreateMaybeMessage< ::google::container::v1::ClientCertificateConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ClientCertificateConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::AddonsConfig* Arena::CreateMaybeMessage< ::google::container::v1::AddonsConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::AddonsConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::HttpLoadBalancing* Arena::CreateMaybeMessage< ::google::container::v1::HttpLoadBalancing >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::HttpLoadBalancing >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::HorizontalPodAutoscaling* Arena::CreateMaybeMessage< ::google::container::v1::HorizontalPodAutoscaling >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::HorizontalPodAutoscaling >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::KubernetesDashboard* Arena::CreateMaybeMessage< ::google::container::v1::KubernetesDashboard >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::KubernetesDashboard >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NetworkPolicyConfig* Arena::CreateMaybeMessage< ::google::container::v1::NetworkPolicyConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NetworkPolicyConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::DnsCacheConfig* Arena::CreateMaybeMessage< ::google::container::v1::DnsCacheConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::DnsCacheConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::PrivateClusterMasterGlobalAccessConfig* Arena::CreateMaybeMessage< ::google::container::v1::PrivateClusterMasterGlobalAccessConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::PrivateClusterMasterGlobalAccessConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::PrivateClusterConfig* Arena::CreateMaybeMessage< ::google::container::v1::PrivateClusterConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::PrivateClusterConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::AuthenticatorGroupsConfig* Arena::CreateMaybeMessage< ::google::container::v1::AuthenticatorGroupsConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::AuthenticatorGroupsConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::CloudRunConfig* Arena::CreateMaybeMessage< ::google::container::v1::CloudRunConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::CloudRunConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ConfigConnectorConfig* Arena::CreateMaybeMessage< ::google::container::v1::ConfigConnectorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ConfigConnectorConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock* Arena::CreateMaybeMessage< ::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::MasterAuthorizedNetworksConfig* Arena::CreateMaybeMessage< ::google::container::v1::MasterAuthorizedNetworksConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::MasterAuthorizedNetworksConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::LegacyAbac* Arena::CreateMaybeMessage< ::google::container::v1::LegacyAbac >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::LegacyAbac >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NetworkPolicy* Arena::CreateMaybeMessage< ::google::container::v1::NetworkPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NetworkPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::BinaryAuthorization* Arena::CreateMaybeMessage< ::google::container::v1::BinaryAuthorization >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::BinaryAuthorization >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::IPAllocationPolicy* Arena::CreateMaybeMessage< ::google::container::v1::IPAllocationPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::IPAllocationPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::Cluster* Arena::CreateMaybeMessage< ::google::container::v1::Cluster >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::Cluster >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ClusterUpdate* Arena::CreateMaybeMessage< ::google::container::v1::ClusterUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ClusterUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::Operation* Arena::CreateMaybeMessage< ::google::container::v1::Operation >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::Operation >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::OperationProgress_Metric* Arena::CreateMaybeMessage< ::google::container::v1::OperationProgress_Metric >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::OperationProgress_Metric >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::OperationProgress* Arena::CreateMaybeMessage< ::google::container::v1::OperationProgress >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::OperationProgress >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::CreateClusterRequest* Arena::CreateMaybeMessage< ::google::container::v1::CreateClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::CreateClusterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::GetClusterRequest* Arena::CreateMaybeMessage< ::google::container::v1::GetClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::GetClusterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::UpdateClusterRequest* Arena::CreateMaybeMessage< ::google::container::v1::UpdateClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::UpdateClusterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::UpdateNodePoolRequest* Arena::CreateMaybeMessage< ::google::container::v1::UpdateNodePoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::UpdateNodePoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetNodePoolAutoscalingRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetNodePoolAutoscalingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetNodePoolAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetLoggingServiceRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetLoggingServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetLoggingServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetMonitoringServiceRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetMonitoringServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetMonitoringServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetAddonsConfigRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetAddonsConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetAddonsConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetLocationsRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetLocationsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetLocationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::UpdateMasterRequest* Arena::CreateMaybeMessage< ::google::container::v1::UpdateMasterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::UpdateMasterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetMasterAuthRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetMasterAuthRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetMasterAuthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::DeleteClusterRequest* Arena::CreateMaybeMessage< ::google::container::v1::DeleteClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::DeleteClusterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ListClustersRequest* Arena::CreateMaybeMessage< ::google::container::v1::ListClustersRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ListClustersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ListClustersResponse* Arena::CreateMaybeMessage< ::google::container::v1::ListClustersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ListClustersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::GetOperationRequest* Arena::CreateMaybeMessage< ::google::container::v1::GetOperationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::GetOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ListOperationsRequest* Arena::CreateMaybeMessage< ::google::container::v1::ListOperationsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ListOperationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::CancelOperationRequest* Arena::CreateMaybeMessage< ::google::container::v1::CancelOperationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::CancelOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ListOperationsResponse* Arena::CreateMaybeMessage< ::google::container::v1::ListOperationsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ListOperationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::GetServerConfigRequest* Arena::CreateMaybeMessage< ::google::container::v1::GetServerConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::GetServerConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ServerConfig_ReleaseChannelConfig* Arena::CreateMaybeMessage< ::google::container::v1::ServerConfig_ReleaseChannelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ServerConfig_ReleaseChannelConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ServerConfig* Arena::CreateMaybeMessage< ::google::container::v1::ServerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ServerConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::CreateNodePoolRequest* Arena::CreateMaybeMessage< ::google::container::v1::CreateNodePoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::CreateNodePoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::DeleteNodePoolRequest* Arena::CreateMaybeMessage< ::google::container::v1::DeleteNodePoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::DeleteNodePoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ListNodePoolsRequest* Arena::CreateMaybeMessage< ::google::container::v1::ListNodePoolsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ListNodePoolsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::GetNodePoolRequest* Arena::CreateMaybeMessage< ::google::container::v1::GetNodePoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::GetNodePoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NodePool_UpgradeSettings* Arena::CreateMaybeMessage< ::google::container::v1::NodePool_UpgradeSettings >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NodePool_UpgradeSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NodePool* Arena::CreateMaybeMessage< ::google::container::v1::NodePool >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NodePool >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NodeManagement* Arena::CreateMaybeMessage< ::google::container::v1::NodeManagement >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NodeManagement >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::AutoUpgradeOptions* Arena::CreateMaybeMessage< ::google::container::v1::AutoUpgradeOptions >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::AutoUpgradeOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::MaintenancePolicy* Arena::CreateMaybeMessage< ::google::container::v1::MaintenancePolicy >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::MaintenancePolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::MaintenanceWindow_MaintenanceExclusionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::MaintenanceWindow* Arena::CreateMaybeMessage< ::google::container::v1::MaintenanceWindow >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::MaintenanceWindow >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::TimeWindow* Arena::CreateMaybeMessage< ::google::container::v1::TimeWindow >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::TimeWindow >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::RecurringTimeWindow* Arena::CreateMaybeMessage< ::google::container::v1::RecurringTimeWindow >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::RecurringTimeWindow >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::DailyMaintenanceWindow* Arena::CreateMaybeMessage< ::google::container::v1::DailyMaintenanceWindow >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::DailyMaintenanceWindow >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetNodePoolManagementRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetNodePoolManagementRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetNodePoolManagementRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetNodePoolSizeRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetNodePoolSizeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetNodePoolSizeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::RollbackNodePoolUpgradeRequest* Arena::CreateMaybeMessage< ::google::container::v1::RollbackNodePoolUpgradeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::RollbackNodePoolUpgradeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ListNodePoolsResponse* Arena::CreateMaybeMessage< ::google::container::v1::ListNodePoolsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ListNodePoolsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ClusterAutoscaling* Arena::CreateMaybeMessage< ::google::container::v1::ClusterAutoscaling >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ClusterAutoscaling >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::AutoprovisioningNodePoolDefaults* Arena::CreateMaybeMessage< ::google::container::v1::AutoprovisioningNodePoolDefaults >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::AutoprovisioningNodePoolDefaults >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ResourceLimit* Arena::CreateMaybeMessage< ::google::container::v1::ResourceLimit >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ResourceLimit >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NodePoolAutoscaling* Arena::CreateMaybeMessage< ::google::container::v1::NodePoolAutoscaling >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NodePoolAutoscaling >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetLabelsRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetLabelsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetLabelsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetLegacyAbacRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetLegacyAbacRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetLegacyAbacRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::StartIPRotationRequest* Arena::CreateMaybeMessage< ::google::container::v1::StartIPRotationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::StartIPRotationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::CompleteIPRotationRequest* Arena::CreateMaybeMessage< ::google::container::v1::CompleteIPRotationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::CompleteIPRotationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::AcceleratorConfig* Arena::CreateMaybeMessage< ::google::container::v1::AcceleratorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::AcceleratorConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::WorkloadMetadataConfig* Arena::CreateMaybeMessage< ::google::container::v1::WorkloadMetadataConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::WorkloadMetadataConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetNetworkPolicyRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetNetworkPolicyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetNetworkPolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::SetMaintenancePolicyRequest* Arena::CreateMaybeMessage< ::google::container::v1::SetMaintenancePolicyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::SetMaintenancePolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::StatusCondition* Arena::CreateMaybeMessage< ::google::container::v1::StatusCondition >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::StatusCondition >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::NetworkConfig* Arena::CreateMaybeMessage< ::google::container::v1::NetworkConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::NetworkConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::GetOpenIDConfigRequest* Arena::CreateMaybeMessage< ::google::container::v1::GetOpenIDConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::GetOpenIDConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::GetOpenIDConfigResponse* Arena::CreateMaybeMessage< ::google::container::v1::GetOpenIDConfigResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::GetOpenIDConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::GetJSONWebKeysRequest* Arena::CreateMaybeMessage< ::google::container::v1::GetJSONWebKeysRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::GetJSONWebKeysRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::Jwk* Arena::CreateMaybeMessage< ::google::container::v1::Jwk >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::Jwk >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::GetJSONWebKeysResponse* Arena::CreateMaybeMessage< ::google::container::v1::GetJSONWebKeysResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::GetJSONWebKeysResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ReleaseChannel* Arena::CreateMaybeMessage< ::google::container::v1::ReleaseChannel >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ReleaseChannel >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::IntraNodeVisibilityConfig* Arena::CreateMaybeMessage< ::google::container::v1::IntraNodeVisibilityConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::IntraNodeVisibilityConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::MaxPodsConstraint* Arena::CreateMaybeMessage< ::google::container::v1::MaxPodsConstraint >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::MaxPodsConstraint >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::WorkloadIdentityConfig* Arena::CreateMaybeMessage< ::google::container::v1::WorkloadIdentityConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::WorkloadIdentityConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::DatabaseEncryption* Arena::CreateMaybeMessage< ::google::container::v1::DatabaseEncryption >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::DatabaseEncryption >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ListUsableSubnetworksRequest* Arena::CreateMaybeMessage< ::google::container::v1::ListUsableSubnetworksRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ListUsableSubnetworksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ListUsableSubnetworksResponse* Arena::CreateMaybeMessage< ::google::container::v1::ListUsableSubnetworksResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ListUsableSubnetworksResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::UsableSubnetworkSecondaryRange* Arena::CreateMaybeMessage< ::google::container::v1::UsableSubnetworkSecondaryRange >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::UsableSubnetworkSecondaryRange >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::UsableSubnetwork* Arena::CreateMaybeMessage< ::google::container::v1::UsableSubnetwork >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::UsableSubnetwork >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination* Arena::CreateMaybeMessage< ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ResourceUsageExportConfig_BigQueryDestination >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig* Arena::CreateMaybeMessage< ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ResourceUsageExportConfig_ConsumptionMeteringConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ResourceUsageExportConfig* Arena::CreateMaybeMessage< ::google::container::v1::ResourceUsageExportConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ResourceUsageExportConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::VerticalPodAutoscaling* Arena::CreateMaybeMessage< ::google::container::v1::VerticalPodAutoscaling >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::VerticalPodAutoscaling >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::DefaultSnatStatus* Arena::CreateMaybeMessage< ::google::container::v1::DefaultSnatStatus >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::DefaultSnatStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1::ShieldedNodes* Arena::CreateMaybeMessage< ::google::container::v1::ShieldedNodes >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1::ShieldedNodes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
