// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1alpha1/cluster_service.proto

#include "google/container/v1alpha1/cluster_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AcceleratorConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientCertificateConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HttpLoadBalancing_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IPAllocationPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KubernetesDashboard_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NetworkPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodeTaint_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Operation_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PodSecurityPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_NodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_AddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_ClusterUpdate_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_NodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Cluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto;
namespace google {
namespace container {
namespace v1alpha1 {
class NodeConfig_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig_MetadataEntry_DoNotUse> _instance;
} _NodeConfig_MetadataEntry_DoNotUse_default_instance_;
class NodeConfig_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig_LabelsEntry_DoNotUse> _instance;
} _NodeConfig_LabelsEntry_DoNotUse_default_instance_;
class NodeConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig> _instance;
} _NodeConfig_default_instance_;
class NodeTaintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeTaint> _instance;
} _NodeTaint_default_instance_;
class MasterAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuth> _instance;
} _MasterAuth_default_instance_;
class ClientCertificateConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientCertificateConfig> _instance;
} _ClientCertificateConfig_default_instance_;
class AddonsConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddonsConfig> _instance;
} _AddonsConfig_default_instance_;
class HttpLoadBalancingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpLoadBalancing> _instance;
} _HttpLoadBalancing_default_instance_;
class HorizontalPodAutoscalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HorizontalPodAutoscaling> _instance;
} _HorizontalPodAutoscaling_default_instance_;
class KubernetesDashboardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KubernetesDashboard> _instance;
} _KubernetesDashboard_default_instance_;
class NetworkPolicyConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkPolicyConfig> _instance;
} _NetworkPolicyConfig_default_instance_;
class MasterAuthorizedNetworksConfig_CidrBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuthorizedNetworksConfig_CidrBlock> _instance;
} _MasterAuthorizedNetworksConfig_CidrBlock_default_instance_;
class MasterAuthorizedNetworksConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuthorizedNetworksConfig> _instance;
} _MasterAuthorizedNetworksConfig_default_instance_;
class NetworkPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkPolicy> _instance;
} _NetworkPolicy_default_instance_;
class IPAllocationPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IPAllocationPolicy> _instance;
} _IPAllocationPolicy_default_instance_;
class PodSecurityPolicyConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSecurityPolicyConfig> _instance;
} _PodSecurityPolicyConfig_default_instance_;
class ClusterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster> _instance;
} _Cluster_default_instance_;
class ClusterUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterUpdate> _instance;
} _ClusterUpdate_default_instance_;
class OperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Operation> _instance;
} _Operation_default_instance_;
class CreateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterRequest> _instance;
} _CreateClusterRequest_default_instance_;
class GetClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetClusterRequest> _instance;
} _GetClusterRequest_default_instance_;
class UpdateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterRequest> _instance;
} _UpdateClusterRequest_default_instance_;
class UpdateNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateNodePoolRequest> _instance;
} _UpdateNodePoolRequest_default_instance_;
class SetNodePoolAutoscalingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolAutoscalingRequest> _instance;
} _SetNodePoolAutoscalingRequest_default_instance_;
class SetLoggingServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLoggingServiceRequest> _instance;
} _SetLoggingServiceRequest_default_instance_;
class SetMonitoringServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMonitoringServiceRequest> _instance;
} _SetMonitoringServiceRequest_default_instance_;
class SetAddonsConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetAddonsConfigRequest> _instance;
} _SetAddonsConfigRequest_default_instance_;
class SetLocationsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLocationsRequest> _instance;
} _SetLocationsRequest_default_instance_;
class UpdateMasterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateMasterRequest> _instance;
} _UpdateMasterRequest_default_instance_;
class SetMasterAuthRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMasterAuthRequest> _instance;
} _SetMasterAuthRequest_default_instance_;
class DeleteClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterRequest> _instance;
} _DeleteClusterRequest_default_instance_;
class ListClustersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersRequest> _instance;
} _ListClustersRequest_default_instance_;
class ListClustersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersResponse> _instance;
} _ListClustersResponse_default_instance_;
class GetOperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOperationRequest> _instance;
} _GetOperationRequest_default_instance_;
class ListOperationsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOperationsRequest> _instance;
} _ListOperationsRequest_default_instance_;
class CancelOperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelOperationRequest> _instance;
} _CancelOperationRequest_default_instance_;
class ListOperationsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOperationsResponse> _instance;
} _ListOperationsResponse_default_instance_;
class GetServerConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServerConfigRequest> _instance;
} _GetServerConfigRequest_default_instance_;
class ServerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerConfig> _instance;
} _ServerConfig_default_instance_;
class CreateNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNodePoolRequest> _instance;
} _CreateNodePoolRequest_default_instance_;
class DeleteNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteNodePoolRequest> _instance;
} _DeleteNodePoolRequest_default_instance_;
class ListNodePoolsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNodePoolsRequest> _instance;
} _ListNodePoolsRequest_default_instance_;
class GetNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNodePoolRequest> _instance;
} _GetNodePoolRequest_default_instance_;
class NodePoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodePool> _instance;
} _NodePool_default_instance_;
class NodeManagementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeManagement> _instance;
} _NodeManagement_default_instance_;
class AutoUpgradeOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoUpgradeOptions> _instance;
} _AutoUpgradeOptions_default_instance_;
class MaintenancePolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaintenancePolicy> _instance;
} _MaintenancePolicy_default_instance_;
class MaintenanceWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaintenanceWindow> _instance;
  const ::google::container::v1alpha1::DailyMaintenanceWindow* daily_maintenance_window_;
} _MaintenanceWindow_default_instance_;
class DailyMaintenanceWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DailyMaintenanceWindow> _instance;
} _DailyMaintenanceWindow_default_instance_;
class SetNodePoolManagementRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolManagementRequest> _instance;
} _SetNodePoolManagementRequest_default_instance_;
class SetNodePoolSizeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolSizeRequest> _instance;
} _SetNodePoolSizeRequest_default_instance_;
class RollbackNodePoolUpgradeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollbackNodePoolUpgradeRequest> _instance;
} _RollbackNodePoolUpgradeRequest_default_instance_;
class ListNodePoolsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNodePoolsResponse> _instance;
} _ListNodePoolsResponse_default_instance_;
class NodePoolAutoscalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodePoolAutoscaling> _instance;
} _NodePoolAutoscaling_default_instance_;
class SetLabelsRequest_ResourceLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> _instance;
} _SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_;
class SetLabelsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLabelsRequest> _instance;
} _SetLabelsRequest_default_instance_;
class SetLegacyAbacRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLegacyAbacRequest> _instance;
} _SetLegacyAbacRequest_default_instance_;
class StartIPRotationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartIPRotationRequest> _instance;
} _StartIPRotationRequest_default_instance_;
class CompleteIPRotationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteIPRotationRequest> _instance;
} _CompleteIPRotationRequest_default_instance_;
class AcceleratorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AcceleratorConfig> _instance;
} _AcceleratorConfig_default_instance_;
class SetNetworkPolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNetworkPolicyRequest> _instance;
} _SetNetworkPolicyRequest_default_instance_;
class SetMaintenancePolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMaintenancePolicyRequest> _instance;
} _SetMaintenancePolicyRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace container
}  // namespace google
static void InitDefaultsNodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NodeConfig_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse();
  }
  ::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NodeConfig_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse();
  }
  ::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NodeConfig_default_instance_;
    new (ptr) ::google::container::v1alpha1::NodeConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::NodeConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_NodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsNodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_AcceleratorConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodeTaint_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsNodeTaint_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NodeTaint_default_instance_;
    new (ptr) ::google::container::v1alpha1::NodeTaint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::NodeTaint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeTaint_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeTaint_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_MasterAuth_default_instance_;
    new (ptr) ::google::container::v1alpha1::MasterAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::MasterAuth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_ClientCertificateConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsClientCertificateConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ClientCertificateConfig_default_instance_;
    new (ptr) ::google::container::v1alpha1::ClientCertificateConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ClientCertificateConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientCertificateConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientCertificateConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsAddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_AddonsConfig_default_instance_;
    new (ptr) ::google::container::v1alpha1::AddonsConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::AddonsConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_AddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsAddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_HttpLoadBalancing_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_KubernetesDashboard_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsHttpLoadBalancing_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_HttpLoadBalancing_default_instance_;
    new (ptr) ::google::container::v1alpha1::HttpLoadBalancing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::HttpLoadBalancing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HttpLoadBalancing_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHttpLoadBalancing_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsHorizontalPodAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_HorizontalPodAutoscaling_default_instance_;
    new (ptr) ::google::container::v1alpha1::HorizontalPodAutoscaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::HorizontalPodAutoscaling::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHorizontalPodAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsKubernetesDashboard_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_KubernetesDashboard_default_instance_;
    new (ptr) ::google::container::v1alpha1::KubernetesDashboard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::KubernetesDashboard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KubernetesDashboard_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKubernetesDashboard_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNetworkPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NetworkPolicyConfig_default_instance_;
    new (ptr) ::google::container::v1alpha1::NetworkPolicyConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::NetworkPolicyConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNetworkPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_MasterAuthorizedNetworksConfig_CidrBlock_default_instance_;
    new (ptr) ::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_MasterAuthorizedNetworksConfig_default_instance_;
    new (ptr) ::google::container::v1alpha1::MasterAuthorizedNetworksConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::MasterAuthorizedNetworksConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsNetworkPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NetworkPolicy_default_instance_;
    new (ptr) ::google::container::v1alpha1::NetworkPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::NetworkPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NetworkPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNetworkPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsIPAllocationPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_IPAllocationPolicy_default_instance_;
    new (ptr) ::google::container::v1alpha1::IPAllocationPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::IPAllocationPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IPAllocationPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIPAllocationPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsPodSecurityPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_PodSecurityPolicyConfig_default_instance_;
    new (ptr) ::google::container::v1alpha1::PodSecurityPolicyConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::PodSecurityPolicyConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PodSecurityPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPodSecurityPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_Cluster_default_instance_;
    new (ptr) ::google::container::v1alpha1::Cluster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::Cluster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Cluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsCluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_MasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_AddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_NetworkPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_IPAllocationPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_MaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_PodSecurityPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsClusterUpdate_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ClusterUpdate_default_instance_;
    new (ptr) ::google::container::v1alpha1::ClusterUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ClusterUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ClusterUpdate_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsClusterUpdate_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_AddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_PodSecurityPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsOperation_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_Operation_default_instance_;
    new (ptr) ::google::container::v1alpha1::Operation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::Operation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Operation_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperation_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCreateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_CreateClusterRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::CreateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::CreateClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_Cluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsGetClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_GetClusterRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::GetClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::GetClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsUpdateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_UpdateClusterRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::UpdateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::UpdateClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_ClusterUpdate_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsUpdateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_UpdateNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::UpdateNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::UpdateNodePoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetNodePoolAutoscalingRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetNodePoolAutoscalingRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetNodePoolAutoscalingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetNodePoolAutoscalingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetNodePoolAutoscalingRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetNodePoolAutoscalingRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetLoggingServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetLoggingServiceRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetLoggingServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetLoggingServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetLoggingServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetLoggingServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetMonitoringServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetMonitoringServiceRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetMonitoringServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetMonitoringServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetMonitoringServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetMonitoringServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetAddonsConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetAddonsConfigRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetAddonsConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetAddonsConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetAddonsConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetAddonsConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_AddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetLocationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetLocationsRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetLocationsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetLocationsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetLocationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetLocationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsUpdateMasterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_UpdateMasterRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::UpdateMasterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::UpdateMasterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateMasterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateMasterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetMasterAuthRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetMasterAuthRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetMasterAuthRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetMasterAuthRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetMasterAuthRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetMasterAuthRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_MasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsDeleteClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_DeleteClusterRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::DeleteClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::DeleteClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListClustersRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ListClustersRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::ListClustersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ListClustersRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListClustersRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListClustersRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListClustersResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ListClustersResponse_default_instance_;
    new (ptr) ::google::container::v1alpha1::ListClustersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ListClustersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListClustersResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListClustersResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_Cluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsGetOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_GetOperationRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::GetOperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::GetOperationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListOperationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ListOperationsRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::ListOperationsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ListOperationsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListOperationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListOperationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCancelOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_CancelOperationRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::CancelOperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::CancelOperationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CancelOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancelOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListOperationsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ListOperationsResponse_default_instance_;
    new (ptr) ::google::container::v1alpha1::ListOperationsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ListOperationsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListOperationsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListOperationsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_Operation_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsGetServerConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_GetServerConfigRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::GetServerConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::GetServerConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetServerConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetServerConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsServerConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ServerConfig_default_instance_;
    new (ptr) ::google::container::v1alpha1::ServerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ServerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCreateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_CreateNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::CreateNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::CreateNodePoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsDeleteNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_DeleteNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::DeleteNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::DeleteNodePoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListNodePoolsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ListNodePoolsRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::ListNodePoolsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ListNodePoolsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListNodePoolsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListNodePoolsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsGetNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_GetNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::GetNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::GetNodePoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsNodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NodePool_default_instance_;
    new (ptr) ::google::container::v1alpha1::NodePool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::NodePool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_NodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsNodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,
      &scc_info_NodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsNodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NodeManagement_default_instance_;
    new (ptr) ::google::container::v1alpha1::NodeManagement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::NodeManagement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsAutoUpgradeOptions_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_AutoUpgradeOptions_default_instance_;
    new (ptr) ::google::container::v1alpha1::AutoUpgradeOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::AutoUpgradeOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAutoUpgradeOptions_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsMaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_MaintenancePolicy_default_instance_;
    new (ptr) ::google::container::v1alpha1::MaintenancePolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::MaintenancePolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_MaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_MaintenanceWindow_default_instance_;
    new (ptr) ::google::container::v1alpha1::MaintenanceWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::MaintenanceWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsDailyMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_DailyMaintenanceWindow_default_instance_;
    new (ptr) ::google::container::v1alpha1::DailyMaintenanceWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::DailyMaintenanceWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDailyMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetNodePoolManagementRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetNodePoolManagementRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetNodePoolManagementRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetNodePoolManagementRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetNodePoolManagementRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetNodePoolManagementRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetNodePoolSizeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetNodePoolSizeRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetNodePoolSizeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetNodePoolSizeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetNodePoolSizeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetNodePoolSizeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsRollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_RollbackNodePoolUpgradeRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::RollbackNodePoolUpgradeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::RollbackNodePoolUpgradeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsListNodePoolsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_ListNodePoolsResponse_default_instance_;
    new (ptr) ::google::container::v1alpha1::ListNodePoolsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::ListNodePoolsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListNodePoolsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListNodePoolsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_NodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsNodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_NodePoolAutoscaling_default_instance_;
    new (ptr) ::google::container::v1alpha1::NodePoolAutoscaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::NodePoolAutoscaling::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse();
  }
  ::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetLabelsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetLabelsRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetLabelsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetLabelsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetLabelsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetLabelsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetLegacyAbacRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetLegacyAbacRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetLegacyAbacRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetLegacyAbacRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetLegacyAbacRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetLegacyAbacRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsStartIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_StartIPRotationRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::StartIPRotationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::StartIPRotationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StartIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStartIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsCompleteIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_CompleteIPRotationRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::CompleteIPRotationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::CompleteIPRotationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompleteIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompleteIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsAcceleratorConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_AcceleratorConfig_default_instance_;
    new (ptr) ::google::container::v1alpha1::AcceleratorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::AcceleratorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AcceleratorConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAcceleratorConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {}};

static void InitDefaultsSetNetworkPolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetNetworkPolicyRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetNetworkPolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetNetworkPolicyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetNetworkPolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetNetworkPolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_NetworkPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

static void InitDefaultsSetMaintenancePolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::container::v1alpha1::_SetMaintenancePolicyRequest_default_instance_;
    new (ptr) ::google::container::v1alpha1::SetMaintenancePolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1alpha1::SetMaintenancePolicyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetMaintenancePolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetMaintenancePolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto}, {
      &scc_info_MaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base,}};

void InitDefaults_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_NodeConfig_MetadataEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeConfig_LabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeTaint_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientCertificateConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HttpLoadBalancing_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KubernetesDashboard_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetworkPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IPAllocationPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PodSecurityPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterUpdate_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Operation_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNodePoolAutoscalingRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLoggingServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetMonitoringServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetAddonsConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLocationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateMasterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetMasterAuthRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListClustersRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListClustersResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOperationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOperationsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetServerConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNodePoolsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNodePoolManagementRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNodePoolSizeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNodePoolsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLabelsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetLegacyAbacRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompleteIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AcceleratorConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNetworkPolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetMaintenancePolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[62];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[7];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, machine_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, disk_size_gb_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, oauth_scopes_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, service_account_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, metadata_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, image_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, labels_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, local_ssd_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, tags_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, preemptible_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, accelerators_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, min_cpu_platform_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeConfig, taints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeTaint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeTaint, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeTaint, value_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeTaint, effect_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuth, username_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuth, password_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuth, client_certificate_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuth, cluster_ca_certificate_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuth, client_certificate_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuth, client_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClientCertificateConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClientCertificateConfig, issue_client_certificate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AddonsConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AddonsConfig, http_load_balancing_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AddonsConfig, horizontal_pod_autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AddonsConfig, kubernetes_dashboard_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AddonsConfig, network_policy_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::HttpLoadBalancing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::HttpLoadBalancing, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::HorizontalPodAutoscaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::HorizontalPodAutoscaling, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::KubernetesDashboard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::KubernetesDashboard, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NetworkPolicyConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NetworkPolicyConfig, disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock, cidr_block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuthorizedNetworksConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuthorizedNetworksConfig, enabled_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MasterAuthorizedNetworksConfig, cidr_blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NetworkPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NetworkPolicy, provider_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NetworkPolicy, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, use_ip_aliases_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, create_subnetwork_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, subnetwork_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, cluster_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, node_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, services_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, cluster_secondary_range_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, services_secondary_range_name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, cluster_ipv4_cidr_block_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, node_ipv4_cidr_block_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::IPAllocationPolicy, services_ipv4_cidr_block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::PodSecurityPolicyConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::PodSecurityPolicyConfig, enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, description_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, initial_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, node_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, master_auth_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, logging_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, monitoring_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, network_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, cluster_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, addons_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, subnetwork_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, node_pools_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, locations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, enable_kubernetes_alpha_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, network_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, ip_allocation_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, master_authorized_networks_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, maintenance_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, pod_security_policy_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, self_link_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, endpoint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, initial_cluster_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, current_master_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, current_node_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, status_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, status_message_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, node_ipv4_cidr_size_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, services_ipv4_cidr_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, instance_group_urls_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, current_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, expire_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Cluster, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_node_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_monitoring_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_addons_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_image_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_node_pool_autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_locations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_master_authorized_networks_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_pod_security_policy_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ClusterUpdate, desired_master_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, operation_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, status_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, detail_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, status_message_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, self_link_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, target_link_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, location_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, start_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::Operation, end_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateClusterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateClusterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateClusterRequest, cluster_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateClusterRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetClusterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetClusterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetClusterRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetClusterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateClusterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateClusterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateClusterRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateClusterRequest, update_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateClusterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateNodePoolRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateNodePoolRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateNodePoolRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateNodePoolRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateNodePoolRequest, node_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateNodePoolRequest, image_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateNodePoolRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolAutoscalingRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolAutoscalingRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolAutoscalingRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolAutoscalingRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolAutoscalingRequest, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolAutoscalingRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLoggingServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLoggingServiceRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLoggingServiceRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLoggingServiceRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLoggingServiceRequest, logging_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLoggingServiceRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMonitoringServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMonitoringServiceRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMonitoringServiceRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMonitoringServiceRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMonitoringServiceRequest, monitoring_service_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMonitoringServiceRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetAddonsConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetAddonsConfigRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetAddonsConfigRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetAddonsConfigRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetAddonsConfigRequest, addons_config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetAddonsConfigRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLocationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLocationsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLocationsRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLocationsRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLocationsRequest, locations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLocationsRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateMasterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateMasterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateMasterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateMasterRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateMasterRequest, master_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::UpdateMasterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMasterAuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMasterAuthRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMasterAuthRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMasterAuthRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMasterAuthRequest, action_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMasterAuthRequest, update_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMasterAuthRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteClusterRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteClusterRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteClusterRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteClusterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListClustersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListClustersRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListClustersRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListClustersRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListClustersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListClustersResponse, clusters_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListClustersResponse, missing_zones_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetOperationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetOperationRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetOperationRequest, operation_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetOperationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListOperationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListOperationsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListOperationsRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListOperationsRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CancelOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CancelOperationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CancelOperationRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CancelOperationRequest, operation_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CancelOperationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListOperationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListOperationsResponse, operations_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListOperationsResponse, missing_zones_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetServerConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetServerConfigRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetServerConfigRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetServerConfigRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ServerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ServerConfig, default_cluster_version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ServerConfig, valid_node_versions_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ServerConfig, default_image_type_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ServerConfig, valid_image_types_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ServerConfig, valid_master_versions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateNodePoolRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateNodePoolRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateNodePoolRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateNodePoolRequest, node_pool_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CreateNodePoolRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteNodePoolRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteNodePoolRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteNodePoolRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteNodePoolRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DeleteNodePoolRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListNodePoolsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListNodePoolsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListNodePoolsRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListNodePoolsRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListNodePoolsRequest, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetNodePoolRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetNodePoolRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetNodePoolRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetNodePoolRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::GetNodePoolRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, name_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, config_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, initial_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, management_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, self_link_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, version_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, instance_group_urls_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, status_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePool, status_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeManagement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeManagement, auto_upgrade_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeManagement, auto_repair_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodeManagement, upgrade_options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AutoUpgradeOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AutoUpgradeOptions, auto_upgrade_start_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AutoUpgradeOptions, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MaintenancePolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MaintenancePolicy, window_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MaintenanceWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MaintenanceWindow, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::container::v1alpha1::MaintenanceWindowDefaultTypeInternal, daily_maintenance_window_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::MaintenanceWindow, policy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DailyMaintenanceWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DailyMaintenanceWindow, start_time_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::DailyMaintenanceWindow, duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolManagementRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolManagementRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolManagementRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolManagementRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolManagementRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolManagementRequest, management_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolManagementRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolSizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolSizeRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolSizeRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolSizeRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolSizeRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolSizeRequest, node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNodePoolSizeRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::RollbackNodePoolUpgradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::RollbackNodePoolUpgradeRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::RollbackNodePoolUpgradeRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::RollbackNodePoolUpgradeRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::RollbackNodePoolUpgradeRequest, node_pool_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::RollbackNodePoolUpgradeRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListNodePoolsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::ListNodePoolsResponse, node_pools_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePoolAutoscaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePoolAutoscaling, enabled_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePoolAutoscaling, min_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::NodePoolAutoscaling, max_node_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest, resource_labels_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest, label_fingerprint_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLabelsRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLegacyAbacRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLegacyAbacRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLegacyAbacRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLegacyAbacRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLegacyAbacRequest, enabled_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetLegacyAbacRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::StartIPRotationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::StartIPRotationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::StartIPRotationRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::StartIPRotationRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::StartIPRotationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CompleteIPRotationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CompleteIPRotationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CompleteIPRotationRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CompleteIPRotationRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::CompleteIPRotationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AcceleratorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AcceleratorConfig, accelerator_count_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::AcceleratorConfig, accelerator_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNetworkPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNetworkPolicyRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNetworkPolicyRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNetworkPolicyRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNetworkPolicyRequest, network_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetNetworkPolicyRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMaintenancePolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMaintenancePolicyRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMaintenancePolicyRequest, zone_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMaintenancePolicyRequest, cluster_id_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMaintenancePolicyRequest, maintenance_policy_),
  PROTOBUF_FIELD_OFFSET(::google::container::v1alpha1::SetMaintenancePolicyRequest, name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse)},
  { 9, 16, sizeof(::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse)},
  { 18, -1, sizeof(::google::container::v1alpha1::NodeConfig)},
  { 36, -1, sizeof(::google::container::v1alpha1::NodeTaint)},
  { 44, -1, sizeof(::google::container::v1alpha1::MasterAuth)},
  { 55, -1, sizeof(::google::container::v1alpha1::ClientCertificateConfig)},
  { 61, -1, sizeof(::google::container::v1alpha1::AddonsConfig)},
  { 70, -1, sizeof(::google::container::v1alpha1::HttpLoadBalancing)},
  { 76, -1, sizeof(::google::container::v1alpha1::HorizontalPodAutoscaling)},
  { 82, -1, sizeof(::google::container::v1alpha1::KubernetesDashboard)},
  { 88, -1, sizeof(::google::container::v1alpha1::NetworkPolicyConfig)},
  { 94, -1, sizeof(::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock)},
  { 101, -1, sizeof(::google::container::v1alpha1::MasterAuthorizedNetworksConfig)},
  { 108, -1, sizeof(::google::container::v1alpha1::NetworkPolicy)},
  { 115, -1, sizeof(::google::container::v1alpha1::IPAllocationPolicy)},
  { 131, -1, sizeof(::google::container::v1alpha1::PodSecurityPolicyConfig)},
  { 137, -1, sizeof(::google::container::v1alpha1::Cluster)},
  { 176, -1, sizeof(::google::container::v1alpha1::ClusterUpdate)},
  { 191, -1, sizeof(::google::container::v1alpha1::Operation)},
  { 207, -1, sizeof(::google::container::v1alpha1::CreateClusterRequest)},
  { 216, -1, sizeof(::google::container::v1alpha1::GetClusterRequest)},
  { 225, -1, sizeof(::google::container::v1alpha1::UpdateClusterRequest)},
  { 235, -1, sizeof(::google::container::v1alpha1::UpdateNodePoolRequest)},
  { 247, -1, sizeof(::google::container::v1alpha1::SetNodePoolAutoscalingRequest)},
  { 258, -1, sizeof(::google::container::v1alpha1::SetLoggingServiceRequest)},
  { 268, -1, sizeof(::google::container::v1alpha1::SetMonitoringServiceRequest)},
  { 278, -1, sizeof(::google::container::v1alpha1::SetAddonsConfigRequest)},
  { 288, -1, sizeof(::google::container::v1alpha1::SetLocationsRequest)},
  { 298, -1, sizeof(::google::container::v1alpha1::UpdateMasterRequest)},
  { 308, -1, sizeof(::google::container::v1alpha1::SetMasterAuthRequest)},
  { 319, -1, sizeof(::google::container::v1alpha1::DeleteClusterRequest)},
  { 328, -1, sizeof(::google::container::v1alpha1::ListClustersRequest)},
  { 336, -1, sizeof(::google::container::v1alpha1::ListClustersResponse)},
  { 343, -1, sizeof(::google::container::v1alpha1::GetOperationRequest)},
  { 352, -1, sizeof(::google::container::v1alpha1::ListOperationsRequest)},
  { 360, -1, sizeof(::google::container::v1alpha1::CancelOperationRequest)},
  { 369, -1, sizeof(::google::container::v1alpha1::ListOperationsResponse)},
  { 376, -1, sizeof(::google::container::v1alpha1::GetServerConfigRequest)},
  { 384, -1, sizeof(::google::container::v1alpha1::ServerConfig)},
  { 394, -1, sizeof(::google::container::v1alpha1::CreateNodePoolRequest)},
  { 404, -1, sizeof(::google::container::v1alpha1::DeleteNodePoolRequest)},
  { 414, -1, sizeof(::google::container::v1alpha1::ListNodePoolsRequest)},
  { 423, -1, sizeof(::google::container::v1alpha1::GetNodePoolRequest)},
  { 433, -1, sizeof(::google::container::v1alpha1::NodePool)},
  { 448, -1, sizeof(::google::container::v1alpha1::NodeManagement)},
  { 456, -1, sizeof(::google::container::v1alpha1::AutoUpgradeOptions)},
  { 463, -1, sizeof(::google::container::v1alpha1::MaintenancePolicy)},
  { 469, -1, sizeof(::google::container::v1alpha1::MaintenanceWindow)},
  { 476, -1, sizeof(::google::container::v1alpha1::DailyMaintenanceWindow)},
  { 483, -1, sizeof(::google::container::v1alpha1::SetNodePoolManagementRequest)},
  { 494, -1, sizeof(::google::container::v1alpha1::SetNodePoolSizeRequest)},
  { 505, -1, sizeof(::google::container::v1alpha1::RollbackNodePoolUpgradeRequest)},
  { 515, -1, sizeof(::google::container::v1alpha1::ListNodePoolsResponse)},
  { 521, -1, sizeof(::google::container::v1alpha1::NodePoolAutoscaling)},
  { 529, 536, sizeof(::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse)},
  { 538, -1, sizeof(::google::container::v1alpha1::SetLabelsRequest)},
  { 549, -1, sizeof(::google::container::v1alpha1::SetLegacyAbacRequest)},
  { 559, -1, sizeof(::google::container::v1alpha1::StartIPRotationRequest)},
  { 568, -1, sizeof(::google::container::v1alpha1::CompleteIPRotationRequest)},
  { 577, -1, sizeof(::google::container::v1alpha1::AcceleratorConfig)},
  { 584, -1, sizeof(::google::container::v1alpha1::SetNetworkPolicyRequest)},
  { 594, -1, sizeof(::google::container::v1alpha1::SetMaintenancePolicyRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NodeConfig_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NodeConfig_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NodeConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NodeTaint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_MasterAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ClientCertificateConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_AddonsConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_HttpLoadBalancing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_HorizontalPodAutoscaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_KubernetesDashboard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NetworkPolicyConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_MasterAuthorizedNetworksConfig_CidrBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_MasterAuthorizedNetworksConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NetworkPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_IPAllocationPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_PodSecurityPolicyConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_Cluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ClusterUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_Operation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_CreateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_GetClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_UpdateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_UpdateNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetNodePoolAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetLoggingServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetMonitoringServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetAddonsConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetLocationsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_UpdateMasterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetMasterAuthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_DeleteClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ListClustersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ListClustersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_GetOperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ListOperationsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_CancelOperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ListOperationsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_GetServerConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ServerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_CreateNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_DeleteNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ListNodePoolsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_GetNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NodePool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NodeManagement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_AutoUpgradeOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_MaintenancePolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_MaintenanceWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_DailyMaintenanceWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetNodePoolManagementRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetNodePoolSizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_RollbackNodePoolUpgradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_ListNodePoolsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_NodePoolAutoscaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetLabelsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetLegacyAbacRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_StartIPRotationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_CompleteIPRotationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_AcceleratorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetNetworkPolicyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1alpha1::_SetMaintenancePolicyRequest_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto = {
  {}, AddDescriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto, "google/container/v1alpha1/cluster_service.proto", schemas,
  file_default_instances, TableStruct_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto::offsets,
  file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto, 62, file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto, file_level_service_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto,
};

const char descriptor_table_protodef_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[] =
  "\n/google/container/v1alpha1/cluster_serv"
  "ice.proto\022\031google.container.v1alpha1\032\034go"
  "ogle/api/annotations.proto\032\033google/proto"
  "buf/empty.proto\"\265\004\n\nNodeConfig\022\024\n\014machin"
  "e_type\030\001 \001(\t\022\024\n\014disk_size_gb\030\002 \001(\005\022\024\n\014oa"
  "uth_scopes\030\003 \003(\t\022\027\n\017service_account\030\t \001("
  "\t\022E\n\010metadata\030\004 \003(\01323.google.container.v"
  "1alpha1.NodeConfig.MetadataEntry\022\022\n\nimag"
  "e_type\030\005 \001(\t\022A\n\006labels\030\006 \003(\01321.google.co"
  "ntainer.v1alpha1.NodeConfig.LabelsEntry\022"
  "\027\n\017local_ssd_count\030\007 \001(\005\022\014\n\004tags\030\010 \003(\t\022\023"
  "\n\013preemptible\030\n \001(\010\022B\n\014accelerators\030\013 \003("
  "\0132,.google.container.v1alpha1.Accelerato"
  "rConfig\022\030\n\020min_cpu_platform\030\r \001(\t\0224\n\006tai"
  "nts\030\017 \003(\0132$.google.container.v1alpha1.No"
  "deTaint\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
  "\005value\030\002 \001(\t:\0028\001\032-\n\013LabelsEntry\022\013\n\003key\030\001"
  " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\277\001\n\tNodeTaint\022\013\n"
  "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022;\n\006effect\030\003 \001("
  "\0162+.google.container.v1alpha1.NodeTaint."
  "Effect\"Y\n\006Effect\022\026\n\022EFFECT_UNSPECIFIED\020\000"
  "\022\017\n\013NO_SCHEDULE\020\001\022\026\n\022PREFER_NO_SCHEDULE\020"
  "\002\022\016\n\nNO_EXECUTE\020\003\"\327\001\n\nMasterAuth\022\020\n\010user"
  "name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022U\n\031client_c"
  "ertificate_config\030\003 \001(\01322.google.contain"
  "er.v1alpha1.ClientCertificateConfig\022\036\n\026c"
  "luster_ca_certificate\030d \001(\t\022\032\n\022client_ce"
  "rtificate\030e \001(\t\022\022\n\nclient_key\030f \001(\t\";\n\027C"
  "lientCertificateConfig\022 \n\030issue_client_c"
  "ertificate\030\001 \001(\010\"\317\002\n\014AddonsConfig\022I\n\023htt"
  "p_load_balancing\030\001 \001(\0132,.google.containe"
  "r.v1alpha1.HttpLoadBalancing\022W\n\032horizont"
  "al_pod_autoscaling\030\002 \001(\01323.google.contai"
  "ner.v1alpha1.HorizontalPodAutoscaling\022L\n"
  "\024kubernetes_dashboard\030\003 \001(\0132..google.con"
  "tainer.v1alpha1.KubernetesDashboard\022M\n\025n"
  "etwork_policy_config\030\004 \001(\0132..google.cont"
  "ainer.v1alpha1.NetworkPolicyConfig\"%\n\021Ht"
  "tpLoadBalancing\022\020\n\010disabled\030\001 \001(\010\",\n\030Hor"
  "izontalPodAutoscaling\022\020\n\010disabled\030\001 \001(\010\""
  "\'\n\023KubernetesDashboard\022\020\n\010disabled\030\001 \001(\010"
  "\"\'\n\023NetworkPolicyConfig\022\020\n\010disabled\030\001 \001("
  "\010\"\302\001\n\036MasterAuthorizedNetworksConfig\022\017\n\007"
  "enabled\030\001 \001(\010\022X\n\013cidr_blocks\030\002 \003(\0132C.goo"
  "gle.container.v1alpha1.MasterAuthorizedN"
  "etworksConfig.CidrBlock\0325\n\tCidrBlock\022\024\n\014"
  "display_name\030\001 \001(\t\022\022\n\ncidr_block\030\002 \001(\t\"\227"
  "\001\n\rNetworkPolicy\022C\n\010provider\030\001 \001(\01621.goo"
  "gle.container.v1alpha1.NetworkPolicy.Pro"
  "vider\022\017\n\007enabled\030\002 \001(\010\"0\n\010Provider\022\030\n\024PR"
  "OVIDER_UNSPECIFIED\020\000\022\n\n\006CALICO\020\001\"\335\002\n\022IPA"
  "llocationPolicy\022\026\n\016use_ip_aliases\030\001 \001(\010\022"
  "\031\n\021create_subnetwork\030\002 \001(\010\022\027\n\017subnetwork"
  "_name\030\003 \001(\t\022\031\n\021cluster_ipv4_cidr\030\004 \001(\t\022\026"
  "\n\016node_ipv4_cidr\030\005 \001(\t\022\032\n\022services_ipv4_"
  "cidr\030\006 \001(\t\022$\n\034cluster_secondary_range_na"
  "me\030\007 \001(\t\022%\n\035services_secondary_range_nam"
  "e\030\010 \001(\t\022\037\n\027cluster_ipv4_cidr_block\030\t \001(\t"
  "\022\034\n\024node_ipv4_cidr_block\030\n \001(\t\022 \n\030servic"
  "es_ipv4_cidr_block\030\013 \001(\t\"*\n\027PodSecurityP"
  "olicyConfig\022\017\n\007enabled\030\001 \001(\010\"\367\n\n\007Cluster"
  "\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022\032\n\022i"
  "nitial_node_count\030\003 \001(\005\022:\n\013node_config\030\004"
  " \001(\0132%.google.container.v1alpha1.NodeCon"
  "fig\022:\n\013master_auth\030\005 \001(\0132%.google.contai"
  "ner.v1alpha1.MasterAuth\022\027\n\017logging_servi"
  "ce\030\006 \001(\t\022\032\n\022monitoring_service\030\007 \001(\t\022\017\n\007"
  "network\030\010 \001(\t\022\031\n\021cluster_ipv4_cidr\030\t \001(\t"
  "\022>\n\raddons_config\030\n \001(\0132\'.google.contain"
  "er.v1alpha1.AddonsConfig\022\022\n\nsubnetwork\030\013"
  " \001(\t\0227\n\nnode_pools\030\014 \003(\0132#.google.contai"
  "ner.v1alpha1.NodePool\022\021\n\tlocations\030\r \003(\t"
  "\022\037\n\027enable_kubernetes_alpha\030\016 \001(\010\022@\n\016net"
  "work_policy\030\023 \001(\0132(.google.container.v1a"
  "lpha1.NetworkPolicy\022K\n\024ip_allocation_pol"
  "icy\030\024 \001(\0132-.google.container.v1alpha1.IP"
  "AllocationPolicy\022d\n!master_authorized_ne"
  "tworks_config\030\026 \001(\01329.google.container.v"
  "1alpha1.MasterAuthorizedNetworksConfig\022H"
  "\n\022maintenance_policy\030\027 \001(\0132,.google.cont"
  "ainer.v1alpha1.MaintenancePolicy\022V\n\032pod_"
  "security_policy_config\030\031 \001(\01322.google.co"
  "ntainer.v1alpha1.PodSecurityPolicyConfig"
  "\022\021\n\tself_link\030d \001(\t\022\014\n\004zone\030e \001(\t\022\020\n\010end"
  "point\030f \001(\t\022\037\n\027initial_cluster_version\030g"
  " \001(\t\022\036\n\026current_master_version\030h \001(\t\022\034\n\024"
  "current_node_version\030i \001(\t\022\023\n\013create_tim"
  "e\030j \001(\t\0229\n\006status\030k \001(\0162).google.contain"
  "er.v1alpha1.Cluster.Status\022\026\n\016status_mes"
  "sage\030l \001(\t\022\033\n\023node_ipv4_cidr_size\030m \001(\005\022"
  "\032\n\022services_ipv4_cidr\030n \001(\t\022\033\n\023instance_"
  "group_urls\030o \003(\t\022\032\n\022current_node_count\030p"
  " \001(\005\022\023\n\013expire_time\030q \001(\t\022\020\n\010location\030r "
  "\001(\t\"i\n\006Status\022\026\n\022STATUS_UNSPECIFIED\020\000\022\020\n"
  "\014PROVISIONING\020\001\022\013\n\007RUNNING\020\002\022\017\n\013RECONCIL"
  "ING\020\003\022\014\n\010STOPPING\020\004\022\t\n\005ERROR\020\005\"\263\004\n\rClust"
  "erUpdate\022\034\n\024desired_node_version\030\004 \001(\t\022\""
  "\n\032desired_monitoring_service\030\005 \001(\t\022F\n\025de"
  "sired_addons_config\030\006 \001(\0132\'.google.conta"
  "iner.v1alpha1.AddonsConfig\022\034\n\024desired_no"
  "de_pool_id\030\007 \001(\t\022\032\n\022desired_image_type\030\010"
  " \001(\t\022U\n\035desired_node_pool_autoscaling\030\t "
  "\001(\0132..google.container.v1alpha1.NodePool"
  "Autoscaling\022\031\n\021desired_locations\030\n \003(\t\022l"
  "\n)desired_master_authorized_networks_con"
  "fig\030\014 \001(\01329.google.container.v1alpha1.Ma"
  "sterAuthorizedNetworksConfig\022^\n\"desired_"
  "pod_security_policy_config\030\016 \001(\01322.googl"
  "e.container.v1alpha1.PodSecurityPolicyCo"
  "nfig\022\036\n\026desired_master_version\030d \001(\t\"\203\006\n"
  "\tOperation\022\014\n\004name\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022A"
  "\n\016operation_type\030\003 \001(\0162).google.containe"
  "r.v1alpha1.Operation.Type\022;\n\006status\030\004 \001("
  "\0162+.google.container.v1alpha1.Operation."
  "Status\022\016\n\006detail\030\010 \001(\t\022\026\n\016status_message"
  "\030\005 \001(\t\022\021\n\tself_link\030\006 \001(\t\022\023\n\013target_link"
  "\030\007 \001(\t\022\020\n\010location\030\t \001(\t\022\022\n\nstart_time\030\n"
  " \001(\t\022\020\n\010end_time\030\013 \001(\t\"R\n\006Status\022\026\n\022STAT"
  "US_UNSPECIFIED\020\000\022\013\n\007PENDING\020\001\022\013\n\007RUNNING"
  "\020\002\022\010\n\004DONE\020\003\022\014\n\010ABORTING\020\004\"\375\002\n\004Type\022\024\n\020T"
  "YPE_UNSPECIFIED\020\000\022\022\n\016CREATE_CLUSTER\020\001\022\022\n"
  "\016DELETE_CLUSTER\020\002\022\022\n\016UPGRADE_MASTER\020\003\022\021\n"
  "\rUPGRADE_NODES\020\004\022\022\n\016REPAIR_CLUSTER\020\005\022\022\n\016"
  "UPDATE_CLUSTER\020\006\022\024\n\020CREATE_NODE_POOL\020\007\022\024"
  "\n\020DELETE_NODE_POOL\020\010\022\034\n\030SET_NODE_POOL_MA"
  "NAGEMENT\020\t\022\025\n\021AUTO_REPAIR_NODES\020\n\022\026\n\022AUT"
  "O_UPGRADE_NODES\020\013\022\016\n\nSET_LABELS\020\014\022\023\n\017SET"
  "_MASTER_AUTH\020\r\022\026\n\022SET_NODE_POOL_SIZE\020\016\022\026"
  "\n\022SET_NETWORK_POLICY\020\017\022\032\n\026SET_MAINTENANC"
  "E_POLICY\020\020\"}\n\024CreateClusterRequest\022\022\n\npr"
  "oject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\0223\n\007cluster\030"
  "\003 \001(\0132\".google.container.v1alpha1.Cluste"
  "r\022\016\n\006parent\030\005 \001(\t\"W\n\021GetClusterRequest\022\022"
  "\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\nclus"
  "ter_id\030\003 \001(\t\022\014\n\004name\030\005 \001(\t\"\224\001\n\024UpdateClu"
  "sterRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030"
  "\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\0228\n\006update\030\004 \001("
  "\0132(.google.container.v1alpha1.ClusterUpd"
  "ate\022\014\n\004name\030\005 \001(\t\"\233\001\n\025UpdateNodePoolRequ"
  "est\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n"
  "\ncluster_id\030\003 \001(\t\022\024\n\014node_pool_id\030\004 \001(\t\022"
  "\024\n\014node_version\030\005 \001(\t\022\022\n\nimage_type\030\006 \001("
  "\t\022\014\n\004name\030\010 \001(\t\"\276\001\n\035SetNodePoolAutoscali"
  "ngRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 "
  "\001(\t\022\022\n\ncluster_id\030\003 \001(\t\022\024\n\014node_pool_id\030"
  "\004 \001(\t\022C\n\013autoscaling\030\005 \001(\0132..google.cont"
  "ainer.v1alpha1.NodePoolAutoscaling\022\014\n\004na"
  "me\030\006 \001(\t\"w\n\030SetLoggingServiceRequest\022\022\n\n"
  "project_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluste"
  "r_id\030\003 \001(\t\022\027\n\017logging_service\030\004 \001(\t\022\014\n\004n"
  "ame\030\005 \001(\t\"}\n\033SetMonitoringServiceRequest"
  "\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncl"
  "uster_id\030\003 \001(\t\022\032\n\022monitoring_service\030\004 \001"
  "(\t\022\014\n\004name\030\006 \001(\t\"\234\001\n\026SetAddonsConfigRequ"
  "est\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n"
  "\ncluster_id\030\003 \001(\t\022>\n\raddons_config\030\004 \001(\013"
  "2\'.google.container.v1alpha1.AddonsConfi"
  "g\022\014\n\004name\030\006 \001(\t\"l\n\023SetLocationsRequest\022\022"
  "\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\nclus"
  "ter_id\030\003 \001(\t\022\021\n\tlocations\030\004 \003(\t\022\014\n\004name\030"
  "\006 \001(\t\"q\n\023UpdateMasterRequest\022\022\n\nproject_"
  "id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001"
  "(\t\022\026\n\016master_version\030\004 \001(\t\022\014\n\004name\030\007 \001(\t"
  "\"\253\002\n\024SetMasterAuthRequest\022\022\n\nproject_id\030"
  "\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022"
  "F\n\006action\030\004 \001(\01626.google.container.v1alp"
  "ha1.SetMasterAuthRequest.Action\0225\n\006updat"
  "e\030\005 \001(\0132%.google.container.v1alpha1.Mast"
  "erAuth\022\014\n\004name\030\007 \001(\t\"P\n\006Action\022\013\n\007UNKNOW"
  "N\020\000\022\020\n\014SET_PASSWORD\020\001\022\025\n\021GENERATE_PASSWO"
  "RD\020\002\022\020\n\014SET_USERNAME\020\003\"Z\n\024DeleteClusterR"
  "equest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t"
  "\022\022\n\ncluster_id\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\"G\n\023Li"
  "stClustersRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n"
  "\004zone\030\002 \001(\t\022\016\n\006parent\030\004 \001(\t\"c\n\024ListClust"
  "ersResponse\0224\n\010clusters\030\001 \003(\0132\".google.c"
  "ontainer.v1alpha1.Cluster\022\025\n\rmissing_zon"
  "es\030\002 \003(\t\"[\n\023GetOperationRequest\022\022\n\nproje"
  "ct_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\024\n\014operation_i"
  "d\030\003 \001(\t\022\014\n\004name\030\005 \001(\t\"I\n\025ListOperationsR"
  "equest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t"
  "\022\016\n\006parent\030\004 \001(\t\"^\n\026CancelOperationReque"
  "st\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\024\n\014"
  "operation_id\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\"i\n\026List"
  "OperationsResponse\0228\n\noperations\030\001 \003(\0132$"
  ".google.container.v1alpha1.Operation\022\025\n\r"
  "missing_zones\030\002 \003(\t\"H\n\026GetServerConfigRe"
  "quest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022"
  "\014\n\004name\030\004 \001(\t\"\242\001\n\014ServerConfig\022\037\n\027defaul"
  "t_cluster_version\030\001 \001(\t\022\033\n\023valid_node_ve"
  "rsions\030\003 \003(\t\022\032\n\022default_image_type\030\004 \001(\t"
  "\022\031\n\021valid_image_types\030\005 \003(\t\022\035\n\025valid_mas"
  "ter_versions\030\006 \003(\t\"\225\001\n\025CreateNodePoolReq"
  "uest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022"
  "\n\ncluster_id\030\003 \001(\t\0226\n\tnode_pool\030\004 \001(\0132#."
  "google.container.v1alpha1.NodePool\022\016\n\006pa"
  "rent\030\006 \001(\t\"q\n\025DeleteNodePoolRequest\022\022\n\np"
  "roject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster"
  "_id\030\003 \001(\t\022\024\n\014node_pool_id\030\004 \001(\t\022\014\n\004name\030"
  "\006 \001(\t\"\\\n\024ListNodePoolsRequest\022\022\n\nproject"
  "_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 "
  "\001(\t\022\016\n\006parent\030\005 \001(\t\"n\n\022GetNodePoolReques"
  "t\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\nc"
  "luster_id\030\003 \001(\t\022\024\n\014node_pool_id\030\004 \001(\t\022\014\n"
  "\004name\030\006 \001(\t\"\210\004\n\010NodePool\022\014\n\004name\030\001 \001(\t\0225"
  "\n\006config\030\002 \001(\0132%.google.container.v1alph"
  "a1.NodeConfig\022\032\n\022initial_node_count\030\003 \001("
  "\005\022C\n\013autoscaling\030\004 \001(\0132..google.containe"
  "r.v1alpha1.NodePoolAutoscaling\022=\n\nmanage"
  "ment\030\005 \001(\0132).google.container.v1alpha1.N"
  "odeManagement\022\021\n\tself_link\030d \001(\t\022\017\n\007vers"
  "ion\030e \001(\t\022\033\n\023instance_group_urls\030f \003(\t\022:"
  "\n\006status\030g \001(\0162*.google.container.v1alph"
  "a1.NodePool.Status\022\026\n\016status_message\030h \001"
  "(\t\"\201\001\n\006Status\022\026\n\022STATUS_UNSPECIFIED\020\000\022\020\n"
  "\014PROVISIONING\020\001\022\013\n\007RUNNING\020\002\022\026\n\022RUNNING_"
  "WITH_ERROR\020\003\022\017\n\013RECONCILING\020\004\022\014\n\010STOPPIN"
  "G\020\005\022\t\n\005ERROR\020\006\"\203\001\n\016NodeManagement\022\024\n\014aut"
  "o_upgrade\030\001 \001(\010\022\023\n\013auto_repair\030\002 \001(\010\022F\n\017"
  "upgrade_options\030\n \001(\0132-.google.container"
  ".v1alpha1.AutoUpgradeOptions\"J\n\022AutoUpgr"
  "adeOptions\022\037\n\027auto_upgrade_start_time\030\001 "
  "\001(\t\022\023\n\013description\030\002 \001(\t\"Q\n\021MaintenanceP"
  "olicy\022<\n\006window\030\001 \001(\0132,.google.container"
  ".v1alpha1.MaintenanceWindow\"t\n\021Maintenan"
  "ceWindow\022U\n\030daily_maintenance_window\030\002 \001"
  "(\01321.google.container.v1alpha1.DailyMain"
  "tenanceWindowH\000B\010\n\006policy\">\n\026DailyMainte"
  "nanceWindow\022\022\n\nstart_time\030\002 \001(\t\022\020\n\010durat"
  "ion\030\003 \001(\t\"\267\001\n\034SetNodePoolManagementReque"
  "st\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\n"
  "cluster_id\030\003 \001(\t\022\024\n\014node_pool_id\030\004 \001(\t\022="
  "\n\nmanagement\030\005 \001(\0132).google.container.v1"
  "alpha1.NodeManagement\022\014\n\004name\030\007 \001(\t\"\206\001\n\026"
  "SetNodePoolSizeRequest\022\022\n\nproject_id\030\001 \001"
  "(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022\024\n\014"
  "node_pool_id\030\004 \001(\t\022\022\n\nnode_count\030\005 \001(\005\022\014"
  "\n\004name\030\007 \001(\t\"z\n\036RollbackNodePoolUpgradeR"
  "equest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t"
  "\022\022\n\ncluster_id\030\003 \001(\t\022\024\n\014node_pool_id\030\004 \001"
  "(\t\022\014\n\004name\030\006 \001(\t\"P\n\025ListNodePoolsRespons"
  "e\0227\n\nnode_pools\030\001 \003(\0132#.google.container"
  ".v1alpha1.NodePool\"V\n\023NodePoolAutoscalin"
  "g\022\017\n\007enabled\030\001 \001(\010\022\026\n\016min_node_count\030\002 \001"
  "(\005\022\026\n\016max_node_count\030\003 \001(\005\"\202\002\n\020SetLabels"
  "Request\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001("
  "\t\022\022\n\ncluster_id\030\003 \001(\t\022X\n\017resource_labels"
  "\030\004 \003(\0132\?.google.container.v1alpha1.SetLa"
  "belsRequest.ResourceLabelsEntry\022\031\n\021label"
  "_fingerprint\030\005 \001(\t\022\014\n\004name\030\007 \001(\t\0325\n\023Reso"
  "urceLabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
  "\001(\t:\0028\001\"k\n\024SetLegacyAbacRequest\022\022\n\nproje"
  "ct_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030"
  "\003 \001(\t\022\017\n\007enabled\030\004 \001(\010\022\014\n\004name\030\006 \001(\t\"\\\n\026"
  "StartIPRotationRequest\022\022\n\nproject_id\030\001 \001"
  "(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022\014\n\004"
  "name\030\006 \001(\t\"_\n\031CompleteIPRotationRequest\022"
  "\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\nclu"
  "ster_id\030\003 \001(\t\022\014\n\004name\030\007 \001(\t\"H\n\021Accelerat"
  "orConfig\022\031\n\021accelerator_count\030\001 \001(\003\022\030\n\020a"
  "ccelerator_type\030\002 \001(\t\"\237\001\n\027SetNetworkPoli"
  "cyRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 "
  "\001(\t\022\022\n\ncluster_id\030\003 \001(\t\022@\n\016network_polic"
  "y\030\004 \001(\0132(.google.container.v1alpha1.Netw"
  "orkPolicy\022\014\n\004name\030\006 \001(\t\"\253\001\n\033SetMaintenan"
  "cePolicyRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004z"
  "one\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022H\n\022mainten"
  "ance_policy\030\004 \001(\0132,.google.container.v1a"
  "lpha1.MaintenancePolicy\022\014\n\004name\030\005 \001(\t2\204+"
  "\n\016ClusterManager\022\253\001\n\014ListClusters\022..goog"
  "le.container.v1alpha1.ListClustersReques"
  "t\032/.google.container.v1alpha1.ListCluste"
  "rsResponse\":\202\323\344\223\0024\0222/v1alpha1/{parent=pr"
  "ojects/*/locations/*}/clusters\022\232\001\n\nGetCl"
  "uster\022,.google.container.v1alpha1.GetClu"
  "sterRequest\032\".google.container.v1alpha1."
  "Cluster\":\202\323\344\223\0024\0222/v1alpha1/{name=project"
  "s/*/locations/*/clusters/*}\022\245\001\n\rCreateCl"
  "uster\022/.google.container.v1alpha1.Create"
  "ClusterRequest\032$.google.container.v1alph"
  "a1.Operation\"=\202\323\344\223\0027\"2/v1alpha1/{parent="
  "projects/*/locations/*}/clusters:\001*\022\245\001\n\r"
  "UpdateCluster\022/.google.container.v1alpha"
  "1.UpdateClusterRequest\032$.google.containe"
  "r.v1alpha1.Operation\"=\202\323\344\223\0027\0322/v1alpha1/"
  "{name=projects/*/locations/*/clusters/*}"
  ":\001*\022\263\001\n\016UpdateNodePool\0220.google.containe"
  "r.v1alpha1.UpdateNodePoolRequest\032$.googl"
  "e.container.v1alpha1.Operation\"I\202\323\344\223\002C\032>"
  "/v1alpha1/{name=projects/*/locations/*/c"
  "lusters/*/nodePools/*}:\001*\022\322\001\n\026SetNodePoo"
  "lAutoscaling\0228.google.container.v1alpha1"
  ".SetNodePoolAutoscalingRequest\032$.google."
  "container.v1alpha1.Operation\"X\202\323\344\223\002R\"M/v"
  "1alpha1/{name=projects/*/locations/*/clu"
  "sters/*/nodePools/*}:setAutoscaling:\001*\022\270"
  "\001\n\021SetLoggingService\0223.google.container."
  "v1alpha1.SetLoggingServiceRequest\032$.goog"
  "le.container.v1alpha1.Operation\"H\202\323\344\223\002B\""
  "=/v1alpha1/{name=projects/*/locations/*/"
  "clusters/*}:setLogging:\001*\022\301\001\n\024SetMonitor"
  "ingService\0226.google.container.v1alpha1.S"
  "etMonitoringServiceRequest\032$.google.cont"
  "ainer.v1alpha1.Operation\"K\202\323\344\223\002E\"@/v1alp"
  "ha1/{name=projects/*/locations/*/cluster"
  "s/*}:setMonitoring:\001*\022\263\001\n\017SetAddonsConfi"
  "g\0221.google.container.v1alpha1.SetAddonsC"
  "onfigRequest\032$.google.container.v1alpha1"
  ".Operation\"G\202\323\344\223\002A\"</v1alpha1/{name=proj"
  "ects/*/locations/*/clusters/*}:setAddons"
  ":\001*\022\260\001\n\014SetLocations\022..google.container."
  "v1alpha1.SetLocationsRequest\032$.google.co"
  "ntainer.v1alpha1.Operation\"J\202\323\344\223\002D\"\?/v1a"
  "lpha1/{name=projects/*/locations/*/clust"
  "ers/*}:setLocations:\001*\022\260\001\n\014UpdateMaster\022"
  "..google.container.v1alpha1.UpdateMaster"
  "Request\032$.google.container.v1alpha1.Oper"
  "ation\"J\202\323\344\223\002D\"\?/v1alpha1/{name=projects/"
  "*/locations/*/clusters/*}:updateMaster:\001"
  "*\022\263\001\n\rSetMasterAuth\022/.google.container.v"
  "1alpha1.SetMasterAuthRequest\032$.google.co"
  "ntainer.v1alpha1.Operation\"K\202\323\344\223\002E\"@/v1a"
  "lpha1/{name=projects/*/locations/*/clust"
  "ers/*}:setMasterAuth:\001*\022\242\001\n\rDeleteCluste"
  "r\022/.google.container.v1alpha1.DeleteClus"
  "terRequest\032$.google.container.v1alpha1.O"
  "peration\":\202\323\344\223\0024*2/v1alpha1/{name=projec"
  "ts/*/locations/*/clusters/*}\022\263\001\n\016ListOpe"
  "rations\0220.google.container.v1alpha1.List"
  "OperationsRequest\0321.google.container.v1a"
  "lpha1.ListOperationsResponse\"<\202\323\344\223\0026\0224/v"
  "1alpha1/{parent=projects/*/locations/*}/"
  "operations\022\242\001\n\014GetOperation\022..google.con"
  "tainer.v1alpha1.GetOperationRequest\032$.go"
  "ogle.container.v1alpha1.Operation\"<\202\323\344\223\002"
  "6\0224/v1alpha1/{name=projects/*/locations/"
  "*/operations/*}\022\244\001\n\017CancelOperation\0221.go"
  "ogle.container.v1alpha1.CancelOperationR"
  "equest\032\026.google.protobuf.Empty\"F\202\323\344\223\002@\";"
  "/v1alpha1/{name=projects/*/locations/*/o"
  "perations/*}:cancel:\001*\022\253\001\n\017GetServerConf"
  "ig\0221.google.container.v1alpha1.GetServer"
  "ConfigRequest\032\'.google.container.v1alpha"
  "1.ServerConfig\"<\202\323\344\223\0026\0224/v1alpha1/{name="
  "projects/*/locations/*}/serverConfig\022\272\001\n"
  "\rListNodePools\022/.google.container.v1alph"
  "a1.ListNodePoolsRequest\0320.google.contain"
  "er.v1alpha1.ListNodePoolsResponse\"F\202\323\344\223\002"
  "@\022>/v1alpha1/{parent=projects/*/location"
  "s/*/clusters/*}/nodePools\022\251\001\n\013GetNodePoo"
  "l\022-.google.container.v1alpha1.GetNodePoo"
  "lRequest\032#.google.container.v1alpha1.Nod"
  "ePool\"F\202\323\344\223\002@\022>/v1alpha1/{name=projects/"
  "*/locations/*/clusters/*/nodePools/*}\022\263\001"
  "\n\016CreateNodePool\0220.google.container.v1al"
  "pha1.CreateNodePoolRequest\032$.google.cont"
  "ainer.v1alpha1.Operation\"I\202\323\344\223\002C\">/v1alp"
  "ha1/{parent=projects/*/locations/*/clust"
  "ers/*}/nodePools:\001*\022\260\001\n\016DeleteNodePool\0220"
  ".google.container.v1alpha1.DeleteNodePoo"
  "lRequest\032$.google.container.v1alpha1.Ope"
  "ration\"F\202\323\344\223\002@*>/v1alpha1/{name=projects"
  "/*/locations/*/clusters/*/nodePools/*}\022\316"
  "\001\n\027RollbackNodePoolUpgrade\0229.google.cont"
  "ainer.v1alpha1.RollbackNodePoolUpgradeRe"
  "quest\032$.google.container.v1alpha1.Operat"
  "ion\"R\202\323\344\223\002L\"G/v1alpha1/{name=projects/*/"
  "locations/*/clusters/*/nodePools/*}:roll"
  "back:\001*\022\317\001\n\025SetNodePoolManagement\0227.goog"
  "le.container.v1alpha1.SetNodePoolManagem"
  "entRequest\032$.google.container.v1alpha1.O"
  "peration\"W\202\323\344\223\002Q\"L/v1alpha1/{name=projec"
  "ts/*/locations/*/clusters/*/nodePools/*}"
  ":setManagement:\001*\022\257\001\n\tSetLabels\022+.google"
  ".container.v1alpha1.SetLabelsRequest\032$.g"
  "oogle.container.v1alpha1.Operation\"O\202\323\344\223"
  "\002I\"D/v1alpha1/{name=projects/*/locations"
  "/*/clusters/*}:setResourceLabels:\001*\022\263\001\n\r"
  "SetLegacyAbac\022/.google.container.v1alpha"
  "1.SetLegacyAbacRequest\032$.google.containe"
  "r.v1alpha1.Operation\"K\202\323\344\223\002E\"@/v1alpha1/"
  "{name=projects/*/locations/*/clusters/*}"
  ":setLegacyAbac:\001*\022\271\001\n\017StartIPRotation\0221."
  "google.container.v1alpha1.StartIPRotatio"
  "nRequest\032$.google.container.v1alpha1.Ope"
  "ration\"M\202\323\344\223\002G\"B/v1alpha1/{name=projects"
  "/*/locations/*/clusters/*}:startIpRotati"
  "on:\001*\022\302\001\n\022CompleteIPRotation\0224.google.co"
  "ntainer.v1alpha1.CompleteIPRotationReque"
  "st\032$.google.container.v1alpha1.Operation"
  "\"P\202\323\344\223\002J\"E/v1alpha1/{name=projects/*/loc"
  "ations/*/clusters/*}:completeIpRotation:"
  "\001*\022\275\001\n\017SetNodePoolSize\0221.google.containe"
  "r.v1alpha1.SetNodePoolSizeRequest\032$.goog"
  "le.container.v1alpha1.Operation\"Q\202\323\344\223\002K\""
  "F/v1alpha1/{name=projects/*/locations/*/"
  "clusters/*/nodePools/*}:setSize:\001*\022\274\001\n\020S"
  "etNetworkPolicy\0222.google.container.v1alp"
  "ha1.SetNetworkPolicyRequest\032$.google.con"
  "tainer.v1alpha1.Operation\"N\202\323\344\223\002H\"C/v1al"
  "pha1/{name=projects/*/locations/*/cluste"
  "rs/*}:setNetworkPolicy:\001*\022\310\001\n\024SetMainten"
  "ancePolicy\0226.google.container.v1alpha1.S"
  "etMaintenancePolicyRequest\032$.google.cont"
  "ainer.v1alpha1.Operation\"R\202\323\344\223\002L\"G/v1alp"
  "ha1/{name=projects/*/locations/*/cluster"
  "s/*}:setMaintenancePolicy:\001*B\276\001\n\035com.goo"
  "gle.container.v1alpha1B\023ClusterServicePr"
  "otoP\001ZBgoogle.golang.org/genproto/google"
  "apis/container/v1alpha1;container\252\002\037Goog"
  "le.Cloud.Container.V1Alpha1\312\002\037Google\\Clo"
  "ud\\Container\\V1alpha1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto = {
  false, InitDefaults_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto, 
  descriptor_table_protodef_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto,
  "google/container/v1alpha1/cluster_service.proto", &assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto, 16469,
};

void AddDescriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto = []() { AddDescriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto(); return true; }();
namespace google {
namespace container {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* NodeTaint_Effect_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[0];
}
bool NodeTaint_Effect_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NodeTaint_Effect NodeTaint::EFFECT_UNSPECIFIED;
const NodeTaint_Effect NodeTaint::NO_SCHEDULE;
const NodeTaint_Effect NodeTaint::PREFER_NO_SCHEDULE;
const NodeTaint_Effect NodeTaint::NO_EXECUTE;
const NodeTaint_Effect NodeTaint::Effect_MIN;
const NodeTaint_Effect NodeTaint::Effect_MAX;
const int NodeTaint::Effect_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NetworkPolicy_Provider_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[1];
}
bool NetworkPolicy_Provider_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NetworkPolicy_Provider NetworkPolicy::PROVIDER_UNSPECIFIED;
const NetworkPolicy_Provider NetworkPolicy::CALICO;
const NetworkPolicy_Provider NetworkPolicy::Provider_MIN;
const NetworkPolicy_Provider NetworkPolicy::Provider_MAX;
const int NetworkPolicy::Provider_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Cluster_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[2];
}
bool Cluster_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_Status Cluster::STATUS_UNSPECIFIED;
const Cluster_Status Cluster::PROVISIONING;
const Cluster_Status Cluster::RUNNING;
const Cluster_Status Cluster::RECONCILING;
const Cluster_Status Cluster::STOPPING;
const Cluster_Status Cluster::ERROR;
const Cluster_Status Cluster::Status_MIN;
const Cluster_Status Cluster::Status_MAX;
const int Cluster::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Operation_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[3];
}
bool Operation_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operation_Status Operation::STATUS_UNSPECIFIED;
const Operation_Status Operation::PENDING;
const Operation_Status Operation::RUNNING;
const Operation_Status Operation::DONE;
const Operation_Status Operation::ABORTING;
const Operation_Status Operation::Status_MIN;
const Operation_Status Operation::Status_MAX;
const int Operation::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Operation_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[4];
}
bool Operation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operation_Type Operation::TYPE_UNSPECIFIED;
const Operation_Type Operation::CREATE_CLUSTER;
const Operation_Type Operation::DELETE_CLUSTER;
const Operation_Type Operation::UPGRADE_MASTER;
const Operation_Type Operation::UPGRADE_NODES;
const Operation_Type Operation::REPAIR_CLUSTER;
const Operation_Type Operation::UPDATE_CLUSTER;
const Operation_Type Operation::CREATE_NODE_POOL;
const Operation_Type Operation::DELETE_NODE_POOL;
const Operation_Type Operation::SET_NODE_POOL_MANAGEMENT;
const Operation_Type Operation::AUTO_REPAIR_NODES;
const Operation_Type Operation::AUTO_UPGRADE_NODES;
const Operation_Type Operation::SET_LABELS;
const Operation_Type Operation::SET_MASTER_AUTH;
const Operation_Type Operation::SET_NODE_POOL_SIZE;
const Operation_Type Operation::SET_NETWORK_POLICY;
const Operation_Type Operation::SET_MAINTENANCE_POLICY;
const Operation_Type Operation::Type_MIN;
const Operation_Type Operation::Type_MAX;
const int Operation::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetMasterAuthRequest_Action_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[5];
}
bool SetMasterAuthRequest_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetMasterAuthRequest_Action SetMasterAuthRequest::UNKNOWN;
const SetMasterAuthRequest_Action SetMasterAuthRequest::SET_PASSWORD;
const SetMasterAuthRequest_Action SetMasterAuthRequest::GENERATE_PASSWORD;
const SetMasterAuthRequest_Action SetMasterAuthRequest::SET_USERNAME;
const SetMasterAuthRequest_Action SetMasterAuthRequest::Action_MIN;
const SetMasterAuthRequest_Action SetMasterAuthRequest::Action_MAX;
const int SetMasterAuthRequest::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NodePool_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[6];
}
bool NodePool_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NodePool_Status NodePool::STATUS_UNSPECIFIED;
const NodePool_Status NodePool::PROVISIONING;
const NodePool_Status NodePool::RUNNING;
const NodePool_Status NodePool::RUNNING_WITH_ERROR;
const NodePool_Status NodePool::RECONCILING;
const NodePool_Status NodePool::STOPPING;
const NodePool_Status NodePool::ERROR;
const NodePool_Status NodePool::Status_MIN;
const NodePool_Status NodePool::Status_MAX;
const int NodePool::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

NodeConfig_MetadataEntry_DoNotUse::NodeConfig_MetadataEntry_DoNotUse() {}
NodeConfig_MetadataEntry_DoNotUse::NodeConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void NodeConfig_MetadataEntry_DoNotUse::MergeFrom(const NodeConfig_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata NodeConfig_MetadataEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[0];
}
void NodeConfig_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeConfig_MetadataEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      NodeConfig_MetadataEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1alpha1.NodeConfig.MetadataEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1alpha1.NodeConfig.MetadataEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

NodeConfig_LabelsEntry_DoNotUse::NodeConfig_LabelsEntry_DoNotUse() {}
NodeConfig_LabelsEntry_DoNotUse::NodeConfig_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void NodeConfig_LabelsEntry_DoNotUse::MergeFrom(const NodeConfig_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata NodeConfig_LabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[1];
}
void NodeConfig_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeConfig_LabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      NodeConfig_LabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1alpha1.NodeConfig.LabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1alpha1.NodeConfig.LabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void NodeConfig::InitAsDefaultInstance() {
}
class NodeConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeConfig::kMachineTypeFieldNumber;
const int NodeConfig::kDiskSizeGbFieldNumber;
const int NodeConfig::kOauthScopesFieldNumber;
const int NodeConfig::kServiceAccountFieldNumber;
const int NodeConfig::kMetadataFieldNumber;
const int NodeConfig::kImageTypeFieldNumber;
const int NodeConfig::kLabelsFieldNumber;
const int NodeConfig::kLocalSsdCountFieldNumber;
const int NodeConfig::kTagsFieldNumber;
const int NodeConfig::kPreemptibleFieldNumber;
const int NodeConfig::kAcceleratorsFieldNumber;
const int NodeConfig::kMinCpuPlatformFieldNumber;
const int NodeConfig::kTaintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeConfig::NodeConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.NodeConfig)
}
NodeConfig::NodeConfig(const NodeConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      oauth_scopes_(from.oauth_scopes_),
      tags_(from.tags_),
      accelerators_(from.accelerators_),
      taints_(from.taints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  labels_.MergeFrom(from.labels_);
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine_type().size() > 0) {
    machine_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type_);
  }
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_type().size() > 0) {
    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_account().size() > 0) {
    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.min_cpu_platform().size() > 0) {
    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  ::memcpy(&disk_size_gb_, &from.disk_size_gb_,
    static_cast<size_t>(reinterpret_cast<char*>(&preemptible_) -
    reinterpret_cast<char*>(&disk_size_gb_)) + sizeof(preemptible_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.NodeConfig)
}

void NodeConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&disk_size_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preemptible_) -
      reinterpret_cast<char*>(&disk_size_gb_)) + sizeof(preemptible_));
}

NodeConfig::~NodeConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.NodeConfig)
  SharedDtor();
}

void NodeConfig::SharedDtor() {
  machine_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeConfig& NodeConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodeConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oauth_scopes_.Clear();
  metadata_.Clear();
  labels_.Clear();
  tags_.Clear();
  accelerators_.Clear();
  taints_.Clear();
  machine_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&disk_size_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preemptible_) -
      reinterpret_cast<char*>(&disk_size_gb_)) + sizeof(preemptible_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodeConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string machine_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodeConfig.machine_type");
        object = msg->mutable_machine_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 disk_size_gb = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_disk_size_gb(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string oauth_scopes = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodeConfig.oauth_scopes");
          object = msg->add_oauth_scopes();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // map<string, string> metadata = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->metadata_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // string image_type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodeConfig.image_type");
        object = msg->mutable_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> labels = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // int32 local_ssd_count = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_local_ssd_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string tags = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodeConfig.tags");
          object = msg->add_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      // string service_account = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodeConfig.service_account");
        object = msg->mutable_service_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool preemptible = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_preemptible(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.container.v1alpha1.AcceleratorConfig accelerators = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1alpha1::AcceleratorConfig::_InternalParse;
          object = msg->add_accelerators();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      // string min_cpu_platform = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodeConfig.min_cpu_platform");
        object = msg->mutable_min_cpu_platform();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .google.container.v1alpha1.NodeTaint taints = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1alpha1::NodeTaint::_InternalParse;
          object = msg->add_taints();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 122 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.NodeConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string machine_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine_type().data(), static_cast<int>(this->machine_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.machine_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 disk_size_gb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &disk_size_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string oauth_scopes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_oauth_scopes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oauth_scopes(this->oauth_scopes_size() - 1).data(),
            static_cast<int>(this->oauth_scopes(this->oauth_scopes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.oauth_scopes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          NodeConfig_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              NodeConfig_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_type().data(), static_cast<int>(this->image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          NodeConfig_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              NodeConfig_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 local_ssd_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &local_ssd_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_account = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account().data(), static_cast<int>(this->service_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.service_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool preemptible = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &preemptible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1alpha1.AcceleratorConfig accelerators = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_accelerators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string min_cpu_platform = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_min_cpu_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeConfig.min_cpu_platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1alpha1.NodeTaint taints = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_taints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.NodeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.NodeConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.machine_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->machine_type(), output);
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->disk_size_gb(), output);
  }

  // repeated string oauth_scopes = 3;
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_scopes(i).data(), static_cast<int>(this->oauth_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.oauth_scopes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->oauth_scopes(i), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.NodeConfig.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.NodeConfig.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->image_type(), output);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.NodeConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.NodeConfig.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->local_ssd_count(), output);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->tags(i), output);
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.service_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->service_account(), output);
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->preemptible(), output);
  }

  // repeated .google.container.v1alpha1.AcceleratorConfig accelerators = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accelerators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->accelerators(static_cast<int>(i)),
      output);
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.min_cpu_platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->min_cpu_platform(), output);
  }

  // repeated .google.container.v1alpha1.NodeTaint taints = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->taints(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.NodeConfig)
}

::google::protobuf::uint8* NodeConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.machine_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->machine_type(), target);
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->disk_size_gb(), target);
  }

  // repeated string oauth_scopes = 3;
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_scopes(i).data(), static_cast<int>(this->oauth_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.oauth_scopes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->oauth_scopes(i), target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.NodeConfig.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.NodeConfig.MetadataEntry.value");
      }
    };

    if (false &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->image_type(), target);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.NodeConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.NodeConfig.LabelsEntry.value");
      }
    };

    if (false &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->local_ssd_count(), target);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->tags(i), target);
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.service_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->service_account(), target);
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->preemptible(), target);
  }

  // repeated .google.container.v1alpha1.AcceleratorConfig accelerators = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accelerators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->accelerators(static_cast<int>(i)), target);
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeConfig.min_cpu_platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->min_cpu_platform(), target);
  }

  // repeated .google.container.v1alpha1.NodeTaint taints = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->taints(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.NodeConfig)
  return target;
}

size_t NodeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.NodeConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string oauth_scopes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->oauth_scopes_size());
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->oauth_scopes(i));
  }

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> labels = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string tags = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated .google.container.v1alpha1.AcceleratorConfig accelerators = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->accelerators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accelerators(static_cast<int>(i)));
    }
  }

  // repeated .google.container.v1alpha1.NodeTaint taints = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->taints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->taints(static_cast<int>(i)));
    }
  }

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_type());
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_type());
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_account());
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->min_cpu_platform());
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->disk_size_gb());
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->local_ssd_count());
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.NodeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeConfig* source =
      ::google::protobuf::DynamicCastToGenerated<NodeConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.NodeConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.NodeConfig)
    MergeFrom(*source);
  }
}

void NodeConfig::MergeFrom(const NodeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.NodeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  oauth_scopes_.MergeFrom(from.oauth_scopes_);
  metadata_.MergeFrom(from.metadata_);
  labels_.MergeFrom(from.labels_);
  tags_.MergeFrom(from.tags_);
  accelerators_.MergeFrom(from.accelerators_);
  taints_.MergeFrom(from.taints_);
  if (from.machine_type().size() > 0) {

    machine_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type_);
  }
  if (from.image_type().size() > 0) {

    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  if (from.service_account().size() > 0) {

    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  if (from.min_cpu_platform().size() > 0) {

    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  if (from.disk_size_gb() != 0) {
    set_disk_size_gb(from.disk_size_gb());
  }
  if (from.local_ssd_count() != 0) {
    set_local_ssd_count(from.local_ssd_count());
  }
  if (from.preemptible() != 0) {
    set_preemptible(from.preemptible());
  }
}

void NodeConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.NodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeConfig::CopyFrom(const NodeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.NodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeConfig::IsInitialized() const {
  return true;
}

void NodeConfig::Swap(NodeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeConfig::InternalSwap(NodeConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oauth_scopes_.InternalSwap(CastToBase(&other->oauth_scopes_));
  metadata_.Swap(&other->metadata_);
  labels_.Swap(&other->labels_);
  tags_.InternalSwap(CastToBase(&other->tags_));
  CastToBase(&accelerators_)->InternalSwap(CastToBase(&other->accelerators_));
  CastToBase(&taints_)->InternalSwap(CastToBase(&other->taints_));
  machine_type_.Swap(&other->machine_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_type_.Swap(&other->image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_account_.Swap(&other->service_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  min_cpu_platform_.Swap(&other->min_cpu_platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(disk_size_gb_, other->disk_size_gb_);
  swap(local_ssd_count_, other->local_ssd_count_);
  swap(preemptible_, other->preemptible_);
}

::google::protobuf::Metadata NodeConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodeTaint::InitAsDefaultInstance() {
}
class NodeTaint::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeTaint::kKeyFieldNumber;
const int NodeTaint::kValueFieldNumber;
const int NodeTaint::kEffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeTaint::NodeTaint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.NodeTaint)
}
NodeTaint::NodeTaint(const NodeTaint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  effect_ = from.effect_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.NodeTaint)
}

void NodeTaint::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodeTaint_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effect_ = 0;
}

NodeTaint::~NodeTaint() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.NodeTaint)
  SharedDtor();
}

void NodeTaint::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeTaint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeTaint& NodeTaint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodeTaint_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodeTaint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.NodeTaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effect_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeTaint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodeTaint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodeTaint.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodeTaint.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.NodeTaint.Effect effect = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_effect(static_cast<::google::container::v1alpha1::NodeTaint_Effect>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeTaint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.NodeTaint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeTaint.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodeTaint.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodeTaint.Effect effect = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_effect(static_cast< ::google::container::v1alpha1::NodeTaint_Effect >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.NodeTaint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.NodeTaint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeTaint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.NodeTaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeTaint.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeTaint.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // .google.container.v1alpha1.NodeTaint.Effect effect = 3;
  if (this->effect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.NodeTaint)
}

::google::protobuf::uint8* NodeTaint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.NodeTaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeTaint.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodeTaint.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // .google.container.v1alpha1.NodeTaint.Effect effect = 3;
  if (this->effect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.NodeTaint)
  return target;
}

size_t NodeTaint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.NodeTaint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.container.v1alpha1.NodeTaint.Effect effect = 3;
  if (this->effect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->effect());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeTaint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.NodeTaint)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeTaint* source =
      ::google::protobuf::DynamicCastToGenerated<NodeTaint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.NodeTaint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.NodeTaint)
    MergeFrom(*source);
  }
}

void NodeTaint::MergeFrom(const NodeTaint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.NodeTaint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.effect() != 0) {
    set_effect(from.effect());
  }
}

void NodeTaint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.NodeTaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeTaint::CopyFrom(const NodeTaint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.NodeTaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeTaint::IsInitialized() const {
  return true;
}

void NodeTaint::Swap(NodeTaint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeTaint::InternalSwap(NodeTaint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(effect_, other->effect_);
}

::google::protobuf::Metadata NodeTaint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MasterAuth::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_MasterAuth_default_instance_._instance.get_mutable()->client_certificate_config_ = const_cast< ::google::container::v1alpha1::ClientCertificateConfig*>(
      ::google::container::v1alpha1::ClientCertificateConfig::internal_default_instance());
}
class MasterAuth::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::ClientCertificateConfig& client_certificate_config(const MasterAuth* msg);
};

const ::google::container::v1alpha1::ClientCertificateConfig&
MasterAuth::HasBitSetters::client_certificate_config(const MasterAuth* msg) {
  return *msg->client_certificate_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuth::kUsernameFieldNumber;
const int MasterAuth::kPasswordFieldNumber;
const int MasterAuth::kClientCertificateConfigFieldNumber;
const int MasterAuth::kClusterCaCertificateFieldNumber;
const int MasterAuth::kClientCertificateFieldNumber;
const int MasterAuth::kClientKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuth::MasterAuth()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.MasterAuth)
}
MasterAuth::MasterAuth(const MasterAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  cluster_ca_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ca_certificate().size() > 0) {
    cluster_ca_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ca_certificate_);
  }
  client_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_certificate().size() > 0) {
    client_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_certificate_);
  }
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_key().size() > 0) {
    client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
  }
  if (from.has_client_certificate_config()) {
    client_certificate_config_ = new ::google::container::v1alpha1::ClientCertificateConfig(*from.client_certificate_config_);
  } else {
    client_certificate_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.MasterAuth)
}

void MasterAuth::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_config_ = nullptr;
}

MasterAuth::~MasterAuth() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.MasterAuth)
  SharedDtor();
}

void MasterAuth::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_certificate_config_;
}

void MasterAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterAuth& MasterAuth::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MasterAuth_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MasterAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && client_certificate_config_ != nullptr) {
    delete client_certificate_config_;
  }
  client_certificate_config_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MasterAuth::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MasterAuth*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string username = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.MasterAuth.username");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.MasterAuth.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.ClientCertificateConfig client_certificate_config = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::ClientCertificateConfig::_InternalParse;
        object = msg->mutable_client_certificate_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string cluster_ca_certificate = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.MasterAuth.cluster_ca_certificate");
        object = msg->mutable_cluster_ca_certificate();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string client_certificate = 101;
      case 101: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.MasterAuth.client_certificate");
        object = msg->mutable_client_certificate();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string client_key = 102;
      case 102: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.MasterAuth.client_key");
        object = msg->mutable_client_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MasterAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.MasterAuth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.MasterAuth.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.MasterAuth.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.ClientCertificateConfig client_certificate_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_certificate_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ca_certificate = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ca_certificate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.MasterAuth.cluster_ca_certificate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_certificate = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (810 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_certificate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.MasterAuth.client_certificate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_key = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (818 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_key().data(), static_cast<int>(this->client_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.MasterAuth.client_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.MasterAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.MasterAuth)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MasterAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // .google.container.v1alpha1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::client_certificate_config(this), output);
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.cluster_ca_certificate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->cluster_ca_certificate(), output);
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.client_certificate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->client_certificate(), output);
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_key().data(), static_cast<int>(this->client_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.client_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->client_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.MasterAuth)
}

::google::protobuf::uint8* MasterAuth::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // .google.container.v1alpha1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::client_certificate_config(this), target);
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.cluster_ca_certificate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->cluster_ca_certificate(), target);
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.client_certificate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->client_certificate(), target);
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_key().data(), static_cast<int>(this->client_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuth.client_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->client_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.MasterAuth)
  return target;
}

size_t MasterAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.MasterAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ca_certificate());
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_certificate());
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_key());
  }

  // .google.container.v1alpha1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_certificate_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.MasterAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuth* source =
      ::google::protobuf::DynamicCastToGenerated<MasterAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.MasterAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.MasterAuth)
    MergeFrom(*source);
  }
}

void MasterAuth::MergeFrom(const MasterAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.MasterAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.cluster_ca_certificate().size() > 0) {

    cluster_ca_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ca_certificate_);
  }
  if (from.client_certificate().size() > 0) {

    client_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_certificate_);
  }
  if (from.client_key().size() > 0) {

    client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
  }
  if (from.has_client_certificate_config()) {
    mutable_client_certificate_config()->::google::container::v1alpha1::ClientCertificateConfig::MergeFrom(from.client_certificate_config());
  }
}

void MasterAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.MasterAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuth::CopyFrom(const MasterAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.MasterAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuth::IsInitialized() const {
  return true;
}

void MasterAuth::Swap(MasterAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuth::InternalSwap(MasterAuth* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_ca_certificate_.Swap(&other->cluster_ca_certificate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_certificate_.Swap(&other->client_certificate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_key_.Swap(&other->client_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_certificate_config_, other->client_certificate_config_);
}

::google::protobuf::Metadata MasterAuth::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientCertificateConfig::InitAsDefaultInstance() {
}
class ClientCertificateConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCertificateConfig::kIssueClientCertificateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCertificateConfig::ClientCertificateConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ClientCertificateConfig)
}
ClientCertificateConfig::ClientCertificateConfig(const ClientCertificateConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issue_client_certificate_ = from.issue_client_certificate_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ClientCertificateConfig)
}

void ClientCertificateConfig::SharedCtor() {
  issue_client_certificate_ = false;
}

ClientCertificateConfig::~ClientCertificateConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ClientCertificateConfig)
  SharedDtor();
}

void ClientCertificateConfig::SharedDtor() {
}

void ClientCertificateConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientCertificateConfig& ClientCertificateConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientCertificateConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ClientCertificateConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issue_client_certificate_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientCertificateConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientCertificateConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool issue_client_certificate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_issue_client_certificate(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientCertificateConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ClientCertificateConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool issue_client_certificate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issue_client_certificate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ClientCertificateConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ClientCertificateConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientCertificateConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issue_client_certificate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ClientCertificateConfig)
}

::google::protobuf::uint8* ClientCertificateConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issue_client_certificate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ClientCertificateConfig)
  return target;
}

size_t ClientCertificateConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ClientCertificateConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientCertificateConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ClientCertificateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCertificateConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ClientCertificateConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ClientCertificateConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ClientCertificateConfig)
    MergeFrom(*source);
  }
}

void ClientCertificateConfig::MergeFrom(const ClientCertificateConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ClientCertificateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issue_client_certificate() != 0) {
    set_issue_client_certificate(from.issue_client_certificate());
  }
}

void ClientCertificateConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ClientCertificateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCertificateConfig::CopyFrom(const ClientCertificateConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ClientCertificateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCertificateConfig::IsInitialized() const {
  return true;
}

void ClientCertificateConfig::Swap(ClientCertificateConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCertificateConfig::InternalSwap(ClientCertificateConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(issue_client_certificate_, other->issue_client_certificate_);
}

::google::protobuf::Metadata ClientCertificateConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AddonsConfig::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_AddonsConfig_default_instance_._instance.get_mutable()->http_load_balancing_ = const_cast< ::google::container::v1alpha1::HttpLoadBalancing*>(
      ::google::container::v1alpha1::HttpLoadBalancing::internal_default_instance());
  ::google::container::v1alpha1::_AddonsConfig_default_instance_._instance.get_mutable()->horizontal_pod_autoscaling_ = const_cast< ::google::container::v1alpha1::HorizontalPodAutoscaling*>(
      ::google::container::v1alpha1::HorizontalPodAutoscaling::internal_default_instance());
  ::google::container::v1alpha1::_AddonsConfig_default_instance_._instance.get_mutable()->kubernetes_dashboard_ = const_cast< ::google::container::v1alpha1::KubernetesDashboard*>(
      ::google::container::v1alpha1::KubernetesDashboard::internal_default_instance());
  ::google::container::v1alpha1::_AddonsConfig_default_instance_._instance.get_mutable()->network_policy_config_ = const_cast< ::google::container::v1alpha1::NetworkPolicyConfig*>(
      ::google::container::v1alpha1::NetworkPolicyConfig::internal_default_instance());
}
class AddonsConfig::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::HttpLoadBalancing& http_load_balancing(const AddonsConfig* msg);
  static const ::google::container::v1alpha1::HorizontalPodAutoscaling& horizontal_pod_autoscaling(const AddonsConfig* msg);
  static const ::google::container::v1alpha1::KubernetesDashboard& kubernetes_dashboard(const AddonsConfig* msg);
  static const ::google::container::v1alpha1::NetworkPolicyConfig& network_policy_config(const AddonsConfig* msg);
};

const ::google::container::v1alpha1::HttpLoadBalancing&
AddonsConfig::HasBitSetters::http_load_balancing(const AddonsConfig* msg) {
  return *msg->http_load_balancing_;
}
const ::google::container::v1alpha1::HorizontalPodAutoscaling&
AddonsConfig::HasBitSetters::horizontal_pod_autoscaling(const AddonsConfig* msg) {
  return *msg->horizontal_pod_autoscaling_;
}
const ::google::container::v1alpha1::KubernetesDashboard&
AddonsConfig::HasBitSetters::kubernetes_dashboard(const AddonsConfig* msg) {
  return *msg->kubernetes_dashboard_;
}
const ::google::container::v1alpha1::NetworkPolicyConfig&
AddonsConfig::HasBitSetters::network_policy_config(const AddonsConfig* msg) {
  return *msg->network_policy_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddonsConfig::kHttpLoadBalancingFieldNumber;
const int AddonsConfig::kHorizontalPodAutoscalingFieldNumber;
const int AddonsConfig::kKubernetesDashboardFieldNumber;
const int AddonsConfig::kNetworkPolicyConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddonsConfig::AddonsConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.AddonsConfig)
}
AddonsConfig::AddonsConfig(const AddonsConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_http_load_balancing()) {
    http_load_balancing_ = new ::google::container::v1alpha1::HttpLoadBalancing(*from.http_load_balancing_);
  } else {
    http_load_balancing_ = nullptr;
  }
  if (from.has_horizontal_pod_autoscaling()) {
    horizontal_pod_autoscaling_ = new ::google::container::v1alpha1::HorizontalPodAutoscaling(*from.horizontal_pod_autoscaling_);
  } else {
    horizontal_pod_autoscaling_ = nullptr;
  }
  if (from.has_kubernetes_dashboard()) {
    kubernetes_dashboard_ = new ::google::container::v1alpha1::KubernetesDashboard(*from.kubernetes_dashboard_);
  } else {
    kubernetes_dashboard_ = nullptr;
  }
  if (from.has_network_policy_config()) {
    network_policy_config_ = new ::google::container::v1alpha1::NetworkPolicyConfig(*from.network_policy_config_);
  } else {
    network_policy_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.AddonsConfig)
}

void AddonsConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::memset(&http_load_balancing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_policy_config_) -
      reinterpret_cast<char*>(&http_load_balancing_)) + sizeof(network_policy_config_));
}

AddonsConfig::~AddonsConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.AddonsConfig)
  SharedDtor();
}

void AddonsConfig::SharedDtor() {
  if (this != internal_default_instance()) delete http_load_balancing_;
  if (this != internal_default_instance()) delete horizontal_pod_autoscaling_;
  if (this != internal_default_instance()) delete kubernetes_dashboard_;
  if (this != internal_default_instance()) delete network_policy_config_;
}

void AddonsConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddonsConfig& AddonsConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AddonsConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AddonsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && http_load_balancing_ != nullptr) {
    delete http_load_balancing_;
  }
  http_load_balancing_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && horizontal_pod_autoscaling_ != nullptr) {
    delete horizontal_pod_autoscaling_;
  }
  horizontal_pod_autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && kubernetes_dashboard_ != nullptr) {
    delete kubernetes_dashboard_;
  }
  kubernetes_dashboard_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && network_policy_config_ != nullptr) {
    delete network_policy_config_;
  }
  network_policy_config_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AddonsConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AddonsConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1alpha1.HttpLoadBalancing http_load_balancing = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::HttpLoadBalancing::_InternalParse;
        object = msg->mutable_http_load_balancing();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::HorizontalPodAutoscaling::_InternalParse;
        object = msg->mutable_horizontal_pod_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.KubernetesDashboard kubernetes_dashboard = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::KubernetesDashboard::_InternalParse;
        object = msg->mutable_kubernetes_dashboard();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.NetworkPolicyConfig network_policy_config = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NetworkPolicyConfig::_InternalParse;
        object = msg->mutable_network_policy_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AddonsConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.AddonsConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1alpha1.HttpLoadBalancing http_load_balancing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http_load_balancing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_horizontal_pod_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.KubernetesDashboard kubernetes_dashboard = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kubernetes_dashboard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NetworkPolicyConfig network_policy_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.AddonsConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.AddonsConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AddonsConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1alpha1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::http_load_balancing(this), output);
  }

  // .google.container.v1alpha1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::horizontal_pod_autoscaling(this), output);
  }

  // .google.container.v1alpha1.KubernetesDashboard kubernetes_dashboard = 3;
  if (this->has_kubernetes_dashboard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::kubernetes_dashboard(this), output);
  }

  // .google.container.v1alpha1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::network_policy_config(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.AddonsConfig)
}

::google::protobuf::uint8* AddonsConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1alpha1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::http_load_balancing(this), target);
  }

  // .google.container.v1alpha1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::horizontal_pod_autoscaling(this), target);
  }

  // .google.container.v1alpha1.KubernetesDashboard kubernetes_dashboard = 3;
  if (this->has_kubernetes_dashboard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::kubernetes_dashboard(this), target);
  }

  // .google.container.v1alpha1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::network_policy_config(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.AddonsConfig)
  return target;
}

size_t AddonsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.AddonsConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1alpha1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *http_load_balancing_);
  }

  // .google.container.v1alpha1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *horizontal_pod_autoscaling_);
  }

  // .google.container.v1alpha1.KubernetesDashboard kubernetes_dashboard = 3;
  if (this->has_kubernetes_dashboard()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kubernetes_dashboard_);
  }

  // .google.container.v1alpha1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *network_policy_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddonsConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.AddonsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AddonsConfig* source =
      ::google::protobuf::DynamicCastToGenerated<AddonsConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.AddonsConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.AddonsConfig)
    MergeFrom(*source);
  }
}

void AddonsConfig::MergeFrom(const AddonsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.AddonsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_http_load_balancing()) {
    mutable_http_load_balancing()->::google::container::v1alpha1::HttpLoadBalancing::MergeFrom(from.http_load_balancing());
  }
  if (from.has_horizontal_pod_autoscaling()) {
    mutable_horizontal_pod_autoscaling()->::google::container::v1alpha1::HorizontalPodAutoscaling::MergeFrom(from.horizontal_pod_autoscaling());
  }
  if (from.has_kubernetes_dashboard()) {
    mutable_kubernetes_dashboard()->::google::container::v1alpha1::KubernetesDashboard::MergeFrom(from.kubernetes_dashboard());
  }
  if (from.has_network_policy_config()) {
    mutable_network_policy_config()->::google::container::v1alpha1::NetworkPolicyConfig::MergeFrom(from.network_policy_config());
  }
}

void AddonsConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.AddonsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddonsConfig::CopyFrom(const AddonsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.AddonsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddonsConfig::IsInitialized() const {
  return true;
}

void AddonsConfig::Swap(AddonsConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddonsConfig::InternalSwap(AddonsConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(http_load_balancing_, other->http_load_balancing_);
  swap(horizontal_pod_autoscaling_, other->horizontal_pod_autoscaling_);
  swap(kubernetes_dashboard_, other->kubernetes_dashboard_);
  swap(network_policy_config_, other->network_policy_config_);
}

::google::protobuf::Metadata AddonsConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HttpLoadBalancing::InitAsDefaultInstance() {
}
class HttpLoadBalancing::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpLoadBalancing::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpLoadBalancing::HttpLoadBalancing()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.HttpLoadBalancing)
}
HttpLoadBalancing::HttpLoadBalancing(const HttpLoadBalancing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.HttpLoadBalancing)
}

void HttpLoadBalancing::SharedCtor() {
  disabled_ = false;
}

HttpLoadBalancing::~HttpLoadBalancing() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.HttpLoadBalancing)
  SharedDtor();
}

void HttpLoadBalancing::SharedDtor() {
}

void HttpLoadBalancing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HttpLoadBalancing& HttpLoadBalancing::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HttpLoadBalancing_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void HttpLoadBalancing::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HttpLoadBalancing::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HttpLoadBalancing*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HttpLoadBalancing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.HttpLoadBalancing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.HttpLoadBalancing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.HttpLoadBalancing)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HttpLoadBalancing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.HttpLoadBalancing)
}

::google::protobuf::uint8* HttpLoadBalancing::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.HttpLoadBalancing)
  return target;
}

size_t HttpLoadBalancing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.HttpLoadBalancing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HttpLoadBalancing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.HttpLoadBalancing)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpLoadBalancing* source =
      ::google::protobuf::DynamicCastToGenerated<HttpLoadBalancing>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.HttpLoadBalancing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.HttpLoadBalancing)
    MergeFrom(*source);
  }
}

void HttpLoadBalancing::MergeFrom(const HttpLoadBalancing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.HttpLoadBalancing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void HttpLoadBalancing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.HttpLoadBalancing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpLoadBalancing::CopyFrom(const HttpLoadBalancing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.HttpLoadBalancing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpLoadBalancing::IsInitialized() const {
  return true;
}

void HttpLoadBalancing::Swap(HttpLoadBalancing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpLoadBalancing::InternalSwap(HttpLoadBalancing* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata HttpLoadBalancing::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HorizontalPodAutoscaling::InitAsDefaultInstance() {
}
class HorizontalPodAutoscaling::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HorizontalPodAutoscaling::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HorizontalPodAutoscaling::HorizontalPodAutoscaling()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.HorizontalPodAutoscaling)
}
HorizontalPodAutoscaling::HorizontalPodAutoscaling(const HorizontalPodAutoscaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.HorizontalPodAutoscaling)
}

void HorizontalPodAutoscaling::SharedCtor() {
  disabled_ = false;
}

HorizontalPodAutoscaling::~HorizontalPodAutoscaling() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.HorizontalPodAutoscaling)
  SharedDtor();
}

void HorizontalPodAutoscaling::SharedDtor() {
}

void HorizontalPodAutoscaling::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HorizontalPodAutoscaling& HorizontalPodAutoscaling::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HorizontalPodAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void HorizontalPodAutoscaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HorizontalPodAutoscaling::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HorizontalPodAutoscaling*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HorizontalPodAutoscaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.HorizontalPodAutoscaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.HorizontalPodAutoscaling)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HorizontalPodAutoscaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.HorizontalPodAutoscaling)
}

::google::protobuf::uint8* HorizontalPodAutoscaling::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.HorizontalPodAutoscaling)
  return target;
}

size_t HorizontalPodAutoscaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HorizontalPodAutoscaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  const HorizontalPodAutoscaling* source =
      ::google::protobuf::DynamicCastToGenerated<HorizontalPodAutoscaling>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.HorizontalPodAutoscaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.HorizontalPodAutoscaling)
    MergeFrom(*source);
  }
}

void HorizontalPodAutoscaling::MergeFrom(const HorizontalPodAutoscaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void HorizontalPodAutoscaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HorizontalPodAutoscaling::CopyFrom(const HorizontalPodAutoscaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.HorizontalPodAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HorizontalPodAutoscaling::IsInitialized() const {
  return true;
}

void HorizontalPodAutoscaling::Swap(HorizontalPodAutoscaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HorizontalPodAutoscaling::InternalSwap(HorizontalPodAutoscaling* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata HorizontalPodAutoscaling::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void KubernetesDashboard::InitAsDefaultInstance() {
}
class KubernetesDashboard::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KubernetesDashboard::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KubernetesDashboard::KubernetesDashboard()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.KubernetesDashboard)
}
KubernetesDashboard::KubernetesDashboard(const KubernetesDashboard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.KubernetesDashboard)
}

void KubernetesDashboard::SharedCtor() {
  disabled_ = false;
}

KubernetesDashboard::~KubernetesDashboard() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.KubernetesDashboard)
  SharedDtor();
}

void KubernetesDashboard::SharedDtor() {
}

void KubernetesDashboard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KubernetesDashboard& KubernetesDashboard::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_KubernetesDashboard_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void KubernetesDashboard::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KubernetesDashboard::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<KubernetesDashboard*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KubernetesDashboard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.KubernetesDashboard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.KubernetesDashboard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.KubernetesDashboard)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KubernetesDashboard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.KubernetesDashboard)
}

::google::protobuf::uint8* KubernetesDashboard::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.KubernetesDashboard)
  return target;
}

size_t KubernetesDashboard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.KubernetesDashboard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KubernetesDashboard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.KubernetesDashboard)
  GOOGLE_DCHECK_NE(&from, this);
  const KubernetesDashboard* source =
      ::google::protobuf::DynamicCastToGenerated<KubernetesDashboard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.KubernetesDashboard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.KubernetesDashboard)
    MergeFrom(*source);
  }
}

void KubernetesDashboard::MergeFrom(const KubernetesDashboard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.KubernetesDashboard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void KubernetesDashboard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.KubernetesDashboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KubernetesDashboard::CopyFrom(const KubernetesDashboard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.KubernetesDashboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KubernetesDashboard::IsInitialized() const {
  return true;
}

void KubernetesDashboard::Swap(KubernetesDashboard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KubernetesDashboard::InternalSwap(KubernetesDashboard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata KubernetesDashboard::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NetworkPolicyConfig::InitAsDefaultInstance() {
}
class NetworkPolicyConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkPolicyConfig::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkPolicyConfig::NetworkPolicyConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.NetworkPolicyConfig)
}
NetworkPolicyConfig::NetworkPolicyConfig(const NetworkPolicyConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.NetworkPolicyConfig)
}

void NetworkPolicyConfig::SharedCtor() {
  disabled_ = false;
}

NetworkPolicyConfig::~NetworkPolicyConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.NetworkPolicyConfig)
  SharedDtor();
}

void NetworkPolicyConfig::SharedDtor() {
}

void NetworkPolicyConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkPolicyConfig& NetworkPolicyConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NetworkPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NetworkPolicyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkPolicyConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NetworkPolicyConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool disabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkPolicyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.NetworkPolicyConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.NetworkPolicyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.NetworkPolicyConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkPolicyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.NetworkPolicyConfig)
}

::google::protobuf::uint8* NetworkPolicyConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.NetworkPolicyConfig)
  return target;
}

size_t NetworkPolicyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.NetworkPolicyConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkPolicyConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.NetworkPolicyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkPolicyConfig* source =
      ::google::protobuf::DynamicCastToGenerated<NetworkPolicyConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.NetworkPolicyConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.NetworkPolicyConfig)
    MergeFrom(*source);
  }
}

void NetworkPolicyConfig::MergeFrom(const NetworkPolicyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.NetworkPolicyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void NetworkPolicyConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.NetworkPolicyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkPolicyConfig::CopyFrom(const NetworkPolicyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.NetworkPolicyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkPolicyConfig::IsInitialized() const {
  return true;
}

void NetworkPolicyConfig::Swap(NetworkPolicyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkPolicyConfig::InternalSwap(NetworkPolicyConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata NetworkPolicyConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MasterAuthorizedNetworksConfig_CidrBlock::InitAsDefaultInstance() {
}
class MasterAuthorizedNetworksConfig_CidrBlock::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuthorizedNetworksConfig_CidrBlock::kDisplayNameFieldNumber;
const int MasterAuthorizedNetworksConfig_CidrBlock::kCidrBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuthorizedNetworksConfig_CidrBlock::MasterAuthorizedNetworksConfig_CidrBlock()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
}
MasterAuthorizedNetworksConfig_CidrBlock::MasterAuthorizedNetworksConfig_CidrBlock(const MasterAuthorizedNetworksConfig_CidrBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cidr_block().size() > 0) {
    cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cidr_block_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
}

void MasterAuthorizedNetworksConfig_CidrBlock::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MasterAuthorizedNetworksConfig_CidrBlock::~MasterAuthorizedNetworksConfig_CidrBlock() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  SharedDtor();
}

void MasterAuthorizedNetworksConfig_CidrBlock::SharedDtor() {
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MasterAuthorizedNetworksConfig_CidrBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterAuthorizedNetworksConfig_CidrBlock& MasterAuthorizedNetworksConfig_CidrBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MasterAuthorizedNetworksConfig_CidrBlock_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MasterAuthorizedNetworksConfig_CidrBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MasterAuthorizedNetworksConfig_CidrBlock::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MasterAuthorizedNetworksConfig_CidrBlock*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string display_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cidr_block = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block");
        object = msg->mutable_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MasterAuthorizedNetworksConfig_CidrBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string display_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cidr_block = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MasterAuthorizedNetworksConfig_CidrBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string display_name = 1;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->display_name(), output);
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cidr_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
}

::google::protobuf::uint8* MasterAuthorizedNetworksConfig_CidrBlock::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string display_name = 1;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->display_name(), target);
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cidr_block(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  return target;
}

size_t MasterAuthorizedNetworksConfig_CidrBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string display_name = 1;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cidr_block());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterAuthorizedNetworksConfig_CidrBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuthorizedNetworksConfig_CidrBlock* source =
      ::google::protobuf::DynamicCastToGenerated<MasterAuthorizedNetworksConfig_CidrBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
    MergeFrom(*source);
  }
}

void MasterAuthorizedNetworksConfig_CidrBlock::MergeFrom(const MasterAuthorizedNetworksConfig_CidrBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.cidr_block().size() > 0) {

    cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cidr_block_);
  }
}

void MasterAuthorizedNetworksConfig_CidrBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuthorizedNetworksConfig_CidrBlock::CopyFrom(const MasterAuthorizedNetworksConfig_CidrBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuthorizedNetworksConfig_CidrBlock::IsInitialized() const {
  return true;
}

void MasterAuthorizedNetworksConfig_CidrBlock::Swap(MasterAuthorizedNetworksConfig_CidrBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuthorizedNetworksConfig_CidrBlock::InternalSwap(MasterAuthorizedNetworksConfig_CidrBlock* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cidr_block_.Swap(&other->cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MasterAuthorizedNetworksConfig_CidrBlock::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MasterAuthorizedNetworksConfig::InitAsDefaultInstance() {
}
class MasterAuthorizedNetworksConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuthorizedNetworksConfig::kEnabledFieldNumber;
const int MasterAuthorizedNetworksConfig::kCidrBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuthorizedNetworksConfig::MasterAuthorizedNetworksConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
}
MasterAuthorizedNetworksConfig::MasterAuthorizedNetworksConfig(const MasterAuthorizedNetworksConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      cidr_blocks_(from.cidr_blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
}

void MasterAuthorizedNetworksConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  enabled_ = false;
}

MasterAuthorizedNetworksConfig::~MasterAuthorizedNetworksConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  SharedDtor();
}

void MasterAuthorizedNetworksConfig::SharedDtor() {
}

void MasterAuthorizedNetworksConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterAuthorizedNetworksConfig& MasterAuthorizedNetworksConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MasterAuthorizedNetworksConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MasterAuthorizedNetworksConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cidr_blocks_.Clear();
  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MasterAuthorizedNetworksConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MasterAuthorizedNetworksConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock::_InternalParse;
          object = msg->add_cidr_blocks();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MasterAuthorizedNetworksConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cidr_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MasterAuthorizedNetworksConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // repeated .google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cidr_blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->cidr_blocks(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
}

::google::protobuf::uint8* MasterAuthorizedNetworksConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // repeated .google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cidr_blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->cidr_blocks(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  return target;
}

size_t MasterAuthorizedNetworksConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cidr_blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cidr_blocks(static_cast<int>(i)));
    }
  }

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterAuthorizedNetworksConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuthorizedNetworksConfig* source =
      ::google::protobuf::DynamicCastToGenerated<MasterAuthorizedNetworksConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
    MergeFrom(*source);
  }
}

void MasterAuthorizedNetworksConfig::MergeFrom(const MasterAuthorizedNetworksConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cidr_blocks_.MergeFrom(from.cidr_blocks_);
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void MasterAuthorizedNetworksConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuthorizedNetworksConfig::CopyFrom(const MasterAuthorizedNetworksConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.MasterAuthorizedNetworksConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuthorizedNetworksConfig::IsInitialized() const {
  return true;
}

void MasterAuthorizedNetworksConfig::Swap(MasterAuthorizedNetworksConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuthorizedNetworksConfig::InternalSwap(MasterAuthorizedNetworksConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&cidr_blocks_)->InternalSwap(CastToBase(&other->cidr_blocks_));
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata MasterAuthorizedNetworksConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NetworkPolicy::InitAsDefaultInstance() {
}
class NetworkPolicy::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkPolicy::kProviderFieldNumber;
const int NetworkPolicy::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkPolicy::NetworkPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.NetworkPolicy)
}
NetworkPolicy::NetworkPolicy(const NetworkPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&provider_, &from.provider_,
    static_cast<size_t>(reinterpret_cast<char*>(&enabled_) -
    reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.NetworkPolicy)
}

void NetworkPolicy::SharedCtor() {
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
}

NetworkPolicy::~NetworkPolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.NetworkPolicy)
  SharedDtor();
}

void NetworkPolicy::SharedDtor() {
}

void NetworkPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkPolicy& NetworkPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NetworkPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NetworkPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkPolicy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NetworkPolicy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1alpha1.NetworkPolicy.Provider provider = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_provider(static_cast<::google::container::v1alpha1::NetworkPolicy_Provider>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool enabled = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.NetworkPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1alpha1.NetworkPolicy.Provider provider = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_provider(static_cast< ::google::container::v1alpha1::NetworkPolicy_Provider >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.NetworkPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.NetworkPolicy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1alpha1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->provider(), output);
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.NetworkPolicy)
}

::google::protobuf::uint8* NetworkPolicy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1alpha1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->provider(), target);
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.NetworkPolicy)
  return target;
}

size_t NetworkPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.NetworkPolicy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1alpha1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->provider());
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.NetworkPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkPolicy* source =
      ::google::protobuf::DynamicCastToGenerated<NetworkPolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.NetworkPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.NetworkPolicy)
    MergeFrom(*source);
  }
}

void NetworkPolicy::MergeFrom(const NetworkPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.NetworkPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.provider() != 0) {
    set_provider(from.provider());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void NetworkPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.NetworkPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkPolicy::CopyFrom(const NetworkPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.NetworkPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkPolicy::IsInitialized() const {
  return true;
}

void NetworkPolicy::Swap(NetworkPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkPolicy::InternalSwap(NetworkPolicy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(provider_, other->provider_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata NetworkPolicy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IPAllocationPolicy::InitAsDefaultInstance() {
}
class IPAllocationPolicy::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IPAllocationPolicy::kUseIpAliasesFieldNumber;
const int IPAllocationPolicy::kCreateSubnetworkFieldNumber;
const int IPAllocationPolicy::kSubnetworkNameFieldNumber;
const int IPAllocationPolicy::kClusterIpv4CidrFieldNumber;
const int IPAllocationPolicy::kNodeIpv4CidrFieldNumber;
const int IPAllocationPolicy::kServicesIpv4CidrFieldNumber;
const int IPAllocationPolicy::kClusterSecondaryRangeNameFieldNumber;
const int IPAllocationPolicy::kServicesSecondaryRangeNameFieldNumber;
const int IPAllocationPolicy::kClusterIpv4CidrBlockFieldNumber;
const int IPAllocationPolicy::kNodeIpv4CidrBlockFieldNumber;
const int IPAllocationPolicy::kServicesIpv4CidrBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IPAllocationPolicy::IPAllocationPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.IPAllocationPolicy)
}
IPAllocationPolicy::IPAllocationPolicy(const IPAllocationPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subnetwork_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork_name().size() > 0) {
    subnetwork_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_name_);
  }
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr().size() > 0) {
    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  node_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_ipv4_cidr().size() > 0) {
    node_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_);
  }
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr().size() > 0) {
    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  cluster_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_secondary_range_name().size() > 0) {
    cluster_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_secondary_range_name_);
  }
  services_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_secondary_range_name().size() > 0) {
    services_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_secondary_range_name_);
  }
  cluster_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr_block().size() > 0) {
    cluster_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_block_);
  }
  node_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_ipv4_cidr_block().size() > 0) {
    node_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_block_);
  }
  services_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr_block().size() > 0) {
    services_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_block_);
  }
  ::memcpy(&use_ip_aliases_, &from.use_ip_aliases_,
    static_cast<size_t>(reinterpret_cast<char*>(&create_subnetwork_) -
    reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(create_subnetwork_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.IPAllocationPolicy)
}

void IPAllocationPolicy::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IPAllocationPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  subnetwork_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_ip_aliases_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_subnetwork_) -
      reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(create_subnetwork_));
}

IPAllocationPolicy::~IPAllocationPolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.IPAllocationPolicy)
  SharedDtor();
}

void IPAllocationPolicy::SharedDtor() {
  subnetwork_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IPAllocationPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IPAllocationPolicy& IPAllocationPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IPAllocationPolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void IPAllocationPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnetwork_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_ip_aliases_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_subnetwork_) -
      reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(create_subnetwork_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IPAllocationPolicy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IPAllocationPolicy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool use_ip_aliases = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_use_ip_aliases(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool create_subnetwork = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_create_subnetwork(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string subnetwork_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.subnetwork_name");
        object = msg->mutable_subnetwork_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_ipv4_cidr = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.cluster_ipv4_cidr");
        object = msg->mutable_cluster_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_ipv4_cidr = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.node_ipv4_cidr");
        object = msg->mutable_node_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string services_ipv4_cidr = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.services_ipv4_cidr");
        object = msg->mutable_services_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_secondary_range_name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.cluster_secondary_range_name");
        object = msg->mutable_cluster_secondary_range_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string services_secondary_range_name = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.services_secondary_range_name");
        object = msg->mutable_services_secondary_range_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_ipv4_cidr_block = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.cluster_ipv4_cidr_block");
        object = msg->mutable_cluster_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_ipv4_cidr_block = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.node_ipv4_cidr_block");
        object = msg->mutable_node_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string services_ipv4_cidr_block = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.IPAllocationPolicy.services_ipv4_cidr_block");
        object = msg->mutable_services_ipv4_cidr_block();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IPAllocationPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.IPAllocationPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool use_ip_aliases = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_ip_aliases_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool create_subnetwork = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_subnetwork_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subnetwork_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.subnetwork_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.cluster_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_ipv4_cidr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.node_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.services_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_secondary_range_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_secondary_range_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.cluster_secondary_range_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_secondary_range_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_secondary_range_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.services_secondary_range_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr_block = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.cluster_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_ipv4_cidr_block = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.node_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr_block = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.IPAllocationPolicy.services_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.IPAllocationPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.IPAllocationPolicy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IPAllocationPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_ip_aliases(), output);
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->create_subnetwork(), output);
  }

  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.subnetwork_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->subnetwork_name(), output);
  }

  // string cluster_ipv4_cidr = 4;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.cluster_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cluster_ipv4_cidr(), output);
  }

  // string node_ipv4_cidr = 5;
  if (this->node_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.node_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->node_ipv4_cidr(), output);
  }

  // string services_ipv4_cidr = 6;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.services_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->services_ipv4_cidr(), output);
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.cluster_secondary_range_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cluster_secondary_range_name(), output);
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.services_secondary_range_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->services_secondary_range_name(), output);
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.cluster_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cluster_ipv4_cidr_block(), output);
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.node_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->node_ipv4_cidr_block(), output);
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.services_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->services_ipv4_cidr_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.IPAllocationPolicy)
}

::google::protobuf::uint8* IPAllocationPolicy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_ip_aliases(), target);
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->create_subnetwork(), target);
  }

  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.subnetwork_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->subnetwork_name(), target);
  }

  // string cluster_ipv4_cidr = 4;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.cluster_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cluster_ipv4_cidr(), target);
  }

  // string node_ipv4_cidr = 5;
  if (this->node_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.node_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->node_ipv4_cidr(), target);
  }

  // string services_ipv4_cidr = 6;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.services_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->services_ipv4_cidr(), target);
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.cluster_secondary_range_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cluster_secondary_range_name(), target);
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.services_secondary_range_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->services_secondary_range_name(), target);
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.cluster_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cluster_ipv4_cidr_block(), target);
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.node_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->node_ipv4_cidr_block(), target);
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.IPAllocationPolicy.services_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->services_ipv4_cidr_block(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.IPAllocationPolicy)
  return target;
}

size_t IPAllocationPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.IPAllocationPolicy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork_name());
  }

  // string cluster_ipv4_cidr = 4;
  if (this->cluster_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr());
  }

  // string node_ipv4_cidr = 5;
  if (this->node_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_ipv4_cidr());
  }

  // string services_ipv4_cidr = 6;
  if (this->services_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr());
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_secondary_range_name());
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_secondary_range_name());
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr_block());
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_ipv4_cidr_block());
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr_block());
  }

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    total_size += 1 + 1;
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IPAllocationPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.IPAllocationPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const IPAllocationPolicy* source =
      ::google::protobuf::DynamicCastToGenerated<IPAllocationPolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.IPAllocationPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.IPAllocationPolicy)
    MergeFrom(*source);
  }
}

void IPAllocationPolicy::MergeFrom(const IPAllocationPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.IPAllocationPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subnetwork_name().size() > 0) {

    subnetwork_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_name_);
  }
  if (from.cluster_ipv4_cidr().size() > 0) {

    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  if (from.node_ipv4_cidr().size() > 0) {

    node_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_);
  }
  if (from.services_ipv4_cidr().size() > 0) {

    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  if (from.cluster_secondary_range_name().size() > 0) {

    cluster_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_secondary_range_name_);
  }
  if (from.services_secondary_range_name().size() > 0) {

    services_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_secondary_range_name_);
  }
  if (from.cluster_ipv4_cidr_block().size() > 0) {

    cluster_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_block_);
  }
  if (from.node_ipv4_cidr_block().size() > 0) {

    node_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_block_);
  }
  if (from.services_ipv4_cidr_block().size() > 0) {

    services_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_block_);
  }
  if (from.use_ip_aliases() != 0) {
    set_use_ip_aliases(from.use_ip_aliases());
  }
  if (from.create_subnetwork() != 0) {
    set_create_subnetwork(from.create_subnetwork());
  }
}

void IPAllocationPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.IPAllocationPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IPAllocationPolicy::CopyFrom(const IPAllocationPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.IPAllocationPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IPAllocationPolicy::IsInitialized() const {
  return true;
}

void IPAllocationPolicy::Swap(IPAllocationPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IPAllocationPolicy::InternalSwap(IPAllocationPolicy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  subnetwork_name_.Swap(&other->subnetwork_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_ipv4_cidr_.Swap(&other->cluster_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_ipv4_cidr_.Swap(&other->node_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  services_ipv4_cidr_.Swap(&other->services_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_secondary_range_name_.Swap(&other->cluster_secondary_range_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  services_secondary_range_name_.Swap(&other->services_secondary_range_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_ipv4_cidr_block_.Swap(&other->cluster_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_ipv4_cidr_block_.Swap(&other->node_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  services_ipv4_cidr_block_.Swap(&other->services_ipv4_cidr_block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(use_ip_aliases_, other->use_ip_aliases_);
  swap(create_subnetwork_, other->create_subnetwork_);
}

::google::protobuf::Metadata IPAllocationPolicy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PodSecurityPolicyConfig::InitAsDefaultInstance() {
}
class PodSecurityPolicyConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSecurityPolicyConfig::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSecurityPolicyConfig::PodSecurityPolicyConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.PodSecurityPolicyConfig)
}
PodSecurityPolicyConfig::PodSecurityPolicyConfig(const PodSecurityPolicyConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.PodSecurityPolicyConfig)
}

void PodSecurityPolicyConfig::SharedCtor() {
  enabled_ = false;
}

PodSecurityPolicyConfig::~PodSecurityPolicyConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.PodSecurityPolicyConfig)
  SharedDtor();
}

void PodSecurityPolicyConfig::SharedDtor() {
}

void PodSecurityPolicyConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PodSecurityPolicyConfig& PodSecurityPolicyConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PodSecurityPolicyConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void PodSecurityPolicyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PodSecurityPolicyConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PodSecurityPolicyConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PodSecurityPolicyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.PodSecurityPolicyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.PodSecurityPolicyConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PodSecurityPolicyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.PodSecurityPolicyConfig)
}

::google::protobuf::uint8* PodSecurityPolicyConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.PodSecurityPolicyConfig)
  return target;
}

size_t PodSecurityPolicyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PodSecurityPolicyConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSecurityPolicyConfig* source =
      ::google::protobuf::DynamicCastToGenerated<PodSecurityPolicyConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.PodSecurityPolicyConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.PodSecurityPolicyConfig)
    MergeFrom(*source);
  }
}

void PodSecurityPolicyConfig::MergeFrom(const PodSecurityPolicyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void PodSecurityPolicyConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSecurityPolicyConfig::CopyFrom(const PodSecurityPolicyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.PodSecurityPolicyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSecurityPolicyConfig::IsInitialized() const {
  return true;
}

void PodSecurityPolicyConfig::Swap(PodSecurityPolicyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSecurityPolicyConfig::InternalSwap(PodSecurityPolicyConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata PodSecurityPolicyConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Cluster::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_Cluster_default_instance_._instance.get_mutable()->node_config_ = const_cast< ::google::container::v1alpha1::NodeConfig*>(
      ::google::container::v1alpha1::NodeConfig::internal_default_instance());
  ::google::container::v1alpha1::_Cluster_default_instance_._instance.get_mutable()->master_auth_ = const_cast< ::google::container::v1alpha1::MasterAuth*>(
      ::google::container::v1alpha1::MasterAuth::internal_default_instance());
  ::google::container::v1alpha1::_Cluster_default_instance_._instance.get_mutable()->addons_config_ = const_cast< ::google::container::v1alpha1::AddonsConfig*>(
      ::google::container::v1alpha1::AddonsConfig::internal_default_instance());
  ::google::container::v1alpha1::_Cluster_default_instance_._instance.get_mutable()->network_policy_ = const_cast< ::google::container::v1alpha1::NetworkPolicy*>(
      ::google::container::v1alpha1::NetworkPolicy::internal_default_instance());
  ::google::container::v1alpha1::_Cluster_default_instance_._instance.get_mutable()->ip_allocation_policy_ = const_cast< ::google::container::v1alpha1::IPAllocationPolicy*>(
      ::google::container::v1alpha1::IPAllocationPolicy::internal_default_instance());
  ::google::container::v1alpha1::_Cluster_default_instance_._instance.get_mutable()->master_authorized_networks_config_ = const_cast< ::google::container::v1alpha1::MasterAuthorizedNetworksConfig*>(
      ::google::container::v1alpha1::MasterAuthorizedNetworksConfig::internal_default_instance());
  ::google::container::v1alpha1::_Cluster_default_instance_._instance.get_mutable()->maintenance_policy_ = const_cast< ::google::container::v1alpha1::MaintenancePolicy*>(
      ::google::container::v1alpha1::MaintenancePolicy::internal_default_instance());
  ::google::container::v1alpha1::_Cluster_default_instance_._instance.get_mutable()->pod_security_policy_config_ = const_cast< ::google::container::v1alpha1::PodSecurityPolicyConfig*>(
      ::google::container::v1alpha1::PodSecurityPolicyConfig::internal_default_instance());
}
class Cluster::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::NodeConfig& node_config(const Cluster* msg);
  static const ::google::container::v1alpha1::MasterAuth& master_auth(const Cluster* msg);
  static const ::google::container::v1alpha1::AddonsConfig& addons_config(const Cluster* msg);
  static const ::google::container::v1alpha1::NetworkPolicy& network_policy(const Cluster* msg);
  static const ::google::container::v1alpha1::IPAllocationPolicy& ip_allocation_policy(const Cluster* msg);
  static const ::google::container::v1alpha1::MasterAuthorizedNetworksConfig& master_authorized_networks_config(const Cluster* msg);
  static const ::google::container::v1alpha1::MaintenancePolicy& maintenance_policy(const Cluster* msg);
  static const ::google::container::v1alpha1::PodSecurityPolicyConfig& pod_security_policy_config(const Cluster* msg);
};

const ::google::container::v1alpha1::NodeConfig&
Cluster::HasBitSetters::node_config(const Cluster* msg) {
  return *msg->node_config_;
}
const ::google::container::v1alpha1::MasterAuth&
Cluster::HasBitSetters::master_auth(const Cluster* msg) {
  return *msg->master_auth_;
}
const ::google::container::v1alpha1::AddonsConfig&
Cluster::HasBitSetters::addons_config(const Cluster* msg) {
  return *msg->addons_config_;
}
const ::google::container::v1alpha1::NetworkPolicy&
Cluster::HasBitSetters::network_policy(const Cluster* msg) {
  return *msg->network_policy_;
}
const ::google::container::v1alpha1::IPAllocationPolicy&
Cluster::HasBitSetters::ip_allocation_policy(const Cluster* msg) {
  return *msg->ip_allocation_policy_;
}
const ::google::container::v1alpha1::MasterAuthorizedNetworksConfig&
Cluster::HasBitSetters::master_authorized_networks_config(const Cluster* msg) {
  return *msg->master_authorized_networks_config_;
}
const ::google::container::v1alpha1::MaintenancePolicy&
Cluster::HasBitSetters::maintenance_policy(const Cluster* msg) {
  return *msg->maintenance_policy_;
}
const ::google::container::v1alpha1::PodSecurityPolicyConfig&
Cluster::HasBitSetters::pod_security_policy_config(const Cluster* msg) {
  return *msg->pod_security_policy_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster::kNameFieldNumber;
const int Cluster::kDescriptionFieldNumber;
const int Cluster::kInitialNodeCountFieldNumber;
const int Cluster::kNodeConfigFieldNumber;
const int Cluster::kMasterAuthFieldNumber;
const int Cluster::kLoggingServiceFieldNumber;
const int Cluster::kMonitoringServiceFieldNumber;
const int Cluster::kNetworkFieldNumber;
const int Cluster::kClusterIpv4CidrFieldNumber;
const int Cluster::kAddonsConfigFieldNumber;
const int Cluster::kSubnetworkFieldNumber;
const int Cluster::kNodePoolsFieldNumber;
const int Cluster::kLocationsFieldNumber;
const int Cluster::kEnableKubernetesAlphaFieldNumber;
const int Cluster::kNetworkPolicyFieldNumber;
const int Cluster::kIpAllocationPolicyFieldNumber;
const int Cluster::kMasterAuthorizedNetworksConfigFieldNumber;
const int Cluster::kMaintenancePolicyFieldNumber;
const int Cluster::kPodSecurityPolicyConfigFieldNumber;
const int Cluster::kSelfLinkFieldNumber;
const int Cluster::kZoneFieldNumber;
const int Cluster::kEndpointFieldNumber;
const int Cluster::kInitialClusterVersionFieldNumber;
const int Cluster::kCurrentMasterVersionFieldNumber;
const int Cluster::kCurrentNodeVersionFieldNumber;
const int Cluster::kCreateTimeFieldNumber;
const int Cluster::kStatusFieldNumber;
const int Cluster::kStatusMessageFieldNumber;
const int Cluster::kNodeIpv4CidrSizeFieldNumber;
const int Cluster::kServicesIpv4CidrFieldNumber;
const int Cluster::kInstanceGroupUrlsFieldNumber;
const int Cluster::kCurrentNodeCountFieldNumber;
const int Cluster::kExpireTimeFieldNumber;
const int Cluster::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster::Cluster()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.Cluster)
}
Cluster::Cluster(const Cluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      node_pools_(from.node_pools_),
      locations_(from.locations_),
      instance_group_urls_(from.instance_group_urls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logging_service().size() > 0) {
    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.monitoring_service().size() > 0) {
    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.network().size() > 0) {
    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr().size() > 0) {
    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork().size() > 0) {
    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.endpoint().size() > 0) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  initial_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.initial_cluster_version().size() > 0) {
    initial_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_cluster_version_);
  }
  current_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_master_version().size() > 0) {
    current_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_master_version_);
  }
  current_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_node_version().size() > 0) {
    current_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_node_version_);
  }
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.create_time().size() > 0) {
    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr().size() > 0) {
    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  expire_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expire_time().size() > 0) {
    expire_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expire_time_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.has_node_config()) {
    node_config_ = new ::google::container::v1alpha1::NodeConfig(*from.node_config_);
  } else {
    node_config_ = nullptr;
  }
  if (from.has_master_auth()) {
    master_auth_ = new ::google::container::v1alpha1::MasterAuth(*from.master_auth_);
  } else {
    master_auth_ = nullptr;
  }
  if (from.has_addons_config()) {
    addons_config_ = new ::google::container::v1alpha1::AddonsConfig(*from.addons_config_);
  } else {
    addons_config_ = nullptr;
  }
  if (from.has_network_policy()) {
    network_policy_ = new ::google::container::v1alpha1::NetworkPolicy(*from.network_policy_);
  } else {
    network_policy_ = nullptr;
  }
  if (from.has_ip_allocation_policy()) {
    ip_allocation_policy_ = new ::google::container::v1alpha1::IPAllocationPolicy(*from.ip_allocation_policy_);
  } else {
    ip_allocation_policy_ = nullptr;
  }
  if (from.has_master_authorized_networks_config()) {
    master_authorized_networks_config_ = new ::google::container::v1alpha1::MasterAuthorizedNetworksConfig(*from.master_authorized_networks_config_);
  } else {
    master_authorized_networks_config_ = nullptr;
  }
  if (from.has_maintenance_policy()) {
    maintenance_policy_ = new ::google::container::v1alpha1::MaintenancePolicy(*from.maintenance_policy_);
  } else {
    maintenance_policy_ = nullptr;
  }
  if (from.has_pod_security_policy_config()) {
    pod_security_policy_config_ = new ::google::container::v1alpha1::PodSecurityPolicyConfig(*from.pod_security_policy_config_);
  } else {
    pod_security_policy_config_ = nullptr;
  }
  ::memcpy(&initial_node_count_, &from.initial_node_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
    reinterpret_cast<char*>(&initial_node_count_)) + sizeof(node_ipv4_cidr_size_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.Cluster)
}

void Cluster::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Cluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
      reinterpret_cast<char*>(&node_config_)) + sizeof(node_ipv4_cidr_size_));
}

Cluster::~Cluster() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.Cluster)
  SharedDtor();
}

void Cluster::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_config_;
  if (this != internal_default_instance()) delete master_auth_;
  if (this != internal_default_instance()) delete addons_config_;
  if (this != internal_default_instance()) delete network_policy_;
  if (this != internal_default_instance()) delete ip_allocation_policy_;
  if (this != internal_default_instance()) delete master_authorized_networks_config_;
  if (this != internal_default_instance()) delete maintenance_policy_;
  if (this != internal_default_instance()) delete pod_security_policy_config_;
}

void Cluster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cluster& Cluster::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Cluster_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_pools_.Clear();
  locations_.Clear();
  instance_group_urls_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && node_config_ != nullptr) {
    delete node_config_;
  }
  node_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && master_auth_ != nullptr) {
    delete master_auth_;
  }
  master_auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && addons_config_ != nullptr) {
    delete addons_config_;
  }
  addons_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && network_policy_ != nullptr) {
    delete network_policy_;
  }
  network_policy_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && ip_allocation_policy_ != nullptr) {
    delete ip_allocation_policy_;
  }
  ip_allocation_policy_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && master_authorized_networks_config_ != nullptr) {
    delete master_authorized_networks_config_;
  }
  master_authorized_networks_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && maintenance_policy_ != nullptr) {
    delete maintenance_policy_;
  }
  maintenance_policy_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pod_security_policy_config_ != nullptr) {
    delete pod_security_policy_config_;
  }
  pod_security_policy_config_ = nullptr;
  ::memset(&initial_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
      reinterpret_cast<char*>(&initial_node_count_)) + sizeof(node_ipv4_cidr_size_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Cluster::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Cluster*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 initial_node_count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_initial_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1alpha1.NodeConfig node_config = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NodeConfig::_InternalParse;
        object = msg->mutable_node_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.MasterAuth master_auth = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::MasterAuth::_InternalParse;
        object = msg->mutable_master_auth();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string logging_service = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.logging_service");
        object = msg->mutable_logging_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string monitoring_service = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.monitoring_service");
        object = msg->mutable_monitoring_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string network = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.network");
        object = msg->mutable_network();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_ipv4_cidr = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.cluster_ipv4_cidr");
        object = msg->mutable_cluster_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.AddonsConfig addons_config = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::AddonsConfig::_InternalParse;
        object = msg->mutable_addons_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string subnetwork = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.subnetwork");
        object = msg->mutable_subnetwork();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .google.container.v1alpha1.NodePool node_pools = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1alpha1::NodePool::_InternalParse;
          object = msg->add_node_pools();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 98 && (ptr += 1));
        break;
      }
      // repeated string locations = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.locations");
          object = msg->add_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 106 && (ptr += 1));
        break;
      }
      // bool enable_kubernetes_alpha = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_enable_kubernetes_alpha(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1alpha1.NetworkPolicy network_policy = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NetworkPolicy::_InternalParse;
        object = msg->mutable_network_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.IPAllocationPolicy ip_allocation_policy = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::IPAllocationPolicy::_InternalParse;
        object = msg->mutable_ip_allocation_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::MasterAuthorizedNetworksConfig::_InternalParse;
        object = msg->mutable_master_authorized_networks_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::MaintenancePolicy::_InternalParse;
        object = msg->mutable_maintenance_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.PodSecurityPolicyConfig pod_security_policy_config = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::PodSecurityPolicyConfig::_InternalParse;
        object = msg->mutable_pod_security_policy_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string self_link = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.self_link");
        object = msg->mutable_self_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 101;
      case 101: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string endpoint = 102;
      case 102: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.endpoint");
        object = msg->mutable_endpoint();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string initial_cluster_version = 103;
      case 103: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.initial_cluster_version");
        object = msg->mutable_initial_cluster_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string current_master_version = 104;
      case 104: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.current_master_version");
        object = msg->mutable_current_master_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string current_node_version = 105;
      case 105: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.current_node_version");
        object = msg->mutable_current_node_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string create_time = 106;
      case 106: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.create_time");
        object = msg->mutable_create_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.Cluster.Status status = 107;
      case 107: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::container::v1alpha1::Cluster_Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string status_message = 108;
      case 108: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.status_message");
        object = msg->mutable_status_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 node_ipv4_cidr_size = 109;
      case 109: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_node_ipv4_cidr_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string services_ipv4_cidr = 110;
      case 110: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.services_ipv4_cidr");
        object = msg->mutable_services_ipv4_cidr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string instance_group_urls = 111;
      case 111: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.instance_group_urls");
          object = msg->add_instance_group_urls();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 1786 && (ptr += 2));
        break;
      }
      // int32 current_node_count = 112;
      case 112: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_current_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string expire_time = 113;
      case 113: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.expire_time");
        object = msg->mutable_expire_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string location = 114;
      case 114: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Cluster.location");
        object = msg->mutable_location();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.Cluster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 initial_node_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initial_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodeConfig node_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.MasterAuth master_auth = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logging_service = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logging_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logging_service().data(), static_cast<int>(this->logging_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.logging_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string monitoring_service = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string network = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), static_cast<int>(this->network().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.network"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.cluster_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.AddonsConfig addons_config = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subnetwork = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.subnetwork"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1alpha1.NodePool node_pools = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_node_pools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locations = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            static_cast<int>(this->locations(this->locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_kubernetes_alpha = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_kubernetes_alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NetworkPolicy network_policy = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.IPAllocationPolicy ip_allocation_policy = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ip_allocation_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_authorized_networks_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maintenance_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.PodSecurityPolicyConfig pod_security_policy_config = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pod_security_policy_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (810 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string endpoint = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (818 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string initial_cluster_version = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (826 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initial_cluster_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.initial_cluster_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_master_version = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (834 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.current_master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_node_version = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (842 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.current_node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string create_time = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (850 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_time().data(), static_cast<int>(this->create_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.create_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.Cluster.Status status = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (856 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1alpha1::Cluster_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 108;
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (866 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_ipv4_cidr_size = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (872 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_ipv4_cidr_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (882 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.services_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string instance_group_urls = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (890 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_instance_group_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_group_urls(this->instance_group_urls_size() - 1).data(),
            static_cast<int>(this->instance_group_urls(this->instance_group_urls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.instance_group_urls"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current_node_count = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (896 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expire_time = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (906 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expire_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expire_time().data(), static_cast<int>(this->expire_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.expire_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (914 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Cluster.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.Cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.Cluster)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->initial_node_count(), output);
  }

  // .google.container.v1alpha1.NodeConfig node_config = 4;
  if (this->has_node_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::node_config(this), output);
  }

  // .google.container.v1alpha1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::master_auth(this), output);
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.logging_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->logging_service(), output);
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->monitoring_service(), output);
  }

  // string network = 8;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->network(), output);
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.cluster_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cluster_ipv4_cidr(), output);
  }

  // .google.container.v1alpha1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::addons_config(this), output);
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.subnetwork");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->subnetwork(), output);
  }

  // repeated .google.container.v1alpha1.NodePool node_pools = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->node_pools(static_cast<int>(i)),
      output);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->locations(i), output);
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->enable_kubernetes_alpha(), output);
  }

  // .google.container.v1alpha1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, HasBitSetters::network_policy(this), output);
  }

  // .google.container.v1alpha1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, HasBitSetters::ip_allocation_policy(this), output);
  }

  // .google.container.v1alpha1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, HasBitSetters::master_authorized_networks_config(this), output);
  }

  // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, HasBitSetters::maintenance_policy(this), output);
  }

  // .google.container.v1alpha1.PodSecurityPolicyConfig pod_security_policy_config = 25;
  if (this->has_pod_security_policy_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, HasBitSetters::pod_security_policy_config(this), output);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->self_link(), output);
  }

  // string zone = 101;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->zone(), output);
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->endpoint(), output);
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.initial_cluster_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->initial_cluster_version(), output);
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.current_master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->current_master_version(), output);
  }

  // string current_node_version = 105;
  if (this->current_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.current_node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      105, this->current_node_version(), output);
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), static_cast<int>(this->create_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.create_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      106, this->create_time(), output);
  }

  // .google.container.v1alpha1.Cluster.Status status = 107;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      107, this->status(), output);
  }

  // string status_message = 108;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      108, this->status_message(), output);
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(109, this->node_ipv4_cidr_size(), output);
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.services_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      110, this->services_ipv4_cidr(), output);
  }

  // repeated string instance_group_urls = 111;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.instance_group_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      111, this->instance_group_urls(i), output);
  }

  // int32 current_node_count = 112;
  if (this->current_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(112, this->current_node_count(), output);
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expire_time().data(), static_cast<int>(this->expire_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.expire_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      113, this->expire_time(), output);
  }

  // string location = 114;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      114, this->location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.Cluster)
}

::google::protobuf::uint8* Cluster::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->initial_node_count(), target);
  }

  // .google.container.v1alpha1.NodeConfig node_config = 4;
  if (this->has_node_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::node_config(this), target);
  }

  // .google.container.v1alpha1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::master_auth(this), target);
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.logging_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->logging_service(), target);
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->monitoring_service(), target);
  }

  // string network = 8;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->network(), target);
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.cluster_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cluster_ipv4_cidr(), target);
  }

  // .google.container.v1alpha1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::addons_config(this), target);
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.subnetwork");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->subnetwork(), target);
  }

  // repeated .google.container.v1alpha1.NodePool node_pools = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->node_pools(static_cast<int>(i)), target);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->locations(i), target);
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->enable_kubernetes_alpha(), target);
  }

  // .google.container.v1alpha1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, HasBitSetters::network_policy(this), target);
  }

  // .google.container.v1alpha1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, HasBitSetters::ip_allocation_policy(this), target);
  }

  // .google.container.v1alpha1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, HasBitSetters::master_authorized_networks_config(this), target);
  }

  // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, HasBitSetters::maintenance_policy(this), target);
  }

  // .google.container.v1alpha1.PodSecurityPolicyConfig pod_security_policy_config = 25;
  if (this->has_pod_security_policy_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, HasBitSetters::pod_security_policy_config(this), target);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->self_link(), target);
  }

  // string zone = 101;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->zone(), target);
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->endpoint(), target);
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.initial_cluster_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->initial_cluster_version(), target);
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.current_master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->current_master_version(), target);
  }

  // string current_node_version = 105;
  if (this->current_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.current_node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        105, this->current_node_version(), target);
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), static_cast<int>(this->create_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.create_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        106, this->create_time(), target);
  }

  // .google.container.v1alpha1.Cluster.Status status = 107;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      107, this->status(), target);
  }

  // string status_message = 108;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        108, this->status_message(), target);
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(109, this->node_ipv4_cidr_size(), target);
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.services_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        110, this->services_ipv4_cidr(), target);
  }

  // repeated string instance_group_urls = 111;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.instance_group_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(111, this->instance_group_urls(i), target);
  }

  // int32 current_node_count = 112;
  if (this->current_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(112, this->current_node_count(), target);
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expire_time().data(), static_cast<int>(this->expire_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.expire_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        113, this->expire_time(), target);
  }

  // string location = 114;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Cluster.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        114, this->location(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.Cluster)
  return target;
}

size_t Cluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.Cluster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.NodePool node_pools = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->node_pools_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_pools(static_cast<int>(i)));
    }
  }

  // repeated string locations = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locations_size());
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // repeated string instance_group_urls = 111;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->instance_group_urls_size());
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->instance_group_urls(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logging_service());
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitoring_service());
  }

  // string network = 8;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr());
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork());
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string zone = 101;
  if (this->zone().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->initial_cluster_version());
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_master_version());
  }

  // string current_node_version = 105;
  if (this->current_node_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_node_version());
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_time());
  }

  // string status_message = 108;
  if (this->status_message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr());
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expire_time());
  }

  // string location = 114;
  if (this->location().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // .google.container.v1alpha1.NodeConfig node_config = 4;
  if (this->has_node_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_config_);
  }

  // .google.container.v1alpha1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *master_auth_);
  }

  // .google.container.v1alpha1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *addons_config_);
  }

  // .google.container.v1alpha1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *network_policy_);
  }

  // .google.container.v1alpha1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ip_allocation_policy_);
  }

  // .google.container.v1alpha1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *master_authorized_networks_config_);
  }

  // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *maintenance_policy_);
  }

  // .google.container.v1alpha1.PodSecurityPolicyConfig pod_security_policy_config = 25;
  if (this->has_pod_security_policy_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pod_security_policy_config_);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->initial_node_count());
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    total_size += 1 + 1;
  }

  // int32 current_node_count = 112;
  if (this->current_node_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_node_count());
  }

  // .google.container.v1alpha1.Cluster.Status status = 107;
  if (this->status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_ipv4_cidr_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  const Cluster* source =
      ::google::protobuf::DynamicCastToGenerated<Cluster>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.Cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.Cluster)
    MergeFrom(*source);
  }
}

void Cluster::MergeFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_pools_.MergeFrom(from.node_pools_);
  locations_.MergeFrom(from.locations_);
  instance_group_urls_.MergeFrom(from.instance_group_urls_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.logging_service().size() > 0) {

    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  if (from.monitoring_service().size() > 0) {

    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.cluster_ipv4_cidr().size() > 0) {

    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  if (from.subnetwork().size() > 0) {

    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.endpoint().size() > 0) {

    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  if (from.initial_cluster_version().size() > 0) {

    initial_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_cluster_version_);
  }
  if (from.current_master_version().size() > 0) {

    current_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_master_version_);
  }
  if (from.current_node_version().size() > 0) {

    current_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_node_version_);
  }
  if (from.create_time().size() > 0) {

    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.services_ipv4_cidr().size() > 0) {

    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  if (from.expire_time().size() > 0) {

    expire_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expire_time_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.has_node_config()) {
    mutable_node_config()->::google::container::v1alpha1::NodeConfig::MergeFrom(from.node_config());
  }
  if (from.has_master_auth()) {
    mutable_master_auth()->::google::container::v1alpha1::MasterAuth::MergeFrom(from.master_auth());
  }
  if (from.has_addons_config()) {
    mutable_addons_config()->::google::container::v1alpha1::AddonsConfig::MergeFrom(from.addons_config());
  }
  if (from.has_network_policy()) {
    mutable_network_policy()->::google::container::v1alpha1::NetworkPolicy::MergeFrom(from.network_policy());
  }
  if (from.has_ip_allocation_policy()) {
    mutable_ip_allocation_policy()->::google::container::v1alpha1::IPAllocationPolicy::MergeFrom(from.ip_allocation_policy());
  }
  if (from.has_master_authorized_networks_config()) {
    mutable_master_authorized_networks_config()->::google::container::v1alpha1::MasterAuthorizedNetworksConfig::MergeFrom(from.master_authorized_networks_config());
  }
  if (from.has_maintenance_policy()) {
    mutable_maintenance_policy()->::google::container::v1alpha1::MaintenancePolicy::MergeFrom(from.maintenance_policy());
  }
  if (from.has_pod_security_policy_config()) {
    mutable_pod_security_policy_config()->::google::container::v1alpha1::PodSecurityPolicyConfig::MergeFrom(from.pod_security_policy_config());
  }
  if (from.initial_node_count() != 0) {
    set_initial_node_count(from.initial_node_count());
  }
  if (from.enable_kubernetes_alpha() != 0) {
    set_enable_kubernetes_alpha(from.enable_kubernetes_alpha());
  }
  if (from.current_node_count() != 0) {
    set_current_node_count(from.current_node_count());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.node_ipv4_cidr_size() != 0) {
    set_node_ipv4_cidr_size(from.node_ipv4_cidr_size());
  }
}

void Cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cluster::CopyFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster::IsInitialized() const {
  return true;
}

void Cluster::Swap(Cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster::InternalSwap(Cluster* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&node_pools_)->InternalSwap(CastToBase(&other->node_pools_));
  locations_.InternalSwap(CastToBase(&other->locations_));
  instance_group_urls_.InternalSwap(CastToBase(&other->instance_group_urls_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logging_service_.Swap(&other->logging_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  monitoring_service_.Swap(&other->monitoring_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  network_.Swap(&other->network_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_ipv4_cidr_.Swap(&other->cluster_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subnetwork_.Swap(&other->subnetwork_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  self_link_.Swap(&other->self_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  initial_cluster_version_.Swap(&other->initial_cluster_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  current_master_version_.Swap(&other->current_master_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  current_node_version_.Swap(&other->current_node_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  create_time_.Swap(&other->create_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_message_.Swap(&other->status_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  services_ipv4_cidr_.Swap(&other->services_ipv4_cidr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  expire_time_.Swap(&other->expire_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_config_, other->node_config_);
  swap(master_auth_, other->master_auth_);
  swap(addons_config_, other->addons_config_);
  swap(network_policy_, other->network_policy_);
  swap(ip_allocation_policy_, other->ip_allocation_policy_);
  swap(master_authorized_networks_config_, other->master_authorized_networks_config_);
  swap(maintenance_policy_, other->maintenance_policy_);
  swap(pod_security_policy_config_, other->pod_security_policy_config_);
  swap(initial_node_count_, other->initial_node_count_);
  swap(enable_kubernetes_alpha_, other->enable_kubernetes_alpha_);
  swap(current_node_count_, other->current_node_count_);
  swap(status_, other->status_);
  swap(node_ipv4_cidr_size_, other->node_ipv4_cidr_size_);
}

::google::protobuf::Metadata Cluster::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClusterUpdate::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_addons_config_ = const_cast< ::google::container::v1alpha1::AddonsConfig*>(
      ::google::container::v1alpha1::AddonsConfig::internal_default_instance());
  ::google::container::v1alpha1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_node_pool_autoscaling_ = const_cast< ::google::container::v1alpha1::NodePoolAutoscaling*>(
      ::google::container::v1alpha1::NodePoolAutoscaling::internal_default_instance());
  ::google::container::v1alpha1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_master_authorized_networks_config_ = const_cast< ::google::container::v1alpha1::MasterAuthorizedNetworksConfig*>(
      ::google::container::v1alpha1::MasterAuthorizedNetworksConfig::internal_default_instance());
  ::google::container::v1alpha1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_pod_security_policy_config_ = const_cast< ::google::container::v1alpha1::PodSecurityPolicyConfig*>(
      ::google::container::v1alpha1::PodSecurityPolicyConfig::internal_default_instance());
}
class ClusterUpdate::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::AddonsConfig& desired_addons_config(const ClusterUpdate* msg);
  static const ::google::container::v1alpha1::NodePoolAutoscaling& desired_node_pool_autoscaling(const ClusterUpdate* msg);
  static const ::google::container::v1alpha1::MasterAuthorizedNetworksConfig& desired_master_authorized_networks_config(const ClusterUpdate* msg);
  static const ::google::container::v1alpha1::PodSecurityPolicyConfig& desired_pod_security_policy_config(const ClusterUpdate* msg);
};

const ::google::container::v1alpha1::AddonsConfig&
ClusterUpdate::HasBitSetters::desired_addons_config(const ClusterUpdate* msg) {
  return *msg->desired_addons_config_;
}
const ::google::container::v1alpha1::NodePoolAutoscaling&
ClusterUpdate::HasBitSetters::desired_node_pool_autoscaling(const ClusterUpdate* msg) {
  return *msg->desired_node_pool_autoscaling_;
}
const ::google::container::v1alpha1::MasterAuthorizedNetworksConfig&
ClusterUpdate::HasBitSetters::desired_master_authorized_networks_config(const ClusterUpdate* msg) {
  return *msg->desired_master_authorized_networks_config_;
}
const ::google::container::v1alpha1::PodSecurityPolicyConfig&
ClusterUpdate::HasBitSetters::desired_pod_security_policy_config(const ClusterUpdate* msg) {
  return *msg->desired_pod_security_policy_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterUpdate::kDesiredNodeVersionFieldNumber;
const int ClusterUpdate::kDesiredMonitoringServiceFieldNumber;
const int ClusterUpdate::kDesiredAddonsConfigFieldNumber;
const int ClusterUpdate::kDesiredNodePoolIdFieldNumber;
const int ClusterUpdate::kDesiredImageTypeFieldNumber;
const int ClusterUpdate::kDesiredNodePoolAutoscalingFieldNumber;
const int ClusterUpdate::kDesiredLocationsFieldNumber;
const int ClusterUpdate::kDesiredMasterAuthorizedNetworksConfigFieldNumber;
const int ClusterUpdate::kDesiredPodSecurityPolicyConfigFieldNumber;
const int ClusterUpdate::kDesiredMasterVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterUpdate::ClusterUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ClusterUpdate)
}
ClusterUpdate::ClusterUpdate(const ClusterUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      desired_locations_(from.desired_locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desired_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_node_version().size() > 0) {
    desired_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_version_);
  }
  desired_monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_monitoring_service().size() > 0) {
    desired_monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_monitoring_service_);
  }
  desired_node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_node_pool_id().size() > 0) {
    desired_node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_pool_id_);
  }
  desired_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_image_type().size() > 0) {
    desired_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_image_type_);
  }
  desired_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_master_version().size() > 0) {
    desired_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_master_version_);
  }
  if (from.has_desired_addons_config()) {
    desired_addons_config_ = new ::google::container::v1alpha1::AddonsConfig(*from.desired_addons_config_);
  } else {
    desired_addons_config_ = nullptr;
  }
  if (from.has_desired_node_pool_autoscaling()) {
    desired_node_pool_autoscaling_ = new ::google::container::v1alpha1::NodePoolAutoscaling(*from.desired_node_pool_autoscaling_);
  } else {
    desired_node_pool_autoscaling_ = nullptr;
  }
  if (from.has_desired_master_authorized_networks_config()) {
    desired_master_authorized_networks_config_ = new ::google::container::v1alpha1::MasterAuthorizedNetworksConfig(*from.desired_master_authorized_networks_config_);
  } else {
    desired_master_authorized_networks_config_ = nullptr;
  }
  if (from.has_desired_pod_security_policy_config()) {
    desired_pod_security_policy_config_ = new ::google::container::v1alpha1::PodSecurityPolicyConfig(*from.desired_pod_security_policy_config_);
  } else {
    desired_pod_security_policy_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ClusterUpdate)
}

void ClusterUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClusterUpdate_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  desired_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&desired_addons_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&desired_pod_security_policy_config_) -
      reinterpret_cast<char*>(&desired_addons_config_)) + sizeof(desired_pod_security_policy_config_));
}

ClusterUpdate::~ClusterUpdate() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ClusterUpdate)
  SharedDtor();
}

void ClusterUpdate::SharedDtor() {
  desired_node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete desired_addons_config_;
  if (this != internal_default_instance()) delete desired_node_pool_autoscaling_;
  if (this != internal_default_instance()) delete desired_master_authorized_networks_config_;
  if (this != internal_default_instance()) delete desired_pod_security_policy_config_;
}

void ClusterUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClusterUpdate& ClusterUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClusterUpdate_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ClusterUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  desired_locations_.Clear();
  desired_node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && desired_addons_config_ != nullptr) {
    delete desired_addons_config_;
  }
  desired_addons_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_node_pool_autoscaling_ != nullptr) {
    delete desired_node_pool_autoscaling_;
  }
  desired_node_pool_autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_master_authorized_networks_config_ != nullptr) {
    delete desired_master_authorized_networks_config_;
  }
  desired_master_authorized_networks_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && desired_pod_security_policy_config_ != nullptr) {
    delete desired_pod_security_policy_config_;
  }
  desired_pod_security_policy_config_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClusterUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClusterUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string desired_node_version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ClusterUpdate.desired_node_version");
        object = msg->mutable_desired_node_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string desired_monitoring_service = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ClusterUpdate.desired_monitoring_service");
        object = msg->mutable_desired_monitoring_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.AddonsConfig desired_addons_config = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::AddonsConfig::_InternalParse;
        object = msg->mutable_desired_addons_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string desired_node_pool_id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ClusterUpdate.desired_node_pool_id");
        object = msg->mutable_desired_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string desired_image_type = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ClusterUpdate.desired_image_type");
        object = msg->mutable_desired_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NodePoolAutoscaling::_InternalParse;
        object = msg->mutable_desired_node_pool_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated string desired_locations = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ClusterUpdate.desired_locations");
          object = msg->add_desired_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      // .google.container.v1alpha1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::MasterAuthorizedNetworksConfig::_InternalParse;
        object = msg->mutable_desired_master_authorized_networks_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.PodSecurityPolicyConfig desired_pod_security_policy_config = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::PodSecurityPolicyConfig::_InternalParse;
        object = msg->mutable_desired_pod_security_policy_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string desired_master_version = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ClusterUpdate.desired_master_version");
        object = msg->mutable_desired_master_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClusterUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ClusterUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string desired_node_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ClusterUpdate.desired_node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_monitoring_service = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ClusterUpdate.desired_monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.AddonsConfig desired_addons_config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_node_pool_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ClusterUpdate.desired_node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_image_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ClusterUpdate.desired_image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_node_pool_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string desired_locations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_desired_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_locations(this->desired_locations_size() - 1).data(),
            static_cast<int>(this->desired_locations(this->desired_locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ClusterUpdate.desired_locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_master_authorized_networks_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.PodSecurityPolicyConfig desired_pod_security_policy_config = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_pod_security_policy_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_master_version = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ClusterUpdate.desired_master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ClusterUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ClusterUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClusterUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->desired_node_version(), output);
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desired_monitoring_service(), output);
  }

  // .google.container.v1alpha1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::desired_addons_config(this), output);
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->desired_node_pool_id(), output);
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->desired_image_type(), output);
  }

  // .google.container.v1alpha1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::desired_node_pool_autoscaling(this), output);
  }

  // repeated string desired_locations = 10;
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_locations(i).data(), static_cast<int>(this->desired_locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->desired_locations(i), output);
  }

  // .google.container.v1alpha1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::desired_master_authorized_networks_config(this), output);
  }

  // .google.container.v1alpha1.PodSecurityPolicyConfig desired_pod_security_policy_config = 14;
  if (this->has_desired_pod_security_policy_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::desired_pod_security_policy_config(this), output);
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->desired_master_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ClusterUpdate)
}

::google::protobuf::uint8* ClusterUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desired_node_version(), target);
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desired_monitoring_service(), target);
  }

  // .google.container.v1alpha1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::desired_addons_config(this), target);
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->desired_node_pool_id(), target);
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->desired_image_type(), target);
  }

  // .google.container.v1alpha1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::desired_node_pool_autoscaling(this), target);
  }

  // repeated string desired_locations = 10;
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_locations(i).data(), static_cast<int>(this->desired_locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->desired_locations(i), target);
  }

  // .google.container.v1alpha1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::desired_master_authorized_networks_config(this), target);
  }

  // .google.container.v1alpha1.PodSecurityPolicyConfig desired_pod_security_policy_config = 14;
  if (this->has_desired_pod_security_policy_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::desired_pod_security_policy_config(this), target);
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ClusterUpdate.desired_master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->desired_master_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ClusterUpdate)
  return target;
}

size_t ClusterUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ClusterUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string desired_locations = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->desired_locations_size());
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->desired_locations(i));
  }

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_node_version());
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_monitoring_service());
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_node_pool_id());
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_image_type());
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_master_version());
  }

  // .google.container.v1alpha1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_addons_config_);
  }

  // .google.container.v1alpha1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_node_pool_autoscaling_);
  }

  // .google.container.v1alpha1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_master_authorized_networks_config_);
  }

  // .google.container.v1alpha1.PodSecurityPolicyConfig desired_pod_security_policy_config = 14;
  if (this->has_desired_pod_security_policy_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *desired_pod_security_policy_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ClusterUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<ClusterUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ClusterUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ClusterUpdate)
    MergeFrom(*source);
  }
}

void ClusterUpdate::MergeFrom(const ClusterUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ClusterUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  desired_locations_.MergeFrom(from.desired_locations_);
  if (from.desired_node_version().size() > 0) {

    desired_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_version_);
  }
  if (from.desired_monitoring_service().size() > 0) {

    desired_monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_monitoring_service_);
  }
  if (from.desired_node_pool_id().size() > 0) {

    desired_node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_pool_id_);
  }
  if (from.desired_image_type().size() > 0) {

    desired_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_image_type_);
  }
  if (from.desired_master_version().size() > 0) {

    desired_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_master_version_);
  }
  if (from.has_desired_addons_config()) {
    mutable_desired_addons_config()->::google::container::v1alpha1::AddonsConfig::MergeFrom(from.desired_addons_config());
  }
  if (from.has_desired_node_pool_autoscaling()) {
    mutable_desired_node_pool_autoscaling()->::google::container::v1alpha1::NodePoolAutoscaling::MergeFrom(from.desired_node_pool_autoscaling());
  }
  if (from.has_desired_master_authorized_networks_config()) {
    mutable_desired_master_authorized_networks_config()->::google::container::v1alpha1::MasterAuthorizedNetworksConfig::MergeFrom(from.desired_master_authorized_networks_config());
  }
  if (from.has_desired_pod_security_policy_config()) {
    mutable_desired_pod_security_policy_config()->::google::container::v1alpha1::PodSecurityPolicyConfig::MergeFrom(from.desired_pod_security_policy_config());
  }
}

void ClusterUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ClusterUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterUpdate::CopyFrom(const ClusterUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ClusterUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterUpdate::IsInitialized() const {
  return true;
}

void ClusterUpdate::Swap(ClusterUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterUpdate::InternalSwap(ClusterUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  desired_locations_.InternalSwap(CastToBase(&other->desired_locations_));
  desired_node_version_.Swap(&other->desired_node_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_monitoring_service_.Swap(&other->desired_monitoring_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_node_pool_id_.Swap(&other->desired_node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_image_type_.Swap(&other->desired_image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desired_master_version_.Swap(&other->desired_master_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(desired_addons_config_, other->desired_addons_config_);
  swap(desired_node_pool_autoscaling_, other->desired_node_pool_autoscaling_);
  swap(desired_master_authorized_networks_config_, other->desired_master_authorized_networks_config_);
  swap(desired_pod_security_policy_config_, other->desired_pod_security_policy_config_);
}

::google::protobuf::Metadata ClusterUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Operation::InitAsDefaultInstance() {
}
class Operation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operation::kNameFieldNumber;
const int Operation::kZoneFieldNumber;
const int Operation::kOperationTypeFieldNumber;
const int Operation::kStatusFieldNumber;
const int Operation::kDetailFieldNumber;
const int Operation::kStatusMessageFieldNumber;
const int Operation::kSelfLinkFieldNumber;
const int Operation::kTargetLinkFieldNumber;
const int Operation::kLocationFieldNumber;
const int Operation::kStartTimeFieldNumber;
const int Operation::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operation::Operation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.Operation)
}
Operation::Operation(const Operation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  target_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_link().size() > 0) {
    target_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_link_);
  }
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail().size() > 0) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_time().size() > 0) {
    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  ::memcpy(&operation_type_, &from.operation_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&operation_type_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.Operation)
}

void Operation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Operation_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&operation_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&operation_type_)) + sizeof(status_));
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.Operation)
  SharedDtor();
}

void Operation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Operation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Operation& Operation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Operation_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&operation_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&operation_type_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Operation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Operation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.Operation.Type operation_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_operation_type(static_cast<::google::container::v1alpha1::Operation_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1alpha1.Operation.Status status = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::container::v1alpha1::Operation_Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string status_message = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.status_message");
        object = msg->mutable_status_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string self_link = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.self_link");
        object = msg->mutable_self_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string target_link = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.target_link");
        object = msg->mutable_target_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string detail = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.detail");
        object = msg->mutable_detail();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string location = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.location");
        object = msg->mutable_location();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string start_time = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.start_time");
        object = msg->mutable_start_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string end_time = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.Operation.end_time");
        object = msg->mutable_end_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Operation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.Operation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.Operation.Type operation_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::google::container::v1alpha1::Operation_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.Operation.Status status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1alpha1::Operation_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_link = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_link().data(), static_cast<int>(this->target_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.target_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail().data(), static_cast<int>(this->detail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string start_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string end_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end_time().data(), static_cast<int>(this->end_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.Operation.end_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.Operation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.Operation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Operation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // .google.container.v1alpha1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->operation_type(), output);
  }

  // .google.container.v1alpha1.Operation.Status status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->status_message(), output);
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->self_link(), output);
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_link().data(), static_cast<int>(this->target_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.target_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->target_link(), output);
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->detail(), output);
  }

  // string location = 9;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->location(), output);
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->start_time(), output);
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.end_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->end_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.Operation)
}

::google::protobuf::uint8* Operation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // .google.container.v1alpha1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->operation_type(), target);
  }

  // .google.container.v1alpha1.Operation.Status status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->status_message(), target);
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->self_link(), target);
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_link().data(), static_cast<int>(this->target_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.target_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->target_link(), target);
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->detail(), target);
  }

  // string location = 9;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->location(), target);
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->start_time(), target);
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.Operation.end_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->end_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.Operation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_link());
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  // string location = 9;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_time());
  }

  // .google.container.v1alpha1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  // .google.container.v1alpha1.Operation.Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  const Operation* source =
      ::google::protobuf::DynamicCastToGenerated<Operation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.Operation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.Operation)
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.target_link().size() > 0) {

    target_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_link_);
  }
  if (from.detail().size() > 0) {

    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  if (from.end_time().size() > 0) {

    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Operation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::Swap(Operation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operation::InternalSwap(Operation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_message_.Swap(&other->status_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  self_link_.Swap(&other->self_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_link_.Swap(&other->target_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  detail_.Swap(&other->detail_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  start_time_.Swap(&other->start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_time_.Swap(&other->end_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(operation_type_, other->operation_type_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateClusterRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_CreateClusterRequest_default_instance_._instance.get_mutable()->cluster_ = const_cast< ::google::container::v1alpha1::Cluster*>(
      ::google::container::v1alpha1::Cluster::internal_default_instance());
}
class CreateClusterRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::Cluster& cluster(const CreateClusterRequest* msg);
};

const ::google::container::v1alpha1::Cluster&
CreateClusterRequest::HasBitSetters::cluster(const CreateClusterRequest* msg) {
  return *msg->cluster_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterRequest::kProjectIdFieldNumber;
const int CreateClusterRequest::kZoneFieldNumber;
const int CreateClusterRequest::kClusterFieldNumber;
const int CreateClusterRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterRequest::CreateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.CreateClusterRequest)
}
CreateClusterRequest::CreateClusterRequest(const CreateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_cluster()) {
    cluster_ = new ::google::container::v1alpha1::Cluster(*from.cluster_);
  } else {
    cluster_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.CreateClusterRequest)
}

void CreateClusterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ = nullptr;
}

CreateClusterRequest::~CreateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.CreateClusterRequest)
  SharedDtor();
}

void CreateClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cluster_;
}

void CreateClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateClusterRequest& CreateClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CreateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && cluster_ != nullptr) {
    delete cluster_;
  }
  cluster_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateClusterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateClusterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CreateClusterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CreateClusterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.Cluster cluster = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::Cluster::_InternalParse;
        object = msg->mutable_cluster();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string parent = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CreateClusterRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.CreateClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CreateClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CreateClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.Cluster cluster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CreateClusterRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.CreateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.CreateClusterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // .google.container.v1alpha1.Cluster cluster = 3;
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::cluster(this), output);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateClusterRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.CreateClusterRequest)
}

::google::protobuf::uint8* CreateClusterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // .google.container.v1alpha1.Cluster cluster = 3;
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::cluster(this), target);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateClusterRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.CreateClusterRequest)
  return target;
}

size_t CreateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.CreateClusterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.container.v1alpha1.Cluster cluster = 3;
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateClusterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.CreateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.CreateClusterRequest)
    MergeFrom(*source);
  }
}

void CreateClusterRequest::MergeFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_cluster()) {
    mutable_cluster()->::google::container::v1alpha1::Cluster::MergeFrom(from.cluster());
  }
}

void CreateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterRequest::CopyFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterRequest::IsInitialized() const {
  return true;
}

void CreateClusterRequest::Swap(CreateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterRequest::InternalSwap(CreateClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cluster_, other->cluster_);
}

::google::protobuf::Metadata CreateClusterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetClusterRequest::InitAsDefaultInstance() {
}
class GetClusterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterRequest::kProjectIdFieldNumber;
const int GetClusterRequest::kZoneFieldNumber;
const int GetClusterRequest::kClusterIdFieldNumber;
const int GetClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterRequest::GetClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.GetClusterRequest)
}
GetClusterRequest::GetClusterRequest(const GetClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.GetClusterRequest)
}

void GetClusterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetClusterRequest::~GetClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.GetClusterRequest)
  SharedDtor();
}

void GetClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetClusterRequest& GetClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetClusterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetClusterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetClusterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetClusterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetClusterRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetClusterRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.GetClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.GetClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.GetClusterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.GetClusterRequest)
}

::google::protobuf::uint8* GetClusterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.GetClusterRequest)
  return target;
}

size_t GetClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.GetClusterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetClusterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.GetClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.GetClusterRequest)
    MergeFrom(*source);
  }
}

void GetClusterRequest::MergeFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterRequest::CopyFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterRequest::IsInitialized() const {
  return true;
}

void GetClusterRequest::Swap(GetClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterRequest::InternalSwap(GetClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetClusterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateClusterRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_UpdateClusterRequest_default_instance_._instance.get_mutable()->update_ = const_cast< ::google::container::v1alpha1::ClusterUpdate*>(
      ::google::container::v1alpha1::ClusterUpdate::internal_default_instance());
}
class UpdateClusterRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::ClusterUpdate& update(const UpdateClusterRequest* msg);
};

const ::google::container::v1alpha1::ClusterUpdate&
UpdateClusterRequest::HasBitSetters::update(const UpdateClusterRequest* msg) {
  return *msg->update_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterRequest::kProjectIdFieldNumber;
const int UpdateClusterRequest::kZoneFieldNumber;
const int UpdateClusterRequest::kClusterIdFieldNumber;
const int UpdateClusterRequest::kUpdateFieldNumber;
const int UpdateClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterRequest::UpdateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.UpdateClusterRequest)
}
UpdateClusterRequest::UpdateClusterRequest(const UpdateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_update()) {
    update_ = new ::google::container::v1alpha1::ClusterUpdate(*from.update_);
  } else {
    update_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.UpdateClusterRequest)
}

void UpdateClusterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_ = nullptr;
}

UpdateClusterRequest::~UpdateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.UpdateClusterRequest)
  SharedDtor();
}

void UpdateClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete update_;
}

void UpdateClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateClusterRequest& UpdateClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpdateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && update_ != nullptr) {
    delete update_;
  }
  update_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateClusterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateClusterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateClusterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateClusterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateClusterRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.ClusterUpdate update = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::ClusterUpdate::_InternalParse;
        object = msg->mutable_update();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateClusterRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.UpdateClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.ClusterUpdate update = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.UpdateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.UpdateClusterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1alpha1.ClusterUpdate update = 4;
  if (this->has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::update(this), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.UpdateClusterRequest)
}

::google::protobuf::uint8* UpdateClusterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1alpha1.ClusterUpdate update = 4;
  if (this->has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::update(this), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.UpdateClusterRequest)
  return target;
}

size_t UpdateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.UpdateClusterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1alpha1.ClusterUpdate update = 4;
  if (this->has_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.UpdateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateClusterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.UpdateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.UpdateClusterRequest)
    MergeFrom(*source);
  }
}

void UpdateClusterRequest::MergeFrom(const UpdateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.UpdateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_update()) {
    mutable_update()->::google::container::v1alpha1::ClusterUpdate::MergeFrom(from.update());
  }
}

void UpdateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.UpdateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterRequest::CopyFrom(const UpdateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.UpdateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterRequest::IsInitialized() const {
  return true;
}

void UpdateClusterRequest::Swap(UpdateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterRequest::InternalSwap(UpdateClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(update_, other->update_);
}

::google::protobuf::Metadata UpdateClusterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateNodePoolRequest::InitAsDefaultInstance() {
}
class UpdateNodePoolRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateNodePoolRequest::kProjectIdFieldNumber;
const int UpdateNodePoolRequest::kZoneFieldNumber;
const int UpdateNodePoolRequest::kClusterIdFieldNumber;
const int UpdateNodePoolRequest::kNodePoolIdFieldNumber;
const int UpdateNodePoolRequest::kNodeVersionFieldNumber;
const int UpdateNodePoolRequest::kImageTypeFieldNumber;
const int UpdateNodePoolRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateNodePoolRequest::UpdateNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.UpdateNodePoolRequest)
}
UpdateNodePoolRequest::UpdateNodePoolRequest(const UpdateNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_version().size() > 0) {
    node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_version_);
  }
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_type().size() > 0) {
    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.UpdateNodePoolRequest)
}

void UpdateNodePoolRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateNodePoolRequest::~UpdateNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.UpdateNodePoolRequest)
  SharedDtor();
}

void UpdateNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateNodePoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateNodePoolRequest& UpdateNodePoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpdateNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateNodePoolRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateNodePoolRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateNodePoolRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateNodePoolRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateNodePoolRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateNodePoolRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_version = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateNodePoolRequest.node_version");
        object = msg->mutable_node_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string image_type = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateNodePoolRequest.image_type");
        object = msg->mutable_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateNodePoolRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.UpdateNodePoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_version().data(), static_cast<int>(this->node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateNodePoolRequest.node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_type().data(), static_cast<int>(this->image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateNodePoolRequest.image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateNodePoolRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.UpdateNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.UpdateNodePoolRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string node_version = 5;
  if (this->node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_version().data(), static_cast<int>(this->node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->node_version(), output);
  }

  // string image_type = 6;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->image_type(), output);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.UpdateNodePoolRequest)
}

::google::protobuf::uint8* UpdateNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string node_version = 5;
  if (this->node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_version().data(), static_cast<int>(this->node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->node_version(), target);
  }

  // string image_type = 6;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->image_type(), target);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateNodePoolRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.UpdateNodePoolRequest)
  return target;
}

size_t UpdateNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.UpdateNodePoolRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string node_version = 5;
  if (this->node_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_version());
  }

  // string image_type = 6;
  if (this->image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_type());
  }

  // string name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.UpdateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateNodePoolRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateNodePoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.UpdateNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.UpdateNodePoolRequest)
    MergeFrom(*source);
  }
}

void UpdateNodePoolRequest::MergeFrom(const UpdateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.UpdateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.node_version().size() > 0) {

    node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_version_);
  }
  if (from.image_type().size() > 0) {

    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void UpdateNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.UpdateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNodePoolRequest::CopyFrom(const UpdateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.UpdateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNodePoolRequest::IsInitialized() const {
  return true;
}

void UpdateNodePoolRequest::Swap(UpdateNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateNodePoolRequest::InternalSwap(UpdateNodePoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_version_.Swap(&other->node_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_type_.Swap(&other->image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UpdateNodePoolRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolAutoscalingRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_SetNodePoolAutoscalingRequest_default_instance_._instance.get_mutable()->autoscaling_ = const_cast< ::google::container::v1alpha1::NodePoolAutoscaling*>(
      ::google::container::v1alpha1::NodePoolAutoscaling::internal_default_instance());
}
class SetNodePoolAutoscalingRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::NodePoolAutoscaling& autoscaling(const SetNodePoolAutoscalingRequest* msg);
};

const ::google::container::v1alpha1::NodePoolAutoscaling&
SetNodePoolAutoscalingRequest::HasBitSetters::autoscaling(const SetNodePoolAutoscalingRequest* msg) {
  return *msg->autoscaling_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolAutoscalingRequest::kProjectIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kZoneFieldNumber;
const int SetNodePoolAutoscalingRequest::kClusterIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kNodePoolIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kAutoscalingFieldNumber;
const int SetNodePoolAutoscalingRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolAutoscalingRequest::SetNodePoolAutoscalingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
}
SetNodePoolAutoscalingRequest::SetNodePoolAutoscalingRequest(const SetNodePoolAutoscalingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_autoscaling()) {
    autoscaling_ = new ::google::container::v1alpha1::NodePoolAutoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
}

void SetNodePoolAutoscalingRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNodePoolAutoscalingRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autoscaling_ = nullptr;
}

SetNodePoolAutoscalingRequest::~SetNodePoolAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  SharedDtor();
}

void SetNodePoolAutoscalingRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void SetNodePoolAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNodePoolAutoscalingRequest& SetNodePoolAutoscalingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNodePoolAutoscalingRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetNodePoolAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNodePoolAutoscalingRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNodePoolAutoscalingRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolAutoscalingRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolAutoscalingRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolAutoscalingRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolAutoscalingRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NodePoolAutoscaling::_InternalParse;
        object = msg->mutable_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolAutoscalingRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNodePoolAutoscalingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolAutoscalingRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolAutoscalingRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolAutoscalingRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolAutoscalingRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolAutoscalingRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNodePoolAutoscalingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 5;
  if (this->has_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::autoscaling(this), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
}

::google::protobuf::uint8* SetNodePoolAutoscalingRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 5;
  if (this->has_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::autoscaling(this), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolAutoscalingRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  return target;
}

size_t SetNodePoolAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 5;
  if (this->has_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNodePoolAutoscalingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolAutoscalingRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNodePoolAutoscalingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolAutoscalingRequest::MergeFrom(const SetNodePoolAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_autoscaling()) {
    mutable_autoscaling()->::google::container::v1alpha1::NodePoolAutoscaling::MergeFrom(from.autoscaling());
  }
}

void SetNodePoolAutoscalingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolAutoscalingRequest::CopyFrom(const SetNodePoolAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetNodePoolAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolAutoscalingRequest::IsInitialized() const {
  return true;
}

void SetNodePoolAutoscalingRequest::Swap(SetNodePoolAutoscalingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolAutoscalingRequest::InternalSwap(SetNodePoolAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(autoscaling_, other->autoscaling_);
}

::google::protobuf::Metadata SetNodePoolAutoscalingRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetLoggingServiceRequest::InitAsDefaultInstance() {
}
class SetLoggingServiceRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLoggingServiceRequest::kProjectIdFieldNumber;
const int SetLoggingServiceRequest::kZoneFieldNumber;
const int SetLoggingServiceRequest::kClusterIdFieldNumber;
const int SetLoggingServiceRequest::kLoggingServiceFieldNumber;
const int SetLoggingServiceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLoggingServiceRequest::SetLoggingServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetLoggingServiceRequest)
}
SetLoggingServiceRequest::SetLoggingServiceRequest(const SetLoggingServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logging_service().size() > 0) {
    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetLoggingServiceRequest)
}

void SetLoggingServiceRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetLoggingServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetLoggingServiceRequest::~SetLoggingServiceRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetLoggingServiceRequest)
  SharedDtor();
}

void SetLoggingServiceRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLoggingServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLoggingServiceRequest& SetLoggingServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetLoggingServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetLoggingServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetLoggingServiceRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetLoggingServiceRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLoggingServiceRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLoggingServiceRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLoggingServiceRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string logging_service = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLoggingServiceRequest.logging_service");
        object = msg->mutable_logging_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLoggingServiceRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLoggingServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetLoggingServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLoggingServiceRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLoggingServiceRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLoggingServiceRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logging_service = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logging_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logging_service().data(), static_cast<int>(this->logging_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLoggingServiceRequest.logging_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLoggingServiceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetLoggingServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetLoggingServiceRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetLoggingServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string logging_service = 4;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.logging_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->logging_service(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetLoggingServiceRequest)
}

::google::protobuf::uint8* SetLoggingServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string logging_service = 4;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.logging_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->logging_service(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLoggingServiceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetLoggingServiceRequest)
  return target;
}

size_t SetLoggingServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetLoggingServiceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string logging_service = 4;
  if (this->logging_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logging_service());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLoggingServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetLoggingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLoggingServiceRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetLoggingServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetLoggingServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetLoggingServiceRequest)
    MergeFrom(*source);
  }
}

void SetLoggingServiceRequest::MergeFrom(const SetLoggingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetLoggingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.logging_service().size() > 0) {

    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SetLoggingServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetLoggingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLoggingServiceRequest::CopyFrom(const SetLoggingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetLoggingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLoggingServiceRequest::IsInitialized() const {
  return true;
}

void SetLoggingServiceRequest::Swap(SetLoggingServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLoggingServiceRequest::InternalSwap(SetLoggingServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logging_service_.Swap(&other->logging_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetLoggingServiceRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetMonitoringServiceRequest::InitAsDefaultInstance() {
}
class SetMonitoringServiceRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMonitoringServiceRequest::kProjectIdFieldNumber;
const int SetMonitoringServiceRequest::kZoneFieldNumber;
const int SetMonitoringServiceRequest::kClusterIdFieldNumber;
const int SetMonitoringServiceRequest::kMonitoringServiceFieldNumber;
const int SetMonitoringServiceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMonitoringServiceRequest::SetMonitoringServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetMonitoringServiceRequest)
}
SetMonitoringServiceRequest::SetMonitoringServiceRequest(const SetMonitoringServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.monitoring_service().size() > 0) {
    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetMonitoringServiceRequest)
}

void SetMonitoringServiceRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetMonitoringServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetMonitoringServiceRequest::~SetMonitoringServiceRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetMonitoringServiceRequest)
  SharedDtor();
}

void SetMonitoringServiceRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetMonitoringServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMonitoringServiceRequest& SetMonitoringServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetMonitoringServiceRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetMonitoringServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetMonitoringServiceRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetMonitoringServiceRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMonitoringServiceRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMonitoringServiceRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMonitoringServiceRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string monitoring_service = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMonitoringServiceRequest.monitoring_service");
        object = msg->mutable_monitoring_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMonitoringServiceRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetMonitoringServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMonitoringServiceRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMonitoringServiceRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMonitoringServiceRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string monitoring_service = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMonitoringServiceRequest.monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMonitoringServiceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetMonitoringServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetMonitoringServiceRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetMonitoringServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string monitoring_service = 4;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->monitoring_service(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetMonitoringServiceRequest)
}

::google::protobuf::uint8* SetMonitoringServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string monitoring_service = 4;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->monitoring_service(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMonitoringServiceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetMonitoringServiceRequest)
  return target;
}

size_t SetMonitoringServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string monitoring_service = 4;
  if (this->monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitoring_service());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMonitoringServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMonitoringServiceRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetMonitoringServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetMonitoringServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetMonitoringServiceRequest)
    MergeFrom(*source);
  }
}

void SetMonitoringServiceRequest::MergeFrom(const SetMonitoringServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.monitoring_service().size() > 0) {

    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SetMonitoringServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMonitoringServiceRequest::CopyFrom(const SetMonitoringServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetMonitoringServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMonitoringServiceRequest::IsInitialized() const {
  return true;
}

void SetMonitoringServiceRequest::Swap(SetMonitoringServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMonitoringServiceRequest::InternalSwap(SetMonitoringServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  monitoring_service_.Swap(&other->monitoring_service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetMonitoringServiceRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetAddonsConfigRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_SetAddonsConfigRequest_default_instance_._instance.get_mutable()->addons_config_ = const_cast< ::google::container::v1alpha1::AddonsConfig*>(
      ::google::container::v1alpha1::AddonsConfig::internal_default_instance());
}
class SetAddonsConfigRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::AddonsConfig& addons_config(const SetAddonsConfigRequest* msg);
};

const ::google::container::v1alpha1::AddonsConfig&
SetAddonsConfigRequest::HasBitSetters::addons_config(const SetAddonsConfigRequest* msg) {
  return *msg->addons_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAddonsConfigRequest::kProjectIdFieldNumber;
const int SetAddonsConfigRequest::kZoneFieldNumber;
const int SetAddonsConfigRequest::kClusterIdFieldNumber;
const int SetAddonsConfigRequest::kAddonsConfigFieldNumber;
const int SetAddonsConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAddonsConfigRequest::SetAddonsConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetAddonsConfigRequest)
}
SetAddonsConfigRequest::SetAddonsConfigRequest(const SetAddonsConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_addons_config()) {
    addons_config_ = new ::google::container::v1alpha1::AddonsConfig(*from.addons_config_);
  } else {
    addons_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetAddonsConfigRequest)
}

void SetAddonsConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetAddonsConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addons_config_ = nullptr;
}

SetAddonsConfigRequest::~SetAddonsConfigRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetAddonsConfigRequest)
  SharedDtor();
}

void SetAddonsConfigRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete addons_config_;
}

void SetAddonsConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAddonsConfigRequest& SetAddonsConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetAddonsConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetAddonsConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && addons_config_ != nullptr) {
    delete addons_config_;
  }
  addons_config_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetAddonsConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetAddonsConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetAddonsConfigRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetAddonsConfigRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetAddonsConfigRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.AddonsConfig addons_config = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::AddonsConfig::_InternalParse;
        object = msg->mutable_addons_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetAddonsConfigRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetAddonsConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetAddonsConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetAddonsConfigRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetAddonsConfigRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetAddonsConfigRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.AddonsConfig addons_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetAddonsConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetAddonsConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetAddonsConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetAddonsConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetAddonsConfigRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetAddonsConfigRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetAddonsConfigRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1alpha1.AddonsConfig addons_config = 4;
  if (this->has_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::addons_config(this), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetAddonsConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetAddonsConfigRequest)
}

::google::protobuf::uint8* SetAddonsConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetAddonsConfigRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetAddonsConfigRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetAddonsConfigRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1alpha1.AddonsConfig addons_config = 4;
  if (this->has_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::addons_config(this), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetAddonsConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetAddonsConfigRequest)
  return target;
}

size_t SetAddonsConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetAddonsConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1alpha1.AddonsConfig addons_config = 4;
  if (this->has_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *addons_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAddonsConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetAddonsConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAddonsConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetAddonsConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetAddonsConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetAddonsConfigRequest)
    MergeFrom(*source);
  }
}

void SetAddonsConfigRequest::MergeFrom(const SetAddonsConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetAddonsConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_addons_config()) {
    mutable_addons_config()->::google::container::v1alpha1::AddonsConfig::MergeFrom(from.addons_config());
  }
}

void SetAddonsConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetAddonsConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAddonsConfigRequest::CopyFrom(const SetAddonsConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetAddonsConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAddonsConfigRequest::IsInitialized() const {
  return true;
}

void SetAddonsConfigRequest::Swap(SetAddonsConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAddonsConfigRequest::InternalSwap(SetAddonsConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(addons_config_, other->addons_config_);
}

::google::protobuf::Metadata SetAddonsConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetLocationsRequest::InitAsDefaultInstance() {
}
class SetLocationsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLocationsRequest::kProjectIdFieldNumber;
const int SetLocationsRequest::kZoneFieldNumber;
const int SetLocationsRequest::kClusterIdFieldNumber;
const int SetLocationsRequest::kLocationsFieldNumber;
const int SetLocationsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLocationsRequest::SetLocationsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetLocationsRequest)
}
SetLocationsRequest::SetLocationsRequest(const SetLocationsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetLocationsRequest)
}

void SetLocationsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetLocationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetLocationsRequest::~SetLocationsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetLocationsRequest)
  SharedDtor();
}

void SetLocationsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLocationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLocationsRequest& SetLocationsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetLocationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetLocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetLocationsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetLocationsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLocationsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLocationsRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLocationsRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string locations = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLocationsRequest.locations");
          object = msg->add_locations();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLocationsRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLocationsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetLocationsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLocationsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLocationsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLocationsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            static_cast<int>(this->locations(this->locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLocationsRequest.locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLocationsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetLocationsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetLocationsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetLocationsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // repeated string locations = 4;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->locations(i), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetLocationsRequest)
}

::google::protobuf::uint8* SetLocationsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // repeated string locations = 4;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->locations(i), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLocationsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetLocationsRequest)
  return target;
}

size_t SetLocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetLocationsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string locations = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locations_size());
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLocationsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLocationsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetLocationsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetLocationsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetLocationsRequest)
    MergeFrom(*source);
  }
}

void SetLocationsRequest::MergeFrom(const SetLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SetLocationsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLocationsRequest::CopyFrom(const SetLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLocationsRequest::IsInitialized() const {
  return true;
}

void SetLocationsRequest::Swap(SetLocationsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLocationsRequest::InternalSwap(SetLocationsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  locations_.InternalSwap(CastToBase(&other->locations_));
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetLocationsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateMasterRequest::InitAsDefaultInstance() {
}
class UpdateMasterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateMasterRequest::kProjectIdFieldNumber;
const int UpdateMasterRequest::kZoneFieldNumber;
const int UpdateMasterRequest::kClusterIdFieldNumber;
const int UpdateMasterRequest::kMasterVersionFieldNumber;
const int UpdateMasterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateMasterRequest::UpdateMasterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.UpdateMasterRequest)
}
UpdateMasterRequest::UpdateMasterRequest(const UpdateMasterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.master_version().size() > 0) {
    master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_version_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.UpdateMasterRequest)
}

void UpdateMasterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateMasterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateMasterRequest::~UpdateMasterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.UpdateMasterRequest)
  SharedDtor();
}

void UpdateMasterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateMasterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateMasterRequest& UpdateMasterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateMasterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpdateMasterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateMasterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateMasterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateMasterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateMasterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateMasterRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string master_version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateMasterRequest.master_version");
        object = msg->mutable_master_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.UpdateMasterRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateMasterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.UpdateMasterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateMasterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateMasterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateMasterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string master_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->master_version().data(), static_cast<int>(this->master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateMasterRequest.master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.UpdateMasterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.UpdateMasterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.UpdateMasterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateMasterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string master_version = 4;
  if (this->master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_version().data(), static_cast<int>(this->master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->master_version(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.UpdateMasterRequest)
}

::google::protobuf::uint8* UpdateMasterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string master_version = 4;
  if (this->master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_version().data(), static_cast<int>(this->master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->master_version(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.UpdateMasterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.UpdateMasterRequest)
  return target;
}

size_t UpdateMasterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.UpdateMasterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string master_version = 4;
  if (this->master_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->master_version());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateMasterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.UpdateMasterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateMasterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateMasterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.UpdateMasterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.UpdateMasterRequest)
    MergeFrom(*source);
  }
}

void UpdateMasterRequest::MergeFrom(const UpdateMasterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.UpdateMasterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.master_version().size() > 0) {

    master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_version_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void UpdateMasterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.UpdateMasterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateMasterRequest::CopyFrom(const UpdateMasterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.UpdateMasterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMasterRequest::IsInitialized() const {
  return true;
}

void UpdateMasterRequest::Swap(UpdateMasterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateMasterRequest::InternalSwap(UpdateMasterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  master_version_.Swap(&other->master_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UpdateMasterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetMasterAuthRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_SetMasterAuthRequest_default_instance_._instance.get_mutable()->update_ = const_cast< ::google::container::v1alpha1::MasterAuth*>(
      ::google::container::v1alpha1::MasterAuth::internal_default_instance());
}
class SetMasterAuthRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::MasterAuth& update(const SetMasterAuthRequest* msg);
};

const ::google::container::v1alpha1::MasterAuth&
SetMasterAuthRequest::HasBitSetters::update(const SetMasterAuthRequest* msg) {
  return *msg->update_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMasterAuthRequest::kProjectIdFieldNumber;
const int SetMasterAuthRequest::kZoneFieldNumber;
const int SetMasterAuthRequest::kClusterIdFieldNumber;
const int SetMasterAuthRequest::kActionFieldNumber;
const int SetMasterAuthRequest::kUpdateFieldNumber;
const int SetMasterAuthRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMasterAuthRequest::SetMasterAuthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetMasterAuthRequest)
}
SetMasterAuthRequest::SetMasterAuthRequest(const SetMasterAuthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_update()) {
    update_ = new ::google::container::v1alpha1::MasterAuth(*from.update_);
  } else {
    update_ = nullptr;
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetMasterAuthRequest)
}

void SetMasterAuthRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetMasterAuthRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&update_)) + sizeof(action_));
}

SetMasterAuthRequest::~SetMasterAuthRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetMasterAuthRequest)
  SharedDtor();
}

void SetMasterAuthRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete update_;
}

void SetMasterAuthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMasterAuthRequest& SetMasterAuthRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetMasterAuthRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetMasterAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && update_ != nullptr) {
    delete update_;
  }
  update_ = nullptr;
  action_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetMasterAuthRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetMasterAuthRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMasterAuthRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMasterAuthRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMasterAuthRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.SetMasterAuthRequest.Action action = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_action(static_cast<::google::container::v1alpha1::SetMasterAuthRequest_Action>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1alpha1.MasterAuth update = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::MasterAuth::_InternalParse;
        object = msg->mutable_update();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMasterAuthRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetMasterAuthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetMasterAuthRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMasterAuthRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMasterAuthRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMasterAuthRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.SetMasterAuthRequest.Action action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::google::container::v1alpha1::SetMasterAuthRequest_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.MasterAuth update = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMasterAuthRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetMasterAuthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetMasterAuthRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetMasterAuthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMasterAuthRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMasterAuthRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMasterAuthRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1alpha1.SetMasterAuthRequest.Action action = 4;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->action(), output);
  }

  // .google.container.v1alpha1.MasterAuth update = 5;
  if (this->has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::update(this), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMasterAuthRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetMasterAuthRequest)
}

::google::protobuf::uint8* SetMasterAuthRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMasterAuthRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMasterAuthRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMasterAuthRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1alpha1.SetMasterAuthRequest.Action action = 4;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->action(), target);
  }

  // .google.container.v1alpha1.MasterAuth update = 5;
  if (this->has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::update(this), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMasterAuthRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetMasterAuthRequest)
  return target;
}

size_t SetMasterAuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetMasterAuthRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1alpha1.MasterAuth update = 5;
  if (this->has_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_);
  }

  // .google.container.v1alpha1.SetMasterAuthRequest.Action action = 4;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMasterAuthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetMasterAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMasterAuthRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetMasterAuthRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetMasterAuthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetMasterAuthRequest)
    MergeFrom(*source);
  }
}

void SetMasterAuthRequest::MergeFrom(const SetMasterAuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetMasterAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_update()) {
    mutable_update()->::google::container::v1alpha1::MasterAuth::MergeFrom(from.update());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void SetMasterAuthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetMasterAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMasterAuthRequest::CopyFrom(const SetMasterAuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetMasterAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMasterAuthRequest::IsInitialized() const {
  return true;
}

void SetMasterAuthRequest::Swap(SetMasterAuthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMasterAuthRequest::InternalSwap(SetMasterAuthRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(update_, other->update_);
  swap(action_, other->action_);
}

::google::protobuf::Metadata SetMasterAuthRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteClusterRequest::InitAsDefaultInstance() {
}
class DeleteClusterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterRequest::kProjectIdFieldNumber;
const int DeleteClusterRequest::kZoneFieldNumber;
const int DeleteClusterRequest::kClusterIdFieldNumber;
const int DeleteClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterRequest::DeleteClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.DeleteClusterRequest)
}
DeleteClusterRequest::DeleteClusterRequest(const DeleteClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.DeleteClusterRequest)
}

void DeleteClusterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteClusterRequest::~DeleteClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.DeleteClusterRequest)
  SharedDtor();
}

void DeleteClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteClusterRequest& DeleteClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteClusterRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DeleteClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteClusterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteClusterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteClusterRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteClusterRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteClusterRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteClusterRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.DeleteClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.DeleteClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.DeleteClusterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.DeleteClusterRequest)
}

::google::protobuf::uint8* DeleteClusterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.DeleteClusterRequest)
  return target;
}

size_t DeleteClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.DeleteClusterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteClusterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.DeleteClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.DeleteClusterRequest)
    MergeFrom(*source);
  }
}

void DeleteClusterRequest::MergeFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterRequest::CopyFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterRequest::IsInitialized() const {
  return true;
}

void DeleteClusterRequest::Swap(DeleteClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterRequest::InternalSwap(DeleteClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteClusterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListClustersRequest::InitAsDefaultInstance() {
}
class ListClustersRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersRequest::kProjectIdFieldNumber;
const int ListClustersRequest::kZoneFieldNumber;
const int ListClustersRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersRequest::ListClustersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ListClustersRequest)
}
ListClustersRequest::ListClustersRequest(const ListClustersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ListClustersRequest)
}

void ListClustersRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListClustersRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListClustersRequest::~ListClustersRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ListClustersRequest)
  SharedDtor();
}

void ListClustersRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClustersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListClustersRequest& ListClustersRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListClustersRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListClustersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListClustersRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListClustersRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListClustersRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListClustersRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListClustersRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListClustersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ListClustersRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListClustersRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListClustersRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListClustersRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ListClustersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ListClustersRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListClustersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListClustersRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListClustersRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListClustersRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ListClustersRequest)
}

::google::protobuf::uint8* ListClustersRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListClustersRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListClustersRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListClustersRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ListClustersRequest)
  return target;
}

size_t ListClustersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ListClustersRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListClustersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListClustersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ListClustersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ListClustersRequest)
    MergeFrom(*source);
  }
}

void ListClustersRequest::MergeFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void ListClustersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersRequest::CopyFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersRequest::IsInitialized() const {
  return true;
}

void ListClustersRequest::Swap(ListClustersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersRequest::InternalSwap(ListClustersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListClustersRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListClustersResponse::InitAsDefaultInstance() {
}
class ListClustersResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersResponse::kClustersFieldNumber;
const int ListClustersResponse::kMissingZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersResponse::ListClustersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ListClustersResponse)
}
ListClustersResponse::ListClustersResponse(const ListClustersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      clusters_(from.clusters_),
      missing_zones_(from.missing_zones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ListClustersResponse)
}

void ListClustersResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListClustersResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
}

ListClustersResponse::~ListClustersResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ListClustersResponse)
  SharedDtor();
}

void ListClustersResponse::SharedDtor() {
}

void ListClustersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListClustersResponse& ListClustersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListClustersResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListClustersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  missing_zones_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListClustersResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListClustersResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.container.v1alpha1.Cluster clusters = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1alpha1::Cluster::_InternalParse;
          object = msg->add_clusters();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListClustersResponse.missing_zones");
          object = msg->add_missing_zones();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListClustersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ListClustersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1alpha1.Cluster clusters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_missing_zones()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->missing_zones(this->missing_zones_size() - 1).data(),
            static_cast<int>(this->missing_zones(this->missing_zones_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListClustersResponse.missing_zones"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ListClustersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ListClustersResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListClustersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->clusters(static_cast<int>(i)),
      output);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListClustersResponse.missing_zones");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->missing_zones(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ListClustersResponse)
}

::google::protobuf::uint8* ListClustersResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->clusters(static_cast<int>(i)), target);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListClustersResponse.missing_zones");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->missing_zones(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ListClustersResponse)
  return target;
}

size_t ListClustersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ListClustersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.Cluster clusters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->clusters(static_cast<int>(i)));
    }
  }

  // repeated string missing_zones = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->missing_zones_size());
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->missing_zones(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListClustersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListClustersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ListClustersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ListClustersResponse)
    MergeFrom(*source);
  }
}

void ListClustersResponse::MergeFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  missing_zones_.MergeFrom(from.missing_zones_);
}

void ListClustersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersResponse::CopyFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersResponse::IsInitialized() const {
  return true;
}

void ListClustersResponse::Swap(ListClustersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersResponse::InternalSwap(ListClustersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&clusters_)->InternalSwap(CastToBase(&other->clusters_));
  missing_zones_.InternalSwap(CastToBase(&other->missing_zones_));
}

::google::protobuf::Metadata ListClustersResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetOperationRequest::InitAsDefaultInstance() {
}
class GetOperationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOperationRequest::kProjectIdFieldNumber;
const int GetOperationRequest::kZoneFieldNumber;
const int GetOperationRequest::kOperationIdFieldNumber;
const int GetOperationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOperationRequest::GetOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.GetOperationRequest)
}
GetOperationRequest::GetOperationRequest(const GetOperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.GetOperationRequest)
}

void GetOperationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetOperationRequest::~GetOperationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.GetOperationRequest)
  SharedDtor();
}

void GetOperationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOperationRequest& GetOperationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetOperationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetOperationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetOperationRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetOperationRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string operation_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetOperationRequest.operation_id");
        object = msg->mutable_operation_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetOperationRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.GetOperationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetOperationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetOperationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetOperationRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetOperationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.GetOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.GetOperationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetOperationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetOperationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetOperationRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operation_id(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetOperationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.GetOperationRequest)
}

::google::protobuf::uint8* GetOperationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetOperationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetOperationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetOperationRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operation_id(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetOperationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.GetOperationRequest)
  return target;
}

size_t GetOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.GetOperationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.GetOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOperationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetOperationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.GetOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.GetOperationRequest)
    MergeFrom(*source);
  }
}

void GetOperationRequest::MergeFrom(const GetOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.GetOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.operation_id().size() > 0) {

    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.GetOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOperationRequest::CopyFrom(const GetOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.GetOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOperationRequest::IsInitialized() const {
  return true;
}

void GetOperationRequest::Swap(GetOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOperationRequest::InternalSwap(GetOperationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetOperationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListOperationsRequest::InitAsDefaultInstance() {
}
class ListOperationsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOperationsRequest::kProjectIdFieldNumber;
const int ListOperationsRequest::kZoneFieldNumber;
const int ListOperationsRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOperationsRequest::ListOperationsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ListOperationsRequest)
}
ListOperationsRequest::ListOperationsRequest(const ListOperationsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ListOperationsRequest)
}

void ListOperationsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListOperationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListOperationsRequest::~ListOperationsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ListOperationsRequest)
  SharedDtor();
}

void ListOperationsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListOperationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListOperationsRequest& ListOperationsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListOperationsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListOperationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListOperationsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListOperationsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListOperationsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListOperationsRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListOperationsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListOperationsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ListOperationsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListOperationsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListOperationsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListOperationsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ListOperationsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ListOperationsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListOperationsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListOperationsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListOperationsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListOperationsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ListOperationsRequest)
}

::google::protobuf::uint8* ListOperationsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListOperationsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListOperationsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListOperationsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ListOperationsRequest)
  return target;
}

size_t ListOperationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ListOperationsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOperationsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ListOperationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOperationsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListOperationsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ListOperationsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ListOperationsRequest)
    MergeFrom(*source);
  }
}

void ListOperationsRequest::MergeFrom(const ListOperationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ListOperationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void ListOperationsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ListOperationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOperationsRequest::CopyFrom(const ListOperationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ListOperationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOperationsRequest::IsInitialized() const {
  return true;
}

void ListOperationsRequest::Swap(ListOperationsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOperationsRequest::InternalSwap(ListOperationsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListOperationsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CancelOperationRequest::InitAsDefaultInstance() {
}
class CancelOperationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelOperationRequest::kProjectIdFieldNumber;
const int CancelOperationRequest::kZoneFieldNumber;
const int CancelOperationRequest::kOperationIdFieldNumber;
const int CancelOperationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelOperationRequest::CancelOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.CancelOperationRequest)
}
CancelOperationRequest::CancelOperationRequest(const CancelOperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.CancelOperationRequest)
}

void CancelOperationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CancelOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CancelOperationRequest::~CancelOperationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.CancelOperationRequest)
  SharedDtor();
}

void CancelOperationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelOperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelOperationRequest& CancelOperationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CancelOperationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CancelOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CancelOperationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CancelOperationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CancelOperationRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CancelOperationRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string operation_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CancelOperationRequest.operation_id");
        object = msg->mutable_operation_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CancelOperationRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CancelOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.CancelOperationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CancelOperationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CancelOperationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CancelOperationRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CancelOperationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.CancelOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.CancelOperationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CancelOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CancelOperationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CancelOperationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CancelOperationRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operation_id(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CancelOperationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.CancelOperationRequest)
}

::google::protobuf::uint8* CancelOperationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CancelOperationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CancelOperationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CancelOperationRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operation_id(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CancelOperationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.CancelOperationRequest)
  return target;
}

size_t CancelOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.CancelOperationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.CancelOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelOperationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CancelOperationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.CancelOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.CancelOperationRequest)
    MergeFrom(*source);
  }
}

void CancelOperationRequest::MergeFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.CancelOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.operation_id().size() > 0) {

    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CancelOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.CancelOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOperationRequest::CopyFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.CancelOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOperationRequest::IsInitialized() const {
  return true;
}

void CancelOperationRequest::Swap(CancelOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelOperationRequest::InternalSwap(CancelOperationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CancelOperationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListOperationsResponse::InitAsDefaultInstance() {
}
class ListOperationsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOperationsResponse::kOperationsFieldNumber;
const int ListOperationsResponse::kMissingZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOperationsResponse::ListOperationsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ListOperationsResponse)
}
ListOperationsResponse::ListOperationsResponse(const ListOperationsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      operations_(from.operations_),
      missing_zones_(from.missing_zones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ListOperationsResponse)
}

void ListOperationsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListOperationsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
}

ListOperationsResponse::~ListOperationsResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ListOperationsResponse)
  SharedDtor();
}

void ListOperationsResponse::SharedDtor() {
}

void ListOperationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListOperationsResponse& ListOperationsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListOperationsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListOperationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  missing_zones_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListOperationsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListOperationsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.container.v1alpha1.Operation operations = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1alpha1::Operation::_InternalParse;
          object = msg->add_operations();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListOperationsResponse.missing_zones");
          object = msg->add_missing_zones();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListOperationsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ListOperationsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1alpha1.Operation operations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_operations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_missing_zones()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->missing_zones(this->missing_zones_size() - 1).data(),
            static_cast<int>(this->missing_zones(this->missing_zones_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListOperationsResponse.missing_zones"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ListOperationsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ListOperationsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListOperationsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.Operation operations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->operations(static_cast<int>(i)),
      output);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListOperationsResponse.missing_zones");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->missing_zones(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ListOperationsResponse)
}

::google::protobuf::uint8* ListOperationsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.Operation operations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->operations(static_cast<int>(i)), target);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListOperationsResponse.missing_zones");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->missing_zones(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ListOperationsResponse)
  return target;
}

size_t ListOperationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ListOperationsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.Operation operations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->operations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operations(static_cast<int>(i)));
    }
  }

  // repeated string missing_zones = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->missing_zones_size());
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->missing_zones(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOperationsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ListOperationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOperationsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListOperationsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ListOperationsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ListOperationsResponse)
    MergeFrom(*source);
  }
}

void ListOperationsResponse::MergeFrom(const ListOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ListOperationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  missing_zones_.MergeFrom(from.missing_zones_);
}

void ListOperationsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ListOperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOperationsResponse::CopyFrom(const ListOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ListOperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOperationsResponse::IsInitialized() const {
  return true;
}

void ListOperationsResponse::Swap(ListOperationsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOperationsResponse::InternalSwap(ListOperationsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&operations_)->InternalSwap(CastToBase(&other->operations_));
  missing_zones_.InternalSwap(CastToBase(&other->missing_zones_));
}

::google::protobuf::Metadata ListOperationsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetServerConfigRequest::InitAsDefaultInstance() {
}
class GetServerConfigRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServerConfigRequest::kProjectIdFieldNumber;
const int GetServerConfigRequest::kZoneFieldNumber;
const int GetServerConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServerConfigRequest::GetServerConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.GetServerConfigRequest)
}
GetServerConfigRequest::GetServerConfigRequest(const GetServerConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.GetServerConfigRequest)
}

void GetServerConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetServerConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetServerConfigRequest::~GetServerConfigRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.GetServerConfigRequest)
  SharedDtor();
}

void GetServerConfigRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServerConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetServerConfigRequest& GetServerConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetServerConfigRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetServerConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetServerConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetServerConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetServerConfigRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetServerConfigRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetServerConfigRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetServerConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.GetServerConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetServerConfigRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetServerConfigRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetServerConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.GetServerConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.GetServerConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetServerConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetServerConfigRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetServerConfigRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetServerConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.GetServerConfigRequest)
}

::google::protobuf::uint8* GetServerConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetServerConfigRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetServerConfigRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetServerConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.GetServerConfigRequest)
  return target;
}

size_t GetServerConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.GetServerConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServerConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.GetServerConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServerConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetServerConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.GetServerConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.GetServerConfigRequest)
    MergeFrom(*source);
  }
}

void GetServerConfigRequest::MergeFrom(const GetServerConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.GetServerConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetServerConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.GetServerConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServerConfigRequest::CopyFrom(const GetServerConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.GetServerConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServerConfigRequest::IsInitialized() const {
  return true;
}

void GetServerConfigRequest::Swap(GetServerConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServerConfigRequest::InternalSwap(GetServerConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetServerConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerConfig::InitAsDefaultInstance() {
}
class ServerConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConfig::kDefaultClusterVersionFieldNumber;
const int ServerConfig::kValidNodeVersionsFieldNumber;
const int ServerConfig::kDefaultImageTypeFieldNumber;
const int ServerConfig::kValidImageTypesFieldNumber;
const int ServerConfig::kValidMasterVersionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConfig::ServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ServerConfig)
}
ServerConfig::ServerConfig(const ServerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      valid_node_versions_(from.valid_node_versions_),
      valid_image_types_(from.valid_image_types_),
      valid_master_versions_(from.valid_master_versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  default_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_cluster_version().size() > 0) {
    default_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_cluster_version_);
  }
  default_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_image_type().size() > 0) {
    default_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_image_type_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ServerConfig)
}

void ServerConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServerConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  default_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerConfig::~ServerConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ServerConfig)
  SharedDtor();
}

void ServerConfig::SharedDtor() {
  default_cluster_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerConfig& ServerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valid_node_versions_.Clear();
  valid_image_types_.Clear();
  valid_master_versions_.Clear();
  default_cluster_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string default_cluster_version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ServerConfig.default_cluster_version");
        object = msg->mutable_default_cluster_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string valid_node_versions = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ServerConfig.valid_node_versions");
          object = msg->add_valid_node_versions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // string default_image_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ServerConfig.default_image_type");
        object = msg->mutable_default_image_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string valid_image_types = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ServerConfig.valid_image_types");
          object = msg->add_valid_image_types();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated string valid_master_versions = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ServerConfig.valid_master_versions");
          object = msg->add_valid_master_versions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ServerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string default_cluster_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_cluster_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ServerConfig.default_cluster_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_node_versions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_node_versions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_node_versions(this->valid_node_versions_size() - 1).data(),
            static_cast<int>(this->valid_node_versions(this->valid_node_versions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ServerConfig.valid_node_versions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_image_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ServerConfig.default_image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_image_types = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_image_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_image_types(this->valid_image_types_size() - 1).data(),
            static_cast<int>(this->valid_image_types(this->valid_image_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ServerConfig.valid_image_types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_master_versions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_master_versions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_master_versions(this->valid_master_versions_size() - 1).data(),
            static_cast<int>(this->valid_master_versions(this->valid_master_versions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ServerConfig.valid_master_versions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ServerConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.default_cluster_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->default_cluster_version(), output);
  }

  // repeated string valid_node_versions = 3;
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_node_versions(i).data(), static_cast<int>(this->valid_node_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.valid_node_versions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->valid_node_versions(i), output);
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.default_image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->default_image_type(), output);
  }

  // repeated string valid_image_types = 5;
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_image_types(i).data(), static_cast<int>(this->valid_image_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.valid_image_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->valid_image_types(i), output);
  }

  // repeated string valid_master_versions = 6;
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_master_versions(i).data(), static_cast<int>(this->valid_master_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.valid_master_versions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->valid_master_versions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ServerConfig)
}

::google::protobuf::uint8* ServerConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.default_cluster_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->default_cluster_version(), target);
  }

  // repeated string valid_node_versions = 3;
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_node_versions(i).data(), static_cast<int>(this->valid_node_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.valid_node_versions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->valid_node_versions(i), target);
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.default_image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->default_image_type(), target);
  }

  // repeated string valid_image_types = 5;
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_image_types(i).data(), static_cast<int>(this->valid_image_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.valid_image_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->valid_image_types(i), target);
  }

  // repeated string valid_master_versions = 6;
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_master_versions(i).data(), static_cast<int>(this->valid_master_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ServerConfig.valid_master_versions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->valid_master_versions(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ServerConfig)
  return target;
}

size_t ServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ServerConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string valid_node_versions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_node_versions_size());
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_node_versions(i));
  }

  // repeated string valid_image_types = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_image_types_size());
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_image_types(i));
  }

  // repeated string valid_master_versions = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_master_versions_size());
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_master_versions(i));
  }

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_cluster_version());
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_image_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ServerConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ServerConfig)
    MergeFrom(*source);
  }
}

void ServerConfig::MergeFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  valid_node_versions_.MergeFrom(from.valid_node_versions_);
  valid_image_types_.MergeFrom(from.valid_image_types_);
  valid_master_versions_.MergeFrom(from.valid_master_versions_);
  if (from.default_cluster_version().size() > 0) {

    default_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_cluster_version_);
  }
  if (from.default_image_type().size() > 0) {

    default_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_image_type_);
  }
}

void ServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConfig::CopyFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerConfig::IsInitialized() const {
  return true;
}

void ServerConfig::Swap(ServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConfig::InternalSwap(ServerConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  valid_node_versions_.InternalSwap(CastToBase(&other->valid_node_versions_));
  valid_image_types_.InternalSwap(CastToBase(&other->valid_image_types_));
  valid_master_versions_.InternalSwap(CastToBase(&other->valid_master_versions_));
  default_cluster_version_.Swap(&other->default_cluster_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_image_type_.Swap(&other->default_image_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ServerConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateNodePoolRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_CreateNodePoolRequest_default_instance_._instance.get_mutable()->node_pool_ = const_cast< ::google::container::v1alpha1::NodePool*>(
      ::google::container::v1alpha1::NodePool::internal_default_instance());
}
class CreateNodePoolRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::NodePool& node_pool(const CreateNodePoolRequest* msg);
};

const ::google::container::v1alpha1::NodePool&
CreateNodePoolRequest::HasBitSetters::node_pool(const CreateNodePoolRequest* msg) {
  return *msg->node_pool_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNodePoolRequest::kProjectIdFieldNumber;
const int CreateNodePoolRequest::kZoneFieldNumber;
const int CreateNodePoolRequest::kClusterIdFieldNumber;
const int CreateNodePoolRequest::kNodePoolFieldNumber;
const int CreateNodePoolRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNodePoolRequest::CreateNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.CreateNodePoolRequest)
}
CreateNodePoolRequest::CreateNodePoolRequest(const CreateNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_node_pool()) {
    node_pool_ = new ::google::container::v1alpha1::NodePool(*from.node_pool_);
  } else {
    node_pool_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.CreateNodePoolRequest)
}

void CreateNodePoolRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_ = nullptr;
}

CreateNodePoolRequest::~CreateNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.CreateNodePoolRequest)
  SharedDtor();
}

void CreateNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_pool_;
}

void CreateNodePoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateNodePoolRequest& CreateNodePoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CreateNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && node_pool_ != nullptr) {
    delete node_pool_;
  }
  node_pool_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateNodePoolRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateNodePoolRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CreateNodePoolRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CreateNodePoolRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CreateNodePoolRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.NodePool node_pool = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NodePool::_InternalParse;
        object = msg->mutable_node_pool();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string parent = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CreateNodePoolRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.CreateNodePoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CreateNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CreateNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CreateNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodePool node_pool = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_pool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CreateNodePoolRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.CreateNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.CreateNodePoolRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1alpha1.NodePool node_pool = 4;
  if (this->has_node_pool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::node_pool(this), output);
  }

  // string parent = 6;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateNodePoolRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.CreateNodePoolRequest)
}

::google::protobuf::uint8* CreateNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1alpha1.NodePool node_pool = 4;
  if (this->has_node_pool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::node_pool(this), target);
  }

  // string parent = 6;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CreateNodePoolRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.CreateNodePoolRequest)
  return target;
}

size_t CreateNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.CreateNodePoolRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string parent = 6;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.container.v1alpha1.NodePool node_pool = 4;
  if (this->has_node_pool()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_pool_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.CreateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNodePoolRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateNodePoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.CreateNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.CreateNodePoolRequest)
    MergeFrom(*source);
  }
}

void CreateNodePoolRequest::MergeFrom(const CreateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.CreateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_node_pool()) {
    mutable_node_pool()->::google::container::v1alpha1::NodePool::MergeFrom(from.node_pool());
  }
}

void CreateNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.CreateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNodePoolRequest::CopyFrom(const CreateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.CreateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNodePoolRequest::IsInitialized() const {
  return true;
}

void CreateNodePoolRequest::Swap(CreateNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNodePoolRequest::InternalSwap(CreateNodePoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_pool_, other->node_pool_);
}

::google::protobuf::Metadata CreateNodePoolRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteNodePoolRequest::InitAsDefaultInstance() {
}
class DeleteNodePoolRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteNodePoolRequest::kProjectIdFieldNumber;
const int DeleteNodePoolRequest::kZoneFieldNumber;
const int DeleteNodePoolRequest::kClusterIdFieldNumber;
const int DeleteNodePoolRequest::kNodePoolIdFieldNumber;
const int DeleteNodePoolRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteNodePoolRequest::DeleteNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.DeleteNodePoolRequest)
}
DeleteNodePoolRequest::DeleteNodePoolRequest(const DeleteNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.DeleteNodePoolRequest)
}

void DeleteNodePoolRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteNodePoolRequest::~DeleteNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.DeleteNodePoolRequest)
  SharedDtor();
}

void DeleteNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteNodePoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteNodePoolRequest& DeleteNodePoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DeleteNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteNodePoolRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteNodePoolRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteNodePoolRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteNodePoolRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteNodePoolRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteNodePoolRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DeleteNodePoolRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.DeleteNodePoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DeleteNodePoolRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.DeleteNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.DeleteNodePoolRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.DeleteNodePoolRequest)
}

::google::protobuf::uint8* DeleteNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DeleteNodePoolRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.DeleteNodePoolRequest)
  return target;
}

size_t DeleteNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.DeleteNodePoolRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.DeleteNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNodePoolRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteNodePoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.DeleteNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.DeleteNodePoolRequest)
    MergeFrom(*source);
  }
}

void DeleteNodePoolRequest::MergeFrom(const DeleteNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.DeleteNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.DeleteNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNodePoolRequest::CopyFrom(const DeleteNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.DeleteNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNodePoolRequest::IsInitialized() const {
  return true;
}

void DeleteNodePoolRequest::Swap(DeleteNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteNodePoolRequest::InternalSwap(DeleteNodePoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteNodePoolRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListNodePoolsRequest::InitAsDefaultInstance() {
}
class ListNodePoolsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNodePoolsRequest::kProjectIdFieldNumber;
const int ListNodePoolsRequest::kZoneFieldNumber;
const int ListNodePoolsRequest::kClusterIdFieldNumber;
const int ListNodePoolsRequest::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNodePoolsRequest::ListNodePoolsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ListNodePoolsRequest)
}
ListNodePoolsRequest::ListNodePoolsRequest(const ListNodePoolsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ListNodePoolsRequest)
}

void ListNodePoolsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListNodePoolsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListNodePoolsRequest::~ListNodePoolsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ListNodePoolsRequest)
  SharedDtor();
}

void ListNodePoolsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNodePoolsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListNodePoolsRequest& ListNodePoolsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListNodePoolsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListNodePoolsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListNodePoolsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListNodePoolsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListNodePoolsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListNodePoolsRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListNodePoolsRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.ListNodePoolsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListNodePoolsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ListNodePoolsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListNodePoolsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListNodePoolsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListNodePoolsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.ListNodePoolsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ListNodePoolsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ListNodePoolsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListNodePoolsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListNodePoolsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListNodePoolsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListNodePoolsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListNodePoolsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ListNodePoolsRequest)
}

::google::protobuf::uint8* ListNodePoolsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListNodePoolsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListNodePoolsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListNodePoolsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.ListNodePoolsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ListNodePoolsRequest)
  return target;
}

size_t ListNodePoolsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ListNodePoolsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodePoolsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ListNodePoolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodePoolsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListNodePoolsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ListNodePoolsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ListNodePoolsRequest)
    MergeFrom(*source);
  }
}

void ListNodePoolsRequest::MergeFrom(const ListNodePoolsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ListNodePoolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void ListNodePoolsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ListNodePoolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodePoolsRequest::CopyFrom(const ListNodePoolsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ListNodePoolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodePoolsRequest::IsInitialized() const {
  return true;
}

void ListNodePoolsRequest::Swap(ListNodePoolsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNodePoolsRequest::InternalSwap(ListNodePoolsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListNodePoolsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetNodePoolRequest::InitAsDefaultInstance() {
}
class GetNodePoolRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNodePoolRequest::kProjectIdFieldNumber;
const int GetNodePoolRequest::kZoneFieldNumber;
const int GetNodePoolRequest::kClusterIdFieldNumber;
const int GetNodePoolRequest::kNodePoolIdFieldNumber;
const int GetNodePoolRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNodePoolRequest::GetNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.GetNodePoolRequest)
}
GetNodePoolRequest::GetNodePoolRequest(const GetNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.GetNodePoolRequest)
}

void GetNodePoolRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNodePoolRequest::~GetNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.GetNodePoolRequest)
  SharedDtor();
}

void GetNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNodePoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetNodePoolRequest& GetNodePoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetNodePoolRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetNodePoolRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetNodePoolRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetNodePoolRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetNodePoolRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetNodePoolRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetNodePoolRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.GetNodePoolRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.GetNodePoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.GetNodePoolRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.GetNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.GetNodePoolRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.GetNodePoolRequest)
}

::google::protobuf::uint8* GetNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.GetNodePoolRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.GetNodePoolRequest)
  return target;
}

size_t GetNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.GetNodePoolRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.GetNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNodePoolRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetNodePoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.GetNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.GetNodePoolRequest)
    MergeFrom(*source);
  }
}

void GetNodePoolRequest::MergeFrom(const GetNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.GetNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.GetNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodePoolRequest::CopyFrom(const GetNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.GetNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodePoolRequest::IsInitialized() const {
  return true;
}

void GetNodePoolRequest::Swap(GetNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNodePoolRequest::InternalSwap(GetNodePoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetNodePoolRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodePool::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_NodePool_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::container::v1alpha1::NodeConfig*>(
      ::google::container::v1alpha1::NodeConfig::internal_default_instance());
  ::google::container::v1alpha1::_NodePool_default_instance_._instance.get_mutable()->autoscaling_ = const_cast< ::google::container::v1alpha1::NodePoolAutoscaling*>(
      ::google::container::v1alpha1::NodePoolAutoscaling::internal_default_instance());
  ::google::container::v1alpha1::_NodePool_default_instance_._instance.get_mutable()->management_ = const_cast< ::google::container::v1alpha1::NodeManagement*>(
      ::google::container::v1alpha1::NodeManagement::internal_default_instance());
}
class NodePool::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::NodeConfig& config(const NodePool* msg);
  static const ::google::container::v1alpha1::NodePoolAutoscaling& autoscaling(const NodePool* msg);
  static const ::google::container::v1alpha1::NodeManagement& management(const NodePool* msg);
};

const ::google::container::v1alpha1::NodeConfig&
NodePool::HasBitSetters::config(const NodePool* msg) {
  return *msg->config_;
}
const ::google::container::v1alpha1::NodePoolAutoscaling&
NodePool::HasBitSetters::autoscaling(const NodePool* msg) {
  return *msg->autoscaling_;
}
const ::google::container::v1alpha1::NodeManagement&
NodePool::HasBitSetters::management(const NodePool* msg) {
  return *msg->management_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodePool::kNameFieldNumber;
const int NodePool::kConfigFieldNumber;
const int NodePool::kInitialNodeCountFieldNumber;
const int NodePool::kAutoscalingFieldNumber;
const int NodePool::kManagementFieldNumber;
const int NodePool::kSelfLinkFieldNumber;
const int NodePool::kVersionFieldNumber;
const int NodePool::kInstanceGroupUrlsFieldNumber;
const int NodePool::kStatusFieldNumber;
const int NodePool::kStatusMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodePool::NodePool()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.NodePool)
}
NodePool::NodePool(const NodePool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      instance_group_urls_(from.instance_group_urls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.has_config()) {
    config_ = new ::google::container::v1alpha1::NodeConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  if (from.has_autoscaling()) {
    autoscaling_ = new ::google::container::v1alpha1::NodePoolAutoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  if (from.has_management()) {
    management_ = new ::google::container::v1alpha1::NodeManagement(*from.management_);
  } else {
    management_ = nullptr;
  }
  ::memcpy(&initial_node_count_, &from.initial_node_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&initial_node_count_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.NodePool)
}

void NodePool::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&config_)) + sizeof(status_));
}

NodePool::~NodePool() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.NodePool)
  SharedDtor();
}

void NodePool::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete autoscaling_;
  if (this != internal_default_instance()) delete management_;
}

void NodePool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodePool& NodePool::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodePool_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodePool::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_group_urls_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && management_ != nullptr) {
    delete management_;
  }
  management_ = nullptr;
  ::memset(&initial_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&initial_node_count_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodePool::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodePool*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodePool.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.NodeConfig config = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NodeConfig::_InternalParse;
        object = msg->mutable_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 initial_node_count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_initial_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NodePoolAutoscaling::_InternalParse;
        object = msg->mutable_autoscaling();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.container.v1alpha1.NodeManagement management = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NodeManagement::_InternalParse;
        object = msg->mutable_management();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string self_link = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodePool.self_link");
        object = msg->mutable_self_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string version = 101;
      case 101: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodePool.version");
        object = msg->mutable_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string instance_group_urls = 102;
      case 102: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodePool.instance_group_urls");
          object = msg->add_instance_group_urls();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 1714 && (ptr += 2));
        break;
      }
      // .google.container.v1alpha1.NodePool.Status status = 103;
      case 103: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::container::v1alpha1::NodePool_Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string status_message = 104;
      case 104: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.NodePool.status_message");
        object = msg->mutable_status_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodePool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.NodePool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodePool.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodeConfig config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 initial_node_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initial_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodeManagement management = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_management()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodePool.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (810 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodePool.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string instance_group_urls = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (818 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_instance_group_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_group_urls(this->instance_group_urls_size() - 1).data(),
            static_cast<int>(this->instance_group_urls(this->instance_group_urls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodePool.instance_group_urls"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodePool.Status status = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (824 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1alpha1::NodePool_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (834 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.NodePool.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.NodePool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.NodePool)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodePool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.container.v1alpha1.NodeConfig config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::config(this), output);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->initial_node_count(), output);
  }

  // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::autoscaling(this), output);
  }

  // .google.container.v1alpha1.NodeManagement management = 5;
  if (this->has_management()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::management(this), output);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->self_link(), output);
  }

  // string version = 101;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->version(), output);
  }

  // repeated string instance_group_urls = 102;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.instance_group_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      102, this->instance_group_urls(i), output);
  }

  // .google.container.v1alpha1.NodePool.Status status = 103;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      103, this->status(), output);
  }

  // string status_message = 104;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->status_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.NodePool)
}

::google::protobuf::uint8* NodePool::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.container.v1alpha1.NodeConfig config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::config(this), target);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->initial_node_count(), target);
  }

  // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::autoscaling(this), target);
  }

  // .google.container.v1alpha1.NodeManagement management = 5;
  if (this->has_management()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::management(this), target);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->self_link(), target);
  }

  // string version = 101;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->version(), target);
  }

  // repeated string instance_group_urls = 102;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.instance_group_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(102, this->instance_group_urls(i), target);
  }

  // .google.container.v1alpha1.NodePool.Status status = 103;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      103, this->status(), target);
  }

  // string status_message = 104;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.NodePool.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->status_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.NodePool)
  return target;
}

size_t NodePool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.NodePool)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string instance_group_urls = 102;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->instance_group_urls_size());
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->instance_group_urls(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string version = 101;
  if (this->version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string status_message = 104;
  if (this->status_message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // .google.container.v1alpha1.NodeConfig config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .google.container.v1alpha1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  // .google.container.v1alpha1.NodeManagement management = 5;
  if (this->has_management()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *management_);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->initial_node_count());
  }

  // .google.container.v1alpha1.NodePool.Status status = 103;
  if (this->status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodePool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.NodePool)
  GOOGLE_DCHECK_NE(&from, this);
  const NodePool* source =
      ::google::protobuf::DynamicCastToGenerated<NodePool>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.NodePool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.NodePool)
    MergeFrom(*source);
  }
}

void NodePool::MergeFrom(const NodePool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.NodePool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instance_group_urls_.MergeFrom(from.instance_group_urls_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.has_config()) {
    mutable_config()->::google::container::v1alpha1::NodeConfig::MergeFrom(from.config());
  }
  if (from.has_autoscaling()) {
    mutable_autoscaling()->::google::container::v1alpha1::NodePoolAutoscaling::MergeFrom(from.autoscaling());
  }
  if (from.has_management()) {
    mutable_management()->::google::container::v1alpha1::NodeManagement::MergeFrom(from.management());
  }
  if (from.initial_node_count() != 0) {
    set_initial_node_count(from.initial_node_count());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void NodePool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.NodePool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodePool::CopyFrom(const NodePool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.NodePool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodePool::IsInitialized() const {
  return true;
}

void NodePool::Swap(NodePool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodePool::InternalSwap(NodePool* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  instance_group_urls_.InternalSwap(CastToBase(&other->instance_group_urls_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  self_link_.Swap(&other->self_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_message_.Swap(&other->status_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_, other->config_);
  swap(autoscaling_, other->autoscaling_);
  swap(management_, other->management_);
  swap(initial_node_count_, other->initial_node_count_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata NodePool::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodeManagement::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_NodeManagement_default_instance_._instance.get_mutable()->upgrade_options_ = const_cast< ::google::container::v1alpha1::AutoUpgradeOptions*>(
      ::google::container::v1alpha1::AutoUpgradeOptions::internal_default_instance());
}
class NodeManagement::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::AutoUpgradeOptions& upgrade_options(const NodeManagement* msg);
};

const ::google::container::v1alpha1::AutoUpgradeOptions&
NodeManagement::HasBitSetters::upgrade_options(const NodeManagement* msg) {
  return *msg->upgrade_options_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeManagement::kAutoUpgradeFieldNumber;
const int NodeManagement::kAutoRepairFieldNumber;
const int NodeManagement::kUpgradeOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeManagement::NodeManagement()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.NodeManagement)
}
NodeManagement::NodeManagement(const NodeManagement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_upgrade_options()) {
    upgrade_options_ = new ::google::container::v1alpha1::AutoUpgradeOptions(*from.upgrade_options_);
  } else {
    upgrade_options_ = nullptr;
  }
  ::memcpy(&auto_upgrade_, &from.auto_upgrade_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_repair_) -
    reinterpret_cast<char*>(&auto_upgrade_)) + sizeof(auto_repair_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.NodeManagement)
}

void NodeManagement::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  ::memset(&upgrade_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_repair_) -
      reinterpret_cast<char*>(&upgrade_options_)) + sizeof(auto_repair_));
}

NodeManagement::~NodeManagement() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.NodeManagement)
  SharedDtor();
}

void NodeManagement::SharedDtor() {
  if (this != internal_default_instance()) delete upgrade_options_;
}

void NodeManagement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeManagement& NodeManagement::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodeManagement_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodeManagement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && upgrade_options_ != nullptr) {
    delete upgrade_options_;
  }
  upgrade_options_ = nullptr;
  ::memset(&auto_upgrade_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_repair_) -
      reinterpret_cast<char*>(&auto_upgrade_)) + sizeof(auto_repair_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeManagement::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodeManagement*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool auto_upgrade = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_auto_upgrade(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool auto_repair = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_auto_repair(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.container.v1alpha1.AutoUpgradeOptions upgrade_options = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::AutoUpgradeOptions::_InternalParse;
        object = msg->mutable_upgrade_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeManagement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.NodeManagement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool auto_upgrade = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_upgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool auto_repair = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_repair_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.AutoUpgradeOptions upgrade_options = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upgrade_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.NodeManagement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.NodeManagement)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeManagement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->auto_upgrade(), output);
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->auto_repair(), output);
  }

  // .google.container.v1alpha1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::upgrade_options(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.NodeManagement)
}

::google::protobuf::uint8* NodeManagement::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->auto_upgrade(), target);
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->auto_repair(), target);
  }

  // .google.container.v1alpha1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::upgrade_options(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.NodeManagement)
  return target;
}

size_t NodeManagement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.NodeManagement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1alpha1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upgrade_options_);
  }

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeManagement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.NodeManagement)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeManagement* source =
      ::google::protobuf::DynamicCastToGenerated<NodeManagement>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.NodeManagement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.NodeManagement)
    MergeFrom(*source);
  }
}

void NodeManagement::MergeFrom(const NodeManagement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.NodeManagement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_upgrade_options()) {
    mutable_upgrade_options()->::google::container::v1alpha1::AutoUpgradeOptions::MergeFrom(from.upgrade_options());
  }
  if (from.auto_upgrade() != 0) {
    set_auto_upgrade(from.auto_upgrade());
  }
  if (from.auto_repair() != 0) {
    set_auto_repair(from.auto_repair());
  }
}

void NodeManagement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.NodeManagement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeManagement::CopyFrom(const NodeManagement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.NodeManagement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeManagement::IsInitialized() const {
  return true;
}

void NodeManagement::Swap(NodeManagement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeManagement::InternalSwap(NodeManagement* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(upgrade_options_, other->upgrade_options_);
  swap(auto_upgrade_, other->auto_upgrade_);
  swap(auto_repair_, other->auto_repair_);
}

::google::protobuf::Metadata NodeManagement::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AutoUpgradeOptions::InitAsDefaultInstance() {
}
class AutoUpgradeOptions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoUpgradeOptions::kAutoUpgradeStartTimeFieldNumber;
const int AutoUpgradeOptions::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoUpgradeOptions::AutoUpgradeOptions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.AutoUpgradeOptions)
}
AutoUpgradeOptions::AutoUpgradeOptions(const AutoUpgradeOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auto_upgrade_start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auto_upgrade_start_time().size() > 0) {
    auto_upgrade_start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auto_upgrade_start_time_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.AutoUpgradeOptions)
}

void AutoUpgradeOptions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  auto_upgrade_start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AutoUpgradeOptions::~AutoUpgradeOptions() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.AutoUpgradeOptions)
  SharedDtor();
}

void AutoUpgradeOptions::SharedDtor() {
  auto_upgrade_start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AutoUpgradeOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AutoUpgradeOptions& AutoUpgradeOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AutoUpgradeOptions_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AutoUpgradeOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auto_upgrade_start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AutoUpgradeOptions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AutoUpgradeOptions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string auto_upgrade_start_time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.AutoUpgradeOptions.auto_upgrade_start_time");
        object = msg->mutable_auto_upgrade_start_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.AutoUpgradeOptions.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AutoUpgradeOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.AutoUpgradeOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string auto_upgrade_start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auto_upgrade_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.AutoUpgradeOptions.auto_upgrade_start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.AutoUpgradeOptions.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.AutoUpgradeOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.AutoUpgradeOptions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AutoUpgradeOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.AutoUpgradeOptions.auto_upgrade_start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->auto_upgrade_start_time(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.AutoUpgradeOptions.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.AutoUpgradeOptions)
}

::google::protobuf::uint8* AutoUpgradeOptions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.AutoUpgradeOptions.auto_upgrade_start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->auto_upgrade_start_time(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.AutoUpgradeOptions.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.AutoUpgradeOptions)
  return target;
}

size_t AutoUpgradeOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.AutoUpgradeOptions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auto_upgrade_start_time());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutoUpgradeOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.AutoUpgradeOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoUpgradeOptions* source =
      ::google::protobuf::DynamicCastToGenerated<AutoUpgradeOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.AutoUpgradeOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.AutoUpgradeOptions)
    MergeFrom(*source);
  }
}

void AutoUpgradeOptions::MergeFrom(const AutoUpgradeOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.AutoUpgradeOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.auto_upgrade_start_time().size() > 0) {

    auto_upgrade_start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auto_upgrade_start_time_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void AutoUpgradeOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.AutoUpgradeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoUpgradeOptions::CopyFrom(const AutoUpgradeOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.AutoUpgradeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoUpgradeOptions::IsInitialized() const {
  return true;
}

void AutoUpgradeOptions::Swap(AutoUpgradeOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoUpgradeOptions::InternalSwap(AutoUpgradeOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  auto_upgrade_start_time_.Swap(&other->auto_upgrade_start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AutoUpgradeOptions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MaintenancePolicy::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_MaintenancePolicy_default_instance_._instance.get_mutable()->window_ = const_cast< ::google::container::v1alpha1::MaintenanceWindow*>(
      ::google::container::v1alpha1::MaintenanceWindow::internal_default_instance());
}
class MaintenancePolicy::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::MaintenanceWindow& window(const MaintenancePolicy* msg);
};

const ::google::container::v1alpha1::MaintenanceWindow&
MaintenancePolicy::HasBitSetters::window(const MaintenancePolicy* msg) {
  return *msg->window_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaintenancePolicy::kWindowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaintenancePolicy::MaintenancePolicy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.MaintenancePolicy)
}
MaintenancePolicy::MaintenancePolicy(const MaintenancePolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window()) {
    window_ = new ::google::container::v1alpha1::MaintenanceWindow(*from.window_);
  } else {
    window_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.MaintenancePolicy)
}

void MaintenancePolicy::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  window_ = nullptr;
}

MaintenancePolicy::~MaintenancePolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.MaintenancePolicy)
  SharedDtor();
}

void MaintenancePolicy::SharedDtor() {
  if (this != internal_default_instance()) delete window_;
}

void MaintenancePolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MaintenancePolicy& MaintenancePolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MaintenancePolicy_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MaintenancePolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && window_ != nullptr) {
    delete window_;
  }
  window_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MaintenancePolicy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MaintenancePolicy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1alpha1.MaintenanceWindow window = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::MaintenanceWindow::_InternalParse;
        object = msg->mutable_window();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MaintenancePolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.MaintenancePolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1alpha1.MaintenanceWindow window = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.MaintenancePolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.MaintenancePolicy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MaintenancePolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1alpha1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::window(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.MaintenancePolicy)
}

::google::protobuf::uint8* MaintenancePolicy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1alpha1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::window(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.MaintenancePolicy)
  return target;
}

size_t MaintenancePolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.MaintenancePolicy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.container.v1alpha1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *window_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaintenancePolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.MaintenancePolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const MaintenancePolicy* source =
      ::google::protobuf::DynamicCastToGenerated<MaintenancePolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.MaintenancePolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.MaintenancePolicy)
    MergeFrom(*source);
  }
}

void MaintenancePolicy::MergeFrom(const MaintenancePolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.MaintenancePolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_window()) {
    mutable_window()->::google::container::v1alpha1::MaintenanceWindow::MergeFrom(from.window());
  }
}

void MaintenancePolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.MaintenancePolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenancePolicy::CopyFrom(const MaintenancePolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.MaintenancePolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenancePolicy::IsInitialized() const {
  return true;
}

void MaintenancePolicy::Swap(MaintenancePolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaintenancePolicy::InternalSwap(MaintenancePolicy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(window_, other->window_);
}

::google::protobuf::Metadata MaintenancePolicy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MaintenanceWindow::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_MaintenanceWindow_default_instance_.daily_maintenance_window_ = const_cast< ::google::container::v1alpha1::DailyMaintenanceWindow*>(
      ::google::container::v1alpha1::DailyMaintenanceWindow::internal_default_instance());
}
class MaintenanceWindow::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::DailyMaintenanceWindow& daily_maintenance_window(const MaintenanceWindow* msg);
};

const ::google::container::v1alpha1::DailyMaintenanceWindow&
MaintenanceWindow::HasBitSetters::daily_maintenance_window(const MaintenanceWindow* msg) {
  return *msg->policy_.daily_maintenance_window_;
}
void MaintenanceWindow::set_allocated_daily_maintenance_window(::google::container::v1alpha1::DailyMaintenanceWindow* daily_maintenance_window) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_policy();
  if (daily_maintenance_window) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      daily_maintenance_window = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, daily_maintenance_window, submessage_arena);
    }
    set_has_daily_maintenance_window();
    policy_.daily_maintenance_window_ = daily_maintenance_window;
  }
  // @@protoc_insertion_point(field_set_allocated:google.container.v1alpha1.MaintenanceWindow.daily_maintenance_window)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaintenanceWindow::kDailyMaintenanceWindowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaintenanceWindow::MaintenanceWindow()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.MaintenanceWindow)
}
MaintenanceWindow::MaintenanceWindow(const MaintenanceWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_policy();
  switch (from.policy_case()) {
    case kDailyMaintenanceWindow: {
      mutable_daily_maintenance_window()->::google::container::v1alpha1::DailyMaintenanceWindow::MergeFrom(from.daily_maintenance_window());
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.MaintenanceWindow)
}

void MaintenanceWindow::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  clear_has_policy();
}

MaintenanceWindow::~MaintenanceWindow() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.MaintenanceWindow)
  SharedDtor();
}

void MaintenanceWindow::SharedDtor() {
  if (has_policy()) {
    clear_policy();
  }
}

void MaintenanceWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MaintenanceWindow& MaintenanceWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MaintenanceWindow::clear_policy() {
// @@protoc_insertion_point(one_of_clear_start:google.container.v1alpha1.MaintenanceWindow)
  switch (policy_case()) {
    case kDailyMaintenanceWindow: {
      delete policy_.daily_maintenance_window_;
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = POLICY_NOT_SET;
}


void MaintenanceWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_policy();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MaintenanceWindow::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MaintenanceWindow*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.container.v1alpha1.DailyMaintenanceWindow daily_maintenance_window = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::DailyMaintenanceWindow::_InternalParse;
        object = msg->mutable_daily_maintenance_window();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MaintenanceWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.MaintenanceWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1alpha1.DailyMaintenanceWindow daily_maintenance_window = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_daily_maintenance_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.MaintenanceWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.MaintenanceWindow)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MaintenanceWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1alpha1.DailyMaintenanceWindow daily_maintenance_window = 2;
  if (has_daily_maintenance_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::daily_maintenance_window(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.MaintenanceWindow)
}

::google::protobuf::uint8* MaintenanceWindow::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1alpha1.DailyMaintenanceWindow daily_maintenance_window = 2;
  if (has_daily_maintenance_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::daily_maintenance_window(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.MaintenanceWindow)
  return target;
}

size_t MaintenanceWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.MaintenanceWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (policy_case()) {
    // .google.container.v1alpha1.DailyMaintenanceWindow daily_maintenance_window = 2;
    case kDailyMaintenanceWindow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *policy_.daily_maintenance_window_);
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaintenanceWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.MaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const MaintenanceWindow* source =
      ::google::protobuf::DynamicCastToGenerated<MaintenanceWindow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.MaintenanceWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.MaintenanceWindow)
    MergeFrom(*source);
  }
}

void MaintenanceWindow::MergeFrom(const MaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.MaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.policy_case()) {
    case kDailyMaintenanceWindow: {
      mutable_daily_maintenance_window()->::google::container::v1alpha1::DailyMaintenanceWindow::MergeFrom(from.daily_maintenance_window());
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
}

void MaintenanceWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.MaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenanceWindow::CopyFrom(const MaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.MaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenanceWindow::IsInitialized() const {
  return true;
}

void MaintenanceWindow::Swap(MaintenanceWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaintenanceWindow::InternalSwap(MaintenanceWindow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(policy_, other->policy_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata MaintenanceWindow::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DailyMaintenanceWindow::InitAsDefaultInstance() {
}
class DailyMaintenanceWindow::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyMaintenanceWindow::kStartTimeFieldNumber;
const int DailyMaintenanceWindow::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyMaintenanceWindow::DailyMaintenanceWindow()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.DailyMaintenanceWindow)
}
DailyMaintenanceWindow::DailyMaintenanceWindow(const DailyMaintenanceWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duration().size() > 0) {
    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.DailyMaintenanceWindow)
}

void DailyMaintenanceWindow::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DailyMaintenanceWindow::~DailyMaintenanceWindow() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.DailyMaintenanceWindow)
  SharedDtor();
}

void DailyMaintenanceWindow::SharedDtor() {
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DailyMaintenanceWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DailyMaintenanceWindow& DailyMaintenanceWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DailyMaintenanceWindow_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DailyMaintenanceWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DailyMaintenanceWindow::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DailyMaintenanceWindow*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string start_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DailyMaintenanceWindow.start_time");
        object = msg->mutable_start_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string duration = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.DailyMaintenanceWindow.duration");
        object = msg->mutable_duration();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DailyMaintenanceWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.DailyMaintenanceWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DailyMaintenanceWindow.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duration().data(), static_cast<int>(this->duration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.DailyMaintenanceWindow.duration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.DailyMaintenanceWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.DailyMaintenanceWindow)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DailyMaintenanceWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_time = 2;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DailyMaintenanceWindow.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->start_time(), output);
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DailyMaintenanceWindow.duration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.DailyMaintenanceWindow)
}

::google::protobuf::uint8* DailyMaintenanceWindow::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_time = 2;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DailyMaintenanceWindow.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->start_time(), target);
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.DailyMaintenanceWindow.duration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.DailyMaintenanceWindow)
  return target;
}

size_t DailyMaintenanceWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.DailyMaintenanceWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string start_time = 2;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyMaintenanceWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.DailyMaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyMaintenanceWindow* source =
      ::google::protobuf::DynamicCastToGenerated<DailyMaintenanceWindow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.DailyMaintenanceWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.DailyMaintenanceWindow)
    MergeFrom(*source);
  }
}

void DailyMaintenanceWindow::MergeFrom(const DailyMaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.DailyMaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  if (from.duration().size() > 0) {

    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
}

void DailyMaintenanceWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.DailyMaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyMaintenanceWindow::CopyFrom(const DailyMaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.DailyMaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyMaintenanceWindow::IsInitialized() const {
  return true;
}

void DailyMaintenanceWindow::Swap(DailyMaintenanceWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyMaintenanceWindow::InternalSwap(DailyMaintenanceWindow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  start_time_.Swap(&other->start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  duration_.Swap(&other->duration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DailyMaintenanceWindow::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolManagementRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_SetNodePoolManagementRequest_default_instance_._instance.get_mutable()->management_ = const_cast< ::google::container::v1alpha1::NodeManagement*>(
      ::google::container::v1alpha1::NodeManagement::internal_default_instance());
}
class SetNodePoolManagementRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::NodeManagement& management(const SetNodePoolManagementRequest* msg);
};

const ::google::container::v1alpha1::NodeManagement&
SetNodePoolManagementRequest::HasBitSetters::management(const SetNodePoolManagementRequest* msg) {
  return *msg->management_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolManagementRequest::kProjectIdFieldNumber;
const int SetNodePoolManagementRequest::kZoneFieldNumber;
const int SetNodePoolManagementRequest::kClusterIdFieldNumber;
const int SetNodePoolManagementRequest::kNodePoolIdFieldNumber;
const int SetNodePoolManagementRequest::kManagementFieldNumber;
const int SetNodePoolManagementRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolManagementRequest::SetNodePoolManagementRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetNodePoolManagementRequest)
}
SetNodePoolManagementRequest::SetNodePoolManagementRequest(const SetNodePoolManagementRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_management()) {
    management_ = new ::google::container::v1alpha1::NodeManagement(*from.management_);
  } else {
    management_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetNodePoolManagementRequest)
}

void SetNodePoolManagementRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNodePoolManagementRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  management_ = nullptr;
}

SetNodePoolManagementRequest::~SetNodePoolManagementRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetNodePoolManagementRequest)
  SharedDtor();
}

void SetNodePoolManagementRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete management_;
}

void SetNodePoolManagementRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNodePoolManagementRequest& SetNodePoolManagementRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNodePoolManagementRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetNodePoolManagementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && management_ != nullptr) {
    delete management_;
  }
  management_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNodePoolManagementRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNodePoolManagementRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolManagementRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolManagementRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolManagementRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolManagementRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.NodeManagement management = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NodeManagement::_InternalParse;
        object = msg->mutable_management();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolManagementRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNodePoolManagementRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolManagementRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolManagementRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolManagementRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolManagementRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NodeManagement management = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_management()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolManagementRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetNodePoolManagementRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetNodePoolManagementRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNodePoolManagementRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // .google.container.v1alpha1.NodeManagement management = 5;
  if (this->has_management()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::management(this), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetNodePoolManagementRequest)
}

::google::protobuf::uint8* SetNodePoolManagementRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // .google.container.v1alpha1.NodeManagement management = 5;
  if (this->has_management()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::management(this), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolManagementRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetNodePoolManagementRequest)
  return target;
}

size_t SetNodePoolManagementRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1alpha1.NodeManagement management = 5;
  if (this->has_management()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *management_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNodePoolManagementRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolManagementRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNodePoolManagementRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetNodePoolManagementRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetNodePoolManagementRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolManagementRequest::MergeFrom(const SetNodePoolManagementRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_management()) {
    mutable_management()->::google::container::v1alpha1::NodeManagement::MergeFrom(from.management());
  }
}

void SetNodePoolManagementRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolManagementRequest::CopyFrom(const SetNodePoolManagementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetNodePoolManagementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolManagementRequest::IsInitialized() const {
  return true;
}

void SetNodePoolManagementRequest::Swap(SetNodePoolManagementRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolManagementRequest::InternalSwap(SetNodePoolManagementRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(management_, other->management_);
}

::google::protobuf::Metadata SetNodePoolManagementRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolSizeRequest::InitAsDefaultInstance() {
}
class SetNodePoolSizeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolSizeRequest::kProjectIdFieldNumber;
const int SetNodePoolSizeRequest::kZoneFieldNumber;
const int SetNodePoolSizeRequest::kClusterIdFieldNumber;
const int SetNodePoolSizeRequest::kNodePoolIdFieldNumber;
const int SetNodePoolSizeRequest::kNodeCountFieldNumber;
const int SetNodePoolSizeRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolSizeRequest::SetNodePoolSizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetNodePoolSizeRequest)
}
SetNodePoolSizeRequest::SetNodePoolSizeRequest(const SetNodePoolSizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  node_count_ = from.node_count_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetNodePoolSizeRequest)
}

void SetNodePoolSizeRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNodePoolSizeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_count_ = 0;
}

SetNodePoolSizeRequest::~SetNodePoolSizeRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetNodePoolSizeRequest)
  SharedDtor();
}

void SetNodePoolSizeRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetNodePoolSizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNodePoolSizeRequest& SetNodePoolSizeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNodePoolSizeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetNodePoolSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_count_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNodePoolSizeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNodePoolSizeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolSizeRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolSizeRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolSizeRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolSizeRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 node_count = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNodePoolSizeRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNodePoolSizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolSizeRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolSizeRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolSizeRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolSizeRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNodePoolSizeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetNodePoolSizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetNodePoolSizeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNodePoolSizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->node_count(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetNodePoolSizeRequest)
}

::google::protobuf::uint8* SetNodePoolSizeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->node_count(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNodePoolSizeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetNodePoolSizeRequest)
  return target;
}

size_t SetNodePoolSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNodePoolSizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolSizeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNodePoolSizeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetNodePoolSizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetNodePoolSizeRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolSizeRequest::MergeFrom(const SetNodePoolSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.node_count() != 0) {
    set_node_count(from.node_count());
  }
}

void SetNodePoolSizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolSizeRequest::CopyFrom(const SetNodePoolSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetNodePoolSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolSizeRequest::IsInitialized() const {
  return true;
}

void SetNodePoolSizeRequest::Swap(SetNodePoolSizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolSizeRequest::InternalSwap(SetNodePoolSizeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_count_, other->node_count_);
}

::google::protobuf::Metadata SetNodePoolSizeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RollbackNodePoolUpgradeRequest::InitAsDefaultInstance() {
}
class RollbackNodePoolUpgradeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollbackNodePoolUpgradeRequest::kProjectIdFieldNumber;
const int RollbackNodePoolUpgradeRequest::kZoneFieldNumber;
const int RollbackNodePoolUpgradeRequest::kClusterIdFieldNumber;
const int RollbackNodePoolUpgradeRequest::kNodePoolIdFieldNumber;
const int RollbackNodePoolUpgradeRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackNodePoolUpgradeRequest::RollbackNodePoolUpgradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
}
RollbackNodePoolUpgradeRequest::RollbackNodePoolUpgradeRequest(const RollbackNodePoolUpgradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
}

void RollbackNodePoolUpgradeRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RollbackNodePoolUpgradeRequest::~RollbackNodePoolUpgradeRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  SharedDtor();
}

void RollbackNodePoolUpgradeRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RollbackNodePoolUpgradeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RollbackNodePoolUpgradeRequest& RollbackNodePoolUpgradeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RollbackNodePoolUpgradeRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RollbackNodePoolUpgradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RollbackNodePoolUpgradeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RollbackNodePoolUpgradeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.RollbackNodePoolUpgradeRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.RollbackNodePoolUpgradeRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.RollbackNodePoolUpgradeRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string node_pool_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.RollbackNodePoolUpgradeRequest.node_pool_id");
        object = msg->mutable_node_pool_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.RollbackNodePoolUpgradeRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RollbackNodePoolUpgradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RollbackNodePoolUpgradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
}

::google::protobuf::uint8* RollbackNodePoolUpgradeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.RollbackNodePoolUpgradeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  return target;
}

size_t RollbackNodePoolUpgradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RollbackNodePoolUpgradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RollbackNodePoolUpgradeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RollbackNodePoolUpgradeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
    MergeFrom(*source);
  }
}

void RollbackNodePoolUpgradeRequest::MergeFrom(const RollbackNodePoolUpgradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RollbackNodePoolUpgradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackNodePoolUpgradeRequest::CopyFrom(const RollbackNodePoolUpgradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.RollbackNodePoolUpgradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackNodePoolUpgradeRequest::IsInitialized() const {
  return true;
}

void RollbackNodePoolUpgradeRequest::Swap(RollbackNodePoolUpgradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackNodePoolUpgradeRequest::InternalSwap(RollbackNodePoolUpgradeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_pool_id_.Swap(&other->node_pool_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RollbackNodePoolUpgradeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListNodePoolsResponse::InitAsDefaultInstance() {
}
class ListNodePoolsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNodePoolsResponse::kNodePoolsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNodePoolsResponse::ListNodePoolsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.ListNodePoolsResponse)
}
ListNodePoolsResponse::ListNodePoolsResponse(const ListNodePoolsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      node_pools_(from.node_pools_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.ListNodePoolsResponse)
}

void ListNodePoolsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListNodePoolsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
}

ListNodePoolsResponse::~ListNodePoolsResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.ListNodePoolsResponse)
  SharedDtor();
}

void ListNodePoolsResponse::SharedDtor() {
}

void ListNodePoolsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListNodePoolsResponse& ListNodePoolsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListNodePoolsResponse_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListNodePoolsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_pools_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListNodePoolsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListNodePoolsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.container.v1alpha1.NodePool node_pools = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::container::v1alpha1::NodePool::_InternalParse;
          object = msg->add_node_pools();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListNodePoolsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.ListNodePoolsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1alpha1.NodePool node_pools = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_node_pools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.ListNodePoolsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.ListNodePoolsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListNodePoolsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.NodePool node_pools = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->node_pools(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.ListNodePoolsResponse)
}

::google::protobuf::uint8* ListNodePoolsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.NodePool node_pools = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->node_pools(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.ListNodePoolsResponse)
  return target;
}

size_t ListNodePoolsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.ListNodePoolsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.container.v1alpha1.NodePool node_pools = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->node_pools_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_pools(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodePoolsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.ListNodePoolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodePoolsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListNodePoolsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.ListNodePoolsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.ListNodePoolsResponse)
    MergeFrom(*source);
  }
}

void ListNodePoolsResponse::MergeFrom(const ListNodePoolsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.ListNodePoolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_pools_.MergeFrom(from.node_pools_);
}

void ListNodePoolsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.ListNodePoolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodePoolsResponse::CopyFrom(const ListNodePoolsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.ListNodePoolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodePoolsResponse::IsInitialized() const {
  return true;
}

void ListNodePoolsResponse::Swap(ListNodePoolsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNodePoolsResponse::InternalSwap(ListNodePoolsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&node_pools_)->InternalSwap(CastToBase(&other->node_pools_));
}

::google::protobuf::Metadata ListNodePoolsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NodePoolAutoscaling::InitAsDefaultInstance() {
}
class NodePoolAutoscaling::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodePoolAutoscaling::kEnabledFieldNumber;
const int NodePoolAutoscaling::kMinNodeCountFieldNumber;
const int NodePoolAutoscaling::kMaxNodeCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodePoolAutoscaling::NodePoolAutoscaling()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.NodePoolAutoscaling)
}
NodePoolAutoscaling::NodePoolAutoscaling(const NodePoolAutoscaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_node_count_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(max_node_count_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.NodePoolAutoscaling)
}

void NodePoolAutoscaling::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_node_count_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(max_node_count_));
}

NodePoolAutoscaling::~NodePoolAutoscaling() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.NodePoolAutoscaling)
  SharedDtor();
}

void NodePoolAutoscaling::SharedDtor() {
}

void NodePoolAutoscaling::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodePoolAutoscaling& NodePoolAutoscaling::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NodePoolAutoscaling_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NodePoolAutoscaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_node_count_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(max_node_count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodePoolAutoscaling::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NodePoolAutoscaling*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 min_node_count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_min_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 max_node_count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_max_node_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodePoolAutoscaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.NodePoolAutoscaling)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 min_node_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_node_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.NodePoolAutoscaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.NodePoolAutoscaling)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodePoolAutoscaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->min_node_count(), output);
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_node_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.NodePoolAutoscaling)
}

::google::protobuf::uint8* NodePoolAutoscaling::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->min_node_count(), target);
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_node_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.NodePoolAutoscaling)
  return target;
}

size_t NodePoolAutoscaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.NodePoolAutoscaling)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_node_count());
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_node_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodePoolAutoscaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.NodePoolAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  const NodePoolAutoscaling* source =
      ::google::protobuf::DynamicCastToGenerated<NodePoolAutoscaling>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.NodePoolAutoscaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.NodePoolAutoscaling)
    MergeFrom(*source);
  }
}

void NodePoolAutoscaling::MergeFrom(const NodePoolAutoscaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.NodePoolAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.min_node_count() != 0) {
    set_min_node_count(from.min_node_count());
  }
  if (from.max_node_count() != 0) {
    set_max_node_count(from.max_node_count());
  }
}

void NodePoolAutoscaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.NodePoolAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodePoolAutoscaling::CopyFrom(const NodePoolAutoscaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.NodePoolAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodePoolAutoscaling::IsInitialized() const {
  return true;
}

void NodePoolAutoscaling::Swap(NodePoolAutoscaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodePoolAutoscaling::InternalSwap(NodePoolAutoscaling* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
  swap(min_node_count_, other->min_node_count_);
  swap(max_node_count_, other->max_node_count_);
}

::google::protobuf::Metadata NodePoolAutoscaling::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

SetLabelsRequest_ResourceLabelsEntry_DoNotUse::SetLabelsRequest_ResourceLabelsEntry_DoNotUse() {}
SetLabelsRequest_ResourceLabelsEntry_DoNotUse::SetLabelsRequest_ResourceLabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void SetLabelsRequest_ResourceLabelsEntry_DoNotUse::MergeFrom(const SetLabelsRequest_ResourceLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SetLabelsRequest_ResourceLabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[54];
}
void SetLabelsRequest_ResourceLabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLabelsRequest_ResourceLabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      SetLabelsRequest_ResourceLabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1alpha1.SetLabelsRequest.ResourceLabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.container.v1alpha1.SetLabelsRequest.ResourceLabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void SetLabelsRequest::InitAsDefaultInstance() {
}
class SetLabelsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLabelsRequest::kProjectIdFieldNumber;
const int SetLabelsRequest::kZoneFieldNumber;
const int SetLabelsRequest::kClusterIdFieldNumber;
const int SetLabelsRequest::kResourceLabelsFieldNumber;
const int SetLabelsRequest::kLabelFingerprintFieldNumber;
const int SetLabelsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLabelsRequest::SetLabelsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetLabelsRequest)
}
SetLabelsRequest::SetLabelsRequest(const SetLabelsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_labels_.MergeFrom(from.resource_labels_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label_fingerprint().size() > 0) {
    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetLabelsRequest)
}

void SetLabelsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetLabelsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetLabelsRequest::~SetLabelsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetLabelsRequest)
  SharedDtor();
}

void SetLabelsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLabelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLabelsRequest& SetLabelsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetLabelsRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetLabelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_labels_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetLabelsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetLabelsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLabelsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLabelsRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLabelsRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> resource_labels = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->resource_labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // string label_fingerprint = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLabelsRequest.label_fingerprint");
        object = msg->mutable_label_fingerprint();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLabelsRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLabelsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetLabelsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLabelsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLabelsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLabelsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> resource_labels = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          SetLabelsRequest_ResourceLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SetLabelsRequest_ResourceLabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&resource_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLabelsRequest.ResourceLabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLabelsRequest.ResourceLabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label_fingerprint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label_fingerprint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLabelsRequest.label_fingerprint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLabelsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetLabelsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetLabelsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetLabelsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // map<string, string> resource_labels = 4;
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.SetLabelsRequest.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.SetLabelsRequest.ResourceLabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->resource_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string label_fingerprint = 5;
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.label_fingerprint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label_fingerprint(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetLabelsRequest)
}

::google::protobuf::uint8* SetLabelsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // map<string, string> resource_labels = 4;
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.SetLabelsRequest.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1alpha1.SetLabelsRequest.ResourceLabelsEntry.value");
      }
    };

    if (false &&
        this->resource_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string label_fingerprint = 5;
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.label_fingerprint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->label_fingerprint(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLabelsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetLabelsRequest)
  return target;
}

size_t SetLabelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetLabelsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> resource_labels = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_labels_size());
  {
    ::std::unique_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->resource_labels().begin();
        it != this->resource_labels().end(); ++it) {
      entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string label_fingerprint = 5;
  if (this->label_fingerprint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label_fingerprint());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLabelsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetLabelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLabelsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetLabelsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetLabelsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetLabelsRequest)
    MergeFrom(*source);
  }
}

void SetLabelsRequest::MergeFrom(const SetLabelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetLabelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_labels_.MergeFrom(from.resource_labels_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.label_fingerprint().size() > 0) {

    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SetLabelsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetLabelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLabelsRequest::CopyFrom(const SetLabelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetLabelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLabelsRequest::IsInitialized() const {
  return true;
}

void SetLabelsRequest::Swap(SetLabelsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLabelsRequest::InternalSwap(SetLabelsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_labels_.Swap(&other->resource_labels_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_fingerprint_.Swap(&other->label_fingerprint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetLabelsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetLegacyAbacRequest::InitAsDefaultInstance() {
}
class SetLegacyAbacRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLegacyAbacRequest::kProjectIdFieldNumber;
const int SetLegacyAbacRequest::kZoneFieldNumber;
const int SetLegacyAbacRequest::kClusterIdFieldNumber;
const int SetLegacyAbacRequest::kEnabledFieldNumber;
const int SetLegacyAbacRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLegacyAbacRequest::SetLegacyAbacRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetLegacyAbacRequest)
}
SetLegacyAbacRequest::SetLegacyAbacRequest(const SetLegacyAbacRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetLegacyAbacRequest)
}

void SetLegacyAbacRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetLegacyAbacRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
}

SetLegacyAbacRequest::~SetLegacyAbacRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetLegacyAbacRequest)
  SharedDtor();
}

void SetLegacyAbacRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLegacyAbacRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLegacyAbacRequest& SetLegacyAbacRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetLegacyAbacRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetLegacyAbacRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetLegacyAbacRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetLegacyAbacRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLegacyAbacRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLegacyAbacRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLegacyAbacRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool enabled = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetLegacyAbacRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetLegacyAbacRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetLegacyAbacRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLegacyAbacRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLegacyAbacRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLegacyAbacRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetLegacyAbacRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetLegacyAbacRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetLegacyAbacRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetLegacyAbacRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLegacyAbacRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLegacyAbacRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLegacyAbacRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enabled(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLegacyAbacRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetLegacyAbacRequest)
}

::google::protobuf::uint8* SetLegacyAbacRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLegacyAbacRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLegacyAbacRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLegacyAbacRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enabled(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetLegacyAbacRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetLegacyAbacRequest)
  return target;
}

size_t SetLegacyAbacRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetLegacyAbacRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLegacyAbacRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetLegacyAbacRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLegacyAbacRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetLegacyAbacRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetLegacyAbacRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetLegacyAbacRequest)
    MergeFrom(*source);
  }
}

void SetLegacyAbacRequest::MergeFrom(const SetLegacyAbacRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetLegacyAbacRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void SetLegacyAbacRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetLegacyAbacRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLegacyAbacRequest::CopyFrom(const SetLegacyAbacRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetLegacyAbacRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLegacyAbacRequest::IsInitialized() const {
  return true;
}

void SetLegacyAbacRequest::Swap(SetLegacyAbacRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLegacyAbacRequest::InternalSwap(SetLegacyAbacRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata SetLegacyAbacRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StartIPRotationRequest::InitAsDefaultInstance() {
}
class StartIPRotationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartIPRotationRequest::kProjectIdFieldNumber;
const int StartIPRotationRequest::kZoneFieldNumber;
const int StartIPRotationRequest::kClusterIdFieldNumber;
const int StartIPRotationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartIPRotationRequest::StartIPRotationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.StartIPRotationRequest)
}
StartIPRotationRequest::StartIPRotationRequest(const StartIPRotationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.StartIPRotationRequest)
}

void StartIPRotationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StartIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StartIPRotationRequest::~StartIPRotationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.StartIPRotationRequest)
  SharedDtor();
}

void StartIPRotationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartIPRotationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartIPRotationRequest& StartIPRotationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StartIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StartIPRotationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StartIPRotationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StartIPRotationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.StartIPRotationRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.StartIPRotationRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.StartIPRotationRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.StartIPRotationRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StartIPRotationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.StartIPRotationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.StartIPRotationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.StartIPRotationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.StartIPRotationRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.StartIPRotationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.StartIPRotationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.StartIPRotationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StartIPRotationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.StartIPRotationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.StartIPRotationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.StartIPRotationRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.StartIPRotationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.StartIPRotationRequest)
}

::google::protobuf::uint8* StartIPRotationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.StartIPRotationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.StartIPRotationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.StartIPRotationRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.StartIPRotationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.StartIPRotationRequest)
  return target;
}

size_t StartIPRotationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.StartIPRotationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartIPRotationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.StartIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartIPRotationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StartIPRotationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.StartIPRotationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.StartIPRotationRequest)
    MergeFrom(*source);
  }
}

void StartIPRotationRequest::MergeFrom(const StartIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.StartIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void StartIPRotationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.StartIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartIPRotationRequest::CopyFrom(const StartIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.StartIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartIPRotationRequest::IsInitialized() const {
  return true;
}

void StartIPRotationRequest::Swap(StartIPRotationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartIPRotationRequest::InternalSwap(StartIPRotationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StartIPRotationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CompleteIPRotationRequest::InitAsDefaultInstance() {
}
class CompleteIPRotationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteIPRotationRequest::kProjectIdFieldNumber;
const int CompleteIPRotationRequest::kZoneFieldNumber;
const int CompleteIPRotationRequest::kClusterIdFieldNumber;
const int CompleteIPRotationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteIPRotationRequest::CompleteIPRotationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.CompleteIPRotationRequest)
}
CompleteIPRotationRequest::CompleteIPRotationRequest(const CompleteIPRotationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.CompleteIPRotationRequest)
}

void CompleteIPRotationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CompleteIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CompleteIPRotationRequest::~CompleteIPRotationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.CompleteIPRotationRequest)
  SharedDtor();
}

void CompleteIPRotationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompleteIPRotationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompleteIPRotationRequest& CompleteIPRotationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CompleteIPRotationRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CompleteIPRotationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CompleteIPRotationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CompleteIPRotationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CompleteIPRotationRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CompleteIPRotationRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CompleteIPRotationRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.CompleteIPRotationRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CompleteIPRotationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.CompleteIPRotationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CompleteIPRotationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CompleteIPRotationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CompleteIPRotationRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.CompleteIPRotationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.CompleteIPRotationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.CompleteIPRotationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CompleteIPRotationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CompleteIPRotationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CompleteIPRotationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CompleteIPRotationRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CompleteIPRotationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.CompleteIPRotationRequest)
}

::google::protobuf::uint8* CompleteIPRotationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CompleteIPRotationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CompleteIPRotationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CompleteIPRotationRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.CompleteIPRotationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.CompleteIPRotationRequest)
  return target;
}

size_t CompleteIPRotationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.CompleteIPRotationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteIPRotationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.CompleteIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteIPRotationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CompleteIPRotationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.CompleteIPRotationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.CompleteIPRotationRequest)
    MergeFrom(*source);
  }
}

void CompleteIPRotationRequest::MergeFrom(const CompleteIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.CompleteIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CompleteIPRotationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.CompleteIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteIPRotationRequest::CopyFrom(const CompleteIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.CompleteIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteIPRotationRequest::IsInitialized() const {
  return true;
}

void CompleteIPRotationRequest::Swap(CompleteIPRotationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompleteIPRotationRequest::InternalSwap(CompleteIPRotationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CompleteIPRotationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AcceleratorConfig::InitAsDefaultInstance() {
}
class AcceleratorConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceleratorConfig::kAcceleratorCountFieldNumber;
const int AcceleratorConfig::kAcceleratorTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceleratorConfig::AcceleratorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.AcceleratorConfig)
}
AcceleratorConfig::AcceleratorConfig(const AcceleratorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accelerator_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accelerator_type().size() > 0) {
    accelerator_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_type_);
  }
  accelerator_count_ = from.accelerator_count_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.AcceleratorConfig)
}

void AcceleratorConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AcceleratorConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  accelerator_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accelerator_count_ = PROTOBUF_LONGLONG(0);
}

AcceleratorConfig::~AcceleratorConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.AcceleratorConfig)
  SharedDtor();
}

void AcceleratorConfig::SharedDtor() {
  accelerator_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceleratorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AcceleratorConfig& AcceleratorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AcceleratorConfig_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AcceleratorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accelerator_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accelerator_count_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AcceleratorConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AcceleratorConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 accelerator_count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_accelerator_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string accelerator_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.AcceleratorConfig.accelerator_type");
        object = msg->mutable_accelerator_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AcceleratorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.AcceleratorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 accelerator_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accelerator_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string accelerator_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accelerator_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.AcceleratorConfig.accelerator_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.AcceleratorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.AcceleratorConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AcceleratorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accelerator_count(), output);
  }

  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.AcceleratorConfig.accelerator_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accelerator_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.AcceleratorConfig)
}

::google::protobuf::uint8* AcceleratorConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accelerator_count(), target);
  }

  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.AcceleratorConfig.accelerator_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accelerator_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.AcceleratorConfig)
  return target;
}

size_t AcceleratorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.AcceleratorConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accelerator_type());
  }

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accelerator_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AcceleratorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.AcceleratorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceleratorConfig* source =
      ::google::protobuf::DynamicCastToGenerated<AcceleratorConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.AcceleratorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.AcceleratorConfig)
    MergeFrom(*source);
  }
}

void AcceleratorConfig::MergeFrom(const AcceleratorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.AcceleratorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accelerator_type().size() > 0) {

    accelerator_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_type_);
  }
  if (from.accelerator_count() != 0) {
    set_accelerator_count(from.accelerator_count());
  }
}

void AcceleratorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.AcceleratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceleratorConfig::CopyFrom(const AcceleratorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.AcceleratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceleratorConfig::IsInitialized() const {
  return true;
}

void AcceleratorConfig::Swap(AcceleratorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceleratorConfig::InternalSwap(AcceleratorConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accelerator_type_.Swap(&other->accelerator_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accelerator_count_, other->accelerator_count_);
}

::google::protobuf::Metadata AcceleratorConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNetworkPolicyRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_SetNetworkPolicyRequest_default_instance_._instance.get_mutable()->network_policy_ = const_cast< ::google::container::v1alpha1::NetworkPolicy*>(
      ::google::container::v1alpha1::NetworkPolicy::internal_default_instance());
}
class SetNetworkPolicyRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::NetworkPolicy& network_policy(const SetNetworkPolicyRequest* msg);
};

const ::google::container::v1alpha1::NetworkPolicy&
SetNetworkPolicyRequest::HasBitSetters::network_policy(const SetNetworkPolicyRequest* msg) {
  return *msg->network_policy_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNetworkPolicyRequest::kProjectIdFieldNumber;
const int SetNetworkPolicyRequest::kZoneFieldNumber;
const int SetNetworkPolicyRequest::kClusterIdFieldNumber;
const int SetNetworkPolicyRequest::kNetworkPolicyFieldNumber;
const int SetNetworkPolicyRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNetworkPolicyRequest::SetNetworkPolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetNetworkPolicyRequest)
}
SetNetworkPolicyRequest::SetNetworkPolicyRequest(const SetNetworkPolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_network_policy()) {
    network_policy_ = new ::google::container::v1alpha1::NetworkPolicy(*from.network_policy_);
  } else {
    network_policy_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetNetworkPolicyRequest)
}

void SetNetworkPolicyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNetworkPolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_policy_ = nullptr;
}

SetNetworkPolicyRequest::~SetNetworkPolicyRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetNetworkPolicyRequest)
  SharedDtor();
}

void SetNetworkPolicyRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete network_policy_;
}

void SetNetworkPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNetworkPolicyRequest& SetNetworkPolicyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNetworkPolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetNetworkPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && network_policy_ != nullptr) {
    delete network_policy_;
  }
  network_policy_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNetworkPolicyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNetworkPolicyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNetworkPolicyRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNetworkPolicyRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNetworkPolicyRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.NetworkPolicy network_policy = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::NetworkPolicy::_InternalParse;
        object = msg->mutable_network_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetNetworkPolicyRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNetworkPolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNetworkPolicyRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNetworkPolicyRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNetworkPolicyRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.NetworkPolicy network_policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetNetworkPolicyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetNetworkPolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetNetworkPolicyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNetworkPolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNetworkPolicyRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNetworkPolicyRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNetworkPolicyRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1alpha1.NetworkPolicy network_policy = 4;
  if (this->has_network_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::network_policy(this), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNetworkPolicyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetNetworkPolicyRequest)
}

::google::protobuf::uint8* SetNetworkPolicyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNetworkPolicyRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNetworkPolicyRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNetworkPolicyRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1alpha1.NetworkPolicy network_policy = 4;
  if (this->has_network_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::network_policy(this), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetNetworkPolicyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetNetworkPolicyRequest)
  return target;
}

size_t SetNetworkPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1alpha1.NetworkPolicy network_policy = 4;
  if (this->has_network_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *network_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNetworkPolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNetworkPolicyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNetworkPolicyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetNetworkPolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetNetworkPolicyRequest)
    MergeFrom(*source);
  }
}

void SetNetworkPolicyRequest::MergeFrom(const SetNetworkPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_network_policy()) {
    mutable_network_policy()->::google::container::v1alpha1::NetworkPolicy::MergeFrom(from.network_policy());
  }
}

void SetNetworkPolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNetworkPolicyRequest::CopyFrom(const SetNetworkPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetNetworkPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNetworkPolicyRequest::IsInitialized() const {
  return true;
}

void SetNetworkPolicyRequest::Swap(SetNetworkPolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNetworkPolicyRequest::InternalSwap(SetNetworkPolicyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_policy_, other->network_policy_);
}

::google::protobuf::Metadata SetNetworkPolicyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetMaintenancePolicyRequest::InitAsDefaultInstance() {
  ::google::container::v1alpha1::_SetMaintenancePolicyRequest_default_instance_._instance.get_mutable()->maintenance_policy_ = const_cast< ::google::container::v1alpha1::MaintenancePolicy*>(
      ::google::container::v1alpha1::MaintenancePolicy::internal_default_instance());
}
class SetMaintenancePolicyRequest::HasBitSetters {
 public:
  static const ::google::container::v1alpha1::MaintenancePolicy& maintenance_policy(const SetMaintenancePolicyRequest* msg);
};

const ::google::container::v1alpha1::MaintenancePolicy&
SetMaintenancePolicyRequest::HasBitSetters::maintenance_policy(const SetMaintenancePolicyRequest* msg) {
  return *msg->maintenance_policy_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMaintenancePolicyRequest::kProjectIdFieldNumber;
const int SetMaintenancePolicyRequest::kZoneFieldNumber;
const int SetMaintenancePolicyRequest::kClusterIdFieldNumber;
const int SetMaintenancePolicyRequest::kMaintenancePolicyFieldNumber;
const int SetMaintenancePolicyRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMaintenancePolicyRequest::SetMaintenancePolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1alpha1.SetMaintenancePolicyRequest)
}
SetMaintenancePolicyRequest::SetMaintenancePolicyRequest(const SetMaintenancePolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_maintenance_policy()) {
    maintenance_policy_ = new ::google::container::v1alpha1::MaintenancePolicy(*from.maintenance_policy_);
  } else {
    maintenance_policy_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1alpha1.SetMaintenancePolicyRequest)
}

void SetMaintenancePolicyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetMaintenancePolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maintenance_policy_ = nullptr;
}

SetMaintenancePolicyRequest::~SetMaintenancePolicyRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1alpha1.SetMaintenancePolicyRequest)
  SharedDtor();
}

void SetMaintenancePolicyRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete maintenance_policy_;
}

void SetMaintenancePolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMaintenancePolicyRequest& SetMaintenancePolicyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetMaintenancePolicyRequest_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SetMaintenancePolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && maintenance_policy_ != nullptr) {
    delete maintenance_policy_;
  }
  maintenance_policy_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetMaintenancePolicyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetMaintenancePolicyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMaintenancePolicyRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMaintenancePolicyRequest.zone");
        object = msg->mutable_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cluster_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMaintenancePolicyRequest.cluster_id");
        object = msg->mutable_cluster_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::container::v1alpha1::MaintenancePolicy::_InternalParse;
        object = msg->mutable_maintenance_policy();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.container.v1alpha1.SetMaintenancePolicyRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetMaintenancePolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMaintenancePolicyRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMaintenancePolicyRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMaintenancePolicyRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maintenance_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1alpha1.SetMaintenancePolicyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1alpha1.SetMaintenancePolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1alpha1.SetMaintenancePolicyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetMaintenancePolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMaintenancePolicyRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMaintenancePolicyRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMaintenancePolicyRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 4;
  if (this->has_maintenance_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::maintenance_policy(this), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMaintenancePolicyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1alpha1.SetMaintenancePolicyRequest)
}

::google::protobuf::uint8* SetMaintenancePolicyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMaintenancePolicyRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMaintenancePolicyRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMaintenancePolicyRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 4;
  if (this->has_maintenance_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::maintenance_policy(this), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1alpha1.SetMaintenancePolicyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1alpha1.SetMaintenancePolicyRequest)
  return target;
}

size_t SetMaintenancePolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.container.v1alpha1.MaintenancePolicy maintenance_policy = 4;
  if (this->has_maintenance_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *maintenance_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMaintenancePolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMaintenancePolicyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetMaintenancePolicyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1alpha1.SetMaintenancePolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1alpha1.SetMaintenancePolicyRequest)
    MergeFrom(*source);
  }
}

void SetMaintenancePolicyRequest::MergeFrom(const SetMaintenancePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_maintenance_policy()) {
    mutable_maintenance_policy()->::google::container::v1alpha1::MaintenancePolicy::MergeFrom(from.maintenance_policy());
  }
}

void SetMaintenancePolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMaintenancePolicyRequest::CopyFrom(const SetMaintenancePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1alpha1.SetMaintenancePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMaintenancePolicyRequest::IsInitialized() const {
  return true;
}

void SetMaintenancePolicyRequest::Swap(SetMaintenancePolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMaintenancePolicyRequest::InternalSwap(SetMaintenancePolicyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(maintenance_policy_, other->maintenance_policy_);
}

::google::protobuf::Metadata SetMaintenancePolicyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto);
  return ::file_level_metadata_google_2fcontainer_2fv1alpha1_2fcluster_5fservice_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace container
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NodeConfig_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NodeConfig_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NodeConfig* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NodeConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NodeConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NodeTaint* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NodeTaint >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NodeTaint >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::MasterAuth* Arena::CreateMaybeMessage< ::google::container::v1alpha1::MasterAuth >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::MasterAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ClientCertificateConfig* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ClientCertificateConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ClientCertificateConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::AddonsConfig* Arena::CreateMaybeMessage< ::google::container::v1alpha1::AddonsConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::AddonsConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::HttpLoadBalancing* Arena::CreateMaybeMessage< ::google::container::v1alpha1::HttpLoadBalancing >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::HttpLoadBalancing >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::HorizontalPodAutoscaling* Arena::CreateMaybeMessage< ::google::container::v1alpha1::HorizontalPodAutoscaling >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::HorizontalPodAutoscaling >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::KubernetesDashboard* Arena::CreateMaybeMessage< ::google::container::v1alpha1::KubernetesDashboard >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::KubernetesDashboard >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NetworkPolicyConfig* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NetworkPolicyConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NetworkPolicyConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock* Arena::CreateMaybeMessage< ::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::MasterAuthorizedNetworksConfig_CidrBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::MasterAuthorizedNetworksConfig* Arena::CreateMaybeMessage< ::google::container::v1alpha1::MasterAuthorizedNetworksConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::MasterAuthorizedNetworksConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NetworkPolicy* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NetworkPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NetworkPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::IPAllocationPolicy* Arena::CreateMaybeMessage< ::google::container::v1alpha1::IPAllocationPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::IPAllocationPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::PodSecurityPolicyConfig* Arena::CreateMaybeMessage< ::google::container::v1alpha1::PodSecurityPolicyConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::PodSecurityPolicyConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::Cluster* Arena::CreateMaybeMessage< ::google::container::v1alpha1::Cluster >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::Cluster >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ClusterUpdate* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ClusterUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ClusterUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::Operation* Arena::CreateMaybeMessage< ::google::container::v1alpha1::Operation >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::Operation >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::CreateClusterRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::CreateClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::CreateClusterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::GetClusterRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::GetClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::GetClusterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::UpdateClusterRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::UpdateClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::UpdateClusterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::UpdateNodePoolRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::UpdateNodePoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::UpdateNodePoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetNodePoolAutoscalingRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetNodePoolAutoscalingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetNodePoolAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetLoggingServiceRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetLoggingServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetLoggingServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetMonitoringServiceRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetMonitoringServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetMonitoringServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetAddonsConfigRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetAddonsConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetAddonsConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetLocationsRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetLocationsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetLocationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::UpdateMasterRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::UpdateMasterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::UpdateMasterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetMasterAuthRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetMasterAuthRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetMasterAuthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::DeleteClusterRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::DeleteClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::DeleteClusterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ListClustersRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ListClustersRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ListClustersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ListClustersResponse* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ListClustersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ListClustersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::GetOperationRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::GetOperationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::GetOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ListOperationsRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ListOperationsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ListOperationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::CancelOperationRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::CancelOperationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::CancelOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ListOperationsResponse* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ListOperationsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ListOperationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::GetServerConfigRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::GetServerConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::GetServerConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ServerConfig* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ServerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ServerConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::CreateNodePoolRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::CreateNodePoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::CreateNodePoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::DeleteNodePoolRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::DeleteNodePoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::DeleteNodePoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ListNodePoolsRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ListNodePoolsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ListNodePoolsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::GetNodePoolRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::GetNodePoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::GetNodePoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NodePool* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NodePool >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NodePool >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NodeManagement* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NodeManagement >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NodeManagement >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::AutoUpgradeOptions* Arena::CreateMaybeMessage< ::google::container::v1alpha1::AutoUpgradeOptions >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::AutoUpgradeOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::MaintenancePolicy* Arena::CreateMaybeMessage< ::google::container::v1alpha1::MaintenancePolicy >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::MaintenancePolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::MaintenanceWindow* Arena::CreateMaybeMessage< ::google::container::v1alpha1::MaintenanceWindow >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::MaintenanceWindow >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::DailyMaintenanceWindow* Arena::CreateMaybeMessage< ::google::container::v1alpha1::DailyMaintenanceWindow >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::DailyMaintenanceWindow >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetNodePoolManagementRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetNodePoolManagementRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetNodePoolManagementRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetNodePoolSizeRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetNodePoolSizeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetNodePoolSizeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::RollbackNodePoolUpgradeRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::RollbackNodePoolUpgradeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::RollbackNodePoolUpgradeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::ListNodePoolsResponse* Arena::CreateMaybeMessage< ::google::container::v1alpha1::ListNodePoolsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::ListNodePoolsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::NodePoolAutoscaling* Arena::CreateMaybeMessage< ::google::container::v1alpha1::NodePoolAutoscaling >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::NodePoolAutoscaling >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetLabelsRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetLabelsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetLabelsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetLegacyAbacRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetLegacyAbacRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetLegacyAbacRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::StartIPRotationRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::StartIPRotationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::StartIPRotationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::CompleteIPRotationRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::CompleteIPRotationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::CompleteIPRotationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::AcceleratorConfig* Arena::CreateMaybeMessage< ::google::container::v1alpha1::AcceleratorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::AcceleratorConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetNetworkPolicyRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetNetworkPolicyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetNetworkPolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::container::v1alpha1::SetMaintenancePolicyRequest* Arena::CreateMaybeMessage< ::google::container::v1alpha1::SetMaintenancePolicyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::container::v1alpha1::SetMaintenancePolicyRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
