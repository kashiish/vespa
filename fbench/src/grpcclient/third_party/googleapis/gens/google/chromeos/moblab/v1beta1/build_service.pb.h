// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/chromeos/moblab/v1beta1/build_service.proto

#ifndef PROTOBUF_INCLUDED_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include "google/chromeos/moblab/v1beta1/resources.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto();
namespace google {
namespace chromeos {
namespace moblab {
namespace v1beta1 {
class CheckBuildStageStatusRequest;
class CheckBuildStageStatusRequestDefaultTypeInternal;
extern CheckBuildStageStatusRequestDefaultTypeInternal _CheckBuildStageStatusRequest_default_instance_;
class CheckBuildStageStatusResponse;
class CheckBuildStageStatusResponseDefaultTypeInternal;
extern CheckBuildStageStatusResponseDefaultTypeInternal _CheckBuildStageStatusResponse_default_instance_;
class ListBuildsRequest;
class ListBuildsRequestDefaultTypeInternal;
extern ListBuildsRequestDefaultTypeInternal _ListBuildsRequest_default_instance_;
class ListBuildsResponse;
class ListBuildsResponseDefaultTypeInternal;
extern ListBuildsResponseDefaultTypeInternal _ListBuildsResponse_default_instance_;
class StageBuildMetadata;
class StageBuildMetadataDefaultTypeInternal;
extern StageBuildMetadataDefaultTypeInternal _StageBuildMetadata_default_instance_;
class StageBuildRequest;
class StageBuildRequestDefaultTypeInternal;
extern StageBuildRequestDefaultTypeInternal _StageBuildRequest_default_instance_;
class StageBuildResponse;
class StageBuildResponseDefaultTypeInternal;
extern StageBuildResponseDefaultTypeInternal _StageBuildResponse_default_instance_;
}  // namespace v1beta1
}  // namespace moblab
}  // namespace chromeos
namespace protobuf {
template<> ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* Arena::CreateMaybeMessage<::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest>(Arena*);
template<> ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* Arena::CreateMaybeMessage<::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>(Arena*);
template<> ::google::chromeos::moblab::v1beta1::ListBuildsRequest* Arena::CreateMaybeMessage<::google::chromeos::moblab::v1beta1::ListBuildsRequest>(Arena*);
template<> ::google::chromeos::moblab::v1beta1::ListBuildsResponse* Arena::CreateMaybeMessage<::google::chromeos::moblab::v1beta1::ListBuildsResponse>(Arena*);
template<> ::google::chromeos::moblab::v1beta1::StageBuildMetadata* Arena::CreateMaybeMessage<::google::chromeos::moblab::v1beta1::StageBuildMetadata>(Arena*);
template<> ::google::chromeos::moblab::v1beta1::StageBuildRequest* Arena::CreateMaybeMessage<::google::chromeos::moblab::v1beta1::StageBuildRequest>(Arena*);
template<> ::google::chromeos::moblab::v1beta1::StageBuildResponse* Arena::CreateMaybeMessage<::google::chromeos::moblab::v1beta1::StageBuildResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace chromeos {
namespace moblab {
namespace v1beta1 {

// ===================================================================

class ListBuildsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.chromeos.moblab.v1beta1.ListBuildsRequest) */ {
 public:
  ListBuildsRequest();
  virtual ~ListBuildsRequest();

  ListBuildsRequest(const ListBuildsRequest& from);

  inline ListBuildsRequest& operator=(const ListBuildsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuildsRequest(ListBuildsRequest&& from) noexcept
    : ListBuildsRequest() {
    *this = ::std::move(from);
  }

  inline ListBuildsRequest& operator=(ListBuildsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListBuildsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuildsRequest* internal_default_instance() {
    return reinterpret_cast<const ListBuildsRequest*>(
               &_ListBuildsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ListBuildsRequest* other);
  friend void swap(ListBuildsRequest& a, ListBuildsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuildsRequest* New() const final {
    return CreateMaybeMessage<ListBuildsRequest>(nullptr);
  }

  ListBuildsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBuildsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBuildsRequest& from);
  void MergeFrom(const ListBuildsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBuildsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string filter = 4 [(.google.api.field_behavior) = OPTIONAL];
  void clear_filter();
  static const int kFilterFieldNumber = 4;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // .google.protobuf.FieldMask read_mask = 5 [(.google.api.field_behavior) = OPTIONAL];
  bool has_read_mask() const;
  void clear_read_mask();
  static const int kReadMaskFieldNumber = 5;
  const ::google::protobuf::FieldMask& read_mask() const;
  ::google::protobuf::FieldMask* release_read_mask();
  ::google::protobuf::FieldMask* mutable_read_mask();
  void set_allocated_read_mask(::google::protobuf::FieldMask* read_mask);

  // .google.protobuf.FieldMask group_by = 6 [(.google.api.field_behavior) = OPTIONAL];
  bool has_group_by() const;
  void clear_group_by();
  static const int kGroupByFieldNumber = 6;
  const ::google::protobuf::FieldMask& group_by() const;
  ::google::protobuf::FieldMask* release_group_by();
  ::google::protobuf::FieldMask* mutable_group_by();
  void set_allocated_group_by(::google::protobuf::FieldMask* group_by);

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.chromeos.moblab.v1beta1.ListBuildsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::FieldMask* read_mask_;
  ::google::protobuf::FieldMask* group_by_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ListBuildsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.chromeos.moblab.v1beta1.ListBuildsResponse) */ {
 public:
  ListBuildsResponse();
  virtual ~ListBuildsResponse();

  ListBuildsResponse(const ListBuildsResponse& from);

  inline ListBuildsResponse& operator=(const ListBuildsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuildsResponse(ListBuildsResponse&& from) noexcept
    : ListBuildsResponse() {
    *this = ::std::move(from);
  }

  inline ListBuildsResponse& operator=(ListBuildsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListBuildsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuildsResponse* internal_default_instance() {
    return reinterpret_cast<const ListBuildsResponse*>(
               &_ListBuildsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ListBuildsResponse* other);
  friend void swap(ListBuildsResponse& a, ListBuildsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuildsResponse* New() const final {
    return CreateMaybeMessage<ListBuildsResponse>(nullptr);
  }

  ListBuildsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBuildsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBuildsResponse& from);
  void MergeFrom(const ListBuildsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBuildsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.chromeos.moblab.v1beta1.Build builds = 1;
  int builds_size() const;
  void clear_builds();
  static const int kBuildsFieldNumber = 1;
  ::google::chromeos::moblab::v1beta1::Build* mutable_builds(int index);
  ::google::protobuf::RepeatedPtrField< ::google::chromeos::moblab::v1beta1::Build >*
      mutable_builds();
  const ::google::chromeos::moblab::v1beta1::Build& builds(int index) const;
  ::google::chromeos::moblab::v1beta1::Build* add_builds();
  const ::google::protobuf::RepeatedPtrField< ::google::chromeos::moblab::v1beta1::Build >&
      builds() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // int32 total_size = 3;
  void clear_total_size();
  static const int kTotalSizeFieldNumber = 3;
  ::google::protobuf::int32 total_size() const;
  void set_total_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.chromeos.moblab.v1beta1.ListBuildsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::chromeos::moblab::v1beta1::Build > builds_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::int32 total_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CheckBuildStageStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest) */ {
 public:
  CheckBuildStageStatusRequest();
  virtual ~CheckBuildStageStatusRequest();

  CheckBuildStageStatusRequest(const CheckBuildStageStatusRequest& from);

  inline CheckBuildStageStatusRequest& operator=(const CheckBuildStageStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckBuildStageStatusRequest(CheckBuildStageStatusRequest&& from) noexcept
    : CheckBuildStageStatusRequest() {
    *this = ::std::move(from);
  }

  inline CheckBuildStageStatusRequest& operator=(CheckBuildStageStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CheckBuildStageStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckBuildStageStatusRequest* internal_default_instance() {
    return reinterpret_cast<const CheckBuildStageStatusRequest*>(
               &_CheckBuildStageStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CheckBuildStageStatusRequest* other);
  friend void swap(CheckBuildStageStatusRequest& a, CheckBuildStageStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckBuildStageStatusRequest* New() const final {
    return CreateMaybeMessage<CheckBuildStageStatusRequest>(nullptr);
  }

  CheckBuildStageStatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckBuildStageStatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckBuildStageStatusRequest& from);
  void MergeFrom(const CheckBuildStageStatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckBuildStageStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // @@protoc_insertion_point(class_scope:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CheckBuildStageStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse) */ {
 public:
  CheckBuildStageStatusResponse();
  virtual ~CheckBuildStageStatusResponse();

  CheckBuildStageStatusResponse(const CheckBuildStageStatusResponse& from);

  inline CheckBuildStageStatusResponse& operator=(const CheckBuildStageStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckBuildStageStatusResponse(CheckBuildStageStatusResponse&& from) noexcept
    : CheckBuildStageStatusResponse() {
    *this = ::std::move(from);
  }

  inline CheckBuildStageStatusResponse& operator=(CheckBuildStageStatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CheckBuildStageStatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckBuildStageStatusResponse* internal_default_instance() {
    return reinterpret_cast<const CheckBuildStageStatusResponse*>(
               &_CheckBuildStageStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CheckBuildStageStatusResponse* other);
  friend void swap(CheckBuildStageStatusResponse& a, CheckBuildStageStatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckBuildStageStatusResponse* New() const final {
    return CreateMaybeMessage<CheckBuildStageStatusResponse>(nullptr);
  }

  CheckBuildStageStatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckBuildStageStatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckBuildStageStatusResponse& from);
  void MergeFrom(const CheckBuildStageStatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckBuildStageStatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 2;
  bool has_staged_build_artifact() const;
  void clear_staged_build_artifact();
  static const int kStagedBuildArtifactFieldNumber = 2;
  const ::google::chromeos::moblab::v1beta1::BuildArtifact& staged_build_artifact() const;
  ::google::chromeos::moblab::v1beta1::BuildArtifact* release_staged_build_artifact();
  ::google::chromeos::moblab::v1beta1::BuildArtifact* mutable_staged_build_artifact();
  void set_allocated_staged_build_artifact(::google::chromeos::moblab::v1beta1::BuildArtifact* staged_build_artifact);

  // .google.chromeos.moblab.v1beta1.BuildArtifact source_build_artifact = 3;
  bool has_source_build_artifact() const;
  void clear_source_build_artifact();
  static const int kSourceBuildArtifactFieldNumber = 3;
  const ::google::chromeos::moblab::v1beta1::BuildArtifact& source_build_artifact() const;
  ::google::chromeos::moblab::v1beta1::BuildArtifact* release_source_build_artifact();
  ::google::chromeos::moblab::v1beta1::BuildArtifact* mutable_source_build_artifact();
  void set_allocated_source_build_artifact(::google::chromeos::moblab::v1beta1::BuildArtifact* source_build_artifact);

  // bool is_build_staged = 1;
  void clear_is_build_staged();
  static const int kIsBuildStagedFieldNumber = 1;
  bool is_build_staged() const;
  void set_is_build_staged(bool value);

  // @@protoc_insertion_point(class_scope:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::chromeos::moblab::v1beta1::BuildArtifact* staged_build_artifact_;
  ::google::chromeos::moblab::v1beta1::BuildArtifact* source_build_artifact_;
  bool is_build_staged_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto;
};
// -------------------------------------------------------------------

class StageBuildRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.chromeos.moblab.v1beta1.StageBuildRequest) */ {
 public:
  StageBuildRequest();
  virtual ~StageBuildRequest();

  StageBuildRequest(const StageBuildRequest& from);

  inline StageBuildRequest& operator=(const StageBuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StageBuildRequest(StageBuildRequest&& from) noexcept
    : StageBuildRequest() {
    *this = ::std::move(from);
  }

  inline StageBuildRequest& operator=(StageBuildRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StageBuildRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StageBuildRequest* internal_default_instance() {
    return reinterpret_cast<const StageBuildRequest*>(
               &_StageBuildRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(StageBuildRequest* other);
  friend void swap(StageBuildRequest& a, StageBuildRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StageBuildRequest* New() const final {
    return CreateMaybeMessage<StageBuildRequest>(nullptr);
  }

  StageBuildRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StageBuildRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StageBuildRequest& from);
  void MergeFrom(const StageBuildRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StageBuildRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // @@protoc_insertion_point(class_scope:google.chromeos.moblab.v1beta1.StageBuildRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto;
};
// -------------------------------------------------------------------

class StageBuildResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.chromeos.moblab.v1beta1.StageBuildResponse) */ {
 public:
  StageBuildResponse();
  virtual ~StageBuildResponse();

  StageBuildResponse(const StageBuildResponse& from);

  inline StageBuildResponse& operator=(const StageBuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StageBuildResponse(StageBuildResponse&& from) noexcept
    : StageBuildResponse() {
    *this = ::std::move(from);
  }

  inline StageBuildResponse& operator=(StageBuildResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StageBuildResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StageBuildResponse* internal_default_instance() {
    return reinterpret_cast<const StageBuildResponse*>(
               &_StageBuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(StageBuildResponse* other);
  friend void swap(StageBuildResponse& a, StageBuildResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StageBuildResponse* New() const final {
    return CreateMaybeMessage<StageBuildResponse>(nullptr);
  }

  StageBuildResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StageBuildResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StageBuildResponse& from);
  void MergeFrom(const StageBuildResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StageBuildResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 1;
  bool has_staged_build_artifact() const;
  void clear_staged_build_artifact();
  static const int kStagedBuildArtifactFieldNumber = 1;
  const ::google::chromeos::moblab::v1beta1::BuildArtifact& staged_build_artifact() const;
  ::google::chromeos::moblab::v1beta1::BuildArtifact* release_staged_build_artifact();
  ::google::chromeos::moblab::v1beta1::BuildArtifact* mutable_staged_build_artifact();
  void set_allocated_staged_build_artifact(::google::chromeos::moblab::v1beta1::BuildArtifact* staged_build_artifact);

  // @@protoc_insertion_point(class_scope:google.chromeos.moblab.v1beta1.StageBuildResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::chromeos::moblab::v1beta1::BuildArtifact* staged_build_artifact_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto;
};
// -------------------------------------------------------------------

class StageBuildMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.chromeos.moblab.v1beta1.StageBuildMetadata) */ {
 public:
  StageBuildMetadata();
  virtual ~StageBuildMetadata();

  StageBuildMetadata(const StageBuildMetadata& from);

  inline StageBuildMetadata& operator=(const StageBuildMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StageBuildMetadata(StageBuildMetadata&& from) noexcept
    : StageBuildMetadata() {
    *this = ::std::move(from);
  }

  inline StageBuildMetadata& operator=(StageBuildMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StageBuildMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StageBuildMetadata* internal_default_instance() {
    return reinterpret_cast<const StageBuildMetadata*>(
               &_StageBuildMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(StageBuildMetadata* other);
  friend void swap(StageBuildMetadata& a, StageBuildMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StageBuildMetadata* New() const final {
    return CreateMaybeMessage<StageBuildMetadata>(nullptr);
  }

  StageBuildMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StageBuildMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StageBuildMetadata& from);
  void MergeFrom(const StageBuildMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StageBuildMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // float progress_percent = 1;
  void clear_progress_percent();
  static const int kProgressPercentFieldNumber = 1;
  float progress_percent() const;
  void set_progress_percent(float value);

  // @@protoc_insertion_point(class_scope:google.chromeos.moblab.v1beta1.StageBuildMetadata)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  float progress_percent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListBuildsRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void ListBuildsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListBuildsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.ListBuildsRequest.parent)
}
#if LANG_CXX11
inline void ListBuildsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.chromeos.moblab.v1beta1.ListBuildsRequest.parent)
}
#endif
inline void ListBuildsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.chromeos.moblab.v1beta1.ListBuildsRequest.parent)
}
inline void ListBuildsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.chromeos.moblab.v1beta1.ListBuildsRequest.parent)
}
inline ::std::string* ListBuildsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.ListBuildsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.ListBuildsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.ListBuildsRequest.parent)
}

// int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void ListBuildsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListBuildsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_size)
  return page_size_;
}
inline void ListBuildsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_size)
}

// string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
inline void ListBuildsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListBuildsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token)
}
#if LANG_CXX11
inline void ListBuildsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token)
}
#endif
inline void ListBuildsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token)
}
inline void ListBuildsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token)
}
inline ::std::string* ListBuildsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token)
}

// string filter = 4 [(.google.api.field_behavior) = OPTIONAL];
inline void ListBuildsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListBuildsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.ListBuildsRequest.filter)
}
#if LANG_CXX11
inline void ListBuildsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.chromeos.moblab.v1beta1.ListBuildsRequest.filter)
}
#endif
inline void ListBuildsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.chromeos.moblab.v1beta1.ListBuildsRequest.filter)
}
inline void ListBuildsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.chromeos.moblab.v1beta1.ListBuildsRequest.filter)
}
inline ::std::string* ListBuildsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.ListBuildsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.ListBuildsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != nullptr) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.ListBuildsRequest.filter)
}

// .google.protobuf.FieldMask read_mask = 5 [(.google.api.field_behavior) = OPTIONAL];
inline bool ListBuildsRequest::has_read_mask() const {
  return this != internal_default_instance() && read_mask_ != nullptr;
}
inline const ::google::protobuf::FieldMask& ListBuildsRequest::read_mask() const {
  const ::google::protobuf::FieldMask* p = read_mask_;
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsRequest.read_mask)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* ListBuildsRequest::release_read_mask() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.ListBuildsRequest.read_mask)
  
  ::google::protobuf::FieldMask* temp = read_mask_;
  read_mask_ = nullptr;
  return temp;
}
inline ::google::protobuf::FieldMask* ListBuildsRequest::mutable_read_mask() {
  
  if (read_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    read_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.ListBuildsRequest.read_mask)
  return read_mask_;
}
inline void ListBuildsRequest::set_allocated_read_mask(::google::protobuf::FieldMask* read_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(read_mask_);
  }
  if (read_mask) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(read_mask)->GetArena();
    if (message_arena != submessage_arena) {
      read_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read_mask, submessage_arena);
    }
    
  } else {
    
  }
  read_mask_ = read_mask;
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.ListBuildsRequest.read_mask)
}

// .google.protobuf.FieldMask group_by = 6 [(.google.api.field_behavior) = OPTIONAL];
inline bool ListBuildsRequest::has_group_by() const {
  return this != internal_default_instance() && group_by_ != nullptr;
}
inline const ::google::protobuf::FieldMask& ListBuildsRequest::group_by() const {
  const ::google::protobuf::FieldMask* p = group_by_;
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsRequest.group_by)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* ListBuildsRequest::release_group_by() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.ListBuildsRequest.group_by)
  
  ::google::protobuf::FieldMask* temp = group_by_;
  group_by_ = nullptr;
  return temp;
}
inline ::google::protobuf::FieldMask* ListBuildsRequest::mutable_group_by() {
  
  if (group_by_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    group_by_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.ListBuildsRequest.group_by)
  return group_by_;
}
inline void ListBuildsRequest::set_allocated_group_by(::google::protobuf::FieldMask* group_by) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(group_by_);
  }
  if (group_by) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(group_by)->GetArena();
    if (message_arena != submessage_arena) {
      group_by = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_by, submessage_arena);
    }
    
  } else {
    
  }
  group_by_ = group_by;
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.ListBuildsRequest.group_by)
}

// -------------------------------------------------------------------

// ListBuildsResponse

// repeated .google.chromeos.moblab.v1beta1.Build builds = 1;
inline int ListBuildsResponse::builds_size() const {
  return builds_.size();
}
inline ::google::chromeos::moblab::v1beta1::Build* ListBuildsResponse::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.ListBuildsResponse.builds)
  return builds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::chromeos::moblab::v1beta1::Build >*
ListBuildsResponse::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:google.chromeos.moblab.v1beta1.ListBuildsResponse.builds)
  return &builds_;
}
inline const ::google::chromeos::moblab::v1beta1::Build& ListBuildsResponse::builds(int index) const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsResponse.builds)
  return builds_.Get(index);
}
inline ::google::chromeos::moblab::v1beta1::Build* ListBuildsResponse::add_builds() {
  // @@protoc_insertion_point(field_add:google.chromeos.moblab.v1beta1.ListBuildsResponse.builds)
  return builds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::chromeos::moblab::v1beta1::Build >&
ListBuildsResponse::builds() const {
  // @@protoc_insertion_point(field_list:google.chromeos.moblab.v1beta1.ListBuildsResponse.builds)
  return builds_;
}

// string next_page_token = 2;
inline void ListBuildsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListBuildsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListBuildsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token)
}
#endif
inline void ListBuildsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token)
}
inline void ListBuildsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token)
}
inline ::std::string* ListBuildsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token)
}

// int32 total_size = 3;
inline void ListBuildsResponse::clear_total_size() {
  total_size_ = 0;
}
inline ::google::protobuf::int32 ListBuildsResponse::total_size() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.ListBuildsResponse.total_size)
  return total_size_;
}
inline void ListBuildsResponse::set_total_size(::google::protobuf::int32 value) {
  
  total_size_ = value;
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.ListBuildsResponse.total_size)
}

// -------------------------------------------------------------------

// CheckBuildStageStatusRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void CheckBuildStageStatusRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckBuildStageStatusRequest::name() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name)
  return name_.GetNoArena();
}
inline void CheckBuildStageStatusRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name)
}
#if LANG_CXX11
inline void CheckBuildStageStatusRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name)
}
#endif
inline void CheckBuildStageStatusRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name)
}
inline void CheckBuildStageStatusRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name)
}
inline ::std::string* CheckBuildStageStatusRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckBuildStageStatusRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckBuildStageStatusRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name)
}

// string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void CheckBuildStageStatusRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckBuildStageStatusRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter)
  return filter_.GetNoArena();
}
inline void CheckBuildStageStatusRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter)
}
#if LANG_CXX11
inline void CheckBuildStageStatusRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter)
}
#endif
inline void CheckBuildStageStatusRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter)
}
inline void CheckBuildStageStatusRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter)
}
inline ::std::string* CheckBuildStageStatusRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckBuildStageStatusRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckBuildStageStatusRequest::set_allocated_filter(::std::string* filter) {
  if (filter != nullptr) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter)
}

// -------------------------------------------------------------------

// CheckBuildStageStatusResponse

// bool is_build_staged = 1;
inline void CheckBuildStageStatusResponse::clear_is_build_staged() {
  is_build_staged_ = false;
}
inline bool CheckBuildStageStatusResponse::is_build_staged() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.is_build_staged)
  return is_build_staged_;
}
inline void CheckBuildStageStatusResponse::set_is_build_staged(bool value) {
  
  is_build_staged_ = value;
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.is_build_staged)
}

// .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 2;
inline bool CheckBuildStageStatusResponse::has_staged_build_artifact() const {
  return this != internal_default_instance() && staged_build_artifact_ != nullptr;
}
inline const ::google::chromeos::moblab::v1beta1::BuildArtifact& CheckBuildStageStatusResponse::staged_build_artifact() const {
  const ::google::chromeos::moblab::v1beta1::BuildArtifact* p = staged_build_artifact_;
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.staged_build_artifact)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::chromeos::moblab::v1beta1::BuildArtifact*>(
      &::google::chromeos::moblab::v1beta1::_BuildArtifact_default_instance_);
}
inline ::google::chromeos::moblab::v1beta1::BuildArtifact* CheckBuildStageStatusResponse::release_staged_build_artifact() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.staged_build_artifact)
  
  ::google::chromeos::moblab::v1beta1::BuildArtifact* temp = staged_build_artifact_;
  staged_build_artifact_ = nullptr;
  return temp;
}
inline ::google::chromeos::moblab::v1beta1::BuildArtifact* CheckBuildStageStatusResponse::mutable_staged_build_artifact() {
  
  if (staged_build_artifact_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::chromeos::moblab::v1beta1::BuildArtifact>(GetArenaNoVirtual());
    staged_build_artifact_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.staged_build_artifact)
  return staged_build_artifact_;
}
inline void CheckBuildStageStatusResponse::set_allocated_staged_build_artifact(::google::chromeos::moblab::v1beta1::BuildArtifact* staged_build_artifact) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(staged_build_artifact_);
  }
  if (staged_build_artifact) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      staged_build_artifact = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, staged_build_artifact, submessage_arena);
    }
    
  } else {
    
  }
  staged_build_artifact_ = staged_build_artifact;
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.staged_build_artifact)
}

// .google.chromeos.moblab.v1beta1.BuildArtifact source_build_artifact = 3;
inline bool CheckBuildStageStatusResponse::has_source_build_artifact() const {
  return this != internal_default_instance() && source_build_artifact_ != nullptr;
}
inline const ::google::chromeos::moblab::v1beta1::BuildArtifact& CheckBuildStageStatusResponse::source_build_artifact() const {
  const ::google::chromeos::moblab::v1beta1::BuildArtifact* p = source_build_artifact_;
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.source_build_artifact)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::chromeos::moblab::v1beta1::BuildArtifact*>(
      &::google::chromeos::moblab::v1beta1::_BuildArtifact_default_instance_);
}
inline ::google::chromeos::moblab::v1beta1::BuildArtifact* CheckBuildStageStatusResponse::release_source_build_artifact() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.source_build_artifact)
  
  ::google::chromeos::moblab::v1beta1::BuildArtifact* temp = source_build_artifact_;
  source_build_artifact_ = nullptr;
  return temp;
}
inline ::google::chromeos::moblab::v1beta1::BuildArtifact* CheckBuildStageStatusResponse::mutable_source_build_artifact() {
  
  if (source_build_artifact_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::chromeos::moblab::v1beta1::BuildArtifact>(GetArenaNoVirtual());
    source_build_artifact_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.source_build_artifact)
  return source_build_artifact_;
}
inline void CheckBuildStageStatusResponse::set_allocated_source_build_artifact(::google::chromeos::moblab::v1beta1::BuildArtifact* source_build_artifact) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_build_artifact_);
  }
  if (source_build_artifact) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      source_build_artifact = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_build_artifact, submessage_arena);
    }
    
  } else {
    
  }
  source_build_artifact_ = source_build_artifact;
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse.source_build_artifact)
}

// -------------------------------------------------------------------

// StageBuildRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void StageBuildRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StageBuildRequest::name() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.StageBuildRequest.name)
  return name_.GetNoArena();
}
inline void StageBuildRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.StageBuildRequest.name)
}
#if LANG_CXX11
inline void StageBuildRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.chromeos.moblab.v1beta1.StageBuildRequest.name)
}
#endif
inline void StageBuildRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.chromeos.moblab.v1beta1.StageBuildRequest.name)
}
inline void StageBuildRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.chromeos.moblab.v1beta1.StageBuildRequest.name)
}
inline ::std::string* StageBuildRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.StageBuildRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StageBuildRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.StageBuildRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StageBuildRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.StageBuildRequest.name)
}

// string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void StageBuildRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StageBuildRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.StageBuildRequest.filter)
  return filter_.GetNoArena();
}
inline void StageBuildRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.StageBuildRequest.filter)
}
#if LANG_CXX11
inline void StageBuildRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.chromeos.moblab.v1beta1.StageBuildRequest.filter)
}
#endif
inline void StageBuildRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.chromeos.moblab.v1beta1.StageBuildRequest.filter)
}
inline void StageBuildRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.chromeos.moblab.v1beta1.StageBuildRequest.filter)
}
inline ::std::string* StageBuildRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.StageBuildRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StageBuildRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.StageBuildRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StageBuildRequest::set_allocated_filter(::std::string* filter) {
  if (filter != nullptr) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.StageBuildRequest.filter)
}

// -------------------------------------------------------------------

// StageBuildResponse

// .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 1;
inline bool StageBuildResponse::has_staged_build_artifact() const {
  return this != internal_default_instance() && staged_build_artifact_ != nullptr;
}
inline const ::google::chromeos::moblab::v1beta1::BuildArtifact& StageBuildResponse::staged_build_artifact() const {
  const ::google::chromeos::moblab::v1beta1::BuildArtifact* p = staged_build_artifact_;
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.StageBuildResponse.staged_build_artifact)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::chromeos::moblab::v1beta1::BuildArtifact*>(
      &::google::chromeos::moblab::v1beta1::_BuildArtifact_default_instance_);
}
inline ::google::chromeos::moblab::v1beta1::BuildArtifact* StageBuildResponse::release_staged_build_artifact() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.StageBuildResponse.staged_build_artifact)
  
  ::google::chromeos::moblab::v1beta1::BuildArtifact* temp = staged_build_artifact_;
  staged_build_artifact_ = nullptr;
  return temp;
}
inline ::google::chromeos::moblab::v1beta1::BuildArtifact* StageBuildResponse::mutable_staged_build_artifact() {
  
  if (staged_build_artifact_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::chromeos::moblab::v1beta1::BuildArtifact>(GetArenaNoVirtual());
    staged_build_artifact_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.StageBuildResponse.staged_build_artifact)
  return staged_build_artifact_;
}
inline void StageBuildResponse::set_allocated_staged_build_artifact(::google::chromeos::moblab::v1beta1::BuildArtifact* staged_build_artifact) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(staged_build_artifact_);
  }
  if (staged_build_artifact) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      staged_build_artifact = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, staged_build_artifact, submessage_arena);
    }
    
  } else {
    
  }
  staged_build_artifact_ = staged_build_artifact;
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.StageBuildResponse.staged_build_artifact)
}

// -------------------------------------------------------------------

// StageBuildMetadata

// float progress_percent = 1;
inline void StageBuildMetadata::clear_progress_percent() {
  progress_percent_ = 0;
}
inline float StageBuildMetadata::progress_percent() const {
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.StageBuildMetadata.progress_percent)
  return progress_percent_;
}
inline void StageBuildMetadata::set_progress_percent(float value) {
  
  progress_percent_ = value;
  // @@protoc_insertion_point(field_set:google.chromeos.moblab.v1beta1.StageBuildMetadata.progress_percent)
}

// .google.protobuf.Timestamp start_time = 2;
inline bool StageBuildMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& StageBuildMetadata::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.StageBuildMetadata.start_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* StageBuildMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.StageBuildMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* StageBuildMetadata::mutable_start_time() {
  
  if (start_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    start_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.StageBuildMetadata.start_time)
  return start_time_;
}
inline void StageBuildMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.StageBuildMetadata.start_time)
}

// .google.protobuf.Timestamp end_time = 3;
inline bool StageBuildMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& StageBuildMetadata::end_time() const {
  const ::google::protobuf::Timestamp* p = end_time_;
  // @@protoc_insertion_point(field_get:google.chromeos.moblab.v1beta1.StageBuildMetadata.end_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* StageBuildMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.chromeos.moblab.v1beta1.StageBuildMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* StageBuildMetadata::mutable_end_time() {
  
  if (end_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    end_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.chromeos.moblab.v1beta1.StageBuildMetadata.end_time)
  return end_time_;
}
inline void StageBuildMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:google.chromeos.moblab.v1beta1.StageBuildMetadata.end_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace moblab
}  // namespace chromeos
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto
