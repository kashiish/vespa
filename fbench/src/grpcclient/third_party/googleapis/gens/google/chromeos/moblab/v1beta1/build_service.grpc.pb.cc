// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/chromeos/moblab/v1beta1/build_service.proto

#include "google/chromeos/moblab/v1beta1/build_service.pb.h"
#include "google/chromeos/moblab/v1beta1/build_service.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace chromeos {
namespace moblab {
namespace v1beta1 {

static const char* BuildService_method_names[] = {
  "/google.chromeos.moblab.v1beta1.BuildService/ListBuilds",
  "/google.chromeos.moblab.v1beta1.BuildService/CheckBuildStageStatus",
  "/google.chromeos.moblab.v1beta1.BuildService/StageBuild",
};

std::unique_ptr< BuildService::Stub> BuildService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< BuildService::Stub> stub(new BuildService::Stub(channel, options));
  return stub;
}

BuildService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_ListBuilds_(BuildService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CheckBuildStageStatus_(BuildService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StageBuild_(BuildService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status BuildService::Stub::ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::google::chromeos::moblab::v1beta1::ListBuildsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListBuilds_, context, request, response);
}

void BuildService::Stub::async::ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::google::chromeos::moblab::v1beta1::ListBuildsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListBuilds_, context, request, response, std::move(f));
}

void BuildService::Stub::async::ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListBuilds_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* BuildService::Stub::PrepareAsyncListBuildsRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::chromeos::moblab::v1beta1::ListBuildsResponse, ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListBuilds_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* BuildService::Stub::AsyncListBuildsRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListBuildsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status BuildService::Stub::CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CheckBuildStageStatus_, context, request, response);
}

void BuildService::Stub::async::CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CheckBuildStageStatus_, context, request, response, std::move(f));
}

void BuildService::Stub::async::CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CheckBuildStageStatus_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* BuildService::Stub::PrepareAsyncCheckBuildStageStatusRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CheckBuildStageStatus_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* BuildService::Stub::AsyncCheckBuildStageStatusRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCheckBuildStageStatusRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status BuildService::Stub::StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StageBuild_, context, request, response);
}

void BuildService::Stub::async::StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StageBuild_, context, request, response, std::move(f));
}

void BuildService::Stub::async::StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StageBuild_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BuildService::Stub::PrepareAsyncStageBuildRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::longrunning::Operation, ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StageBuild_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BuildService::Stub::AsyncStageBuildRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStageBuildRaw(context, request, cq);
  result->StartCall();
  return result;
}

BuildService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BuildService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BuildService::Service, ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::google::chromeos::moblab::v1beta1::ListBuildsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](BuildService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* req,
             ::google::chromeos::moblab::v1beta1::ListBuildsResponse* resp) {
               return service->ListBuilds(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BuildService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BuildService::Service, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](BuildService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* req,
             ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* resp) {
               return service->CheckBuildStageStatus(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BuildService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BuildService::Service, ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](BuildService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::chromeos::moblab::v1beta1::StageBuildRequest* req,
             ::google::longrunning::Operation* resp) {
               return service->StageBuild(ctx, req, resp);
             }, this)));
}

BuildService::Service::~Service() {
}

::grpc::Status BuildService::Service::ListBuilds(::grpc::ServerContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BuildService::Service::CheckBuildStageStatus(::grpc::ServerContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BuildService::Service::StageBuild(::grpc::ServerContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace chromeos
}  // namespace moblab
}  // namespace v1beta1

