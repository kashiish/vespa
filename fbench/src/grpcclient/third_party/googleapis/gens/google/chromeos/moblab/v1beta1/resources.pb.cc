// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/chromeos/moblab/v1beta1/resources.proto

#include "google/chromeos/moblab/v1beta1/resources.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace google {
namespace chromeos {
namespace moblab {
namespace v1beta1 {
class BuildTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuildTarget> _instance;
} _BuildTarget_default_instance_;
class ModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Model> _instance;
} _Model_default_instance_;
class MilestoneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Milestone> _instance;
} _Milestone_default_instance_;
class BuildDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Build> _instance;
} _Build_default_instance_;
class BuildArtifactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuildArtifact> _instance;
} _BuildArtifact_default_instance_;
}  // namespace v1beta1
}  // namespace moblab
}  // namespace chromeos
}  // namespace google
static void InitDefaultsBuildTarget_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_BuildTarget_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::BuildTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::BuildTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BuildTarget_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBuildTarget_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto}, {}};

static void InitDefaultsModel_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_Model_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::Model();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::Model::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Model_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModel_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto}, {}};

static void InitDefaultsMilestone_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_Milestone_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::Milestone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::Milestone::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Milestone_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMilestone_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto}, {}};

static void InitDefaultsBuild_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_Build_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::Build();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::Build::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Build_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBuild_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto}, {}};

static void InitDefaultsBuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_BuildArtifact_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::BuildArtifact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::BuildArtifact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto}, {}};

void InitDefaults_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_BuildTarget_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Model_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Milestone_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Build_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::BuildTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::BuildTarget, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Model, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Milestone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Milestone, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Build, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Build, name_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Build, milestone_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Build, build_version_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Build, status_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Build, type_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::Build, branch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::BuildArtifact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::BuildArtifact, name_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::BuildArtifact, build_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::BuildArtifact, bucket_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::BuildArtifact, path_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::BuildArtifact, object_count_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::chromeos::moblab::v1beta1::BuildTarget)},
  { 6, -1, sizeof(::google::chromeos::moblab::v1beta1::Model)},
  { 12, -1, sizeof(::google::chromeos::moblab::v1beta1::Milestone)},
  { 18, -1, sizeof(::google::chromeos::moblab::v1beta1::Build)},
  { 29, -1, sizeof(::google::chromeos::moblab::v1beta1::BuildArtifact)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_BuildTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_Model_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_Milestone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_Build_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_BuildArtifact_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto = {
  {}, AddDescriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto, "google/chromeos/moblab/v1beta1/resources.proto", schemas,
  file_default_instances, TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto::offsets,
  file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto, 5, file_level_enum_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto, file_level_service_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto,
};

const char descriptor_table_protodef_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[] =
  "\n.google/chromeos/moblab/v1beta1/resourc"
  "es.proto\022\036google.chromeos.moblab.v1beta1"
  "\032\031google/api/resource.proto\"h\n\013BuildTarg"
  "et\022\014\n\004name\030\001 \001(\t:K\352AH\n)chromeosmoblab.go"
  "ogleapis.com/BuildTarget\022\033buildTargets/{"
  "build_target}\"k\n\005Model\022\014\n\004name\030\001 \001(\t:T\352A"
  "Q\n#chromeosmoblab.googleapis.com/Model\022*"
  "buildTargets/{build_target}/models/{mode"
  "l}\"_\n\tMilestone\022\014\n\004name\030\001 \001(\t:D\352AA\n\'chro"
  "meosmoblab.googleapis.com/Milestone\022\026mil"
  "estones/{milestone}\"\203\004\n\005Build\022\014\n\004name\030\001 "
  "\001(\t\022\?\n\tmilestone\030\002 \001(\tB,\372A)\n\'chromeosmob"
  "lab.googleapis.com/Milestone\022\025\n\rbuild_ve"
  "rsion\030\003 \001(\t\022A\n\006status\030\004 \001(\01621.google.chr"
  "omeos.moblab.v1beta1.Build.BuildStatus\022="
  "\n\004type\030\005 \001(\0162/.google.chromeos.moblab.v1"
  "beta1.Build.BuildType\022\016\n\006branch\030\006 \001(\t\"Y\n"
  "\013BuildStatus\022\034\n\030BUILD_STATUS_UNSPECIFIED"
  "\020\000\022\010\n\004PASS\020\001\022\010\n\004FAIL\020\002\022\013\n\007RUNNING\020\003\022\013\n\007A"
  "BORTED\020\004\"B\n\tBuildType\022\032\n\026BUILD_TYPE_UNSP"
  "ECIFIED\020\000\022\013\n\007RELEASE\020\001\022\014\n\010FIRMWARE\020\002:c\352A"
  "`\n#chromeosmoblab.googleapis.com/Build\0229"
  "buildTargets/{build_target}/models/{mode"
  "l}/builds/{build}\"\215\002\n\rBuildArtifact\022\014\n\004n"
  "ame\030\001 \001(\t\0227\n\005build\030\002 \001(\tB(\372A%\n#chromeosm"
  "oblab.googleapis.com/Build\022\016\n\006bucket\030\003 \001"
  "(\t\022\014\n\004path\030\004 \001(\t\022\024\n\014object_count\030\005 \001(\r:\200"
  "\001\352A}\n+chromeosmoblab.googleapis.com/Buil"
  "dArtifact\022NbuildTargets/{build_target}/m"
  "odels/{model}/builds/{build}/artifacts/{"
  "artifact}B~\n\"com.google.chromeos.moblab."
  "v1beta1B\016ResourcesProtoH\001P\001ZDgoogle.gola"
  "ng.org/genproto/googleapis/chromeos/mobl"
  "ab/v1beta1;moblabb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto = {
  false, InitDefaults_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto, 
  descriptor_table_protodef_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto,
  "google/chromeos/moblab/v1beta1/resources.proto", &assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto, 1345,
};

void AddDescriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fapi_2fresource_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto = []() { AddDescriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto(); return true; }();
namespace google {
namespace chromeos {
namespace moblab {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* Build_BuildStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[0];
}
bool Build_BuildStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Build_BuildStatus Build::BUILD_STATUS_UNSPECIFIED;
const Build_BuildStatus Build::PASS;
const Build_BuildStatus Build::FAIL;
const Build_BuildStatus Build::RUNNING;
const Build_BuildStatus Build::ABORTED;
const Build_BuildStatus Build::BuildStatus_MIN;
const Build_BuildStatus Build::BuildStatus_MAX;
const int Build::BuildStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Build_BuildType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[1];
}
bool Build_BuildType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Build_BuildType Build::BUILD_TYPE_UNSPECIFIED;
const Build_BuildType Build::RELEASE;
const Build_BuildType Build::FIRMWARE;
const Build_BuildType Build::BuildType_MIN;
const Build_BuildType Build::BuildType_MAX;
const int Build::BuildType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void BuildTarget::InitAsDefaultInstance() {
}
class BuildTarget::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildTarget::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildTarget::BuildTarget()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.BuildTarget)
}
BuildTarget::BuildTarget(const BuildTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.BuildTarget)
}

void BuildTarget::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BuildTarget_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BuildTarget::~BuildTarget() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.BuildTarget)
  SharedDtor();
}

void BuildTarget::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BuildTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuildTarget& BuildTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BuildTarget_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void BuildTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.BuildTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BuildTarget::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BuildTarget*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.BuildTarget.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BuildTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.BuildTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.BuildTarget.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.BuildTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.BuildTarget)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BuildTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.BuildTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildTarget.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.BuildTarget)
}

::google::protobuf::uint8* BuildTarget::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.BuildTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildTarget.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.BuildTarget)
  return target;
}

size_t BuildTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.BuildTarget)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuildTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.BuildTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildTarget* source =
      ::google::protobuf::DynamicCastToGenerated<BuildTarget>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.BuildTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.BuildTarget)
    MergeFrom(*source);
  }
}

void BuildTarget::MergeFrom(const BuildTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.BuildTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void BuildTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.BuildTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildTarget::CopyFrom(const BuildTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.BuildTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildTarget::IsInitialized() const {
  return true;
}

void BuildTarget::Swap(BuildTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildTarget::InternalSwap(BuildTarget* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata BuildTarget::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Model::InitAsDefaultInstance() {
}
class Model::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Model::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Model::Model()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.Model)
}
Model::Model(const Model& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.Model)
}

void Model::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Model_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.Model)
  SharedDtor();
}

void Model::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Model::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Model& Model::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Model_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Model::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Model*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.Model.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.Model)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.Model.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.Model)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Model.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.Model)
}

::google::protobuf::uint8* Model::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Model.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.Model)
  return target;
}

size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.Model)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Model::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.Model)
  GOOGLE_DCHECK_NE(&from, this);
  const Model* source =
      ::google::protobuf::DynamicCastToGenerated<Model>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.Model)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.Model)
    MergeFrom(*source);
  }
}

void Model::MergeFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.Model)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Model::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {
  return true;
}

void Model::Swap(Model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Model::InternalSwap(Model* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Model::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Milestone::InitAsDefaultInstance() {
}
class Milestone::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Milestone::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Milestone::Milestone()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.Milestone)
}
Milestone::Milestone(const Milestone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.Milestone)
}

void Milestone::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Milestone_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Milestone::~Milestone() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.Milestone)
  SharedDtor();
}

void Milestone::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Milestone::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Milestone& Milestone::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Milestone_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Milestone::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.Milestone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Milestone::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Milestone*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.Milestone.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Milestone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.Milestone)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.Milestone.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.Milestone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.Milestone)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Milestone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.Milestone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Milestone.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.Milestone)
}

::google::protobuf::uint8* Milestone::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.Milestone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Milestone.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.Milestone)
  return target;
}

size_t Milestone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.Milestone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Milestone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.Milestone)
  GOOGLE_DCHECK_NE(&from, this);
  const Milestone* source =
      ::google::protobuf::DynamicCastToGenerated<Milestone>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.Milestone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.Milestone)
    MergeFrom(*source);
  }
}

void Milestone::MergeFrom(const Milestone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.Milestone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Milestone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.Milestone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Milestone::CopyFrom(const Milestone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.Milestone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Milestone::IsInitialized() const {
  return true;
}

void Milestone::Swap(Milestone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Milestone::InternalSwap(Milestone* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Milestone::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Build::InitAsDefaultInstance() {
}
class Build::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Build::kNameFieldNumber;
const int Build::kMilestoneFieldNumber;
const int Build::kBuildVersionFieldNumber;
const int Build::kStatusFieldNumber;
const int Build::kTypeFieldNumber;
const int Build::kBranchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Build::Build()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.Build)
}
Build::Build(const Build& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  milestone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.milestone().size() > 0) {
    milestone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.milestone_);
  }
  build_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_version().size() > 0) {
    build_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_version_);
  }
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.branch().size() > 0) {
    branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&status_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.Build)
}

void Build::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Build_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  milestone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&status_)) + sizeof(type_));
}

Build::~Build() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.Build)
  SharedDtor();
}

void Build::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  milestone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Build::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Build& Build::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Build_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Build::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.Build)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  milestone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&status_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Build::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Build*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.Build.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string milestone = 2 [(.google.api.resource_reference) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.Build.milestone");
        object = msg->mutable_milestone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string build_version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.Build.build_version");
        object = msg->mutable_build_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.chromeos.moblab.v1beta1.Build.BuildStatus status = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::chromeos::moblab::v1beta1::Build_BuildStatus>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.chromeos.moblab.v1beta1.Build.BuildType type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::google::chromeos::moblab::v1beta1::Build_BuildType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string branch = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.Build.branch");
        object = msg->mutable_branch();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Build::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.Build)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.Build.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string milestone = 2 [(.google.api.resource_reference) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_milestone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->milestone().data(), static_cast<int>(this->milestone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.Build.milestone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_version().data(), static_cast<int>(this->build_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.Build.build_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.chromeos.moblab.v1beta1.Build.BuildStatus status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::chromeos::moblab::v1beta1::Build_BuildStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.chromeos.moblab.v1beta1.Build.BuildType type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::chromeos::moblab::v1beta1::Build_BuildType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string branch = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch().data(), static_cast<int>(this->branch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.Build.branch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.Build)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.Build)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Build::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.Build)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Build.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string milestone = 2 [(.google.api.resource_reference) = {
  if (this->milestone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->milestone().data(), static_cast<int>(this->milestone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Build.milestone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->milestone(), output);
  }

  // string build_version = 3;
  if (this->build_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_version().data(), static_cast<int>(this->build_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Build.build_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->build_version(), output);
  }

  // .google.chromeos.moblab.v1beta1.Build.BuildStatus status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // .google.chromeos.moblab.v1beta1.Build.BuildType type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // string branch = 6;
  if (this->branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Build.branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->branch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.Build)
}

::google::protobuf::uint8* Build::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.Build)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Build.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string milestone = 2 [(.google.api.resource_reference) = {
  if (this->milestone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->milestone().data(), static_cast<int>(this->milestone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Build.milestone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->milestone(), target);
  }

  // string build_version = 3;
  if (this->build_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_version().data(), static_cast<int>(this->build_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Build.build_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->build_version(), target);
  }

  // .google.chromeos.moblab.v1beta1.Build.BuildStatus status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // .google.chromeos.moblab.v1beta1.Build.BuildType type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // string branch = 6;
  if (this->branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.Build.branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->branch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.Build)
  return target;
}

size_t Build::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.Build)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string milestone = 2 [(.google.api.resource_reference) = {
  if (this->milestone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->milestone());
  }

  // string build_version = 3;
  if (this->build_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_version());
  }

  // string branch = 6;
  if (this->branch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->branch());
  }

  // .google.chromeos.moblab.v1beta1.Build.BuildStatus status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // .google.chromeos.moblab.v1beta1.Build.BuildType type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Build::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.Build)
  GOOGLE_DCHECK_NE(&from, this);
  const Build* source =
      ::google::protobuf::DynamicCastToGenerated<Build>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.Build)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.Build)
    MergeFrom(*source);
  }
}

void Build::MergeFrom(const Build& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.Build)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.milestone().size() > 0) {

    milestone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.milestone_);
  }
  if (from.build_version().size() > 0) {

    build_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_version_);
  }
  if (from.branch().size() > 0) {

    branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Build::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.Build)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Build::CopyFrom(const Build& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.Build)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Build::IsInitialized() const {
  return true;
}

void Build::Swap(Build* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Build::InternalSwap(Build* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  milestone_.Swap(&other->milestone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  build_version_.Swap(&other->build_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  branch_.Swap(&other->branch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata Build::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BuildArtifact::InitAsDefaultInstance() {
}
class BuildArtifact::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildArtifact::kNameFieldNumber;
const int BuildArtifact::kBuildFieldNumber;
const int BuildArtifact::kBucketFieldNumber;
const int BuildArtifact::kPathFieldNumber;
const int BuildArtifact::kObjectCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildArtifact::BuildArtifact()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.BuildArtifact)
}
BuildArtifact::BuildArtifact(const BuildArtifact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build().size() > 0) {
    build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_);
  }
  bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bucket().size() > 0) {
    bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  object_count_ = from.object_count_;
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.BuildArtifact)
}

void BuildArtifact::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_count_ = 0u;
}

BuildArtifact::~BuildArtifact() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.BuildArtifact)
  SharedDtor();
}

void BuildArtifact::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bucket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BuildArtifact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuildArtifact& BuildArtifact::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void BuildArtifact::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_count_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BuildArtifact::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BuildArtifact*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.BuildArtifact.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string build = 2 [(.google.api.resource_reference) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.BuildArtifact.build");
        object = msg->mutable_build();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bucket = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.BuildArtifact.bucket");
        object = msg->mutable_bucket();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string path = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.BuildArtifact.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 object_count = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_object_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BuildArtifact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.BuildArtifact.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build = 2 [(.google.api.resource_reference) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build().data(), static_cast<int>(this->build().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.BuildArtifact.build"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bucket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket().data(), static_cast<int>(this->bucket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.BuildArtifact.bucket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.BuildArtifact.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 object_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &object_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.BuildArtifact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.BuildArtifact)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BuildArtifact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildArtifact.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string build = 2 [(.google.api.resource_reference) = {
  if (this->build().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build().data(), static_cast<int>(this->build().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildArtifact.build");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->build(), output);
  }

  // string bucket = 3;
  if (this->bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket().data(), static_cast<int>(this->bucket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildArtifact.bucket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bucket(), output);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildArtifact.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->path(), output);
  }

  // uint32 object_count = 5;
  if (this->object_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->object_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.BuildArtifact)
}

::google::protobuf::uint8* BuildArtifact::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildArtifact.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string build = 2 [(.google.api.resource_reference) = {
  if (this->build().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build().data(), static_cast<int>(this->build().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildArtifact.build");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->build(), target);
  }

  // string bucket = 3;
  if (this->bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket().data(), static_cast<int>(this->bucket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildArtifact.bucket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bucket(), target);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.BuildArtifact.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->path(), target);
  }

  // uint32 object_count = 5;
  if (this->object_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->object_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.BuildArtifact)
  return target;
}

size_t BuildArtifact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string build = 2 [(.google.api.resource_reference) = {
  if (this->build().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build());
  }

  // string bucket = 3;
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket());
  }

  // string path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // uint32 object_count = 5;
  if (this->object_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->object_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuildArtifact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildArtifact* source =
      ::google::protobuf::DynamicCastToGenerated<BuildArtifact>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.BuildArtifact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.BuildArtifact)
    MergeFrom(*source);
  }
}

void BuildArtifact::MergeFrom(const BuildArtifact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.build().size() > 0) {

    build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_);
  }
  if (from.bucket().size() > 0) {

    bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.object_count() != 0) {
    set_object_count(from.object_count());
  }
}

void BuildArtifact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildArtifact::CopyFrom(const BuildArtifact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.BuildArtifact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildArtifact::IsInitialized() const {
  return true;
}

void BuildArtifact::Swap(BuildArtifact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildArtifact::InternalSwap(BuildArtifact* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  build_.Swap(&other->build_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bucket_.Swap(&other->bucket_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(object_count_, other->object_count_);
}

::google::protobuf::Metadata BuildArtifact::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace moblab
}  // namespace chromeos
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::BuildTarget* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::BuildTarget >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::BuildTarget >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::Model* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::Model >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::Model >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::Milestone* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::Milestone >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::Milestone >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::Build* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::Build >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::Build >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::BuildArtifact* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::BuildArtifact >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::BuildArtifact >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
