// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/chromeos/moblab/v1beta1/build_service.proto
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto__INCLUDED
#define GRPC_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto__INCLUDED

#include "google/chromeos/moblab/v1beta1/build_service.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace chromeos {
namespace moblab {
namespace v1beta1 {

// Manages Chrome OS build services.
class BuildService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.chromeos.moblab.v1beta1.BuildService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Lists all builds for the given build target and model in descending order
    // for the milestones and build versions.
    virtual ::grpc::Status ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>> AsyncListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>>(AsyncListBuildsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>> PrepareAsyncListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>>(PrepareAsyncListBuildsRaw(context, request, cq));
    }
    // Checks the stage status for a given build artifact in a partner Google
    // Cloud Storage bucket.
    virtual ::grpc::Status CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>> AsyncCheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>>(AsyncCheckBuildStageStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>> PrepareAsyncCheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>>(PrepareAsyncCheckBuildStageStatusRaw(context, request, cq));
    }
    // Stages a given build artifact from a internal Google Cloud Storage bucket
    // to a partner Google Cloud Storage bucket. If any of objects has already
    // been copied, it will overwrite the previous objects. Operation <response:
    // [StageBuildResponse][google.chromeos.moblab.v1beta1.StageBuildResponse],
    //            metadata: [StageBuildMetadata][google.chromeos.moblab.v1beta1.StageBuildMetadata]>
    virtual ::grpc::Status StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncStageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncStageBuildRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncStageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncStageBuildRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Lists all builds for the given build target and model in descending order
      // for the milestones and build versions.
      virtual void ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Checks the stage status for a given build artifact in a partner Google
      // Cloud Storage bucket.
      virtual void CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Stages a given build artifact from a internal Google Cloud Storage bucket
      // to a partner Google Cloud Storage bucket. If any of objects has already
      // been copied, it will overwrite the previous objects. Operation <response:
      // [StageBuildResponse][google.chromeos.moblab.v1beta1.StageBuildResponse],
      //            metadata: [StageBuildMetadata][google.chromeos.moblab.v1beta1.StageBuildMetadata]>
      virtual void StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* AsyncListBuildsRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* PrepareAsyncListBuildsRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* AsyncCheckBuildStageStatusRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* PrepareAsyncCheckBuildStageStatusRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncStageBuildRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncStageBuildRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>> AsyncListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>>(AsyncListBuildsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>> PrepareAsyncListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>>(PrepareAsyncListBuildsRaw(context, request, cq));
    }
    ::grpc::Status CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>> AsyncCheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>>(AsyncCheckBuildStageStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>> PrepareAsyncCheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>>(PrepareAsyncCheckBuildStageStatusRaw(context, request, cq));
    }
    ::grpc::Status StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncStageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncStageBuildRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncStageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncStageBuildRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListBuilds(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void CheckBuildStageStatus(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      void StageBuild(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* AsyncListBuildsRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* PrepareAsyncListBuildsRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* AsyncCheckBuildStageStatusRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* PrepareAsyncCheckBuildStageStatusRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncStageBuildRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncStageBuildRaw(::grpc::ClientContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListBuilds_;
    const ::grpc::internal::RpcMethod rpcmethod_CheckBuildStageStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_StageBuild_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Lists all builds for the given build target and model in descending order
    // for the milestones and build versions.
    virtual ::grpc::Status ListBuilds(::grpc::ServerContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response);
    // Checks the stage status for a given build artifact in a partner Google
    // Cloud Storage bucket.
    virtual ::grpc::Status CheckBuildStageStatus(::grpc::ServerContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response);
    // Stages a given build artifact from a internal Google Cloud Storage bucket
    // to a partner Google Cloud Storage bucket. If any of objects has already
    // been copied, it will overwrite the previous objects. Operation <response:
    // [StageBuildResponse][google.chromeos.moblab.v1beta1.StageBuildResponse],
    //            metadata: [StageBuildMetadata][google.chromeos.moblab.v1beta1.StageBuildMetadata]>
    virtual ::grpc::Status StageBuild(::grpc::ServerContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListBuilds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListBuilds() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListBuilds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuilds(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* /*request*/, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBuilds(::grpc::ServerContext* context, ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckBuildStageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CheckBuildStageStatus() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CheckBuildStageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckBuildStageStatus(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* /*request*/, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckBuildStageStatus(::grpc::ServerContext* context, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StageBuild : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StageBuild() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_StageBuild() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StageBuild(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStageBuild(::grpc::ServerContext* context, ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListBuilds<WithAsyncMethod_CheckBuildStageStatus<WithAsyncMethod_StageBuild<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ListBuilds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListBuilds() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::google::chromeos::moblab::v1beta1::ListBuildsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* request, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* response) { return this->ListBuilds(context, request, response); }));}
    void SetMessageAllocatorFor_ListBuilds(
        ::grpc::MessageAllocator< ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::google::chromeos::moblab::v1beta1::ListBuildsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListBuilds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuilds(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* /*request*/, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListBuilds(
      ::grpc::CallbackServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* /*request*/, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CheckBuildStageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CheckBuildStageStatus() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* request, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* response) { return this->CheckBuildStageStatus(context, request, response); }));}
    void SetMessageAllocatorFor_CheckBuildStageStatus(
        ::grpc::MessageAllocator< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CheckBuildStageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckBuildStageStatus(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* /*request*/, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckBuildStageStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* /*request*/, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StageBuild : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StageBuild() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::google::longrunning::Operation>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* request, ::google::longrunning::Operation* response) { return this->StageBuild(context, request, response); }));}
    void SetMessageAllocatorFor_StageBuild(
        ::grpc::MessageAllocator< ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::google::longrunning::Operation>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StageBuild() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StageBuild(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StageBuild(
      ::grpc::CallbackServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* /*request*/, ::google::longrunning::Operation* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ListBuilds<WithCallbackMethod_CheckBuildStageStatus<WithCallbackMethod_StageBuild<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ListBuilds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListBuilds() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListBuilds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuilds(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* /*request*/, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckBuildStageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CheckBuildStageStatus() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CheckBuildStageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckBuildStageStatus(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* /*request*/, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StageBuild : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StageBuild() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_StageBuild() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StageBuild(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListBuilds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListBuilds() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ListBuilds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuilds(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* /*request*/, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBuilds(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckBuildStageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CheckBuildStageStatus() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CheckBuildStageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckBuildStageStatus(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* /*request*/, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckBuildStageStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StageBuild : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StageBuild() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_StageBuild() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StageBuild(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStageBuild(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListBuilds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListBuilds() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListBuilds(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListBuilds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuilds(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* /*request*/, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListBuilds(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CheckBuildStageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CheckBuildStageStatus() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CheckBuildStageStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_CheckBuildStageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckBuildStageStatus(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* /*request*/, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckBuildStageStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StageBuild : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StageBuild() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StageBuild(context, request, response); }));
    }
    ~WithRawCallbackMethod_StageBuild() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StageBuild(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StageBuild(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListBuilds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListBuilds() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::google::chromeos::moblab::v1beta1::ListBuildsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::chromeos::moblab::v1beta1::ListBuildsRequest, ::google::chromeos::moblab::v1beta1::ListBuildsResponse>* streamer) {
                       return this->StreamedListBuilds(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListBuilds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListBuilds(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::ListBuildsRequest* /*request*/, ::google::chromeos::moblab::v1beta1::ListBuildsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListBuilds(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::chromeos::moblab::v1beta1::ListBuildsRequest,::google::chromeos::moblab::v1beta1::ListBuildsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckBuildStageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CheckBuildStageStatus() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* streamer) {
                       return this->StreamedCheckBuildStageStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CheckBuildStageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckBuildStageStatus(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* /*request*/, ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckBuildStageStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest,::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StageBuild : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StageBuild() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::chromeos::moblab::v1beta1::StageBuildRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedStageBuild(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StageBuild() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StageBuild(::grpc::ServerContext* /*context*/, const ::google::chromeos::moblab::v1beta1::StageBuildRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStageBuild(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::chromeos::moblab::v1beta1::StageBuildRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ListBuilds<WithStreamedUnaryMethod_CheckBuildStageStatus<WithStreamedUnaryMethod_StageBuild<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ListBuilds<WithStreamedUnaryMethod_CheckBuildStageStatus<WithStreamedUnaryMethod_StageBuild<Service > > > StreamedService;
};

}  // namespace v1beta1
}  // namespace moblab
}  // namespace chromeos
}  // namespace google


#endif  // GRPC_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto__INCLUDED
