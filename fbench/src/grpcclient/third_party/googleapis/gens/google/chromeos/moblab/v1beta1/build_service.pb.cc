// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/chromeos/moblab/v1beta1/build_service.proto

#include "google/chromeos/moblab/v1beta1/build_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Build_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace chromeos {
namespace moblab {
namespace v1beta1 {
class ListBuildsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBuildsRequest> _instance;
} _ListBuildsRequest_default_instance_;
class ListBuildsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBuildsResponse> _instance;
} _ListBuildsResponse_default_instance_;
class CheckBuildStageStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckBuildStageStatusRequest> _instance;
} _CheckBuildStageStatusRequest_default_instance_;
class CheckBuildStageStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckBuildStageStatusResponse> _instance;
} _CheckBuildStageStatusResponse_default_instance_;
class StageBuildRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StageBuildRequest> _instance;
} _StageBuildRequest_default_instance_;
class StageBuildResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StageBuildResponse> _instance;
} _StageBuildResponse_default_instance_;
class StageBuildMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StageBuildMetadata> _instance;
} _StageBuildMetadata_default_instance_;
}  // namespace v1beta1
}  // namespace moblab
}  // namespace chromeos
}  // namespace google
static void InitDefaultsListBuildsRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_ListBuildsRequest_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::ListBuildsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::ListBuildsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListBuildsRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListBuildsRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto}, {
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsListBuildsResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_ListBuildsResponse_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::ListBuildsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::ListBuildsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListBuildsResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListBuildsResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto}, {
      &scc_info_Build_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base,}};

static void InitDefaultsCheckBuildStageStatusRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_CheckBuildStageStatusRequest_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckBuildStageStatusRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckBuildStageStatusRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto}, {}};

static void InitDefaultsCheckBuildStageStatusResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_CheckBuildStageStatusResponse_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CheckBuildStageStatusResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCheckBuildStageStatusResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto}, {
      &scc_info_BuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base,}};

static void InitDefaultsStageBuildRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_StageBuildRequest_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::StageBuildRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::StageBuildRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StageBuildRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStageBuildRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto}, {}};

static void InitDefaultsStageBuildResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_StageBuildResponse_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::StageBuildResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::StageBuildResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StageBuildResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStageBuildResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto}, {
      &scc_info_BuildArtifact_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto.base,}};

static void InitDefaultsStageBuildMetadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::chromeos::moblab::v1beta1::_StageBuildMetadata_default_instance_;
    new (ptr) ::google::chromeos::moblab::v1beta1::StageBuildMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::chromeos::moblab::v1beta1::StageBuildMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StageBuildMetadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStageBuildMetadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

void InitDefaults_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListBuildsRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBuildsResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckBuildStageStatusRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckBuildStageStatusResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StageBuildRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StageBuildResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StageBuildMetadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[7];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsRequest, filter_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsRequest, read_mask_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsRequest, group_by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsResponse, builds_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsResponse, next_page_token_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::ListBuildsResponse, total_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest, filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse, is_build_staged_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse, staged_build_artifact_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse, source_build_artifact_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildRequest, filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildResponse, staged_build_artifact_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildMetadata, progress_percent_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildMetadata, start_time_),
  PROTOBUF_FIELD_OFFSET(::google::chromeos::moblab::v1beta1::StageBuildMetadata, end_time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::chromeos::moblab::v1beta1::ListBuildsRequest)},
  { 11, -1, sizeof(::google::chromeos::moblab::v1beta1::ListBuildsResponse)},
  { 19, -1, sizeof(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest)},
  { 26, -1, sizeof(::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse)},
  { 34, -1, sizeof(::google::chromeos::moblab::v1beta1::StageBuildRequest)},
  { 41, -1, sizeof(::google::chromeos::moblab::v1beta1::StageBuildResponse)},
  { 47, -1, sizeof(::google::chromeos::moblab::v1beta1::StageBuildMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_ListBuildsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_ListBuildsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_CheckBuildStageStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_CheckBuildStageStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_StageBuildRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_StageBuildResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::chromeos::moblab::v1beta1::_StageBuildMetadata_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto = {
  {}, AddDescriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto, "google/chromeos/moblab/v1beta1/build_service.proto", schemas,
  file_default_instances, TableStruct_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto::offsets,
  file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto, 7, file_level_enum_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto, file_level_service_descriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto,
};

const char descriptor_table_protodef_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[] =
  "\n2google/chromeos/moblab/v1beta1/build_s"
  "ervice.proto\022\036google.chromeos.moblab.v1b"
  "eta1\032\034google/api/annotations.proto\032\027goog"
  "le/api/client.proto\032\037google/api/field_be"
  "havior.proto\032\031google/api/resource.proto\032"
  ".google/chromeos/moblab/v1beta1/resource"
  "s.proto\032#google/longrunning/operations.p"
  "roto\032 google/protobuf/field_mask.proto\032\037"
  "google/protobuf/timestamp.proto\"\375\001\n\021List"
  "BuildsRequest\022;\n\006parent\030\001 \001(\tB+\340A\002\372A%\n#c"
  "hromeosmoblab.googleapis.com/Model\022\026\n\tpa"
  "ge_size\030\002 \001(\005B\003\340A\001\022\027\n\npage_token\030\003 \001(\tB\003"
  "\340A\001\022\023\n\006filter\030\004 \001(\tB\003\340A\001\0222\n\tread_mask\030\005 "
  "\001(\0132\032.google.protobuf.FieldMaskB\003\340A\001\0221\n\010"
  "group_by\030\006 \001(\0132\032.google.protobuf.FieldMa"
  "skB\003\340A\001\"x\n\022ListBuildsResponse\0225\n\006builds\030"
  "\001 \003(\0132%.google.chromeos.moblab.v1beta1.B"
  "uild\022\027\n\017next_page_token\030\002 \001(\t\022\022\n\ntotal_s"
  "ize\030\003 \001(\005\"v\n\034CheckBuildStageStatusReques"
  "t\022A\n\004name\030\001 \001(\tB3\340A\002\372A-\n+chromeosmoblab."
  "googleapis.com/BuildArtifact\022\023\n\006filter\030\002"
  " \001(\tB\003\340A\001\"\324\001\n\035CheckBuildStageStatusRespo"
  "nse\022\027\n\017is_build_staged\030\001 \001(\010\022L\n\025staged_b"
  "uild_artifact\030\002 \001(\0132-.google.chromeos.mo"
  "blab.v1beta1.BuildArtifact\022L\n\025source_bui"
  "ld_artifact\030\003 \001(\0132-.google.chromeos.mobl"
  "ab.v1beta1.BuildArtifact\"k\n\021StageBuildRe"
  "quest\022A\n\004name\030\001 \001(\tB3\340A\002\372A-\n+chromeosmob"
  "lab.googleapis.com/BuildArtifact\022\023\n\006filt"
  "er\030\002 \001(\tB\003\340A\001\"b\n\022StageBuildResponse\022L\n\025s"
  "taged_build_artifact\030\001 \001(\0132-.google.chro"
  "meos.moblab.v1beta1.BuildArtifact\"\214\001\n\022St"
  "ageBuildMetadata\022\030\n\020progress_percent\030\001 \001"
  "(\002\022.\n\nstart_time\030\002 \001(\0132\032.google.protobuf"
  ".Timestamp\022,\n\010end_time\030\003 \001(\0132\032.google.pr"
  "otobuf.Timestamp2\341\005\n\014BuildService\022\266\001\n\nLi"
  "stBuilds\0221.google.chromeos.moblab.v1beta"
  "1.ListBuildsRequest\0322.google.chromeos.mo"
  "blab.v1beta1.ListBuildsResponse\"A\202\323\344\223\0022\022"
  "0/v1beta1/{parent=buildTargets/*/models/"
  "*}/builds\332A\006parent\022\347\001\n\025CheckBuildStageSt"
  "atus\022<.google.chromeos.moblab.v1beta1.Ch"
  "eckBuildStageStatusRequest\032=.google.chro"
  "meos.moblab.v1beta1.CheckBuildStageStatu"
  "sResponse\"Q\202\323\344\223\002D\022B/v1beta1/{name=buildT"
  "argets/*/models/*/builds/*/artifacts/*}:"
  "check\332A\004name\022\337\001\n\nStageBuild\0221.google.chr"
  "omeos.moblab.v1beta1.StageBuildRequest\032\035"
  ".google.longrunning.Operation\"\177\202\323\344\223\002G\"B/"
  "v1beta1/{name=buildTargets/*/models/*/bu"
  "ilds/*/artifacts/*}:stage:\001*\332A\004name\312A(\n\022"
  "StageBuildResponse\022\022StageBuildMetadata\032L"
  "\312A\035chromeosmoblab.googleapis.com\322A)https"
  "://www.googleapis.com/auth/moblabapiB\201\001\n"
  "\"com.google.chromeos.moblab.v1beta1B\021Bui"
  "ldServiceProtoH\001P\001ZDgoogle.golang.org/ge"
  "nproto/googleapis/chromeos/moblab/v1beta"
  "1;moblabb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto = {
  false, InitDefaults_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto, 
  descriptor_table_protodef_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto,
  "google/chromeos/moblab/v1beta1/build_service.proto", &assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto, 2296,
};

void AddDescriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[8] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_google_2fapi_2fclient_2eproto,
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fapi_2fresource_2eproto,
    ::AddDescriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fresources_2eproto,
    ::AddDescriptors_google_2flongrunning_2foperations_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ffield_5fmask_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto, deps, 8);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto = []() { AddDescriptors_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto(); return true; }();
namespace google {
namespace chromeos {
namespace moblab {
namespace v1beta1 {

// ===================================================================

void ListBuildsRequest::InitAsDefaultInstance() {
  ::google::chromeos::moblab::v1beta1::_ListBuildsRequest_default_instance_._instance.get_mutable()->read_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
  ::google::chromeos::moblab::v1beta1::_ListBuildsRequest_default_instance_._instance.get_mutable()->group_by_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
class ListBuildsRequest::HasBitSetters {
 public:
  static const ::google::protobuf::FieldMask& read_mask(const ListBuildsRequest* msg);
  static const ::google::protobuf::FieldMask& group_by(const ListBuildsRequest* msg);
};

const ::google::protobuf::FieldMask&
ListBuildsRequest::HasBitSetters::read_mask(const ListBuildsRequest* msg) {
  return *msg->read_mask_;
}
const ::google::protobuf::FieldMask&
ListBuildsRequest::HasBitSetters::group_by(const ListBuildsRequest* msg) {
  return *msg->group_by_;
}
void ListBuildsRequest::clear_read_mask() {
  if (GetArenaNoVirtual() == nullptr && read_mask_ != nullptr) {
    delete read_mask_;
  }
  read_mask_ = nullptr;
}
void ListBuildsRequest::clear_group_by() {
  if (GetArenaNoVirtual() == nullptr && group_by_ != nullptr) {
    delete group_by_;
  }
  group_by_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildsRequest::kParentFieldNumber;
const int ListBuildsRequest::kPageSizeFieldNumber;
const int ListBuildsRequest::kPageTokenFieldNumber;
const int ListBuildsRequest::kFilterFieldNumber;
const int ListBuildsRequest::kReadMaskFieldNumber;
const int ListBuildsRequest::kGroupByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildsRequest::ListBuildsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.ListBuildsRequest)
}
ListBuildsRequest::ListBuildsRequest(const ListBuildsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_read_mask()) {
    read_mask_ = new ::google::protobuf::FieldMask(*from.read_mask_);
  } else {
    read_mask_ = nullptr;
  }
  if (from.has_group_by()) {
    group_by_ = new ::google::protobuf::FieldMask(*from.group_by_);
  } else {
    group_by_ = nullptr;
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.ListBuildsRequest)
}

void ListBuildsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListBuildsRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_mask_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&read_mask_)) + sizeof(page_size_));
}

ListBuildsRequest::~ListBuildsRequest() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  SharedDtor();
}

void ListBuildsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete read_mask_;
  if (this != internal_default_instance()) delete group_by_;
}

void ListBuildsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListBuildsRequest& ListBuildsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListBuildsRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListBuildsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && read_mask_ != nullptr) {
    delete read_mask_;
  }
  read_mask_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && group_by_ != nullptr) {
    delete group_by_;
  }
  group_by_ = nullptr;
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListBuildsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListBuildsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.ListBuildsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filter = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.ListBuildsRequest.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.FieldMask read_mask = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FieldMask::_InternalParse;
        object = msg->mutable_read_mask();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FieldMask group_by = 6 [(.google.api.field_behavior) = OPTIONAL];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FieldMask::_InternalParse;
        object = msg->mutable_group_by();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListBuildsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.ListBuildsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.ListBuildsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask read_mask = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask group_by = 6 [(.google.api.field_behavior) = OPTIONAL];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_group_by()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListBuildsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.ListBuildsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // string filter = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.ListBuildsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filter(), output);
  }

  // .google.protobuf.FieldMask read_mask = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_read_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::read_mask(this), output);
  }

  // .google.protobuf.FieldMask group_by = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_group_by()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::group_by(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.ListBuildsRequest)
}

::google::protobuf::uint8* ListBuildsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.ListBuildsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.ListBuildsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // string filter = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.ListBuildsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filter(), target);
  }

  // .google.protobuf.FieldMask read_mask = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_read_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::read_mask(this), target);
  }

  // .google.protobuf.FieldMask group_by = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_group_by()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::group_by(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  return target;
}

size_t ListBuildsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string filter = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // .google.protobuf.FieldMask read_mask = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_read_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *read_mask_);
  }

  // .google.protobuf.FieldMask group_by = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_group_by()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *group_by_);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBuildsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBuildsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListBuildsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.ListBuildsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.ListBuildsRequest)
    MergeFrom(*source);
  }
}

void ListBuildsRequest::MergeFrom(const ListBuildsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_read_mask()) {
    mutable_read_mask()->::google::protobuf::FieldMask::MergeFrom(from.read_mask());
  }
  if (from.has_group_by()) {
    mutable_group_by()->::google::protobuf::FieldMask::MergeFrom(from.group_by());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListBuildsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildsRequest::CopyFrom(const ListBuildsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.ListBuildsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildsRequest::IsInitialized() const {
  return true;
}

void ListBuildsRequest::Swap(ListBuildsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildsRequest::InternalSwap(ListBuildsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(read_mask_, other->read_mask_);
  swap(group_by_, other->group_by_);
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListBuildsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListBuildsResponse::InitAsDefaultInstance() {
}
class ListBuildsResponse::HasBitSetters {
 public:
};

void ListBuildsResponse::clear_builds() {
  builds_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildsResponse::kBuildsFieldNumber;
const int ListBuildsResponse::kNextPageTokenFieldNumber;
const int ListBuildsResponse::kTotalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildsResponse::ListBuildsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.ListBuildsResponse)
}
ListBuildsResponse::ListBuildsResponse(const ListBuildsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      builds_(from.builds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  total_size_ = from.total_size_;
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.ListBuildsResponse)
}

void ListBuildsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListBuildsResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
}

ListBuildsResponse::~ListBuildsResponse() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  SharedDtor();
}

void ListBuildsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBuildsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListBuildsResponse& ListBuildsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListBuildsResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListBuildsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  builds_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListBuildsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListBuildsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.chromeos.moblab.v1beta1.Build builds = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::chromeos::moblab::v1beta1::Build::_InternalParse;
          object = msg->add_builds();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 total_size = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_total_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListBuildsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.chromeos.moblab.v1beta1.Build builds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListBuildsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.chromeos.moblab.v1beta1.Build builds = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->builds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->builds(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.ListBuildsResponse)
}

::google::protobuf::uint8* ListBuildsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.chromeos.moblab.v1beta1.Build builds = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->builds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->builds(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.ListBuildsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  return target;
}

size_t ListBuildsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.chromeos.moblab.v1beta1.Build builds = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->builds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->builds(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBuildsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBuildsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListBuildsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.ListBuildsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.ListBuildsResponse)
    MergeFrom(*source);
  }
}

void ListBuildsResponse::MergeFrom(const ListBuildsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  builds_.MergeFrom(from.builds_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.total_size() != 0) {
    set_total_size(from.total_size());
  }
}

void ListBuildsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildsResponse::CopyFrom(const ListBuildsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.ListBuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildsResponse::IsInitialized() const {
  return true;
}

void ListBuildsResponse::Swap(ListBuildsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildsResponse::InternalSwap(ListBuildsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&builds_)->InternalSwap(CastToBase(&other->builds_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(total_size_, other->total_size_);
}

::google::protobuf::Metadata ListBuildsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CheckBuildStageStatusRequest::InitAsDefaultInstance() {
}
class CheckBuildStageStatusRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckBuildStageStatusRequest::kNameFieldNumber;
const int CheckBuildStageStatusRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckBuildStageStatusRequest::CheckBuildStageStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
}
CheckBuildStageStatusRequest::CheckBuildStageStatusRequest(const CheckBuildStageStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
}

void CheckBuildStageStatusRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CheckBuildStageStatusRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CheckBuildStageStatusRequest::~CheckBuildStageStatusRequest() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  SharedDtor();
}

void CheckBuildStageStatusRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckBuildStageStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckBuildStageStatusRequest& CheckBuildStageStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CheckBuildStageStatusRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CheckBuildStageStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CheckBuildStageStatusRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CheckBuildStageStatusRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CheckBuildStageStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CheckBuildStageStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
}

::google::protobuf::uint8* CheckBuildStageStatusRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  return target;
}

size_t CheckBuildStageStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckBuildStageStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckBuildStageStatusRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CheckBuildStageStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
    MergeFrom(*source);
  }
}

void CheckBuildStageStatusRequest::MergeFrom(const CheckBuildStageStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
}

void CheckBuildStageStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckBuildStageStatusRequest::CopyFrom(const CheckBuildStageStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckBuildStageStatusRequest::IsInitialized() const {
  return true;
}

void CheckBuildStageStatusRequest::Swap(CheckBuildStageStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckBuildStageStatusRequest::InternalSwap(CheckBuildStageStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CheckBuildStageStatusRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CheckBuildStageStatusResponse::InitAsDefaultInstance() {
  ::google::chromeos::moblab::v1beta1::_CheckBuildStageStatusResponse_default_instance_._instance.get_mutable()->staged_build_artifact_ = const_cast< ::google::chromeos::moblab::v1beta1::BuildArtifact*>(
      ::google::chromeos::moblab::v1beta1::BuildArtifact::internal_default_instance());
  ::google::chromeos::moblab::v1beta1::_CheckBuildStageStatusResponse_default_instance_._instance.get_mutable()->source_build_artifact_ = const_cast< ::google::chromeos::moblab::v1beta1::BuildArtifact*>(
      ::google::chromeos::moblab::v1beta1::BuildArtifact::internal_default_instance());
}
class CheckBuildStageStatusResponse::HasBitSetters {
 public:
  static const ::google::chromeos::moblab::v1beta1::BuildArtifact& staged_build_artifact(const CheckBuildStageStatusResponse* msg);
  static const ::google::chromeos::moblab::v1beta1::BuildArtifact& source_build_artifact(const CheckBuildStageStatusResponse* msg);
};

const ::google::chromeos::moblab::v1beta1::BuildArtifact&
CheckBuildStageStatusResponse::HasBitSetters::staged_build_artifact(const CheckBuildStageStatusResponse* msg) {
  return *msg->staged_build_artifact_;
}
const ::google::chromeos::moblab::v1beta1::BuildArtifact&
CheckBuildStageStatusResponse::HasBitSetters::source_build_artifact(const CheckBuildStageStatusResponse* msg) {
  return *msg->source_build_artifact_;
}
void CheckBuildStageStatusResponse::clear_staged_build_artifact() {
  if (GetArenaNoVirtual() == nullptr && staged_build_artifact_ != nullptr) {
    delete staged_build_artifact_;
  }
  staged_build_artifact_ = nullptr;
}
void CheckBuildStageStatusResponse::clear_source_build_artifact() {
  if (GetArenaNoVirtual() == nullptr && source_build_artifact_ != nullptr) {
    delete source_build_artifact_;
  }
  source_build_artifact_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckBuildStageStatusResponse::kIsBuildStagedFieldNumber;
const int CheckBuildStageStatusResponse::kStagedBuildArtifactFieldNumber;
const int CheckBuildStageStatusResponse::kSourceBuildArtifactFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckBuildStageStatusResponse::CheckBuildStageStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
}
CheckBuildStageStatusResponse::CheckBuildStageStatusResponse(const CheckBuildStageStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_staged_build_artifact()) {
    staged_build_artifact_ = new ::google::chromeos::moblab::v1beta1::BuildArtifact(*from.staged_build_artifact_);
  } else {
    staged_build_artifact_ = nullptr;
  }
  if (from.has_source_build_artifact()) {
    source_build_artifact_ = new ::google::chromeos::moblab::v1beta1::BuildArtifact(*from.source_build_artifact_);
  } else {
    source_build_artifact_ = nullptr;
  }
  is_build_staged_ = from.is_build_staged_;
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
}

void CheckBuildStageStatusResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CheckBuildStageStatusResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  ::memset(&staged_build_artifact_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_build_staged_) -
      reinterpret_cast<char*>(&staged_build_artifact_)) + sizeof(is_build_staged_));
}

CheckBuildStageStatusResponse::~CheckBuildStageStatusResponse() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  SharedDtor();
}

void CheckBuildStageStatusResponse::SharedDtor() {
  if (this != internal_default_instance()) delete staged_build_artifact_;
  if (this != internal_default_instance()) delete source_build_artifact_;
}

void CheckBuildStageStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckBuildStageStatusResponse& CheckBuildStageStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CheckBuildStageStatusResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CheckBuildStageStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && staged_build_artifact_ != nullptr) {
    delete staged_build_artifact_;
  }
  staged_build_artifact_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && source_build_artifact_ != nullptr) {
    delete source_build_artifact_;
  }
  source_build_artifact_ = nullptr;
  is_build_staged_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CheckBuildStageStatusResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CheckBuildStageStatusResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool is_build_staged = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_is_build_staged(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::chromeos::moblab::v1beta1::BuildArtifact::_InternalParse;
        object = msg->mutable_staged_build_artifact();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.chromeos.moblab.v1beta1.BuildArtifact source_build_artifact = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::chromeos::moblab::v1beta1::BuildArtifact::_InternalParse;
        object = msg->mutable_source_build_artifact();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CheckBuildStageStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_build_staged = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_build_staged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_staged_build_artifact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.chromeos.moblab.v1beta1.BuildArtifact source_build_artifact = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_build_artifact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CheckBuildStageStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_build_staged = 1;
  if (this->is_build_staged() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_build_staged(), output);
  }

  // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 2;
  if (this->has_staged_build_artifact()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::staged_build_artifact(this), output);
  }

  // .google.chromeos.moblab.v1beta1.BuildArtifact source_build_artifact = 3;
  if (this->has_source_build_artifact()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::source_build_artifact(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
}

::google::protobuf::uint8* CheckBuildStageStatusResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_build_staged = 1;
  if (this->is_build_staged() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_build_staged(), target);
  }

  // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 2;
  if (this->has_staged_build_artifact()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::staged_build_artifact(this), target);
  }

  // .google.chromeos.moblab.v1beta1.BuildArtifact source_build_artifact = 3;
  if (this->has_source_build_artifact()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::source_build_artifact(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  return target;
}

size_t CheckBuildStageStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 2;
  if (this->has_staged_build_artifact()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *staged_build_artifact_);
  }

  // .google.chromeos.moblab.v1beta1.BuildArtifact source_build_artifact = 3;
  if (this->has_source_build_artifact()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_build_artifact_);
  }

  // bool is_build_staged = 1;
  if (this->is_build_staged() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckBuildStageStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckBuildStageStatusResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CheckBuildStageStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
    MergeFrom(*source);
  }
}

void CheckBuildStageStatusResponse::MergeFrom(const CheckBuildStageStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_staged_build_artifact()) {
    mutable_staged_build_artifact()->::google::chromeos::moblab::v1beta1::BuildArtifact::MergeFrom(from.staged_build_artifact());
  }
  if (from.has_source_build_artifact()) {
    mutable_source_build_artifact()->::google::chromeos::moblab::v1beta1::BuildArtifact::MergeFrom(from.source_build_artifact());
  }
  if (from.is_build_staged() != 0) {
    set_is_build_staged(from.is_build_staged());
  }
}

void CheckBuildStageStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckBuildStageStatusResponse::CopyFrom(const CheckBuildStageStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.CheckBuildStageStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckBuildStageStatusResponse::IsInitialized() const {
  return true;
}

void CheckBuildStageStatusResponse::Swap(CheckBuildStageStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckBuildStageStatusResponse::InternalSwap(CheckBuildStageStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(staged_build_artifact_, other->staged_build_artifact_);
  swap(source_build_artifact_, other->source_build_artifact_);
  swap(is_build_staged_, other->is_build_staged_);
}

::google::protobuf::Metadata CheckBuildStageStatusResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StageBuildRequest::InitAsDefaultInstance() {
}
class StageBuildRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StageBuildRequest::kNameFieldNumber;
const int StageBuildRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StageBuildRequest::StageBuildRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.StageBuildRequest)
}
StageBuildRequest::StageBuildRequest(const StageBuildRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.StageBuildRequest)
}

void StageBuildRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StageBuildRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StageBuildRequest::~StageBuildRequest() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.StageBuildRequest)
  SharedDtor();
}

void StageBuildRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StageBuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StageBuildRequest& StageBuildRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StageBuildRequest_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StageBuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StageBuildRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StageBuildRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.StageBuildRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.chromeos.moblab.v1beta1.StageBuildRequest.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StageBuildRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.StageBuildRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.chromeos.moblab.v1beta1.StageBuildRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.StageBuildRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.StageBuildRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StageBuildRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.StageBuildRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.StageBuildRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.StageBuildRequest)
}

::google::protobuf::uint8* StageBuildRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.StageBuildRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.chromeos.moblab.v1beta1.StageBuildRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.StageBuildRequest)
  return target;
}

size_t StageBuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StageBuildRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StageBuildRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StageBuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.StageBuildRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.StageBuildRequest)
    MergeFrom(*source);
  }
}

void StageBuildRequest::MergeFrom(const StageBuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
}

void StageBuildRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StageBuildRequest::CopyFrom(const StageBuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.StageBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StageBuildRequest::IsInitialized() const {
  return true;
}

void StageBuildRequest::Swap(StageBuildRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StageBuildRequest::InternalSwap(StageBuildRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StageBuildRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StageBuildResponse::InitAsDefaultInstance() {
  ::google::chromeos::moblab::v1beta1::_StageBuildResponse_default_instance_._instance.get_mutable()->staged_build_artifact_ = const_cast< ::google::chromeos::moblab::v1beta1::BuildArtifact*>(
      ::google::chromeos::moblab::v1beta1::BuildArtifact::internal_default_instance());
}
class StageBuildResponse::HasBitSetters {
 public:
  static const ::google::chromeos::moblab::v1beta1::BuildArtifact& staged_build_artifact(const StageBuildResponse* msg);
};

const ::google::chromeos::moblab::v1beta1::BuildArtifact&
StageBuildResponse::HasBitSetters::staged_build_artifact(const StageBuildResponse* msg) {
  return *msg->staged_build_artifact_;
}
void StageBuildResponse::clear_staged_build_artifact() {
  if (GetArenaNoVirtual() == nullptr && staged_build_artifact_ != nullptr) {
    delete staged_build_artifact_;
  }
  staged_build_artifact_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StageBuildResponse::kStagedBuildArtifactFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StageBuildResponse::StageBuildResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.StageBuildResponse)
}
StageBuildResponse::StageBuildResponse(const StageBuildResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_staged_build_artifact()) {
    staged_build_artifact_ = new ::google::chromeos::moblab::v1beta1::BuildArtifact(*from.staged_build_artifact_);
  } else {
    staged_build_artifact_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.StageBuildResponse)
}

void StageBuildResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StageBuildResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  staged_build_artifact_ = nullptr;
}

StageBuildResponse::~StageBuildResponse() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.StageBuildResponse)
  SharedDtor();
}

void StageBuildResponse::SharedDtor() {
  if (this != internal_default_instance()) delete staged_build_artifact_;
}

void StageBuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StageBuildResponse& StageBuildResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StageBuildResponse_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StageBuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && staged_build_artifact_ != nullptr) {
    delete staged_build_artifact_;
  }
  staged_build_artifact_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StageBuildResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StageBuildResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::chromeos::moblab::v1beta1::BuildArtifact::_InternalParse;
        object = msg->mutable_staged_build_artifact();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StageBuildResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_staged_build_artifact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.StageBuildResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.StageBuildResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StageBuildResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 1;
  if (this->has_staged_build_artifact()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::staged_build_artifact(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.StageBuildResponse)
}

::google::protobuf::uint8* StageBuildResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 1;
  if (this->has_staged_build_artifact()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::staged_build_artifact(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.StageBuildResponse)
  return target;
}

size_t StageBuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.chromeos.moblab.v1beta1.BuildArtifact staged_build_artifact = 1;
  if (this->has_staged_build_artifact()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *staged_build_artifact_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StageBuildResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StageBuildResponse* source =
      ::google::protobuf::DynamicCastToGenerated<StageBuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.StageBuildResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.StageBuildResponse)
    MergeFrom(*source);
  }
}

void StageBuildResponse::MergeFrom(const StageBuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_staged_build_artifact()) {
    mutable_staged_build_artifact()->::google::chromeos::moblab::v1beta1::BuildArtifact::MergeFrom(from.staged_build_artifact());
  }
}

void StageBuildResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StageBuildResponse::CopyFrom(const StageBuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.StageBuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StageBuildResponse::IsInitialized() const {
  return true;
}

void StageBuildResponse::Swap(StageBuildResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StageBuildResponse::InternalSwap(StageBuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(staged_build_artifact_, other->staged_build_artifact_);
}

::google::protobuf::Metadata StageBuildResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StageBuildMetadata::InitAsDefaultInstance() {
  ::google::chromeos::moblab::v1beta1::_StageBuildMetadata_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::chromeos::moblab::v1beta1::_StageBuildMetadata_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class StageBuildMetadata::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& start_time(const StageBuildMetadata* msg);
  static const ::google::protobuf::Timestamp& end_time(const StageBuildMetadata* msg);
};

const ::google::protobuf::Timestamp&
StageBuildMetadata::HasBitSetters::start_time(const StageBuildMetadata* msg) {
  return *msg->start_time_;
}
const ::google::protobuf::Timestamp&
StageBuildMetadata::HasBitSetters::end_time(const StageBuildMetadata* msg) {
  return *msg->end_time_;
}
void StageBuildMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void StageBuildMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StageBuildMetadata::kProgressPercentFieldNumber;
const int StageBuildMetadata::kStartTimeFieldNumber;
const int StageBuildMetadata::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StageBuildMetadata::StageBuildMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.chromeos.moblab.v1beta1.StageBuildMetadata)
}
StageBuildMetadata::StageBuildMetadata(const StageBuildMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  progress_percent_ = from.progress_percent_;
  // @@protoc_insertion_point(copy_constructor:google.chromeos.moblab.v1beta1.StageBuildMetadata)
}

void StageBuildMetadata::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StageBuildMetadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_percent_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(progress_percent_));
}

StageBuildMetadata::~StageBuildMetadata() {
  // @@protoc_insertion_point(destructor:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  SharedDtor();
}

void StageBuildMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void StageBuildMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StageBuildMetadata& StageBuildMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StageBuildMetadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StageBuildMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  progress_percent_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StageBuildMetadata::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StageBuildMetadata*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float progress_percent = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_progress_percent(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_start_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp end_time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_end_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StageBuildMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float progress_percent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StageBuildMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float progress_percent = 1;
  if (this->progress_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->progress_percent(), output);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::start_time(this), output);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::end_time(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.chromeos.moblab.v1beta1.StageBuildMetadata)
}

::google::protobuf::uint8* StageBuildMetadata::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float progress_percent = 1;
  if (this->progress_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->progress_percent(), target);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::start_time(this), target);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::end_time(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  return target;
}

size_t StageBuildMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // float progress_percent = 1;
  if (this->progress_percent() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StageBuildMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const StageBuildMetadata* source =
      ::google::protobuf::DynamicCastToGenerated<StageBuildMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.chromeos.moblab.v1beta1.StageBuildMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.chromeos.moblab.v1beta1.StageBuildMetadata)
    MergeFrom(*source);
  }
}

void StageBuildMetadata::MergeFrom(const StageBuildMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.progress_percent() != 0) {
    set_progress_percent(from.progress_percent());
  }
}

void StageBuildMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StageBuildMetadata::CopyFrom(const StageBuildMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.chromeos.moblab.v1beta1.StageBuildMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StageBuildMetadata::IsInitialized() const {
  return true;
}

void StageBuildMetadata::Swap(StageBuildMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StageBuildMetadata::InternalSwap(StageBuildMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(progress_percent_, other->progress_percent_);
}

::google::protobuf::Metadata StageBuildMetadata::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto);
  return ::file_level_metadata_google_2fchromeos_2fmoblab_2fv1beta1_2fbuild_5fservice_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace moblab
}  // namespace chromeos
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::ListBuildsRequest* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::ListBuildsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::ListBuildsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::ListBuildsResponse* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::ListBuildsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::ListBuildsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::CheckBuildStageStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::StageBuildRequest* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::StageBuildRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::StageBuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::StageBuildResponse* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::StageBuildResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::StageBuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::chromeos::moblab::v1beta1::StageBuildMetadata* Arena::CreateMaybeMessage< ::google::chromeos::moblab::v1beta1::StageBuildMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::chromeos::moblab::v1beta1::StageBuildMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
