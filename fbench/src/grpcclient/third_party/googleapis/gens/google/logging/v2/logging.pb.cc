// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging.proto

#include "google/logging/v2/logging.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmonitored_5fresource_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmonitored_5fresource_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flog_5fentry_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_LogEntry_google_2flogging_2fv2_2flog_5fentry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TailLogEntriesResponse_SuppressionInfo_google_2flogging_2fv2_2flogging_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status_google_2frpc_2fstatus_2eproto;
namespace google {
namespace logging {
namespace v2 {
class DeleteLogRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteLogRequest> _instance;
} _DeleteLogRequest_default_instance_;
class WriteLogEntriesRequest_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteLogEntriesRequest_LabelsEntry_DoNotUse> _instance;
} _WriteLogEntriesRequest_LabelsEntry_DoNotUse_default_instance_;
class WriteLogEntriesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteLogEntriesRequest> _instance;
} _WriteLogEntriesRequest_default_instance_;
class WriteLogEntriesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteLogEntriesResponse> _instance;
} _WriteLogEntriesResponse_default_instance_;
class WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse> _instance;
} _WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_default_instance_;
class WriteLogEntriesPartialErrorsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteLogEntriesPartialErrors> _instance;
} _WriteLogEntriesPartialErrors_default_instance_;
class ListLogEntriesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListLogEntriesRequest> _instance;
} _ListLogEntriesRequest_default_instance_;
class ListLogEntriesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListLogEntriesResponse> _instance;
} _ListLogEntriesResponse_default_instance_;
class ListMonitoredResourceDescriptorsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsRequest> _instance;
} _ListMonitoredResourceDescriptorsRequest_default_instance_;
class ListMonitoredResourceDescriptorsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsResponse> _instance;
} _ListMonitoredResourceDescriptorsResponse_default_instance_;
class ListLogsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListLogsRequest> _instance;
} _ListLogsRequest_default_instance_;
class ListLogsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListLogsResponse> _instance;
} _ListLogsResponse_default_instance_;
class TailLogEntriesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TailLogEntriesRequest> _instance;
} _TailLogEntriesRequest_default_instance_;
class TailLogEntriesResponse_SuppressionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TailLogEntriesResponse_SuppressionInfo> _instance;
} _TailLogEntriesResponse_SuppressionInfo_default_instance_;
class TailLogEntriesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TailLogEntriesResponse> _instance;
} _TailLogEntriesResponse_default_instance_;
}  // namespace v2
}  // namespace logging
}  // namespace google
static void InitDefaultsDeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_DeleteLogRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteLogRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteLogRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsWriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesRequest_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse();
  }
  ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsWriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesRequest_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::WriteLogEntriesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsWriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto.base,
      &scc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto.base,
      &scc_info_LogEntry_google_2flogging_2fv2_2flog_5fentry_2eproto.base,}};

static void InitDefaultsWriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesResponse_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::WriteLogEntriesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsWriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse();
  }
  ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_Status_google_2frpc_2fstatus_2eproto.base,}};

static void InitDefaultsWriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesPartialErrors_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesPartialErrors();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::WriteLogEntriesPartialErrors::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto.base,}};

static void InitDefaultsListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogEntriesRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListLogEntriesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogEntriesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogEntriesResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListLogEntriesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogEntriesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_LogEntry_google_2flogging_2fv2_2flog_5fentry_2eproto.base,}};

static void InitDefaultsListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListMonitoredResourceDescriptorsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListMonitoredResourceDescriptorsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListMonitoredResourceDescriptorsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListMonitoredResourceDescriptorsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto.base,}};

static void InitDefaultsListLogsRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListLogsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListLogsRequest_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsListLogsResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListLogsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListLogsResponse_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsTailLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_TailLogEntriesRequest_default_instance_;
    new (ptr) ::google::logging::v2::TailLogEntriesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::TailLogEntriesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TailLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTailLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsTailLogEntriesResponse_SuppressionInfo_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_TailLogEntriesResponse_SuppressionInfo_default_instance_;
    new (ptr) ::google::logging::v2::TailLogEntriesResponse_SuppressionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::TailLogEntriesResponse_SuppressionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TailLogEntriesResponse_SuppressionInfo_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTailLogEntriesResponse_SuppressionInfo_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsTailLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_TailLogEntriesResponse_default_instance_;
    new (ptr) ::google::logging::v2::TailLogEntriesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::TailLogEntriesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TailLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTailLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_LogEntry_google_2flogging_2fv2_2flog_5fentry_2eproto.base,
      &scc_info_TailLogEntriesResponse_SuppressionInfo_google_2flogging_2fv2_2flogging_2eproto.base,}};

void InitDefaults_google_2flogging_2fv2_2flogging_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TailLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TailLogEntriesResponse_SuppressionInfo_google_2flogging_2fv2_2flogging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TailLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2flogging_2fv2_2flogging_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2flogging_2fv2_2flogging_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2flogging_2fv2_2flogging_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteLogRequest, log_name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, log_name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, resource_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, labels_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, entries_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, partial_success_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, dry_run_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors, log_entry_errors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, resource_names_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, filter_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, order_by_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesResponse, entries_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsResponse, resource_descriptors_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, resource_names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsResponse, log_names_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesRequest, resource_names_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesRequest, filter_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesRequest, buffer_window_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesResponse_SuppressionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesResponse_SuppressionInfo, reason_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesResponse_SuppressionInfo, suppressed_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesResponse, entries_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::TailLogEntriesResponse, suppression_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::logging::v2::DeleteLogRequest)},
  { 6, 13, sizeof(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse)},
  { 15, -1, sizeof(::google::logging::v2::WriteLogEntriesRequest)},
  { 26, -1, sizeof(::google::logging::v2::WriteLogEntriesResponse)},
  { 31, 38, sizeof(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse)},
  { 40, -1, sizeof(::google::logging::v2::WriteLogEntriesPartialErrors)},
  { 46, -1, sizeof(::google::logging::v2::ListLogEntriesRequest)},
  { 56, -1, sizeof(::google::logging::v2::ListLogEntriesResponse)},
  { 63, -1, sizeof(::google::logging::v2::ListMonitoredResourceDescriptorsRequest)},
  { 70, -1, sizeof(::google::logging::v2::ListMonitoredResourceDescriptorsResponse)},
  { 77, -1, sizeof(::google::logging::v2::ListLogsRequest)},
  { 86, -1, sizeof(::google::logging::v2::ListLogsResponse)},
  { 93, -1, sizeof(::google::logging::v2::TailLogEntriesRequest)},
  { 101, -1, sizeof(::google::logging::v2::TailLogEntriesResponse_SuppressionInfo)},
  { 108, -1, sizeof(::google::logging::v2::TailLogEntriesResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_DeleteLogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_WriteLogEntriesRequest_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_WriteLogEntriesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_WriteLogEntriesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_WriteLogEntriesPartialErrors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListLogEntriesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListLogEntriesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListMonitoredResourceDescriptorsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListMonitoredResourceDescriptorsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListLogsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListLogsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_TailLogEntriesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_TailLogEntriesResponse_SuppressionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_TailLogEntriesResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto = {
  {}, AddDescriptors_google_2flogging_2fv2_2flogging_2eproto, "google/logging/v2/logging.proto", schemas,
  file_default_instances, TableStruct_google_2flogging_2fv2_2flogging_2eproto::offsets,
  file_level_metadata_google_2flogging_2fv2_2flogging_2eproto, 15, file_level_enum_descriptors_google_2flogging_2fv2_2flogging_2eproto, file_level_service_descriptors_google_2flogging_2fv2_2flogging_2eproto,
};

const char descriptor_table_protodef_google_2flogging_2fv2_2flogging_2eproto[] =
  "\n\037google/logging/v2/logging.proto\022\021googl"
  "e.logging.v2\032\027google/api/client.proto\032\037g"
  "oogle/api/field_behavior.proto\032#google/a"
  "pi/monitored_resource.proto\032\031google/api/"
  "resource.proto\032!google/logging/v2/log_en"
  "try.proto\032&google/logging/v2/logging_con"
  "fig.proto\032\036google/protobuf/duration.prot"
  "o\032\033google/protobuf/empty.proto\032 google/p"
  "rotobuf/field_mask.proto\032\037google/protobu"
  "f/timestamp.proto\032\027google/rpc/status.pro"
  "to\032\034google/api/annotations.proto\"H\n\020Dele"
  "teLogRequest\0224\n\010log_name\030\001 \001(\tB\"\340A\002\372A\034\n\032"
  "logging.googleapis.com/Log\"\346\002\n\026WriteLogE"
  "ntriesRequest\0224\n\010log_name\030\001 \001(\tB\"\340A\001\372A\034\n"
  "\032logging.googleapis.com/Log\0224\n\010resource\030"
  "\002 \001(\0132\035.google.api.MonitoredResourceB\003\340A"
  "\001\022J\n\006labels\030\003 \003(\01325.google.logging.v2.Wr"
  "iteLogEntriesRequest.LabelsEntryB\003\340A\001\0221\n"
  "\007entries\030\004 \003(\0132\033.google.logging.v2.LogEn"
  "tryB\003\340A\002\022\034\n\017partial_success\030\005 \001(\010B\003\340A\001\022\024"
  "\n\007dry_run\030\006 \001(\010B\003\340A\001\032-\n\013LabelsEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\031\n\027WriteLogE"
  "ntriesResponse\"\310\001\n\034WriteLogEntriesPartia"
  "lErrors\022]\n\020log_entry_errors\030\001 \003(\0132C.goog"
  "le.logging.v2.WriteLogEntriesPartialErro"
  "rs.LogEntryErrorsEntry\032I\n\023LogEntryErrors"
  "Entry\022\013\n\003key\030\001 \001(\005\022!\n\005value\030\002 \001(\0132\022.goog"
  "le.rpc.Status:\0028\001\"\260\001\n\025ListLogEntriesRequ"
  "est\022:\n\016resource_names\030\010 \003(\tB\"\340A\002\372A\034\022\032log"
  "ging.googleapis.com/Log\022\023\n\006filter\030\002 \001(\tB"
  "\003\340A\001\022\025\n\010order_by\030\003 \001(\tB\003\340A\001\022\026\n\tpage_size"
  "\030\004 \001(\005B\003\340A\001\022\027\n\npage_token\030\005 \001(\tB\003\340A\001\"_\n\026"
  "ListLogEntriesResponse\022,\n\007entries\030\001 \003(\0132"
  "\033.google.logging.v2.LogEntry\022\027\n\017next_pag"
  "e_token\030\002 \001(\t\"Z\n\'ListMonitoredResourceDe"
  "scriptorsRequest\022\026\n\tpage_size\030\001 \001(\005B\003\340A\001"
  "\022\027\n\npage_token\030\002 \001(\tB\003\340A\001\"\212\001\n(ListMonito"
  "redResourceDescriptorsResponse\022E\n\024resour"
  "ce_descriptors\030\001 \003(\0132\'.google.api.Monito"
  "redResourceDescriptor\022\027\n\017next_page_token"
  "\030\002 \001(\t\"\223\001\n\017ListLogsRequest\0222\n\006parent\030\001 \001"
  "(\tB\"\340A\002\372A\034\022\032logging.googleapis.com/Log\022\026"
  "\n\tpage_size\030\002 \001(\005B\003\340A\001\022\027\n\npage_token\030\003 \001"
  "(\tB\003\340A\001\022\033\n\016resource_names\030\010 \003(\tB\003\340A\001\">\n\020"
  "ListLogsResponse\022\021\n\tlog_names\030\003 \003(\t\022\027\n\017n"
  "ext_page_token\030\002 \001(\t\"\200\001\n\025TailLogEntriesR"
  "equest\022\033\n\016resource_names\030\001 \003(\tB\003\340A\002\022\023\n\006f"
  "ilter\030\002 \001(\tB\003\340A\001\0225\n\rbuffer_window\030\003 \001(\0132"
  "\031.google.protobuf.DurationB\003\340A\001\"\337\002\n\026Tail"
  "LogEntriesResponse\022,\n\007entries\030\001 \003(\0132\033.go"
  "ogle.logging.v2.LogEntry\022S\n\020suppression_"
  "info\030\002 \003(\01329.google.logging.v2.TailLogEn"
  "triesResponse.SuppressionInfo\032\301\001\n\017Suppre"
  "ssionInfo\022P\n\006reason\030\001 \001(\0162@.google.loggi"
  "ng.v2.TailLogEntriesResponse.Suppression"
  "Info.Reason\022\030\n\020suppressed_count\030\002 \001(\005\"B\n"
  "\006Reason\022\026\n\022REASON_UNSPECIFIED\020\000\022\016\n\nRATE_"
  "LIMIT\020\001\022\020\n\014NOT_CONSUMED\020\0022\346\013\n\020LoggingSer"
  "viceV2\022\223\002\n\tDeleteLog\022#.google.logging.v2"
  ".DeleteLogRequest\032\026.google.protobuf.Empt"
  "y\"\310\001\202\323\344\223\002\266\001* /v2/{log_name=projects/*/lo"
  "gs/*}Z\033*\031/v2/{log_name=*/*/logs/*}Z\'*%/v"
  "2/{log_name=organizations/*/logs/*}Z!*\037/"
  "v2/{log_name=folders/*/logs/*}Z)*\'/v2/{l"
  "og_name=billingAccounts/*/logs/*}\332A\010log_"
  "name\022\251\001\n\017WriteLogEntries\022).google.loggin"
  "g.v2.WriteLogEntriesRequest\032*.google.log"
  "ging.v2.WriteLogEntriesResponse\"\?\202\323\344\223\002\026\""
  "\021/v2/entries:write:\001*\332A log_name,resourc"
  "e,labels,entries\022\243\001\n\016ListLogEntries\022(.go"
  "ogle.logging.v2.ListLogEntriesRequest\032)."
  "google.logging.v2.ListLogEntriesResponse"
  "\"<\202\323\344\223\002\025\"\020/v2/entries:list:\001*\332A\036resource"
  "_names,filter,order_by\022\305\001\n ListMonitored"
  "ResourceDescriptors\022:.google.logging.v2."
  "ListMonitoredResourceDescriptorsRequest\032"
  ";.google.logging.v2.ListMonitoredResourc"
  "eDescriptorsResponse\"(\202\323\344\223\002\"\022 /v2/monito"
  "redResourceDescriptors\022\210\002\n\010ListLogs\022\".go"
  "ogle.logging.v2.ListLogsRequest\032#.google"
  ".logging.v2.ListLogsResponse\"\262\001\202\323\344\223\002\242\001\022\025"
  "/v2/{parent=*/*}/logsZ\036\022\034/v2/{parent=pro"
  "jects/*}/logsZ#\022!/v2/{parent=organizatio"
  "ns/*}/logsZ\035\022\033/v2/{parent=folders/*}/log"
  "sZ%\022#/v2/{parent=billingAccounts/*}/logs"
  "\332A\006parent\022\206\001\n\016TailLogEntries\022(.google.lo"
  "gging.v2.TailLogEntriesRequest\032).google."
  "logging.v2.TailLogEntriesResponse\"\033\202\323\344\223\002"
  "\025\"\020/v2/entries:tail:\001*(\0010\001\032\215\002\312A\026logging."
  "googleapis.com\322A\360\001https://www.googleapis"
  ".com/auth/cloud-platform,https://www.goo"
  "gleapis.com/auth/cloud-platform.read-onl"
  "y,https://www.googleapis.com/auth/loggin"
  "g.admin,https://www.googleapis.com/auth/"
  "logging.read,https://www.googleapis.com/"
  "auth/logging.writeB\265\001\n\025com.google.loggin"
  "g.v2B\014LoggingProtoP\001Z8google.golang.org/"
  "genproto/googleapis/logging/v2;logging\370\001"
  "\001\252\002\027Google.Cloud.Logging.V2\312\002\027Google\\Clo"
  "ud\\Logging\\V2\352\002\032Google::Cloud::Logging::"
  "V2b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2flogging_2fv2_2flogging_2eproto = {
  false, InitDefaults_google_2flogging_2fv2_2flogging_2eproto, 
  descriptor_table_protodef_google_2flogging_2fv2_2flogging_2eproto,
  "google/logging/v2/logging.proto", &assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto, 4010,
};

void AddDescriptors_google_2flogging_2fv2_2flogging_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[12] =
  {
    ::AddDescriptors_google_2fapi_2fclient_2eproto,
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fapi_2fmonitored_5fresource_2eproto,
    ::AddDescriptors_google_2fapi_2fresource_2eproto,
    ::AddDescriptors_google_2flogging_2fv2_2flog_5fentry_2eproto,
    ::AddDescriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fduration_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ffield_5fmask_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
    ::AddDescriptors_google_2frpc_2fstatus_2eproto,
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2flogging_2fv2_2flogging_2eproto, deps, 12);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2flogging_2fv2_2flogging_2eproto = []() { AddDescriptors_google_2flogging_2fv2_2flogging_2eproto(); return true; }();
namespace google {
namespace logging {
namespace v2 {
const ::google::protobuf::EnumDescriptor* TailLogEntriesResponse_SuppressionInfo_Reason_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return file_level_enum_descriptors_google_2flogging_2fv2_2flogging_2eproto[0];
}
bool TailLogEntriesResponse_SuppressionInfo_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TailLogEntriesResponse_SuppressionInfo_Reason TailLogEntriesResponse_SuppressionInfo::REASON_UNSPECIFIED;
const TailLogEntriesResponse_SuppressionInfo_Reason TailLogEntriesResponse_SuppressionInfo::RATE_LIMIT;
const TailLogEntriesResponse_SuppressionInfo_Reason TailLogEntriesResponse_SuppressionInfo::NOT_CONSUMED;
const TailLogEntriesResponse_SuppressionInfo_Reason TailLogEntriesResponse_SuppressionInfo::Reason_MIN;
const TailLogEntriesResponse_SuppressionInfo_Reason TailLogEntriesResponse_SuppressionInfo::Reason_MAX;
const int TailLogEntriesResponse_SuppressionInfo::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void DeleteLogRequest::InitAsDefaultInstance() {
}
class DeleteLogRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteLogRequest::kLogNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteLogRequest::DeleteLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteLogRequest)
}
DeleteLogRequest::DeleteLogRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteLogRequest)
}
DeleteLogRequest::DeleteLogRequest(const DeleteLogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_name().size() > 0) {
    log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteLogRequest)
}

void DeleteLogRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  log_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteLogRequest::~DeleteLogRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteLogRequest)
  SharedDtor();
}

void DeleteLogRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  log_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteLogRequest::ArenaDtor(void* object) {
  DeleteLogRequest* _this = reinterpret_cast< DeleteLogRequest* >(object);
  (void)_this;
}
void DeleteLogRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeleteLogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteLogRequest& DeleteLogRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void DeleteLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteLogRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteLogRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string log_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.DeleteLogRequest.log_name");
        object = msg->mutable_log_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteLogRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string log_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_name().data(), static_cast<int>(this->log_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteLogRequest.log_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteLogRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->log_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_name().data(), static_cast<int>(this->log_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogRequest.log_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->log_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteLogRequest)
}

::google::protobuf::uint8* DeleteLogRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->log_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_name().data(), static_cast<int>(this->log_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogRequest.log_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->log_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteLogRequest)
  return target;
}

size_t DeleteLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteLogRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string log_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->log_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteLogRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteLogRequest)
    MergeFrom(*source);
  }
}

void DeleteLogRequest::MergeFrom(const DeleteLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log_name().size() > 0) {
    set_log_name(from.log_name());
  }
}

void DeleteLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogRequest::CopyFrom(const DeleteLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogRequest::IsInitialized() const {
  return true;
}

void DeleteLogRequest::Swap(DeleteLogRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteLogRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void DeleteLogRequest::UnsafeArenaSwap(DeleteLogRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteLogRequest::InternalSwap(DeleteLogRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  log_name_.Swap(&other->log_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteLogRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

WriteLogEntriesRequest_LabelsEntry_DoNotUse::WriteLogEntriesRequest_LabelsEntry_DoNotUse() {}
WriteLogEntriesRequest_LabelsEntry_DoNotUse::WriteLogEntriesRequest_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void WriteLogEntriesRequest_LabelsEntry_DoNotUse::MergeFrom(const WriteLogEntriesRequest_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata WriteLogEntriesRequest_LabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[1];
}
void WriteLogEntriesRequest_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteLogEntriesRequest_LabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      WriteLogEntriesRequest_LabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void WriteLogEntriesRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_WriteLogEntriesRequest_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::api::MonitoredResource*>(
      ::google::api::MonitoredResource::internal_default_instance());
}
class WriteLogEntriesRequest::HasBitSetters {
 public:
  static const ::google::api::MonitoredResource& resource(const WriteLogEntriesRequest* msg);
};

const ::google::api::MonitoredResource&
WriteLogEntriesRequest::HasBitSetters::resource(const WriteLogEntriesRequest* msg) {
  return *msg->resource_;
}
void WriteLogEntriesRequest::unsafe_arena_set_allocated_resource(
    ::google::api::MonitoredResource* resource) {
  if (GetArenaNoVirtual() == nullptr) {
    delete resource_;
  }
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.WriteLogEntriesRequest.resource)
}
void WriteLogEntriesRequest::clear_resource() {
  if (GetArenaNoVirtual() == nullptr && resource_ != nullptr) {
    delete resource_;
  }
  resource_ = nullptr;
}
void WriteLogEntriesRequest::clear_entries() {
  entries_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteLogEntriesRequest::kLogNameFieldNumber;
const int WriteLogEntriesRequest::kResourceFieldNumber;
const int WriteLogEntriesRequest::kLabelsFieldNumber;
const int WriteLogEntriesRequest::kEntriesFieldNumber;
const int WriteLogEntriesRequest::kPartialSuccessFieldNumber;
const int WriteLogEntriesRequest::kDryRunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteLogEntriesRequest::WriteLogEntriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.WriteLogEntriesRequest)
}
WriteLogEntriesRequest::WriteLogEntriesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.WriteLogEntriesRequest)
}
WriteLogEntriesRequest::WriteLogEntriesRequest(const WriteLogEntriesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  log_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_name().size() > 0) {
    log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_name(),
      GetArenaNoVirtual());
  }
  if (from.has_resource()) {
    resource_ = new ::google::api::MonitoredResource(*from.resource_);
  } else {
    resource_ = nullptr;
  }
  ::memcpy(&partial_success_, &from.partial_success_,
    static_cast<size_t>(reinterpret_cast<char*>(&dry_run_) -
    reinterpret_cast<char*>(&partial_success_)) + sizeof(dry_run_));
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.WriteLogEntriesRequest)
}

void WriteLogEntriesRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  log_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resource_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dry_run_) -
      reinterpret_cast<char*>(&resource_)) + sizeof(dry_run_));
}

WriteLogEntriesRequest::~WriteLogEntriesRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.WriteLogEntriesRequest)
  SharedDtor();
}

void WriteLogEntriesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  log_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete resource_;
}

void WriteLogEntriesRequest::ArenaDtor(void* object) {
  WriteLogEntriesRequest* _this = reinterpret_cast< WriteLogEntriesRequest* >(object);
  (void)_this;
}
void WriteLogEntriesRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void WriteLogEntriesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteLogEntriesRequest& WriteLogEntriesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void WriteLogEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.WriteLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  entries_.Clear();
  log_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && resource_ != nullptr) {
    delete resource_;
  }
  resource_ = nullptr;
  ::memset(&partial_success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dry_run_) -
      reinterpret_cast<char*>(&partial_success_)) + sizeof(dry_run_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteLogEntriesRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteLogEntriesRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string log_name = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.WriteLogEntriesRequest.log_name");
        object = msg->mutable_log_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.api.MonitoredResource resource = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::api::MonitoredResource::_InternalParse;
        object = msg->mutable_resource();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<string, string> labels = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .google.logging.v2.LogEntry entries = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::LogEntry::_InternalParse;
          object = msg->add_entries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // bool partial_success = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_partial_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool dry_run = 6 [(.google.api.field_behavior) = OPTIONAL];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_dry_run(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteLogEntriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.WriteLogEntriesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string log_name = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_name().data(), static_cast<int>(this->log_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.WriteLogEntriesRequest.log_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.MonitoredResource resource = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          WriteLogEntriesRequest_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              WriteLogEntriesRequest_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.logging.v2.LogEntry entries = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool partial_success = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &partial_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dry_run = 6 [(.google.api.field_behavior) = OPTIONAL];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dry_run_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.WriteLogEntriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.WriteLogEntriesRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteLogEntriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.WriteLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_name = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {
  if (this->log_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_name().data(), static_cast<int>(this->log_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.WriteLogEntriesRequest.log_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->log_name(), output);
  }

  // .google.api.MonitoredResource resource = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::resource(this), output);
  }

  // map<string, string> labels = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<WriteLogEntriesRequest_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<WriteLogEntriesRequest_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .google.logging.v2.LogEntry entries = 4 [(.google.api.field_behavior) = REQUIRED];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->entries(static_cast<int>(i)),
      output);
  }

  // bool partial_success = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->partial_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->partial_success(), output);
  }

  // bool dry_run = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->dry_run() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->dry_run(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.WriteLogEntriesRequest)
}

::google::protobuf::uint8* WriteLogEntriesRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.WriteLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_name = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {
  if (this->log_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_name().data(), static_cast<int>(this->log_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.WriteLogEntriesRequest.log_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->log_name(), target);
  }

  // .google.api.MonitoredResource resource = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::resource(this), target);
  }

  // map<string, string> labels = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.value");
      }
    };

    if (false &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<WriteLogEntriesRequest_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<WriteLogEntriesRequest_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .google.logging.v2.LogEntry entries = 4 [(.google.api.field_behavior) = REQUIRED];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->entries(static_cast<int>(i)), target);
  }

  // bool partial_success = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->partial_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->partial_success(), target);
  }

  // bool dry_run = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->dry_run() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->dry_run(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.WriteLogEntriesRequest)
  return target;
}

size_t WriteLogEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.WriteLogEntriesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 3 [(.google.api.field_behavior) = OPTIONAL];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<WriteLogEntriesRequest_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != nullptr && entry->GetArena() != nullptr) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != nullptr && entry->GetArena() != nullptr) {
      entry.release();
    }
  }

  // repeated .google.logging.v2.LogEntry entries = 4 [(.google.api.field_behavior) = REQUIRED];
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // string log_name = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {
  if (this->log_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_name());
  }

  // .google.api.MonitoredResource resource = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  // bool partial_success = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->partial_success() != 0) {
    total_size += 1 + 1;
  }

  // bool dry_run = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->dry_run() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteLogEntriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.WriteLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteLogEntriesRequest* source =
      ::google::protobuf::DynamicCastToGenerated<WriteLogEntriesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.WriteLogEntriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.WriteLogEntriesRequest)
    MergeFrom(*source);
  }
}

void WriteLogEntriesRequest::MergeFrom(const WriteLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.WriteLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  entries_.MergeFrom(from.entries_);
  if (from.log_name().size() > 0) {
    set_log_name(from.log_name());
  }
  if (from.has_resource()) {
    mutable_resource()->::google::api::MonitoredResource::MergeFrom(from.resource());
  }
  if (from.partial_success() != 0) {
    set_partial_success(from.partial_success());
  }
  if (from.dry_run() != 0) {
    set_dry_run(from.dry_run());
  }
}

void WriteLogEntriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.WriteLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteLogEntriesRequest::CopyFrom(const WriteLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.WriteLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteLogEntriesRequest::IsInitialized() const {
  return true;
}

void WriteLogEntriesRequest::Swap(WriteLogEntriesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WriteLogEntriesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void WriteLogEntriesRequest::UnsafeArenaSwap(WriteLogEntriesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WriteLogEntriesRequest::InternalSwap(WriteLogEntriesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  log_name_.Swap(&other->log_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resource_, other->resource_);
  swap(partial_success_, other->partial_success_);
  swap(dry_run_, other->dry_run_);
}

::google::protobuf::Metadata WriteLogEntriesRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WriteLogEntriesResponse::InitAsDefaultInstance() {
}
class WriteLogEntriesResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteLogEntriesResponse::WriteLogEntriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.WriteLogEntriesResponse)
}
WriteLogEntriesResponse::WriteLogEntriesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.WriteLogEntriesResponse)
}
WriteLogEntriesResponse::WriteLogEntriesResponse(const WriteLogEntriesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.WriteLogEntriesResponse)
}

void WriteLogEntriesResponse::SharedCtor() {
}

WriteLogEntriesResponse::~WriteLogEntriesResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.WriteLogEntriesResponse)
  SharedDtor();
}

void WriteLogEntriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void WriteLogEntriesResponse::ArenaDtor(void* object) {
  WriteLogEntriesResponse* _this = reinterpret_cast< WriteLogEntriesResponse* >(object);
  (void)_this;
}
void WriteLogEntriesResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void WriteLogEntriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteLogEntriesResponse& WriteLogEntriesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void WriteLogEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.WriteLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteLogEntriesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteLogEntriesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteLogEntriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.WriteLogEntriesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.WriteLogEntriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.WriteLogEntriesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteLogEntriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.WriteLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.WriteLogEntriesResponse)
}

::google::protobuf::uint8* WriteLogEntriesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.WriteLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.WriteLogEntriesResponse)
  return target;
}

size_t WriteLogEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.WriteLogEntriesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteLogEntriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.WriteLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteLogEntriesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<WriteLogEntriesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.WriteLogEntriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.WriteLogEntriesResponse)
    MergeFrom(*source);
  }
}

void WriteLogEntriesResponse::MergeFrom(const WriteLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.WriteLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WriteLogEntriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.WriteLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteLogEntriesResponse::CopyFrom(const WriteLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.WriteLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteLogEntriesResponse::IsInitialized() const {
  return true;
}

void WriteLogEntriesResponse::Swap(WriteLogEntriesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WriteLogEntriesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void WriteLogEntriesResponse::UnsafeArenaSwap(WriteLogEntriesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WriteLogEntriesResponse::InternalSwap(WriteLogEntriesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteLogEntriesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse() {}
WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::MergeFrom(const WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[4];
}
void WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void WriteLogEntriesPartialErrors::InitAsDefaultInstance() {
}
class WriteLogEntriesPartialErrors::HasBitSetters {
 public:
};

void WriteLogEntriesPartialErrors::clear_log_entry_errors() {
  log_entry_errors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteLogEntriesPartialErrors::kLogEntryErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteLogEntriesPartialErrors::WriteLogEntriesPartialErrors()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.WriteLogEntriesPartialErrors)
}
WriteLogEntriesPartialErrors::WriteLogEntriesPartialErrors(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  log_entry_errors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.WriteLogEntriesPartialErrors)
}
WriteLogEntriesPartialErrors::WriteLogEntriesPartialErrors(const WriteLogEntriesPartialErrors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_entry_errors_.MergeFrom(from.log_entry_errors_);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.WriteLogEntriesPartialErrors)
}

void WriteLogEntriesPartialErrors::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto.base);
}

WriteLogEntriesPartialErrors::~WriteLogEntriesPartialErrors() {
  // @@protoc_insertion_point(destructor:google.logging.v2.WriteLogEntriesPartialErrors)
  SharedDtor();
}

void WriteLogEntriesPartialErrors::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void WriteLogEntriesPartialErrors::ArenaDtor(void* object) {
  WriteLogEntriesPartialErrors* _this = reinterpret_cast< WriteLogEntriesPartialErrors* >(object);
  (void)_this;
}
void WriteLogEntriesPartialErrors::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void WriteLogEntriesPartialErrors::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteLogEntriesPartialErrors& WriteLogEntriesPartialErrors::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void WriteLogEntriesPartialErrors::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.WriteLogEntriesPartialErrors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_entry_errors_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteLogEntriesPartialErrors::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteLogEntriesPartialErrors*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<int32, .google.rpc.Status> log_entry_errors = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->log_entry_errors_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteLogEntriesPartialErrors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.WriteLogEntriesPartialErrors)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .google.rpc.Status> log_entry_errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse,
              ::google::protobuf::int32, ::google::rpc::Status,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status > > parser(&log_entry_errors_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.WriteLogEntriesPartialErrors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.WriteLogEntriesPartialErrors)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteLogEntriesPartialErrors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.WriteLogEntriesPartialErrors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .google.rpc.Status> log_entry_errors = 1;
  if (!this->log_entry_errors().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->log_entry_errors().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->log_entry_errors().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::const_iterator
          it = this->log_entry_errors().begin();
          it != this->log_entry_errors().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(log_entry_errors_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::const_iterator
          it = this->log_entry_errors().begin();
          it != this->log_entry_errors().end(); ++it) {
        entry.reset(log_entry_errors_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.WriteLogEntriesPartialErrors)
}

::google::protobuf::uint8* WriteLogEntriesPartialErrors::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.WriteLogEntriesPartialErrors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .google.rpc.Status> log_entry_errors = 1;
  if (!this->log_entry_errors().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->log_entry_errors().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->log_entry_errors().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::const_iterator
          it = this->log_entry_errors().begin();
          it != this->log_entry_errors().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(log_entry_errors_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::const_iterator
          it = this->log_entry_errors().begin();
          it != this->log_entry_errors().end(); ++it) {
        entry.reset(log_entry_errors_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.WriteLogEntriesPartialErrors)
  return target;
}

size_t WriteLogEntriesPartialErrors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.WriteLogEntriesPartialErrors)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .google.rpc.Status> log_entry_errors = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->log_entry_errors_size());
  {
    ::std::unique_ptr<WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::rpc::Status >::const_iterator
        it = this->log_entry_errors().begin();
        it != this->log_entry_errors().end(); ++it) {
      if (entry.get() != nullptr && entry->GetArena() != nullptr) {
        entry.release();
      }
      entry.reset(log_entry_errors_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != nullptr && entry->GetArena() != nullptr) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteLogEntriesPartialErrors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.WriteLogEntriesPartialErrors)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteLogEntriesPartialErrors* source =
      ::google::protobuf::DynamicCastToGenerated<WriteLogEntriesPartialErrors>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.WriteLogEntriesPartialErrors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.WriteLogEntriesPartialErrors)
    MergeFrom(*source);
  }
}

void WriteLogEntriesPartialErrors::MergeFrom(const WriteLogEntriesPartialErrors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.WriteLogEntriesPartialErrors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  log_entry_errors_.MergeFrom(from.log_entry_errors_);
}

void WriteLogEntriesPartialErrors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.WriteLogEntriesPartialErrors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteLogEntriesPartialErrors::CopyFrom(const WriteLogEntriesPartialErrors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.WriteLogEntriesPartialErrors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteLogEntriesPartialErrors::IsInitialized() const {
  return true;
}

void WriteLogEntriesPartialErrors::Swap(WriteLogEntriesPartialErrors* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WriteLogEntriesPartialErrors* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void WriteLogEntriesPartialErrors::UnsafeArenaSwap(WriteLogEntriesPartialErrors* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WriteLogEntriesPartialErrors::InternalSwap(WriteLogEntriesPartialErrors* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  log_entry_errors_.Swap(&other->log_entry_errors_);
}

::google::protobuf::Metadata WriteLogEntriesPartialErrors::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListLogEntriesRequest::InitAsDefaultInstance() {
}
class ListLogEntriesRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogEntriesRequest::kResourceNamesFieldNumber;
const int ListLogEntriesRequest::kFilterFieldNumber;
const int ListLogEntriesRequest::kOrderByFieldNumber;
const int ListLogEntriesRequest::kPageSizeFieldNumber;
const int ListLogEntriesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogEntriesRequest::ListLogEntriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogEntriesRequest)
}
ListLogEntriesRequest::ListLogEntriesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  resource_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogEntriesRequest)
}
ListLogEntriesRequest::ListLogEntriesRequest(const ListLogEntriesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      resource_names_(from.resource_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_by().size() > 0) {
    order_by_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogEntriesRequest)
}

void ListLogEntriesRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListLogEntriesRequest::~ListLogEntriesRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogEntriesRequest)
  SharedDtor();
}

void ListLogEntriesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListLogEntriesRequest::ArenaDtor(void* object) {
  ListLogEntriesRequest* _this = reinterpret_cast< ListLogEntriesRequest* >(object);
  (void)_this;
}
void ListLogEntriesRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListLogEntriesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogEntriesRequest& ListLogEntriesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListLogEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_names_.Clear();
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  order_by_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListLogEntriesRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListLogEntriesRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogEntriesRequest.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string order_by = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogEntriesRequest.order_by");
        object = msg->mutable_order_by();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogEntriesRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string resource_names = 8 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogEntriesRequest.resource_names");
          object = msg->add_resource_names();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListLogEntriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogEntriesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_by = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_by().data(), static_cast<int>(this->order_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.order_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string resource_names = 8 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resource_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_names(this->resource_names_size() - 1).data(),
            static_cast<int>(this->resource_names(this->resource_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.resource_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogEntriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogEntriesRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListLogEntriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // string order_by = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.order_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->order_by(), output);
  }

  // int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  // string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->page_token(), output);
  }

  // repeated string resource_names = 8 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), static_cast<int>(this->resource_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.resource_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->resource_names(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogEntriesRequest)
}

::google::protobuf::uint8* ListLogEntriesRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // string order_by = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.order_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->order_by(), target);
  }

  // int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  // string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->page_token(), target);
  }

  // repeated string resource_names = 8 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), static_cast<int>(this->resource_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.resource_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->resource_names(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogEntriesRequest)
  return target;
}

size_t ListLogEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogEntriesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_names = 8 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_names_size());
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resource_names(i));
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string order_by = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->order_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_by());
  }

  // string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogEntriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogEntriesRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListLogEntriesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogEntriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogEntriesRequest)
    MergeFrom(*source);
  }
}

void ListLogEntriesRequest::MergeFrom(const ListLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_names_.MergeFrom(from.resource_names_);
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.order_by().size() > 0) {
    set_order_by(from.order_by());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListLogEntriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogEntriesRequest::CopyFrom(const ListLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogEntriesRequest::IsInitialized() const {
  return true;
}

void ListLogEntriesRequest::Swap(ListLogEntriesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListLogEntriesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListLogEntriesRequest::UnsafeArenaSwap(ListLogEntriesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListLogEntriesRequest::InternalSwap(ListLogEntriesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_names_.InternalSwap(CastToBase(&other->resource_names_));
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_by_.Swap(&other->order_by_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListLogEntriesRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListLogEntriesResponse::InitAsDefaultInstance() {
}
class ListLogEntriesResponse::HasBitSetters {
 public:
};

void ListLogEntriesResponse::clear_entries() {
  entries_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogEntriesResponse::kEntriesFieldNumber;
const int ListLogEntriesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogEntriesResponse::ListLogEntriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogEntriesResponse)
}
ListLogEntriesResponse::ListLogEntriesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogEntriesResponse)
}
ListLogEntriesResponse::ListLogEntriesResponse(const ListLogEntriesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogEntriesResponse)
}

void ListLogEntriesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListLogEntriesResponse::~ListLogEntriesResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogEntriesResponse)
  SharedDtor();
}

void ListLogEntriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListLogEntriesResponse::ArenaDtor(void* object) {
  ListLogEntriesResponse* _this = reinterpret_cast< ListLogEntriesResponse* >(object);
  (void)_this;
}
void ListLogEntriesResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListLogEntriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogEntriesResponse& ListLogEntriesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListLogEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListLogEntriesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListLogEntriesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.logging.v2.LogEntry entries = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::LogEntry::_InternalParse;
          object = msg->add_entries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogEntriesResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListLogEntriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogEntriesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogEntry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogEntriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogEntriesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListLogEntriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogEntriesResponse)
}

::google::protobuf::uint8* ListLogEntriesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogEntriesResponse)
  return target;
}

size_t ListLogEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogEntriesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogEntry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogEntriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogEntriesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListLogEntriesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogEntriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogEntriesResponse)
    MergeFrom(*source);
  }
}

void ListLogEntriesResponse::MergeFrom(const ListLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListLogEntriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogEntriesResponse::CopyFrom(const ListLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogEntriesResponse::IsInitialized() const {
  return true;
}

void ListLogEntriesResponse::Swap(ListLogEntriesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListLogEntriesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListLogEntriesResponse::UnsafeArenaSwap(ListLogEntriesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListLogEntriesResponse::InternalSwap(ListLogEntriesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListLogEntriesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance() {
}
class ListMonitoredResourceDescriptorsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsRequest::kPageSizeFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}
ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}
ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(const ListMonitoredResourceDescriptorsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}

void ListMonitoredResourceDescriptorsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListMonitoredResourceDescriptorsRequest::~ListMonitoredResourceDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsRequest::ArenaDtor(void* object) {
  ListMonitoredResourceDescriptorsRequest* _this = reinterpret_cast< ListMonitoredResourceDescriptorsRequest* >(object);
  (void)_this;
}
void ListMonitoredResourceDescriptorsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListMonitoredResourceDescriptorsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMonitoredResourceDescriptorsRequest& ListMonitoredResourceDescriptorsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListMonitoredResourceDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListMonitoredResourceDescriptorsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListMonitoredResourceDescriptorsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListMonitoredResourceDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListMonitoredResourceDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_size(), output);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}

::google::protobuf::uint8* ListMonitoredResourceDescriptorsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_size(), target);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  return target;
}

size_t ListMonitoredResourceDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitoredResourceDescriptorsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListMonitoredResourceDescriptorsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
    MergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsRequest::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsRequest::Swap(ListMonitoredResourceDescriptorsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListMonitoredResourceDescriptorsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListMonitoredResourceDescriptorsRequest::UnsafeArenaSwap(ListMonitoredResourceDescriptorsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsRequest::InternalSwap(ListMonitoredResourceDescriptorsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListMonitoredResourceDescriptorsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance() {
}
class ListMonitoredResourceDescriptorsResponse::HasBitSetters {
 public:
};

void ListMonitoredResourceDescriptorsResponse::clear_resource_descriptors() {
  resource_descriptors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsResponse::kResourceDescriptorsFieldNumber;
const int ListMonitoredResourceDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  resource_descriptors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(const ListMonitoredResourceDescriptorsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      resource_descriptors_(from.resource_descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}

void ListMonitoredResourceDescriptorsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListMonitoredResourceDescriptorsResponse::~ListMonitoredResourceDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsResponse::ArenaDtor(void* object) {
  ListMonitoredResourceDescriptorsResponse* _this = reinterpret_cast< ListMonitoredResourceDescriptorsResponse* >(object);
  (void)_this;
}
void ListMonitoredResourceDescriptorsResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListMonitoredResourceDescriptorsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMonitoredResourceDescriptorsResponse& ListMonitoredResourceDescriptorsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListMonitoredResourceDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_descriptors_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListMonitoredResourceDescriptorsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListMonitoredResourceDescriptorsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::api::MonitoredResourceDescriptor::_InternalParse;
          object = msg->add_resource_descriptors();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListMonitoredResourceDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_resource_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListMonitoredResourceDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resource_descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->resource_descriptors(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}

::google::protobuf::uint8* ListMonitoredResourceDescriptorsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resource_descriptors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->resource_descriptors(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  return target;
}

size_t ListMonitoredResourceDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->resource_descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->resource_descriptors(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitoredResourceDescriptorsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListMonitoredResourceDescriptorsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
    MergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_descriptors_.MergeFrom(from.resource_descriptors_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsResponse::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsResponse::Swap(ListMonitoredResourceDescriptorsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListMonitoredResourceDescriptorsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListMonitoredResourceDescriptorsResponse::UnsafeArenaSwap(ListMonitoredResourceDescriptorsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsResponse::InternalSwap(ListMonitoredResourceDescriptorsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&resource_descriptors_)->InternalSwap(CastToBase(&other->resource_descriptors_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListMonitoredResourceDescriptorsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListLogsRequest::InitAsDefaultInstance() {
}
class ListLogsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogsRequest::kParentFieldNumber;
const int ListLogsRequest::kPageSizeFieldNumber;
const int ListLogsRequest::kPageTokenFieldNumber;
const int ListLogsRequest::kResourceNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogsRequest::ListLogsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogsRequest)
}
ListLogsRequest::ListLogsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  resource_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogsRequest)
}
ListLogsRequest::ListLogsRequest(const ListLogsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      resource_names_(from.resource_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogsRequest)
}

void ListLogsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListLogsRequest::~ListLogsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogsRequest)
  SharedDtor();
}

void ListLogsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListLogsRequest::ArenaDtor(void* object) {
  ListLogsRequest* _this = reinterpret_cast< ListLogsRequest* >(object);
  (void)_this;
}
void ListLogsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogsRequest& ListLogsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_names_.Clear();
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListLogsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListLogsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogsRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string resource_names = 8 [(.google.api.field_behavior) = OPTIONAL];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogsRequest.resource_names");
          object = msg->add_resource_names();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListLogsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string resource_names = 8 [(.google.api.field_behavior) = OPTIONAL];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resource_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_names(this->resource_names_size() - 1).data(),
            static_cast<int>(this->resource_names(this->resource_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogsRequest.resource_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListLogsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // repeated string resource_names = 8 [(.google.api.field_behavior) = OPTIONAL];
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), static_cast<int>(this->resource_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsRequest.resource_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->resource_names(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogsRequest)
}

::google::protobuf::uint8* ListLogsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // repeated string resource_names = 8 [(.google.api.field_behavior) = OPTIONAL];
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), static_cast<int>(this->resource_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsRequest.resource_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->resource_names(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogsRequest)
  return target;
}

size_t ListLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_names = 8 [(.google.api.field_behavior) = OPTIONAL];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_names_size());
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resource_names(i));
  }

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListLogsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogsRequest)
    MergeFrom(*source);
  }
}

void ListLogsRequest::MergeFrom(const ListLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_names_.MergeFrom(from.resource_names_);
  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListLogsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogsRequest::CopyFrom(const ListLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogsRequest::IsInitialized() const {
  return true;
}

void ListLogsRequest::Swap(ListLogsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListLogsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListLogsRequest::UnsafeArenaSwap(ListLogsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListLogsRequest::InternalSwap(ListLogsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_names_.InternalSwap(CastToBase(&other->resource_names_));
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListLogsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListLogsResponse::InitAsDefaultInstance() {
}
class ListLogsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogsResponse::kLogNamesFieldNumber;
const int ListLogsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogsResponse::ListLogsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogsResponse)
}
ListLogsResponse::ListLogsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  log_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogsResponse)
}
ListLogsResponse::ListLogsResponse(const ListLogsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      log_names_(from.log_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogsResponse)
}

void ListLogsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListLogsResponse::~ListLogsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogsResponse)
  SharedDtor();
}

void ListLogsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListLogsResponse::ArenaDtor(void* object) {
  ListLogsResponse* _this = reinterpret_cast< ListLogsResponse* >(object);
  (void)_this;
}
void ListLogsResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogsResponse& ListLogsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_names_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListLogsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListLogsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogsResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string log_names = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.logging.v2.ListLogsResponse.log_names");
          object = msg->add_log_names();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListLogsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string log_names = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_log_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_names(this->log_names_size() - 1).data(),
            static_cast<int>(this->log_names(this->log_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogsResponse.log_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListLogsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // repeated string log_names = 3;
  for (int i = 0, n = this->log_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_names(i).data(), static_cast<int>(this->log_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsResponse.log_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->log_names(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogsResponse)
}

::google::protobuf::uint8* ListLogsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // repeated string log_names = 3;
  for (int i = 0, n = this->log_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_names(i).data(), static_cast<int>(this->log_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsResponse.log_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->log_names(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogsResponse)
  return target;
}

size_t ListLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string log_names = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->log_names_size());
  for (int i = 0, n = this->log_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->log_names(i));
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListLogsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogsResponse)
    MergeFrom(*source);
  }
}

void ListLogsResponse::MergeFrom(const ListLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  log_names_.MergeFrom(from.log_names_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListLogsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogsResponse::CopyFrom(const ListLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogsResponse::IsInitialized() const {
  return true;
}

void ListLogsResponse::Swap(ListLogsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListLogsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListLogsResponse::UnsafeArenaSwap(ListLogsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListLogsResponse::InternalSwap(ListLogsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  log_names_.InternalSwap(CastToBase(&other->log_names_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListLogsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TailLogEntriesRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_TailLogEntriesRequest_default_instance_._instance.get_mutable()->buffer_window_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
class TailLogEntriesRequest::HasBitSetters {
 public:
  static const ::google::protobuf::Duration& buffer_window(const TailLogEntriesRequest* msg);
};

const ::google::protobuf::Duration&
TailLogEntriesRequest::HasBitSetters::buffer_window(const TailLogEntriesRequest* msg) {
  return *msg->buffer_window_;
}
void TailLogEntriesRequest::unsafe_arena_set_allocated_buffer_window(
    ::google::protobuf::Duration* buffer_window) {
  if (GetArenaNoVirtual() == nullptr) {
    delete buffer_window_;
  }
  buffer_window_ = buffer_window;
  if (buffer_window) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.TailLogEntriesRequest.buffer_window)
}
void TailLogEntriesRequest::clear_buffer_window() {
  if (GetArenaNoVirtual() == nullptr && buffer_window_ != nullptr) {
    delete buffer_window_;
  }
  buffer_window_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TailLogEntriesRequest::kResourceNamesFieldNumber;
const int TailLogEntriesRequest::kFilterFieldNumber;
const int TailLogEntriesRequest::kBufferWindowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TailLogEntriesRequest::TailLogEntriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.TailLogEntriesRequest)
}
TailLogEntriesRequest::TailLogEntriesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  resource_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.TailLogEntriesRequest)
}
TailLogEntriesRequest::TailLogEntriesRequest(const TailLogEntriesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      resource_names_(from.resource_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  if (from.has_buffer_window()) {
    buffer_window_ = new ::google::protobuf::Duration(*from.buffer_window_);
  } else {
    buffer_window_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.TailLogEntriesRequest)
}

void TailLogEntriesRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TailLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_window_ = nullptr;
}

TailLogEntriesRequest::~TailLogEntriesRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.TailLogEntriesRequest)
  SharedDtor();
}

void TailLogEntriesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete buffer_window_;
}

void TailLogEntriesRequest::ArenaDtor(void* object) {
  TailLogEntriesRequest* _this = reinterpret_cast< TailLogEntriesRequest* >(object);
  (void)_this;
}
void TailLogEntriesRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TailLogEntriesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TailLogEntriesRequest& TailLogEntriesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TailLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void TailLogEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.TailLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_names_.Clear();
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && buffer_window_ != nullptr) {
    delete buffer_window_;
  }
  buffer_window_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TailLogEntriesRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TailLogEntriesRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string resource_names = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.logging.v2.TailLogEntriesRequest.resource_names");
          object = msg->add_resource_names();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.TailLogEntriesRequest.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Duration buffer_window = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Duration::_InternalParse;
        object = msg->mutable_buffer_window();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TailLogEntriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.TailLogEntriesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string resource_names = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resource_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_names(this->resource_names_size() - 1).data(),
            static_cast<int>(this->resource_names(this->resource_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.TailLogEntriesRequest.resource_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.TailLogEntriesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration buffer_window = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buffer_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.TailLogEntriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.TailLogEntriesRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TailLogEntriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.TailLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resource_names = 1 [(.google.api.field_behavior) = REQUIRED];
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), static_cast<int>(this->resource_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.TailLogEntriesRequest.resource_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->resource_names(i), output);
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.TailLogEntriesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // .google.protobuf.Duration buffer_window = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_buffer_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::buffer_window(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.TailLogEntriesRequest)
}

::google::protobuf::uint8* TailLogEntriesRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.TailLogEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resource_names = 1 [(.google.api.field_behavior) = REQUIRED];
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), static_cast<int>(this->resource_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.TailLogEntriesRequest.resource_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->resource_names(i), target);
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.TailLogEntriesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // .google.protobuf.Duration buffer_window = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_buffer_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::buffer_window(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.TailLogEntriesRequest)
  return target;
}

size_t TailLogEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.TailLogEntriesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_names = 1 [(.google.api.field_behavior) = REQUIRED];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_names_size());
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resource_names(i));
  }

  // string filter = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // .google.protobuf.Duration buffer_window = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_buffer_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *buffer_window_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TailLogEntriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.TailLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TailLogEntriesRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TailLogEntriesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.TailLogEntriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.TailLogEntriesRequest)
    MergeFrom(*source);
  }
}

void TailLogEntriesRequest::MergeFrom(const TailLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.TailLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_names_.MergeFrom(from.resource_names_);
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.has_buffer_window()) {
    mutable_buffer_window()->::google::protobuf::Duration::MergeFrom(from.buffer_window());
  }
}

void TailLogEntriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.TailLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TailLogEntriesRequest::CopyFrom(const TailLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.TailLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailLogEntriesRequest::IsInitialized() const {
  return true;
}

void TailLogEntriesRequest::Swap(TailLogEntriesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TailLogEntriesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void TailLogEntriesRequest::UnsafeArenaSwap(TailLogEntriesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TailLogEntriesRequest::InternalSwap(TailLogEntriesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_names_.InternalSwap(CastToBase(&other->resource_names_));
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(buffer_window_, other->buffer_window_);
}

::google::protobuf::Metadata TailLogEntriesRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TailLogEntriesResponse_SuppressionInfo::InitAsDefaultInstance() {
}
class TailLogEntriesResponse_SuppressionInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TailLogEntriesResponse_SuppressionInfo::kReasonFieldNumber;
const int TailLogEntriesResponse_SuppressionInfo::kSuppressedCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TailLogEntriesResponse_SuppressionInfo::TailLogEntriesResponse_SuppressionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
}
TailLogEntriesResponse_SuppressionInfo::TailLogEntriesResponse_SuppressionInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
}
TailLogEntriesResponse_SuppressionInfo::TailLogEntriesResponse_SuppressionInfo(const TailLogEntriesResponse_SuppressionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reason_, &from.reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&suppressed_count_) -
    reinterpret_cast<char*>(&reason_)) + sizeof(suppressed_count_));
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
}

void TailLogEntriesResponse_SuppressionInfo::SharedCtor() {
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suppressed_count_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(suppressed_count_));
}

TailLogEntriesResponse_SuppressionInfo::~TailLogEntriesResponse_SuppressionInfo() {
  // @@protoc_insertion_point(destructor:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  SharedDtor();
}

void TailLogEntriesResponse_SuppressionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void TailLogEntriesResponse_SuppressionInfo::ArenaDtor(void* object) {
  TailLogEntriesResponse_SuppressionInfo* _this = reinterpret_cast< TailLogEntriesResponse_SuppressionInfo* >(object);
  (void)_this;
}
void TailLogEntriesResponse_SuppressionInfo::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TailLogEntriesResponse_SuppressionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TailLogEntriesResponse_SuppressionInfo& TailLogEntriesResponse_SuppressionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TailLogEntriesResponse_SuppressionInfo_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void TailLogEntriesResponse_SuppressionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suppressed_count_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(suppressed_count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TailLogEntriesResponse_SuppressionInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TailLogEntriesResponse_SuppressionInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason reason = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_reason(static_cast<::google::logging::v2::TailLogEntriesResponse_SuppressionInfo_Reason>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 suppressed_count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_suppressed_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TailLogEntriesResponse_SuppressionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::google::logging::v2::TailLogEntriesResponse_SuppressionInfo_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 suppressed_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suppressed_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TailLogEntriesResponse_SuppressionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason(), output);
  }

  // int32 suppressed_count = 2;
  if (this->suppressed_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->suppressed_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
}

::google::protobuf::uint8* TailLogEntriesResponse_SuppressionInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason reason = 1;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason(), target);
  }

  // int32 suppressed_count = 2;
  if (this->suppressed_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->suppressed_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  return target;
}

size_t TailLogEntriesResponse_SuppressionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  // int32 suppressed_count = 2;
  if (this->suppressed_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suppressed_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TailLogEntriesResponse_SuppressionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TailLogEntriesResponse_SuppressionInfo* source =
      ::google::protobuf::DynamicCastToGenerated<TailLogEntriesResponse_SuppressionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
    MergeFrom(*source);
  }
}

void TailLogEntriesResponse_SuppressionInfo::MergeFrom(const TailLogEntriesResponse_SuppressionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
  if (from.suppressed_count() != 0) {
    set_suppressed_count(from.suppressed_count());
  }
}

void TailLogEntriesResponse_SuppressionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TailLogEntriesResponse_SuppressionInfo::CopyFrom(const TailLogEntriesResponse_SuppressionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.TailLogEntriesResponse.SuppressionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailLogEntriesResponse_SuppressionInfo::IsInitialized() const {
  return true;
}

void TailLogEntriesResponse_SuppressionInfo::Swap(TailLogEntriesResponse_SuppressionInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TailLogEntriesResponse_SuppressionInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void TailLogEntriesResponse_SuppressionInfo::UnsafeArenaSwap(TailLogEntriesResponse_SuppressionInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TailLogEntriesResponse_SuppressionInfo::InternalSwap(TailLogEntriesResponse_SuppressionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(reason_, other->reason_);
  swap(suppressed_count_, other->suppressed_count_);
}

::google::protobuf::Metadata TailLogEntriesResponse_SuppressionInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TailLogEntriesResponse::InitAsDefaultInstance() {
}
class TailLogEntriesResponse::HasBitSetters {
 public:
};

void TailLogEntriesResponse::clear_entries() {
  entries_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TailLogEntriesResponse::kEntriesFieldNumber;
const int TailLogEntriesResponse::kSuppressionInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TailLogEntriesResponse::TailLogEntriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.TailLogEntriesResponse)
}
TailLogEntriesResponse::TailLogEntriesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entries_(arena),
  suppression_info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.TailLogEntriesResponse)
}
TailLogEntriesResponse::TailLogEntriesResponse(const TailLogEntriesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_),
      suppression_info_(from.suppression_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.TailLogEntriesResponse)
}

void TailLogEntriesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TailLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
}

TailLogEntriesResponse::~TailLogEntriesResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.TailLogEntriesResponse)
  SharedDtor();
}

void TailLogEntriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void TailLogEntriesResponse::ArenaDtor(void* object) {
  TailLogEntriesResponse* _this = reinterpret_cast< TailLogEntriesResponse* >(object);
  (void)_this;
}
void TailLogEntriesResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TailLogEntriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TailLogEntriesResponse& TailLogEntriesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TailLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void TailLogEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.TailLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  suppression_info_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TailLogEntriesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TailLogEntriesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.logging.v2.LogEntry entries = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::LogEntry::_InternalParse;
          object = msg->add_entries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .google.logging.v2.TailLogEntriesResponse.SuppressionInfo suppression_info = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::TailLogEntriesResponse_SuppressionInfo::_InternalParse;
          object = msg->add_suppression_info();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TailLogEntriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.TailLogEntriesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogEntry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.logging.v2.TailLogEntriesResponse.SuppressionInfo suppression_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_suppression_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.TailLogEntriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.TailLogEntriesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TailLogEntriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.TailLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  // repeated .google.logging.v2.TailLogEntriesResponse.SuppressionInfo suppression_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suppression_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->suppression_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.TailLogEntriesResponse)
}

::google::protobuf::uint8* TailLogEntriesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.TailLogEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), target);
  }

  // repeated .google.logging.v2.TailLogEntriesResponse.SuppressionInfo suppression_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suppression_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->suppression_info(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.TailLogEntriesResponse)
  return target;
}

size_t TailLogEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.TailLogEntriesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogEntry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // repeated .google.logging.v2.TailLogEntriesResponse.SuppressionInfo suppression_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->suppression_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->suppression_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TailLogEntriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.TailLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TailLogEntriesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TailLogEntriesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.TailLogEntriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.TailLogEntriesResponse)
    MergeFrom(*source);
  }
}

void TailLogEntriesResponse::MergeFrom(const TailLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.TailLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  suppression_info_.MergeFrom(from.suppression_info_);
}

void TailLogEntriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.TailLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TailLogEntriesResponse::CopyFrom(const TailLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.TailLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailLogEntriesResponse::IsInitialized() const {
  return true;
}

void TailLogEntriesResponse::Swap(TailLogEntriesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TailLogEntriesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void TailLogEntriesResponse::UnsafeArenaSwap(TailLogEntriesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TailLogEntriesResponse::InternalSwap(TailLogEntriesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  CastToBase(&suppression_info_)->InternalSwap(CastToBase(&other->suppression_info_));
}

::google::protobuf::Metadata TailLogEntriesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace logging
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::logging::v2::DeleteLogRequest* Arena::CreateMaybeMessage< ::google::logging::v2::DeleteLogRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::DeleteLogRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesRequest* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesResponse* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesPartialErrors* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesPartialErrors >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesPartialErrors >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogEntriesRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogEntriesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogEntriesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogEntriesResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogEntriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogEntriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListMonitoredResourceDescriptorsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListMonitoredResourceDescriptorsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListMonitoredResourceDescriptorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListMonitoredResourceDescriptorsResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListMonitoredResourceDescriptorsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListMonitoredResourceDescriptorsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogsResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::TailLogEntriesRequest* Arena::CreateMaybeMessage< ::google::logging::v2::TailLogEntriesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::TailLogEntriesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::TailLogEntriesResponse_SuppressionInfo* Arena::CreateMaybeMessage< ::google::logging::v2::TailLogEntriesResponse_SuppressionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::TailLogEntriesResponse_SuppressionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::TailLogEntriesResponse* Arena::CreateMaybeMessage< ::google::logging::v2::TailLogEntriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::TailLogEntriesResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
