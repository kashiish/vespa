// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging_config.proto

#include "google/logging/v2/logging_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BigQueryOptions_google_2flogging_2fv2_2flogging_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmekSettings_google_2flogging_2fv2_2flogging_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace logging {
namespace v2 {
class LogBucketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogBucket> _instance;
} _LogBucket_default_instance_;
class LogViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogView> _instance;
} _LogView_default_instance_;
class LogSinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogSink> _instance;
  const ::google::logging::v2::BigQueryOptions* bigquery_options_;
} _LogSink_default_instance_;
class BigQueryOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BigQueryOptions> _instance;
} _BigQueryOptions_default_instance_;
class ListBucketsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBucketsRequest> _instance;
} _ListBucketsRequest_default_instance_;
class ListBucketsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBucketsResponse> _instance;
} _ListBucketsResponse_default_instance_;
class CreateBucketRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateBucketRequest> _instance;
} _CreateBucketRequest_default_instance_;
class UpdateBucketRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateBucketRequest> _instance;
} _UpdateBucketRequest_default_instance_;
class GetBucketRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBucketRequest> _instance;
} _GetBucketRequest_default_instance_;
class DeleteBucketRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteBucketRequest> _instance;
} _DeleteBucketRequest_default_instance_;
class UndeleteBucketRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UndeleteBucketRequest> _instance;
} _UndeleteBucketRequest_default_instance_;
class ListViewsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListViewsRequest> _instance;
} _ListViewsRequest_default_instance_;
class ListViewsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListViewsResponse> _instance;
} _ListViewsResponse_default_instance_;
class CreateViewRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateViewRequest> _instance;
} _CreateViewRequest_default_instance_;
class UpdateViewRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateViewRequest> _instance;
} _UpdateViewRequest_default_instance_;
class GetViewRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetViewRequest> _instance;
} _GetViewRequest_default_instance_;
class DeleteViewRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteViewRequest> _instance;
} _DeleteViewRequest_default_instance_;
class ListSinksRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSinksRequest> _instance;
} _ListSinksRequest_default_instance_;
class ListSinksResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSinksResponse> _instance;
} _ListSinksResponse_default_instance_;
class GetSinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSinkRequest> _instance;
} _GetSinkRequest_default_instance_;
class CreateSinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateSinkRequest> _instance;
} _CreateSinkRequest_default_instance_;
class UpdateSinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateSinkRequest> _instance;
} _UpdateSinkRequest_default_instance_;
class DeleteSinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSinkRequest> _instance;
} _DeleteSinkRequest_default_instance_;
class LogExclusionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogExclusion> _instance;
} _LogExclusion_default_instance_;
class ListExclusionsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListExclusionsRequest> _instance;
} _ListExclusionsRequest_default_instance_;
class ListExclusionsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListExclusionsResponse> _instance;
} _ListExclusionsResponse_default_instance_;
class GetExclusionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetExclusionRequest> _instance;
} _GetExclusionRequest_default_instance_;
class CreateExclusionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateExclusionRequest> _instance;
} _CreateExclusionRequest_default_instance_;
class UpdateExclusionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateExclusionRequest> _instance;
} _UpdateExclusionRequest_default_instance_;
class DeleteExclusionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteExclusionRequest> _instance;
} _DeleteExclusionRequest_default_instance_;
class GetCmekSettingsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCmekSettingsRequest> _instance;
} _GetCmekSettingsRequest_default_instance_;
class UpdateCmekSettingsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateCmekSettingsRequest> _instance;
} _UpdateCmekSettingsRequest_default_instance_;
class CmekSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmekSettings> _instance;
} _CmekSettings_default_instance_;
}  // namespace v2
}  // namespace logging
}  // namespace google
static void InitDefaultsLogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_LogBucket_default_instance_;
    new (ptr) ::google::logging::v2::LogBucket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::LogBucket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsLogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_LogView_default_instance_;
    new (ptr) ::google::logging::v2::LogView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::LogView::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsLogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_LogSink_default_instance_;
    new (ptr) ::google::logging::v2::LogSink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::LogSink::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,
      &scc_info_BigQueryOptions_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsBigQueryOptions_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_BigQueryOptions_default_instance_;
    new (ptr) ::google::logging::v2::BigQueryOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::BigQueryOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BigQueryOptions_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBigQueryOptions_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsListBucketsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListBucketsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListBucketsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListBucketsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBucketsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBucketsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsListBucketsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListBucketsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListBucketsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListBucketsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListBucketsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListBucketsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,}};

static void InitDefaultsCreateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_CreateBucketRequest_default_instance_;
    new (ptr) ::google::logging::v2::CreateBucketRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CreateBucketRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,}};

static void InitDefaultsUpdateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_UpdateBucketRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateBucketRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateBucketRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsGetBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_GetBucketRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetBucketRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetBucketRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsDeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_DeleteBucketRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteBucketRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteBucketRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsUndeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_UndeleteBucketRequest_default_instance_;
    new (ptr) ::google::logging::v2::UndeleteBucketRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UndeleteBucketRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UndeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUndeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsListViewsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListViewsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListViewsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListViewsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListViewsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListViewsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsListViewsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListViewsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListViewsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListViewsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListViewsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListViewsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,}};

static void InitDefaultsCreateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_CreateViewRequest_default_instance_;
    new (ptr) ::google::logging::v2::CreateViewRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CreateViewRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,}};

static void InitDefaultsUpdateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_UpdateViewRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateViewRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateViewRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsGetViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_GetViewRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetViewRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetViewRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsDeleteViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_DeleteViewRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteViewRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteViewRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsListSinksRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListSinksRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListSinksRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListSinksRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSinksRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSinksRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsListSinksResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListSinksResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListSinksResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListSinksResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListSinksResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListSinksResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,}};

static void InitDefaultsGetSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_GetSinkRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetSinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetSinkRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsCreateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_CreateSinkRequest_default_instance_;
    new (ptr) ::google::logging::v2::CreateSinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CreateSinkRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,}};

static void InitDefaultsUpdateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_UpdateSinkRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateSinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateSinkRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsDeleteSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_DeleteSinkRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteSinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteSinkRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsLogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_LogExclusion_default_instance_;
    new (ptr) ::google::logging::v2::LogExclusion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::LogExclusion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsListExclusionsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListExclusionsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListExclusionsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListExclusionsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListExclusionsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListExclusionsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsListExclusionsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListExclusionsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListExclusionsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListExclusionsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListExclusionsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListExclusionsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,}};

static void InitDefaultsGetExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_GetExclusionRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetExclusionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetExclusionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsCreateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_CreateExclusionRequest_default_instance_;
    new (ptr) ::google::logging::v2::CreateExclusionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CreateExclusionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,}};

static void InitDefaultsUpdateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_UpdateExclusionRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateExclusionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateExclusionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsDeleteExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_DeleteExclusionRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteExclusionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteExclusionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsGetCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_GetCmekSettingsRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetCmekSettingsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetCmekSettingsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

static void InitDefaultsUpdateCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_UpdateCmekSettingsRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateCmekSettingsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateCmekSettingsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {
      &scc_info_CmekSettings_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsCmekSettings_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_CmekSettings_default_instance_;
    new (ptr) ::google::logging::v2::CmekSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CmekSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmekSettings_google_2flogging_2fv2_2flogging_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmekSettings_google_2flogging_2fv2_2flogging_5fconfig_2eproto}, {}};

void InitDefaults_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BigQueryOptions_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBucketsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBucketsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UndeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListViewsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListViewsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSinksRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSinksResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListExclusionsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListExclusionsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmekSettings_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[33];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2flogging_2fv2_2flogging_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogBucket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogBucket, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogBucket, description_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogBucket, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogBucket, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogBucket, retention_days_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogBucket, locked_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogBucket, lifecycle_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogView, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogView, description_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogView, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogView, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogView, filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, destination_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, filter_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, description_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, disabled_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, exclusions_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, output_version_format_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, writer_identity_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, include_children_),
  offsetof(::google::logging::v2::LogSinkDefaultTypeInternal, bigquery_options_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogSink, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::BigQueryOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::BigQueryOptions, use_partitioned_tables_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::BigQueryOptions, uses_timestamp_column_partitioning_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListBucketsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListBucketsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListBucketsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListBucketsRequest, page_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListBucketsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListBucketsResponse, buckets_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListBucketsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateBucketRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateBucketRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateBucketRequest, bucket_id_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateBucketRequest, bucket_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateBucketRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateBucketRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateBucketRequest, bucket_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateBucketRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetBucketRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetBucketRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteBucketRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteBucketRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UndeleteBucketRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UndeleteBucketRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListViewsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListViewsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListViewsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListViewsRequest, page_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListViewsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListViewsResponse, views_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListViewsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateViewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateViewRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateViewRequest, view_id_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateViewRequest, view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateViewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateViewRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateViewRequest, view_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateViewRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetViewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetViewRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteViewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteViewRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListSinksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListSinksRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListSinksRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListSinksRequest, page_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListSinksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListSinksResponse, sinks_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListSinksResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetSinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetSinkRequest, sink_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateSinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateSinkRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateSinkRequest, sink_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateSinkRequest, unique_writer_identity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, sink_name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, sink_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, unique_writer_identity_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteSinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteSinkRequest, sink_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogExclusion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogExclusion, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogExclusion, description_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogExclusion, filter_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogExclusion, disabled_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogExclusion, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogExclusion, update_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListExclusionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListExclusionsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListExclusionsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListExclusionsRequest, page_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListExclusionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListExclusionsResponse, exclusions_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListExclusionsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetExclusionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetExclusionRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateExclusionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateExclusionRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateExclusionRequest, exclusion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateExclusionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateExclusionRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateExclusionRequest, exclusion_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateExclusionRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteExclusionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteExclusionRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetCmekSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetCmekSettingsRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateCmekSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateCmekSettingsRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateCmekSettingsRequest, cmek_settings_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateCmekSettingsRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CmekSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CmekSettings, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CmekSettings, kms_key_name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CmekSettings, service_account_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::logging::v2::LogBucket)},
  { 12, -1, sizeof(::google::logging::v2::LogView)},
  { 22, -1, sizeof(::google::logging::v2::LogSink)},
  { 40, -1, sizeof(::google::logging::v2::BigQueryOptions)},
  { 47, -1, sizeof(::google::logging::v2::ListBucketsRequest)},
  { 55, -1, sizeof(::google::logging::v2::ListBucketsResponse)},
  { 62, -1, sizeof(::google::logging::v2::CreateBucketRequest)},
  { 70, -1, sizeof(::google::logging::v2::UpdateBucketRequest)},
  { 78, -1, sizeof(::google::logging::v2::GetBucketRequest)},
  { 84, -1, sizeof(::google::logging::v2::DeleteBucketRequest)},
  { 90, -1, sizeof(::google::logging::v2::UndeleteBucketRequest)},
  { 96, -1, sizeof(::google::logging::v2::ListViewsRequest)},
  { 104, -1, sizeof(::google::logging::v2::ListViewsResponse)},
  { 111, -1, sizeof(::google::logging::v2::CreateViewRequest)},
  { 119, -1, sizeof(::google::logging::v2::UpdateViewRequest)},
  { 127, -1, sizeof(::google::logging::v2::GetViewRequest)},
  { 133, -1, sizeof(::google::logging::v2::DeleteViewRequest)},
  { 139, -1, sizeof(::google::logging::v2::ListSinksRequest)},
  { 147, -1, sizeof(::google::logging::v2::ListSinksResponse)},
  { 154, -1, sizeof(::google::logging::v2::GetSinkRequest)},
  { 160, -1, sizeof(::google::logging::v2::CreateSinkRequest)},
  { 168, -1, sizeof(::google::logging::v2::UpdateSinkRequest)},
  { 177, -1, sizeof(::google::logging::v2::DeleteSinkRequest)},
  { 183, -1, sizeof(::google::logging::v2::LogExclusion)},
  { 194, -1, sizeof(::google::logging::v2::ListExclusionsRequest)},
  { 202, -1, sizeof(::google::logging::v2::ListExclusionsResponse)},
  { 209, -1, sizeof(::google::logging::v2::GetExclusionRequest)},
  { 215, -1, sizeof(::google::logging::v2::CreateExclusionRequest)},
  { 222, -1, sizeof(::google::logging::v2::UpdateExclusionRequest)},
  { 230, -1, sizeof(::google::logging::v2::DeleteExclusionRequest)},
  { 236, -1, sizeof(::google::logging::v2::GetCmekSettingsRequest)},
  { 242, -1, sizeof(::google::logging::v2::UpdateCmekSettingsRequest)},
  { 250, -1, sizeof(::google::logging::v2::CmekSettings)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_LogBucket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_LogView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_LogSink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_BigQueryOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListBucketsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListBucketsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_CreateBucketRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UpdateBucketRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_GetBucketRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_DeleteBucketRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UndeleteBucketRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListViewsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListViewsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_CreateViewRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UpdateViewRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_GetViewRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_DeleteViewRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListSinksRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListSinksResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_GetSinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_CreateSinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UpdateSinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_DeleteSinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_LogExclusion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListExclusionsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListExclusionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_GetExclusionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_CreateExclusionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UpdateExclusionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_DeleteExclusionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_GetCmekSettingsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UpdateCmekSettingsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_CmekSettings_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto = {
  {}, AddDescriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto, "google/logging/v2/logging_config.proto", schemas,
  file_default_instances, TableStruct_google_2flogging_2fv2_2flogging_5fconfig_2eproto::offsets,
  file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto, 33, file_level_enum_descriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto, file_level_service_descriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto,
};

const char descriptor_table_protodef_google_2flogging_2fv2_2flogging_5fconfig_2eproto[] =
  "\n&google/logging/v2/logging_config.proto"
  "\022\021google.logging.v2\032\027google/api/client.p"
  "roto\032\037google/api/field_behavior.proto\032\031g"
  "oogle/api/resource.proto\032\036google/protobu"
  "f/duration.proto\032\033google/protobuf/empty."
  "proto\032 google/protobuf/field_mask.proto\032"
  "\037google/protobuf/timestamp.proto\032\034google"
  "/api/annotations.proto\"\253\004\n\tLogBucket\022\014\n\004"
  "name\030\001 \001(\t\022\023\n\013description\030\003 \001(\t\0224\n\013creat"
  "e_time\030\004 \001(\0132\032.google.protobuf.Timestamp"
  "B\003\340A\003\0224\n\013update_time\030\005 \001(\0132\032.google.prot"
  "obuf.TimestampB\003\340A\003\022\026\n\016retention_days\030\013 "
  "\001(\005\022\016\n\006locked\030\t \001(\010\022\?\n\017lifecycle_state\030\014"
  " \001(\0162!.google.logging.v2.LifecycleStateB"
  "\003\340A\003:\245\002\352A\241\002\n logging.googleapis.com/LogB"
  "ucket\0228projects/{project}/locations/{loc"
  "ation}/buckets/{bucket}\022Borganizations/{"
  "organization}/locations/{location}/bucke"
  "ts/{bucket}\0226folders/{folder}/locations/"
  "{location}/buckets/{bucket}\022GbillingAcco"
  "unts/{billing_account}/locations/{locati"
  "on}/buckets/{bucket}\"\202\004\n\007LogView\022\014\n\004name"
  "\030\001 \001(\t\022\023\n\013description\030\003 \001(\t\0224\n\013create_ti"
  "me\030\004 \001(\0132\032.google.protobuf.TimestampB\003\340A"
  "\003\0224\n\013update_time\030\005 \001(\0132\032.google.protobuf"
  ".TimestampB\003\340A\003\022\016\n\006filter\030\007 \001(\t:\327\002\352A\323\002\n\036"
  "logging.googleapis.com/LogView\022Eprojects"
  "/{project}/locations/{location}/buckets/"
  "{bucket}/views/{view}\022Oorganizations/{or"
  "ganization}/locations/{location}/buckets"
  "/{bucket}/views/{view}\022Cfolders/{folder}"
  "/locations/{location}/buckets/{bucket}/v"
  "iews/{view}\022TbillingAccounts/{billing_ac"
  "count}/locations/{location}/buckets/{buc"
  "ket}/views/{view}\"\205\006\n\007LogSink\022\021\n\004name\030\001 "
  "\001(\tB\003\340A\002\022\036\n\013destination\030\003 \001(\tB\t\340A\002\372A\003\n\001*"
  "\022\023\n\006filter\030\005 \001(\tB\003\340A\001\022\030\n\013description\030\022 \001"
  "(\tB\003\340A\001\022\025\n\010disabled\030\023 \001(\010B\003\340A\001\0228\n\nexclus"
  "ions\030\020 \003(\0132\037.google.logging.v2.LogExclus"
  "ionB\003\340A\001\022K\n\025output_version_format\030\006 \001(\0162"
  "(.google.logging.v2.LogSink.VersionForma"
  "tB\002\030\001\022\034\n\017writer_identity\030\010 \001(\tB\003\340A\003\022\035\n\020i"
  "nclude_children\030\t \001(\010B\003\340A\001\022C\n\020bigquery_o"
  "ptions\030\014 \001(\0132\".google.logging.v2.BigQuer"
  "yOptionsB\003\340A\001H\000\0224\n\013create_time\030\r \001(\0132\032.g"
  "oogle.protobuf.TimestampB\003\340A\003\0224\n\013update_"
  "time\030\016 \001(\0132\032.google.protobuf.TimestampB\003"
  "\340A\003\"\?\n\rVersionFormat\022\036\n\032VERSION_FORMAT_U"
  "NSPECIFIED\020\000\022\006\n\002V2\020\001\022\006\n\002V1\020\002:\277\001\352A\273\001\n\036log"
  "ging.googleapis.com/LogSink\022\037projects/{p"
  "roject}/sinks/{sink}\022)organizations/{org"
  "anization}/sinks/{sink}\022\035folders/{folder"
  "}/sinks/{sink}\022.billingAccounts/{billing"
  "_account}/sinks/{sink}B\t\n\007options\"g\n\017Big"
  "QueryOptions\022#\n\026use_partitioned_tables\030\001"
  " \001(\010B\003\340A\001\022/\n\"uses_timestamp_column_parti"
  "tioning\030\003 \001(\010B\003\340A\003\"\177\n\022ListBucketsRequest"
  "\0228\n\006parent\030\001 \001(\tB(\340A\002\372A\"\022 logging.google"
  "apis.com/LogBucket\022\027\n\npage_token\030\002 \001(\tB\003"
  "\340A\001\022\026\n\tpage_size\030\003 \001(\005B\003\340A\001\"]\n\023ListBucke"
  "tsResponse\022-\n\007buckets\030\001 \003(\0132\034.google.log"
  "ging.v2.LogBucket\022\027\n\017next_page_token\030\002 \001"
  "(\t\"\232\001\n\023CreateBucketRequest\0228\n\006parent\030\001 \001"
  "(\tB(\340A\002\372A\"\022 logging.googleapis.com/LogBu"
  "cket\022\026\n\tbucket_id\030\002 \001(\tB\003\340A\002\0221\n\006bucket\030\003"
  " \001(\0132\034.google.logging.v2.LogBucketB\003\340A\002\""
  "\266\001\n\023UpdateBucketRequest\0226\n\004name\030\001 \001(\tB(\340"
  "A\002\372A\"\n logging.googleapis.com/LogBucket\022"
  "1\n\006bucket\030\002 \001(\0132\034.google.logging.v2.LogB"
  "ucketB\003\340A\002\0224\n\013update_mask\030\004 \001(\0132\032.google"
  ".protobuf.FieldMaskB\003\340A\002\"J\n\020GetBucketReq"
  "uest\0226\n\004name\030\001 \001(\tB(\340A\002\372A\"\n logging.goog"
  "leapis.com/LogBucket\"M\n\023DeleteBucketRequ"
  "est\0226\n\004name\030\001 \001(\tB(\340A\002\372A\"\n logging.googl"
  "eapis.com/LogBucket\"O\n\025UndeleteBucketReq"
  "uest\0226\n\004name\030\001 \001(\tB(\340A\002\372A\"\n logging.goog"
  "leapis.com/LogBucket\"X\n\020ListViewsRequest"
  "\022\023\n\006parent\030\001 \001(\tB\003\340A\002\022\027\n\npage_token\030\002 \001("
  "\tB\003\340A\001\022\026\n\tpage_size\030\003 \001(\005B\003\340A\001\"W\n\021ListVi"
  "ewsResponse\022)\n\005views\030\001 \003(\0132\032.google.logg"
  "ing.v2.LogView\022\027\n\017next_page_token\030\002 \001(\t\""
  "m\n\021CreateViewRequest\022\023\n\006parent\030\001 \001(\tB\003\340A"
  "\002\022\024\n\007view_id\030\002 \001(\tB\003\340A\002\022-\n\004view\030\003 \001(\0132\032."
  "google.logging.v2.LogViewB\003\340A\002\"\213\001\n\021Updat"
  "eViewRequest\022\021\n\004name\030\001 \001(\tB\003\340A\002\022-\n\004view\030"
  "\002 \001(\0132\032.google.logging.v2.LogViewB\003\340A\002\0224"
  "\n\013update_mask\030\004 \001(\0132\032.google.protobuf.Fi"
  "eldMaskB\003\340A\001\"F\n\016GetViewRequest\0224\n\004name\030\001"
  " \001(\tB&\340A\002\372A \n\036logging.googleapis.com/Log"
  "View\"I\n\021DeleteViewRequest\0224\n\004name\030\001 \001(\tB"
  "&\340A\002\372A \n\036logging.googleapis.com/LogView\""
  "{\n\020ListSinksRequest\0226\n\006parent\030\001 \001(\tB&\340A\002"
  "\372A \022\036logging.googleapis.com/LogSink\022\027\n\np"
  "age_token\030\002 \001(\tB\003\340A\001\022\026\n\tpage_size\030\003 \001(\005B"
  "\003\340A\001\"W\n\021ListSinksResponse\022)\n\005sinks\030\001 \003(\013"
  "2\032.google.logging.v2.LogSink\022\027\n\017next_pag"
  "e_token\030\002 \001(\t\"K\n\016GetSinkRequest\0229\n\tsink_"
  "name\030\001 \001(\tB&\340A\002\372A \n\036logging.googleapis.c"
  "om/LogSink\"\237\001\n\021CreateSinkRequest\0226\n\006pare"
  "nt\030\001 \001(\tB&\340A\002\372A \022\036logging.googleapis.com"
  "/LogSink\022-\n\004sink\030\002 \001(\0132\032.google.logging."
  "v2.LogSinkB\003\340A\002\022#\n\026unique_writer_identit"
  "y\030\003 \001(\010B\003\340A\001\"\330\001\n\021UpdateSinkRequest\0229\n\tsi"
  "nk_name\030\001 \001(\tB&\340A\002\372A \n\036logging.googleapi"
  "s.com/LogSink\022-\n\004sink\030\002 \001(\0132\032.google.log"
  "ging.v2.LogSinkB\003\340A\002\022#\n\026unique_writer_id"
  "entity\030\003 \001(\010B\003\340A\001\0224\n\013update_mask\030\004 \001(\0132\032"
  ".google.protobuf.FieldMaskB\003\340A\001\"N\n\021Delet"
  "eSinkRequest\0229\n\tsink_name\030\001 \001(\tB&\340A\002\372A \n"
  "\036logging.googleapis.com/LogSink\"\302\003\n\014LogE"
  "xclusion\022\021\n\004name\030\001 \001(\tB\003\340A\002\022\030\n\013descripti"
  "on\030\002 \001(\tB\003\340A\001\022\023\n\006filter\030\003 \001(\tB\003\340A\002\022\025\n\010di"
  "sabled\030\004 \001(\010B\003\340A\001\0224\n\013create_time\030\005 \001(\0132\032"
  ".google.protobuf.TimestampB\003\340A\003\0224\n\013updat"
  "e_time\030\006 \001(\0132\032.google.protobuf.Timestamp"
  "B\003\340A\003:\354\001\352A\350\001\n#logging.googleapis.com/Log"
  "Exclusion\022)projects/{project}/exclusions"
  "/{exclusion}\0223organizations/{organizatio"
  "n}/exclusions/{exclusion}\022\'folders/{fold"
  "er}/exclusions/{exclusion}\0228billingAccou"
  "nts/{billing_account}/exclusions/{exclus"
  "ion}\"\205\001\n\025ListExclusionsRequest\022;\n\006parent"
  "\030\001 \001(\tB+\340A\002\372A%\022#logging.googleapis.com/L"
  "ogExclusion\022\027\n\npage_token\030\002 \001(\tB\003\340A\001\022\026\n\t"
  "page_size\030\003 \001(\005B\003\340A\001\"f\n\026ListExclusionsRe"
  "sponse\0223\n\nexclusions\030\001 \003(\0132\037.google.logg"
  "ing.v2.LogExclusion\022\027\n\017next_page_token\030\002"
  " \001(\t\"P\n\023GetExclusionRequest\0229\n\004name\030\001 \001("
  "\tB+\340A\002\372A%\n#logging.googleapis.com/LogExc"
  "lusion\"\216\001\n\026CreateExclusionRequest\022;\n\006par"
  "ent\030\001 \001(\tB+\340A\002\372A%\022#logging.googleapis.co"
  "m/LogExclusion\0227\n\texclusion\030\002 \001(\0132\037.goog"
  "le.logging.v2.LogExclusionB\003\340A\002\"\302\001\n\026Upda"
  "teExclusionRequest\0229\n\004name\030\001 \001(\tB+\340A\002\372A%"
  "\n#logging.googleapis.com/LogExclusion\0227\n"
  "\texclusion\030\002 \001(\0132\037.google.logging.v2.Log"
  "ExclusionB\003\340A\002\0224\n\013update_mask\030\003 \001(\0132\032.go"
  "ogle.protobuf.FieldMaskB\003\340A\002\"S\n\026DeleteEx"
  "clusionRequest\0229\n\004name\030\001 \001(\tB+\340A\002\372A%\n#lo"
  "gging.googleapis.com/LogExclusion\"S\n\026Get"
  "CmekSettingsRequest\0229\n\004name\030\001 \001(\tB+\340A\002\372A"
  "%\n#logging.googleapis.com/CmekSettings\"\241"
  "\001\n\031UpdateCmekSettingsRequest\022\021\n\004name\030\001 \001"
  "(\tB\003\340A\002\022;\n\rcmek_settings\030\002 \001(\0132\037.google."
  "logging.v2.CmekSettingsB\003\340A\002\0224\n\013update_m"
  "ask\030\003 \001(\0132\032.google.protobuf.FieldMaskB\003\340"
  "A\001\"\237\002\n\014CmekSettings\022\021\n\004name\030\001 \001(\tB\003\340A\003\022\024"
  "\n\014kms_key_name\030\002 \001(\t\022\037\n\022service_account_"
  "id\030\003 \001(\tB\003\340A\003:\304\001\352A\300\001\n#logging.googleapis"
  ".com/CmekSettings\022\037projects/{project}/cm"
  "ekSettings\022)organizations/{organization}"
  "/cmekSettings\022\035folders/{folder}/cmekSett"
  "ings\022.billingAccounts/{billing_account}/"
  "cmekSettings*S\n\016LifecycleState\022\037\n\033LIFECY"
  "CLE_STATE_UNSPECIFIED\020\000\022\n\n\006ACTIVE\020\001\022\024\n\020D"
  "ELETE_REQUESTED\020\0022\334>\n\017ConfigServiceV2\022\334\002"
  "\n\013ListBuckets\022%.google.logging.v2.ListBu"
  "cketsRequest\032&.google.logging.v2.ListBuc"
  "ketsResponse\"\375\001\202\323\344\223\002\355\001\022$/v2/{parent=*/*/"
  "locations/*}/bucketsZ-\022+/v2/{parent=proj"
  "ects/*/locations/*}/bucketsZ2\0220/v2/{pare"
  "nt=organizations/*/locations/*}/bucketsZ"
  ",\022*/v2/{parent=folders/*/locations/*}/bu"
  "cketsZ4\0222/v2/{parent=billingAccounts/*/l"
  "ocations/*}/buckets\332A\006parent\022\271\002\n\tGetBuck"
  "et\022#.google.logging.v2.GetBucketRequest\032"
  "\034.google.logging.v2.LogBucket\"\350\001\202\323\344\223\002\341\001\022"
  "$/v2/{name=*/*/locations/*/buckets/*}Z-\022"
  "+/v2/{name=projects/*/locations/*/bucket"
  "s/*}Z2\0220/v2/{name=organizations/*/locati"
  "ons/*/buckets/*}Z,\022*/v2/{name=folders/*/"
  "locations/*/buckets/*}Z(\022&/v2/{name=bill"
  "ingAccounts/*/buckets/*}\022\363\002\n\014CreateBucke"
  "t\022&.google.logging.v2.CreateBucketReques"
  "t\032\034.google.logging.v2.LogBucket\"\234\002\202\323\344\223\002\225"
  "\002\"$/v2/{parent=*/*/locations/*}/buckets:"
  "\006bucketZ5\"+/v2/{parent=projects/*/locati"
  "ons/*}/buckets:\006bucketZ:\"0/v2/{parent=or"
  "ganizations/*/locations/*}/buckets:\006buck"
  "etZ4\"*/v2/{parent=folders/*/locations/*}"
  "/buckets:\006bucketZ<\"2/v2/{parent=billingA"
  "ccounts/*/locations/*}/buckets:\006bucket\022\363"
  "\002\n\014UpdateBucket\022&.google.logging.v2.Upda"
  "teBucketRequest\032\034.google.logging.v2.LogB"
  "ucket\"\234\002\202\323\344\223\002\225\0022$/v2/{name=*/*/locations"
  "/*/buckets/*}:\006bucketZ52+/v2/{name=proje"
  "cts/*/locations/*/buckets/*}:\006bucketZ:20"
  "/v2/{name=organizations/*/locations/*/bu"
  "ckets/*}:\006bucketZ42*/v2/{name=folders/*/"
  "locations/*/buckets/*}:\006bucketZ<22/v2/{n"
  "ame=billingAccounts/*/locations/*/bucket"
  "s/*}:\006bucket\022\305\002\n\014DeleteBucket\022&.google.l"
  "ogging.v2.DeleteBucketRequest\032\026.google.p"
  "rotobuf.Empty\"\364\001\202\323\344\223\002\355\001*$/v2/{name=*/*/l"
  "ocations/*/buckets/*}Z-*+/v2/{name=proje"
  "cts/*/locations/*/buckets/*}Z2*0/v2/{nam"
  "e=organizations/*/locations/*/buckets/*}"
  "Z,**/v2/{name=folders/*/locations/*/buck"
  "ets/*}Z4*2/v2/{name=billingAccounts/*/lo"
  "cations/*/buckets/*}\022\205\003\n\016UndeleteBucket\022"
  "(.google.logging.v2.UndeleteBucketReques"
  "t\032\026.google.protobuf.Empty\"\260\002\202\323\344\223\002\251\002\"-/v2"
  "/{name=*/*/locations/*/buckets/*}:undele"
  "te:\001*Z9\"4/v2/{name=projects/*/locations/"
  "*/buckets/*}:undelete:\001*Z>\"9/v2/{name=or"
  "ganizations/*/locations/*/buckets/*}:und"
  "elete:\001*Z8\"3/v2/{name=folders/*/location"
  "s/*/buckets/*}:undelete:\001*Z@\";/v2/{name="
  "billingAccounts/*/locations/*/buckets/*}"
  ":undelete:\001*\022\376\002\n\tListViews\022#.google.logg"
  "ing.v2.ListViewsRequest\032$.google.logging"
  ".v2.ListViewsResponse\"\245\002\202\323\344\223\002\225\002\022,/v2/{pa"
  "rent=*/*/locations/*/buckets/*}/viewsZ5\022"
  "3/v2/{parent=projects/*/locations/*/buck"
  "ets/*}/viewsZ:\0228/v2/{parent=organization"
  "s/*/locations/*/buckets/*}/viewsZ4\0222/v2/"
  "{parent=folders/*/locations/*/buckets/*}"
  "/viewsZ<\022:/v2/{parent=billingAccounts/*/"
  "locations/*/buckets/*}/views\332A\006parent\022\333\002"
  "\n\007GetView\022!.google.logging.v2.GetViewReq"
  "uest\032\032.google.logging.v2.LogView\"\220\002\202\323\344\223\002"
  "\211\002\022,/v2/{name=*/*/locations/*/buckets/*/"
  "views/*}Z5\0223/v2/{name=projects/*/locatio"
  "ns/*/buckets/*/views/*}Z:\0228/v2/{name=org"
  "anizations/*/locations/*/buckets/*/views"
  "/*}Z4\0222/v2/{name=folders/*/locations/*/b"
  "uckets/*/views/*}Z0\022./v2/{name=billingAc"
  "counts/*/buckets/*/views/*}\022\213\003\n\nCreateVi"
  "ew\022$.google.logging.v2.CreateViewRequest"
  "\032\032.google.logging.v2.LogView\"\272\002\202\323\344\223\002\263\002\","
  "/v2/{parent=*/*/locations/*/buckets/*}/v"
  "iews:\004viewZ;\"3/v2/{parent=projects/*/loc"
  "ations/*/buckets/*}/views:\004viewZ@\"8/v2/{"
  "parent=organizations/*/locations/*/bucke"
  "ts/*}/views:\004viewZ:\"2/v2/{parent=folders"
  "/*/locations/*/buckets/*}/views:\004viewZB\""
  ":/v2/{parent=billingAccounts/*/locations"
  "/*/buckets/*}/views:\004view\022\213\003\n\nUpdateView"
  "\022$.google.logging.v2.UpdateViewRequest\032\032"
  ".google.logging.v2.LogView\"\272\002\202\323\344\223\002\263\0022,/v"
  "2/{name=*/*/locations/*/buckets/*/views/"
  "*}:\004viewZ;23/v2/{name=projects/*/locatio"
  "ns/*/buckets/*/views/*}:\004viewZ@28/v2/{na"
  "me=organizations/*/locations/*/buckets/*"
  "/views/*}:\004viewZ:22/v2/{name=folders/*/l"
  "ocations/*/buckets/*/views/*}:\004viewZB2:/"
  "v2/{name=billingAccounts/*/locations/*/b"
  "uckets/*/views/*}:\004view\022\351\002\n\nDeleteView\022$"
  ".google.logging.v2.DeleteViewRequest\032\026.g"
  "oogle.protobuf.Empty\"\234\002\202\323\344\223\002\225\002*,/v2/{nam"
  "e=*/*/locations/*/buckets/*/views/*}Z5*3"
  "/v2/{name=projects/*/locations/*/buckets"
  "/*/views/*}Z:*8/v2/{name=organizations/*"
  "/locations/*/buckets/*/views/*}Z4*2/v2/{"
  "name=folders/*/locations/*/buckets/*/vie"
  "ws/*}Z<*:/v2/{name=billingAccounts/*/loc"
  "ations/*/buckets/*/views/*}\022\220\002\n\tListSink"
  "s\022#.google.logging.v2.ListSinksRequest\032$"
  ".google.logging.v2.ListSinksResponse\"\267\001\202"
  "\323\344\223\002\247\001\022\026/v2/{parent=*/*}/sinksZ\037\022\035/v2/{p"
  "arent=projects/*}/sinksZ$\022\"/v2/{parent=o"
  "rganizations/*}/sinksZ\036\022\034/v2/{parent=fol"
  "ders/*}/sinksZ&\022$/v2/{parent=billingAcco"
  "unts/*}/sinks\332A\006parent\022\236\002\n\007GetSink\022!.goo"
  "gle.logging.v2.GetSinkRequest\032\032.google.l"
  "ogging.v2.LogSink\"\323\001\202\323\344\223\002\300\001\022\033/v2/{sink_n"
  "ame=*/*/sinks/*}Z$\022\"/v2/{sink_name=proje"
  "cts/*/sinks/*}Z)\022\'/v2/{sink_name=organiz"
  "ations/*/sinks/*}Z#\022!/v2/{sink_name=fold"
  "ers/*/sinks/*}Z+\022)/v2/{sink_name=billing"
  "Accounts/*/sinks/*}\332A\tsink_name\022\253\002\n\nCrea"
  "teSink\022$.google.logging.v2.CreateSinkReq"
  "uest\032\032.google.logging.v2.LogSink\"\332\001\202\323\344\223\002"
  "\305\001\"\026/v2/{parent=*/*}/sinks:\004sinkZ%\"\035/v2/"
  "{parent=projects/*}/sinks:\004sinkZ*\"\"/v2/{"
  "parent=organizations/*}/sinks:\004sinkZ$\"\034/"
  "v2/{parent=folders/*}/sinks:\004sinkZ,\"$/v2"
  "/{parent=billingAccounts/*}/sinks:\004sink\332"
  "A\013parent,sink\022\237\004\n\nUpdateSink\022$.google.lo"
  "gging.v2.UpdateSinkRequest\032\032.google.logg"
  "ing.v2.LogSink\"\316\003\202\323\344\223\002\231\003\032\033/v2/{sink_name"
  "=*/*/sinks/*}:\004sinkZ*\032\"/v2/{sink_name=pr"
  "ojects/*/sinks/*}:\004sinkZ/\032\'/v2/{sink_nam"
  "e=organizations/*/sinks/*}:\004sinkZ)\032!/v2/"
  "{sink_name=folders/*/sinks/*}:\004sinkZ1\032)/"
  "v2/{sink_name=billingAccounts/*/sinks/*}"
  ":\004sinkZ*2\"/v2/{sink_name=projects/*/sink"
  "s/*}:\004sinkZ/2\'/v2/{sink_name=organizatio"
  "ns/*/sinks/*}:\004sinkZ)2!/v2/{sink_name=fo"
  "lders/*/sinks/*}:\004sinkZ12)/v2/{sink_name"
  "=billingAccounts/*/sinks/*}:\004sink\332A\032sink"
  "_name,sink,update_mask\332A\016sink_name,sink\022"
  "\240\002\n\nDeleteSink\022$.google.logging.v2.Delet"
  "eSinkRequest\032\026.google.protobuf.Empty\"\323\001\202"
  "\323\344\223\002\300\001*\033/v2/{sink_name=*/*/sinks/*}Z$*\"/"
  "v2/{sink_name=projects/*/sinks/*}Z)*\'/v2"
  "/{sink_name=organizations/*/sinks/*}Z#*!"
  "/v2/{sink_name=folders/*/sinks/*}Z+*)/v2"
  "/{sink_name=billingAccounts/*/sinks/*}\332A"
  "\tsink_name\022\270\002\n\016ListExclusions\022(.google.l"
  "ogging.v2.ListExclusionsRequest\032).google"
  ".logging.v2.ListExclusionsResponse\"\320\001\202\323\344"
  "\223\002\300\001\022\033/v2/{parent=*/*}/exclusionsZ$\022\"/v2"
  "/{parent=projects/*}/exclusionsZ)\022\'/v2/{"
  "parent=organizations/*}/exclusionsZ#\022!/v"
  "2/{parent=folders/*}/exclusionsZ+\022)/v2/{"
  "parent=billingAccounts/*}/exclusions\332A\006p"
  "arent\022\250\002\n\014GetExclusion\022&.google.logging."
  "v2.GetExclusionRequest\032\037.google.logging."
  "v2.LogExclusion\"\316\001\202\323\344\223\002\300\001\022\033/v2/{name=*/*"
  "/exclusions/*}Z$\022\"/v2/{name=projects/*/e"
  "xclusions/*}Z)\022\'/v2/{name=organizations/"
  "*/exclusions/*}Z#\022!/v2/{name=folders/*/e"
  "xclusions/*}Z+\022)/v2/{name=billingAccount"
  "s/*/exclusions/*}\332A\004name\022\361\002\n\017CreateExclu"
  "sion\022).google.logging.v2.CreateExclusion"
  "Request\032\037.google.logging.v2.LogExclusion"
  "\"\221\002\202\323\344\223\002\367\001\"\033/v2/{parent=*/*}/exclusions:"
  "\texclusionZ/\"\"/v2/{parent=projects/*}/ex"
  "clusions:\texclusionZ4\"\'/v2/{parent=organ"
  "izations/*}/exclusions:\texclusionZ.\"!/v2"
  "/{parent=folders/*}/exclusions:\texclusio"
  "nZ6\")/v2/{parent=billingAccounts/*}/excl"
  "usions:\texclusion\332A\020parent,exclusion\022\373\002\n"
  "\017UpdateExclusion\022).google.logging.v2.Upd"
  "ateExclusionRequest\032\037.google.logging.v2."
  "LogExclusion\"\233\002\202\323\344\223\002\367\0012\033/v2/{name=*/*/ex"
  "clusions/*}:\texclusionZ/2\"/v2/{name=proj"
  "ects/*/exclusions/*}:\texclusionZ42\'/v2/{"
  "name=organizations/*/exclusions/*}:\texcl"
  "usionZ.2!/v2/{name=folders/*/exclusions/"
  "*}:\texclusionZ62)/v2/{name=billingAccoun"
  "ts/*/exclusions/*}:\texclusion\332A\032name,exc"
  "lusion,update_mask\022\245\002\n\017DeleteExclusion\022)"
  ".google.logging.v2.DeleteExclusionReques"
  "t\032\026.google.protobuf.Empty\"\316\001\202\323\344\223\002\300\001*\033/v2"
  "/{name=*/*/exclusions/*}Z$*\"/v2/{name=pr"
  "ojects/*/exclusions/*}Z)*\'/v2/{name=orga"
  "nizations/*/exclusions/*}Z#*!/v2/{name=f"
  "olders/*/exclusions/*}Z+*)/v2/{name=bill"
  "ingAccounts/*/exclusions/*}\332A\004name\022\255\001\n\017G"
  "etCmekSettings\022).google.logging.v2.GetCm"
  "ekSettingsRequest\032\037.google.logging.v2.Cm"
  "ekSettings\"N\202\323\344\223\002H\022\033/v2/{name=*/*}/cmekS"
  "ettingsZ)\022\'/v2/{name=organizations/*}/cm"
  "ekSettings\022\321\001\n\022UpdateCmekSettings\022,.goog"
  "le.logging.v2.UpdateCmekSettingsRequest\032"
  "\037.google.logging.v2.CmekSettings\"l\202\323\344\223\002f"
  "2\033/v2/{name=*/*}/cmekSettings:\rcmek_sett"
  "ingsZ82\'/v2/{name=organizations/*}/cmekS"
  "ettings:\rcmek_settings\032\337\001\312A\026logging.goog"
  "leapis.com\322A\302\001https://www.googleapis.com"
  "/auth/cloud-platform,https://www.googlea"
  "pis.com/auth/cloud-platform.read-only,ht"
  "tps://www.googleapis.com/auth/logging.ad"
  "min,https://www.googleapis.com/auth/logg"
  "ing.readB\331\003\n\025com.google.logging.v2B\022Logg"
  "ingConfigProtoP\001Z8google.golang.org/genp"
  "roto/googleapis/logging/v2;logging\370\001\001\252\002\027"
  "Google.Cloud.Logging.V2\312\002\027Google\\Cloud\\L"
  "ogging\\V2\352\002\032Google::Cloud::Logging::V2\352A"
  "`\n+logging.googleapis.com/OrganizationLo"
  "cation\0221organizations/{organization}/loc"
  "ations/{location}\352AN\n%logging.googleapis"
  ".com/FolderLocation\022%folders/{folder}/lo"
  "cations/{location}\352Ag\n-logging.googleapi"
  "s.com/BillingAccountLocation\0226billingAcc"
  "ounts/{billing_account}/locations/{locat"
  "ion}b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto = {
  false, InitDefaults_google_2flogging_2fv2_2flogging_5fconfig_2eproto, 
  descriptor_table_protodef_google_2flogging_2fv2_2flogging_5fconfig_2eproto,
  "google/logging/v2/logging_config.proto", &assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto, 14732,
};

void AddDescriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[8] =
  {
    ::AddDescriptors_google_2fapi_2fclient_2eproto,
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fapi_2fresource_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fduration_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ffield_5fmask_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto, deps, 8);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2flogging_2fv2_2flogging_5fconfig_2eproto = []() { AddDescriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto(); return true; }();
namespace google {
namespace logging {
namespace v2 {
const ::google::protobuf::EnumDescriptor* LogSink_VersionFormat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return file_level_enum_descriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto[0];
}
bool LogSink_VersionFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogSink_VersionFormat LogSink::VERSION_FORMAT_UNSPECIFIED;
const LogSink_VersionFormat LogSink::V2;
const LogSink_VersionFormat LogSink::V1;
const LogSink_VersionFormat LogSink::VersionFormat_MIN;
const LogSink_VersionFormat LogSink::VersionFormat_MAX;
const int LogSink::VersionFormat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LifecycleState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return file_level_enum_descriptors_google_2flogging_2fv2_2flogging_5fconfig_2eproto[1];
}
bool LifecycleState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LogBucket::InitAsDefaultInstance() {
  ::google::logging::v2::_LogBucket_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::logging::v2::_LogBucket_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class LogBucket::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const LogBucket* msg);
  static const ::google::protobuf::Timestamp& update_time(const LogBucket* msg);
};

const ::google::protobuf::Timestamp&
LogBucket::HasBitSetters::create_time(const LogBucket* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
LogBucket::HasBitSetters::update_time(const LogBucket* msg) {
  return *msg->update_time_;
}
void LogBucket::unsafe_arena_set_allocated_create_time(
    ::google::protobuf::Timestamp* create_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete create_time_;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogBucket.create_time)
}
void LogBucket::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void LogBucket::unsafe_arena_set_allocated_update_time(
    ::google::protobuf::Timestamp* update_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_time_;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogBucket.update_time)
}
void LogBucket::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogBucket::kNameFieldNumber;
const int LogBucket::kDescriptionFieldNumber;
const int LogBucket::kCreateTimeFieldNumber;
const int LogBucket::kUpdateTimeFieldNumber;
const int LogBucket::kRetentionDaysFieldNumber;
const int LogBucket::kLockedFieldNumber;
const int LogBucket::kLifecycleStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogBucket::LogBucket()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogBucket)
}
LogBucket::LogBucket(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.LogBucket)
}
LogBucket::LogBucket(const LogBucket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  ::memcpy(&lifecycle_state_, &from.lifecycle_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&retention_days_) -
    reinterpret_cast<char*>(&lifecycle_state_)) + sizeof(retention_days_));
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogBucket)
}

void LogBucket::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retention_days_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(retention_days_));
}

LogBucket::~LogBucket() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogBucket)
  SharedDtor();
}

void LogBucket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void LogBucket::ArenaDtor(void* object) {
  LogBucket* _this = reinterpret_cast< LogBucket* >(object);
  (void)_this;
}
void LogBucket::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void LogBucket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogBucket& LogBucket::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogBucket_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void LogBucket::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogBucket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  ::memset(&lifecycle_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retention_days_) -
      reinterpret_cast<char*>(&lifecycle_state_)) + sizeof(retention_days_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogBucket::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogBucket*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogBucket.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogBucket.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool locked = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_locked(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 retention_days = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_retention_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.logging.v2.LifecycleState lifecycle_state = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_lifecycle_state(static_cast<::google::logging::v2::LifecycleState>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogBucket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.LogBucket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogBucket.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogBucket.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool locked = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retention_days = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retention_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LifecycleState lifecycle_state = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lifecycle_state(static_cast< ::google::logging::v2::LifecycleState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.LogBucket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.LogBucket)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogBucket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.LogBucket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogBucket.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogBucket.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::update_time(this), output);
  }

  // bool locked = 9;
  if (this->locked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->locked(), output);
  }

  // int32 retention_days = 11;
  if (this->retention_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retention_days(), output);
  }

  // .google.logging.v2.LifecycleState lifecycle_state = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->lifecycle_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->lifecycle_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.LogBucket)
}

::google::protobuf::uint8* LogBucket::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogBucket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogBucket.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogBucket.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::update_time(this), target);
  }

  // bool locked = 9;
  if (this->locked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->locked(), target);
  }

  // int32 retention_days = 11;
  if (this->retention_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retention_days(), target);
  }

  // .google.logging.v2.LifecycleState lifecycle_state = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->lifecycle_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->lifecycle_state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogBucket)
  return target;
}

size_t LogBucket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogBucket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.logging.v2.LifecycleState lifecycle_state = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->lifecycle_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lifecycle_state());
  }

  // bool locked = 9;
  if (this->locked() != 0) {
    total_size += 1 + 1;
  }

  // int32 retention_days = 11;
  if (this->retention_days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retention_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogBucket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogBucket)
  GOOGLE_DCHECK_NE(&from, this);
  const LogBucket* source =
      ::google::protobuf::DynamicCastToGenerated<LogBucket>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogBucket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogBucket)
    MergeFrom(*source);
  }
}

void LogBucket::MergeFrom(const LogBucket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogBucket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.lifecycle_state() != 0) {
    set_lifecycle_state(from.lifecycle_state());
  }
  if (from.locked() != 0) {
    set_locked(from.locked());
  }
  if (from.retention_days() != 0) {
    set_retention_days(from.retention_days());
  }
}

void LogBucket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogBucket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogBucket::CopyFrom(const LogBucket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogBucket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogBucket::IsInitialized() const {
  return true;
}

void LogBucket::Swap(LogBucket* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogBucket* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void LogBucket::UnsafeArenaSwap(LogBucket* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogBucket::InternalSwap(LogBucket* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(lifecycle_state_, other->lifecycle_state_);
  swap(locked_, other->locked_);
  swap(retention_days_, other->retention_days_);
}

::google::protobuf::Metadata LogBucket::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogView::InitAsDefaultInstance() {
  ::google::logging::v2::_LogView_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::logging::v2::_LogView_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class LogView::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const LogView* msg);
  static const ::google::protobuf::Timestamp& update_time(const LogView* msg);
};

const ::google::protobuf::Timestamp&
LogView::HasBitSetters::create_time(const LogView* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
LogView::HasBitSetters::update_time(const LogView* msg) {
  return *msg->update_time_;
}
void LogView::unsafe_arena_set_allocated_create_time(
    ::google::protobuf::Timestamp* create_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete create_time_;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogView.create_time)
}
void LogView::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void LogView::unsafe_arena_set_allocated_update_time(
    ::google::protobuf::Timestamp* update_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_time_;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogView.update_time)
}
void LogView::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogView::kNameFieldNumber;
const int LogView::kDescriptionFieldNumber;
const int LogView::kCreateTimeFieldNumber;
const int LogView::kUpdateTimeFieldNumber;
const int LogView::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogView::LogView()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogView)
}
LogView::LogView(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.LogView)
}
LogView::LogView(const LogView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogView)
}

void LogView::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(update_time_));
}

LogView::~LogView() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogView)
  SharedDtor();
}

void LogView::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void LogView::ArenaDtor(void* object) {
  LogView* _this = reinterpret_cast< LogView* >(object);
  (void)_this;
}
void LogView::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void LogView::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogView& LogView::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogView_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void LogView::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogView::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogView*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogView.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogView.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string filter = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogView.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.LogView)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogView.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogView.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogView.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.LogView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.LogView)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.LogView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogView.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogView.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::update_time(this), output);
  }

  // string filter = 7;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogView.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->filter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.LogView)
}

::google::protobuf::uint8* LogView::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogView.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogView.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::update_time(this), target);
  }

  // string filter = 7;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogView.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->filter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogView)
  return target;
}

size_t LogView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogView)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string filter = 7;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogView)
  GOOGLE_DCHECK_NE(&from, this);
  const LogView* source =
      ::google::protobuf::DynamicCastToGenerated<LogView>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogView)
    MergeFrom(*source);
  }
}

void LogView::MergeFrom(const LogView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
}

void LogView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogView::CopyFrom(const LogView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogView::IsInitialized() const {
  return true;
}

void LogView::Swap(LogView* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogView* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void LogView::UnsafeArenaSwap(LogView* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogView::InternalSwap(LogView* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
}

::google::protobuf::Metadata LogView::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogSink::InitAsDefaultInstance() {
  ::google::logging::v2::_LogSink_default_instance_.bigquery_options_ = const_cast< ::google::logging::v2::BigQueryOptions*>(
      ::google::logging::v2::BigQueryOptions::internal_default_instance());
  ::google::logging::v2::_LogSink_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::logging::v2::_LogSink_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class LogSink::HasBitSetters {
 public:
  static const ::google::logging::v2::BigQueryOptions& bigquery_options(const LogSink* msg);
  static const ::google::protobuf::Timestamp& create_time(const LogSink* msg);
  static const ::google::protobuf::Timestamp& update_time(const LogSink* msg);
};

const ::google::logging::v2::BigQueryOptions&
LogSink::HasBitSetters::bigquery_options(const LogSink* msg) {
  return *msg->options_.bigquery_options_;
}
const ::google::protobuf::Timestamp&
LogSink::HasBitSetters::create_time(const LogSink* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
LogSink::HasBitSetters::update_time(const LogSink* msg) {
  return *msg->update_time_;
}
void LogSink::set_allocated_bigquery_options(::google::logging::v2::BigQueryOptions* bigquery_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_options();
  if (bigquery_options) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(bigquery_options);
    if (message_arena != submessage_arena) {
      bigquery_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bigquery_options, submessage_arena);
    }
    set_has_bigquery_options();
    options_.bigquery_options_ = bigquery_options;
  }
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.LogSink.bigquery_options)
}
void LogSink::unsafe_arena_set_allocated_create_time(
    ::google::protobuf::Timestamp* create_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete create_time_;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogSink.create_time)
}
void LogSink::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void LogSink::unsafe_arena_set_allocated_update_time(
    ::google::protobuf::Timestamp* update_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_time_;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogSink.update_time)
}
void LogSink::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogSink::kNameFieldNumber;
const int LogSink::kDestinationFieldNumber;
const int LogSink::kFilterFieldNumber;
const int LogSink::kDescriptionFieldNumber;
const int LogSink::kDisabledFieldNumber;
const int LogSink::kExclusionsFieldNumber;
const int LogSink::kOutputVersionFormatFieldNumber;
const int LogSink::kWriterIdentityFieldNumber;
const int LogSink::kIncludeChildrenFieldNumber;
const int LogSink::kBigqueryOptionsFieldNumber;
const int LogSink::kCreateTimeFieldNumber;
const int LogSink::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogSink::LogSink()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogSink)
}
LogSink::LogSink(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  exclusions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.LogSink)
}
LogSink::LogSink(const LogSink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      exclusions_(from.exclusions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destination().size() > 0) {
    destination_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination(),
      GetArenaNoVirtual());
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  writer_identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.writer_identity().size() > 0) {
    writer_identity_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writer_identity(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  ::memcpy(&output_version_format_, &from.output_version_format_,
    static_cast<size_t>(reinterpret_cast<char*>(&include_children_) -
    reinterpret_cast<char*>(&output_version_format_)) + sizeof(include_children_));
  clear_has_options();
  switch (from.options_case()) {
    case kBigqueryOptions: {
      mutable_bigquery_options()->::google::logging::v2::BigQueryOptions::MergeFrom(from.bigquery_options());
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogSink)
}

void LogSink::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_children_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(include_children_));
  clear_has_options();
}

LogSink::~LogSink() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogSink)
  SharedDtor();
}

void LogSink::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (has_options()) {
    clear_options();
  }
}

void LogSink::ArenaDtor(void* object) {
  LogSink* _this = reinterpret_cast< LogSink* >(object);
  (void)_this;
}
void LogSink::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void LogSink::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogSink& LogSink::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogSink_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void LogSink::clear_options() {
// @@protoc_insertion_point(one_of_clear_start:google.logging.v2.LogSink)
  switch (options_case()) {
    case kBigqueryOptions: {
      if (GetArenaNoVirtual() == nullptr) {
        delete options_.bigquery_options_;
      }
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIONS_NOT_SET;
}


void LogSink::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exclusions_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  destination_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  writer_identity_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  ::memset(&output_version_format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_children_) -
      reinterpret_cast<char*>(&output_version_format_)) + sizeof(include_children_));
  clear_options();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogSink::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogSink*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogSink.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string destination = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogSink.destination");
        object = msg->mutable_destination();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filter = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogSink.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogSink.VersionFormat output_version_format = 6 [deprecated = true];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_output_version_format(static_cast<::google::logging::v2::LogSink_VersionFormat>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string writer_identity = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogSink.writer_identity");
        object = msg->mutable_writer_identity();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool include_children = 9 [(.google.api.field_behavior) = OPTIONAL];
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_include_children(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.logging.v2.BigQueryOptions bigquery_options = 12 [(.google.api.field_behavior) = OPTIONAL];
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::BigQueryOptions::_InternalParse;
        object = msg->mutable_bigquery_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp create_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .google.logging.v2.LogExclusion exclusions = 16 [(.google.api.field_behavior) = OPTIONAL];
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::LogExclusion::_InternalParse;
          object = msg->add_exclusions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 386 && (ptr += 2));
        break;
      }
      // string description = 18 [(.google.api.field_behavior) = OPTIONAL];
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogSink.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool disabled = 19 [(.google.api.field_behavior) = OPTIONAL];
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 152) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogSink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.LogSink)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination().data(), static_cast<int>(this->destination().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.destination"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogSink.VersionFormat output_version_format = 6 [deprecated = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_output_version_format(static_cast< ::google::logging::v2::LogSink_VersionFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string writer_identity = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_writer_identity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->writer_identity().data(), static_cast<int>(this->writer_identity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.writer_identity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool include_children = 9 [(.google.api.field_behavior) = OPTIONAL];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_children_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.BigQueryOptions bigquery_options = 12 [(.google.api.field_behavior) = OPTIONAL];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bigquery_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.logging.v2.LogExclusion exclusions = 16 [(.google.api.field_behavior) = OPTIONAL];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_exclusions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 18 [(.google.api.field_behavior) = OPTIONAL];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 19 [(.google.api.field_behavior) = OPTIONAL];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (152 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.LogSink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.LogSink)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogSink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.LogSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string destination = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->destination(), output);
  }

  // string filter = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filter(), output);
  }

  // .google.logging.v2.LogSink.VersionFormat output_version_format = 6 [deprecated = true];
  if (this->output_version_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->output_version_format(), output);
  }

  // string writer_identity = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->writer_identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->writer_identity().data(), static_cast<int>(this->writer_identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.writer_identity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->writer_identity(), output);
  }

  // bool include_children = 9 [(.google.api.field_behavior) = OPTIONAL];
  if (this->include_children() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->include_children(), output);
  }

  // .google.logging.v2.BigQueryOptions bigquery_options = 12 [(.google.api.field_behavior) = OPTIONAL];
  if (has_bigquery_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::bigquery_options(this), output);
  }

  // .google.protobuf.Timestamp create_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::update_time(this), output);
  }

  // repeated .google.logging.v2.LogExclusion exclusions = 16 [(.google.api.field_behavior) = OPTIONAL];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exclusions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->exclusions(static_cast<int>(i)),
      output);
  }

  // string description = 18 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->description(), output);
  }

  // bool disabled = 19 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->disabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.LogSink)
}

::google::protobuf::uint8* LogSink::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string destination = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->destination(), target);
  }

  // string filter = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filter(), target);
  }

  // .google.logging.v2.LogSink.VersionFormat output_version_format = 6 [deprecated = true];
  if (this->output_version_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->output_version_format(), target);
  }

  // string writer_identity = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->writer_identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->writer_identity().data(), static_cast<int>(this->writer_identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.writer_identity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->writer_identity(), target);
  }

  // bool include_children = 9 [(.google.api.field_behavior) = OPTIONAL];
  if (this->include_children() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->include_children(), target);
  }

  // .google.logging.v2.BigQueryOptions bigquery_options = 12 [(.google.api.field_behavior) = OPTIONAL];
  if (has_bigquery_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::bigquery_options(this), target);
  }

  // .google.protobuf.Timestamp create_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::update_time(this), target);
  }

  // repeated .google.logging.v2.LogExclusion exclusions = 16 [(.google.api.field_behavior) = OPTIONAL];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exclusions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->exclusions(static_cast<int>(i)), target);
  }

  // string description = 18 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->description(), target);
  }

  // bool disabled = 19 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->disabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogSink)
  return target;
}

size_t LogSink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogSink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogExclusion exclusions = 16 [(.google.api.field_behavior) = OPTIONAL];
  {
    unsigned int count = static_cast<unsigned int>(this->exclusions_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exclusions(static_cast<int>(i)));
    }
  }

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string destination = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->destination().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination());
  }

  // string filter = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string writer_identity = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->writer_identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->writer_identity());
  }

  // string description = 18 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.protobuf.Timestamp create_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.logging.v2.LogSink.VersionFormat output_version_format = 6 [deprecated = true];
  if (this->output_version_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->output_version_format());
  }

  // bool disabled = 19 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disabled() != 0) {
    total_size += 2 + 1;
  }

  // bool include_children = 9 [(.google.api.field_behavior) = OPTIONAL];
  if (this->include_children() != 0) {
    total_size += 1 + 1;
  }

  switch (options_case()) {
    // .google.logging.v2.BigQueryOptions bigquery_options = 12 [(.google.api.field_behavior) = OPTIONAL];
    case kBigqueryOptions: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *options_.bigquery_options_);
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogSink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogSink)
  GOOGLE_DCHECK_NE(&from, this);
  const LogSink* source =
      ::google::protobuf::DynamicCastToGenerated<LogSink>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogSink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogSink)
    MergeFrom(*source);
  }
}

void LogSink::MergeFrom(const LogSink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogSink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exclusions_.MergeFrom(from.exclusions_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.destination().size() > 0) {
    set_destination(from.destination());
  }
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.writer_identity().size() > 0) {
    set_writer_identity(from.writer_identity());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.output_version_format() != 0) {
    set_output_version_format(from.output_version_format());
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
  if (from.include_children() != 0) {
    set_include_children(from.include_children());
  }
  switch (from.options_case()) {
    case kBigqueryOptions: {
      mutable_bigquery_options()->::google::logging::v2::BigQueryOptions::MergeFrom(from.bigquery_options());
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
}

void LogSink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogSink::CopyFrom(const LogSink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogSink::IsInitialized() const {
  return true;
}

void LogSink::Swap(LogSink* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogSink* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void LogSink::UnsafeArenaSwap(LogSink* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogSink::InternalSwap(LogSink* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&exclusions_)->InternalSwap(CastToBase(&other->exclusions_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destination_.Swap(&other->destination_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  writer_identity_.Swap(&other->writer_identity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(output_version_format_, other->output_version_format_);
  swap(disabled_, other->disabled_);
  swap(include_children_, other->include_children_);
  swap(options_, other->options_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata LogSink::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BigQueryOptions::InitAsDefaultInstance() {
}
class BigQueryOptions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BigQueryOptions::kUsePartitionedTablesFieldNumber;
const int BigQueryOptions::kUsesTimestampColumnPartitioningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BigQueryOptions::BigQueryOptions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.BigQueryOptions)
}
BigQueryOptions::BigQueryOptions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.BigQueryOptions)
}
BigQueryOptions::BigQueryOptions(const BigQueryOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&use_partitioned_tables_, &from.use_partitioned_tables_,
    static_cast<size_t>(reinterpret_cast<char*>(&uses_timestamp_column_partitioning_) -
    reinterpret_cast<char*>(&use_partitioned_tables_)) + sizeof(uses_timestamp_column_partitioning_));
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.BigQueryOptions)
}

void BigQueryOptions::SharedCtor() {
  ::memset(&use_partitioned_tables_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uses_timestamp_column_partitioning_) -
      reinterpret_cast<char*>(&use_partitioned_tables_)) + sizeof(uses_timestamp_column_partitioning_));
}

BigQueryOptions::~BigQueryOptions() {
  // @@protoc_insertion_point(destructor:google.logging.v2.BigQueryOptions)
  SharedDtor();
}

void BigQueryOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void BigQueryOptions::ArenaDtor(void* object) {
  BigQueryOptions* _this = reinterpret_cast< BigQueryOptions* >(object);
  (void)_this;
}
void BigQueryOptions::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void BigQueryOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BigQueryOptions& BigQueryOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BigQueryOptions_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void BigQueryOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.BigQueryOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&use_partitioned_tables_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uses_timestamp_column_partitioning_) -
      reinterpret_cast<char*>(&use_partitioned_tables_)) + sizeof(uses_timestamp_column_partitioning_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BigQueryOptions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BigQueryOptions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool use_partitioned_tables = 1 [(.google.api.field_behavior) = OPTIONAL];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_use_partitioned_tables(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool uses_timestamp_column_partitioning = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uses_timestamp_column_partitioning(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BigQueryOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.BigQueryOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool use_partitioned_tables = 1 [(.google.api.field_behavior) = OPTIONAL];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_partitioned_tables_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool uses_timestamp_column_partitioning = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uses_timestamp_column_partitioning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.BigQueryOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.BigQueryOptions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BigQueryOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.BigQueryOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_partitioned_tables = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (this->use_partitioned_tables() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_partitioned_tables(), output);
  }

  // bool uses_timestamp_column_partitioning = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->uses_timestamp_column_partitioning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->uses_timestamp_column_partitioning(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.BigQueryOptions)
}

::google::protobuf::uint8* BigQueryOptions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.BigQueryOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_partitioned_tables = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (this->use_partitioned_tables() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_partitioned_tables(), target);
  }

  // bool uses_timestamp_column_partitioning = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->uses_timestamp_column_partitioning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->uses_timestamp_column_partitioning(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.BigQueryOptions)
  return target;
}

size_t BigQueryOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.BigQueryOptions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool use_partitioned_tables = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (this->use_partitioned_tables() != 0) {
    total_size += 1 + 1;
  }

  // bool uses_timestamp_column_partitioning = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->uses_timestamp_column_partitioning() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BigQueryOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.BigQueryOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const BigQueryOptions* source =
      ::google::protobuf::DynamicCastToGenerated<BigQueryOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.BigQueryOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.BigQueryOptions)
    MergeFrom(*source);
  }
}

void BigQueryOptions::MergeFrom(const BigQueryOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.BigQueryOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.use_partitioned_tables() != 0) {
    set_use_partitioned_tables(from.use_partitioned_tables());
  }
  if (from.uses_timestamp_column_partitioning() != 0) {
    set_uses_timestamp_column_partitioning(from.uses_timestamp_column_partitioning());
  }
}

void BigQueryOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.BigQueryOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BigQueryOptions::CopyFrom(const BigQueryOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.BigQueryOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BigQueryOptions::IsInitialized() const {
  return true;
}

void BigQueryOptions::Swap(BigQueryOptions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BigQueryOptions* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void BigQueryOptions::UnsafeArenaSwap(BigQueryOptions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BigQueryOptions::InternalSwap(BigQueryOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(use_partitioned_tables_, other->use_partitioned_tables_);
  swap(uses_timestamp_column_partitioning_, other->uses_timestamp_column_partitioning_);
}

::google::protobuf::Metadata BigQueryOptions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListBucketsRequest::InitAsDefaultInstance() {
}
class ListBucketsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBucketsRequest::kParentFieldNumber;
const int ListBucketsRequest::kPageTokenFieldNumber;
const int ListBucketsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBucketsRequest::ListBucketsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListBucketsRequest)
}
ListBucketsRequest::ListBucketsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListBucketsRequest)
}
ListBucketsRequest::ListBucketsRequest(const ListBucketsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListBucketsRequest)
}

void ListBucketsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListBucketsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListBucketsRequest::~ListBucketsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListBucketsRequest)
  SharedDtor();
}

void ListBucketsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBucketsRequest::ArenaDtor(void* object) {
  ListBucketsRequest* _this = reinterpret_cast< ListBucketsRequest* >(object);
  (void)_this;
}
void ListBucketsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListBucketsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListBucketsRequest& ListBucketsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListBucketsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ListBucketsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListBucketsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListBucketsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListBucketsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListBucketsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListBucketsRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListBucketsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListBucketsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListBucketsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListBucketsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListBucketsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListBucketsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListBucketsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListBucketsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListBucketsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListBucketsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListBucketsRequest)
}

::google::protobuf::uint8* ListBucketsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListBucketsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListBucketsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListBucketsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListBucketsRequest)
  return target;
}

size_t ListBucketsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListBucketsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBucketsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListBucketsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBucketsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListBucketsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListBucketsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListBucketsRequest)
    MergeFrom(*source);
  }
}

void ListBucketsRequest::MergeFrom(const ListBucketsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListBucketsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListBucketsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListBucketsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBucketsRequest::CopyFrom(const ListBucketsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListBucketsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBucketsRequest::IsInitialized() const {
  return true;
}

void ListBucketsRequest::Swap(ListBucketsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListBucketsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListBucketsRequest::UnsafeArenaSwap(ListBucketsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListBucketsRequest::InternalSwap(ListBucketsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListBucketsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListBucketsResponse::InitAsDefaultInstance() {
}
class ListBucketsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBucketsResponse::kBucketsFieldNumber;
const int ListBucketsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBucketsResponse::ListBucketsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListBucketsResponse)
}
ListBucketsResponse::ListBucketsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  buckets_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListBucketsResponse)
}
ListBucketsResponse::ListBucketsResponse(const ListBucketsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      buckets_(from.buckets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListBucketsResponse)
}

void ListBucketsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListBucketsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListBucketsResponse::~ListBucketsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListBucketsResponse)
  SharedDtor();
}

void ListBucketsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBucketsResponse::ArenaDtor(void* object) {
  ListBucketsResponse* _this = reinterpret_cast< ListBucketsResponse* >(object);
  (void)_this;
}
void ListBucketsResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListBucketsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListBucketsResponse& ListBucketsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListBucketsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ListBucketsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListBucketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buckets_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListBucketsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListBucketsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.logging.v2.LogBucket buckets = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::LogBucket::_InternalParse;
          object = msg->add_buckets();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListBucketsResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListBucketsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListBucketsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogBucket buckets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListBucketsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListBucketsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListBucketsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListBucketsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListBucketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogBucket buckets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buckets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->buckets(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListBucketsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListBucketsResponse)
}

::google::protobuf::uint8* ListBucketsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListBucketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogBucket buckets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buckets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->buckets(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListBucketsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListBucketsResponse)
  return target;
}

size_t ListBucketsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListBucketsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogBucket buckets = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->buckets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buckets(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBucketsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListBucketsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBucketsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListBucketsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListBucketsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListBucketsResponse)
    MergeFrom(*source);
  }
}

void ListBucketsResponse::MergeFrom(const ListBucketsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListBucketsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buckets_.MergeFrom(from.buckets_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListBucketsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListBucketsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBucketsResponse::CopyFrom(const ListBucketsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListBucketsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBucketsResponse::IsInitialized() const {
  return true;
}

void ListBucketsResponse::Swap(ListBucketsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListBucketsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListBucketsResponse::UnsafeArenaSwap(ListBucketsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListBucketsResponse::InternalSwap(ListBucketsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&buckets_)->InternalSwap(CastToBase(&other->buckets_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListBucketsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateBucketRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_CreateBucketRequest_default_instance_._instance.get_mutable()->bucket_ = const_cast< ::google::logging::v2::LogBucket*>(
      ::google::logging::v2::LogBucket::internal_default_instance());
}
class CreateBucketRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::LogBucket& bucket(const CreateBucketRequest* msg);
};

const ::google::logging::v2::LogBucket&
CreateBucketRequest::HasBitSetters::bucket(const CreateBucketRequest* msg) {
  return *msg->bucket_;
}
void CreateBucketRequest::unsafe_arena_set_allocated_bucket(
    ::google::logging::v2::LogBucket* bucket) {
  if (GetArenaNoVirtual() == nullptr) {
    delete bucket_;
  }
  bucket_ = bucket;
  if (bucket) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.CreateBucketRequest.bucket)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBucketRequest::kParentFieldNumber;
const int CreateBucketRequest::kBucketIdFieldNumber;
const int CreateBucketRequest::kBucketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBucketRequest::CreateBucketRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateBucketRequest)
}
CreateBucketRequest::CreateBucketRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CreateBucketRequest)
}
CreateBucketRequest::CreateBucketRequest(const CreateBucketRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  bucket_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bucket_id().size() > 0) {
    bucket_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_id(),
      GetArenaNoVirtual());
  }
  if (from.has_bucket()) {
    bucket_ = new ::google::logging::v2::LogBucket(*from.bucket_);
  } else {
    bucket_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateBucketRequest)
}

void CreateBucketRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bucket_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bucket_ = nullptr;
}

CreateBucketRequest::~CreateBucketRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateBucketRequest)
  SharedDtor();
}

void CreateBucketRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bucket_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bucket_;
}

void CreateBucketRequest::ArenaDtor(void* object) {
  CreateBucketRequest* _this = reinterpret_cast< CreateBucketRequest* >(object);
  (void)_this;
}
void CreateBucketRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CreateBucketRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateBucketRequest& CreateBucketRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CreateBucketRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  bucket_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && bucket_ != nullptr) {
    delete bucket_;
  }
  bucket_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateBucketRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateBucketRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CreateBucketRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bucket_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CreateBucketRequest.bucket_id");
        object = msg->mutable_bucket_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogBucket bucket = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::LogBucket::_InternalParse;
        object = msg->mutable_bucket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateBucketRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CreateBucketRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateBucketRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bucket_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket_id().data(), static_cast<int>(this->bucket_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateBucketRequest.bucket_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogBucket bucket = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bucket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CreateBucketRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CreateBucketRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateBucketRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CreateBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateBucketRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string bucket_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->bucket_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_id().data(), static_cast<int>(this->bucket_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateBucketRequest.bucket_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bucket_id(), output);
  }

  // .google.logging.v2.LogBucket bucket = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_bucket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::bucket(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.CreateBucketRequest)
}

::google::protobuf::uint8* CreateBucketRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateBucketRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string bucket_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->bucket_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_id().data(), static_cast<int>(this->bucket_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateBucketRequest.bucket_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bucket_id(), target);
  }

  // .google.logging.v2.LogBucket bucket = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_bucket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::bucket(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateBucketRequest)
  return target;
}

size_t CreateBucketRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateBucketRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string bucket_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->bucket_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket_id());
  }

  // .google.logging.v2.LogBucket bucket = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_bucket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bucket_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateBucketRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateBucketRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateBucketRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateBucketRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateBucketRequest)
    MergeFrom(*source);
  }
}

void CreateBucketRequest::MergeFrom(const CreateBucketRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.bucket_id().size() > 0) {
    set_bucket_id(from.bucket_id());
  }
  if (from.has_bucket()) {
    mutable_bucket()->::google::logging::v2::LogBucket::MergeFrom(from.bucket());
  }
}

void CreateBucketRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBucketRequest::CopyFrom(const CreateBucketRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBucketRequest::IsInitialized() const {
  return true;
}

void CreateBucketRequest::Swap(CreateBucketRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateBucketRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void CreateBucketRequest::UnsafeArenaSwap(CreateBucketRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateBucketRequest::InternalSwap(CreateBucketRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bucket_id_.Swap(&other->bucket_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bucket_, other->bucket_);
}

::google::protobuf::Metadata CreateBucketRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateBucketRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateBucketRequest_default_instance_._instance.get_mutable()->bucket_ = const_cast< ::google::logging::v2::LogBucket*>(
      ::google::logging::v2::LogBucket::internal_default_instance());
  ::google::logging::v2::_UpdateBucketRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
class UpdateBucketRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::LogBucket& bucket(const UpdateBucketRequest* msg);
  static const ::google::protobuf::FieldMask& update_mask(const UpdateBucketRequest* msg);
};

const ::google::logging::v2::LogBucket&
UpdateBucketRequest::HasBitSetters::bucket(const UpdateBucketRequest* msg) {
  return *msg->bucket_;
}
const ::google::protobuf::FieldMask&
UpdateBucketRequest::HasBitSetters::update_mask(const UpdateBucketRequest* msg) {
  return *msg->update_mask_;
}
void UpdateBucketRequest::unsafe_arena_set_allocated_bucket(
    ::google::logging::v2::LogBucket* bucket) {
  if (GetArenaNoVirtual() == nullptr) {
    delete bucket_;
  }
  bucket_ = bucket;
  if (bucket) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateBucketRequest.bucket)
}
void UpdateBucketRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateBucketRequest.update_mask)
}
void UpdateBucketRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateBucketRequest::kNameFieldNumber;
const int UpdateBucketRequest::kBucketFieldNumber;
const int UpdateBucketRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateBucketRequest::UpdateBucketRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateBucketRequest)
}
UpdateBucketRequest::UpdateBucketRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateBucketRequest)
}
UpdateBucketRequest::UpdateBucketRequest(const UpdateBucketRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_bucket()) {
    bucket_ = new ::google::logging::v2::LogBucket(*from.bucket_);
  } else {
    bucket_ = nullptr;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateBucketRequest)
}

void UpdateBucketRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bucket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&bucket_)) + sizeof(update_mask_));
}

UpdateBucketRequest::~UpdateBucketRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateBucketRequest)
  SharedDtor();
}

void UpdateBucketRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bucket_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateBucketRequest::ArenaDtor(void* object) {
  UpdateBucketRequest* _this = reinterpret_cast< UpdateBucketRequest* >(object);
  (void)_this;
}
void UpdateBucketRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UpdateBucketRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateBucketRequest& UpdateBucketRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void UpdateBucketRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && bucket_ != nullptr) {
    delete bucket_;
  }
  bucket_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateBucketRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateBucketRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.UpdateBucketRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogBucket bucket = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::LogBucket::_InternalParse;
        object = msg->mutable_bucket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FieldMask::_InternalParse;
        object = msg->mutable_update_mask();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateBucketRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateBucketRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateBucketRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogBucket bucket = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bucket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateBucketRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateBucketRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateBucketRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateBucketRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.logging.v2.LogBucket bucket = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_bucket()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::bucket(this), output);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::update_mask(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateBucketRequest)
}

::google::protobuf::uint8* UpdateBucketRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateBucketRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.logging.v2.LogBucket bucket = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_bucket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::bucket(this), target);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::update_mask(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateBucketRequest)
  return target;
}

size_t UpdateBucketRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateBucketRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.logging.v2.LogBucket bucket = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_bucket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bucket_);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateBucketRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateBucketRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateBucketRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateBucketRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateBucketRequest)
    MergeFrom(*source);
  }
}

void UpdateBucketRequest::MergeFrom(const UpdateBucketRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_bucket()) {
    mutable_bucket()->::google::logging::v2::LogBucket::MergeFrom(from.bucket());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateBucketRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateBucketRequest::CopyFrom(const UpdateBucketRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBucketRequest::IsInitialized() const {
  return true;
}

void UpdateBucketRequest::Swap(UpdateBucketRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateBucketRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void UpdateBucketRequest::UnsafeArenaSwap(UpdateBucketRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateBucketRequest::InternalSwap(UpdateBucketRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bucket_, other->bucket_);
  swap(update_mask_, other->update_mask_);
}

::google::protobuf::Metadata UpdateBucketRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetBucketRequest::InitAsDefaultInstance() {
}
class GetBucketRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBucketRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBucketRequest::GetBucketRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetBucketRequest)
}
GetBucketRequest::GetBucketRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetBucketRequest)
}
GetBucketRequest::GetBucketRequest(const GetBucketRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetBucketRequest)
}

void GetBucketRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBucketRequest::~GetBucketRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetBucketRequest)
  SharedDtor();
}

void GetBucketRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBucketRequest::ArenaDtor(void* object) {
  GetBucketRequest* _this = reinterpret_cast< GetBucketRequest* >(object);
  (void)_this;
}
void GetBucketRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetBucketRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBucketRequest& GetBucketRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void GetBucketRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetBucketRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetBucketRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.GetBucketRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetBucketRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetBucketRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetBucketRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetBucketRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetBucketRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetBucketRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetBucketRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetBucketRequest)
}

::google::protobuf::uint8* GetBucketRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetBucketRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetBucketRequest)
  return target;
}

size_t GetBucketRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetBucketRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBucketRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBucketRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetBucketRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetBucketRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetBucketRequest)
    MergeFrom(*source);
  }
}

void GetBucketRequest::MergeFrom(const GetBucketRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetBucketRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBucketRequest::CopyFrom(const GetBucketRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBucketRequest::IsInitialized() const {
  return true;
}

void GetBucketRequest::Swap(GetBucketRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetBucketRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GetBucketRequest::UnsafeArenaSwap(GetBucketRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetBucketRequest::InternalSwap(GetBucketRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetBucketRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteBucketRequest::InitAsDefaultInstance() {
}
class DeleteBucketRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteBucketRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteBucketRequest::DeleteBucketRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteBucketRequest)
}
DeleteBucketRequest::DeleteBucketRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteBucketRequest)
}
DeleteBucketRequest::DeleteBucketRequest(const DeleteBucketRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteBucketRequest)
}

void DeleteBucketRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteBucketRequest::~DeleteBucketRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteBucketRequest)
  SharedDtor();
}

void DeleteBucketRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteBucketRequest::ArenaDtor(void* object) {
  DeleteBucketRequest* _this = reinterpret_cast< DeleteBucketRequest* >(object);
  (void)_this;
}
void DeleteBucketRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeleteBucketRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteBucketRequest& DeleteBucketRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void DeleteBucketRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteBucketRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteBucketRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.DeleteBucketRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteBucketRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteBucketRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteBucketRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteBucketRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteBucketRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteBucketRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteBucketRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteBucketRequest)
}

::google::protobuf::uint8* DeleteBucketRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteBucketRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteBucketRequest)
  return target;
}

size_t DeleteBucketRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteBucketRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteBucketRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteBucketRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteBucketRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteBucketRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteBucketRequest)
    MergeFrom(*source);
  }
}

void DeleteBucketRequest::MergeFrom(const DeleteBucketRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void DeleteBucketRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBucketRequest::CopyFrom(const DeleteBucketRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBucketRequest::IsInitialized() const {
  return true;
}

void DeleteBucketRequest::Swap(DeleteBucketRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteBucketRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void DeleteBucketRequest::UnsafeArenaSwap(DeleteBucketRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteBucketRequest::InternalSwap(DeleteBucketRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteBucketRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UndeleteBucketRequest::InitAsDefaultInstance() {
}
class UndeleteBucketRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UndeleteBucketRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UndeleteBucketRequest::UndeleteBucketRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UndeleteBucketRequest)
}
UndeleteBucketRequest::UndeleteBucketRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UndeleteBucketRequest)
}
UndeleteBucketRequest::UndeleteBucketRequest(const UndeleteBucketRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UndeleteBucketRequest)
}

void UndeleteBucketRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UndeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UndeleteBucketRequest::~UndeleteBucketRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UndeleteBucketRequest)
  SharedDtor();
}

void UndeleteBucketRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UndeleteBucketRequest::ArenaDtor(void* object) {
  UndeleteBucketRequest* _this = reinterpret_cast< UndeleteBucketRequest* >(object);
  (void)_this;
}
void UndeleteBucketRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UndeleteBucketRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UndeleteBucketRequest& UndeleteBucketRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UndeleteBucketRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void UndeleteBucketRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UndeleteBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UndeleteBucketRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UndeleteBucketRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.UndeleteBucketRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UndeleteBucketRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UndeleteBucketRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UndeleteBucketRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UndeleteBucketRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UndeleteBucketRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UndeleteBucketRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UndeleteBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UndeleteBucketRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UndeleteBucketRequest)
}

::google::protobuf::uint8* UndeleteBucketRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UndeleteBucketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UndeleteBucketRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UndeleteBucketRequest)
  return target;
}

size_t UndeleteBucketRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UndeleteBucketRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UndeleteBucketRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UndeleteBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UndeleteBucketRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UndeleteBucketRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UndeleteBucketRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UndeleteBucketRequest)
    MergeFrom(*source);
  }
}

void UndeleteBucketRequest::MergeFrom(const UndeleteBucketRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UndeleteBucketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void UndeleteBucketRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UndeleteBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UndeleteBucketRequest::CopyFrom(const UndeleteBucketRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UndeleteBucketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteBucketRequest::IsInitialized() const {
  return true;
}

void UndeleteBucketRequest::Swap(UndeleteBucketRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UndeleteBucketRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void UndeleteBucketRequest::UnsafeArenaSwap(UndeleteBucketRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UndeleteBucketRequest::InternalSwap(UndeleteBucketRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UndeleteBucketRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListViewsRequest::InitAsDefaultInstance() {
}
class ListViewsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListViewsRequest::kParentFieldNumber;
const int ListViewsRequest::kPageTokenFieldNumber;
const int ListViewsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListViewsRequest::ListViewsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListViewsRequest)
}
ListViewsRequest::ListViewsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListViewsRequest)
}
ListViewsRequest::ListViewsRequest(const ListViewsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListViewsRequest)
}

void ListViewsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListViewsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListViewsRequest::~ListViewsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListViewsRequest)
  SharedDtor();
}

void ListViewsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListViewsRequest::ArenaDtor(void* object) {
  ListViewsRequest* _this = reinterpret_cast< ListViewsRequest* >(object);
  (void)_this;
}
void ListViewsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListViewsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListViewsRequest& ListViewsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListViewsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ListViewsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListViewsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListViewsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListViewsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListViewsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListViewsRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListViewsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListViewsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListViewsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListViewsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListViewsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListViewsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListViewsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListViewsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListViewsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListViewsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListViewsRequest)
}

::google::protobuf::uint8* ListViewsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListViewsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListViewsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListViewsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListViewsRequest)
  return target;
}

size_t ListViewsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListViewsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListViewsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListViewsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListViewsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListViewsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListViewsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListViewsRequest)
    MergeFrom(*source);
  }
}

void ListViewsRequest::MergeFrom(const ListViewsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListViewsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListViewsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListViewsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListViewsRequest::CopyFrom(const ListViewsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListViewsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListViewsRequest::IsInitialized() const {
  return true;
}

void ListViewsRequest::Swap(ListViewsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListViewsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListViewsRequest::UnsafeArenaSwap(ListViewsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListViewsRequest::InternalSwap(ListViewsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListViewsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListViewsResponse::InitAsDefaultInstance() {
}
class ListViewsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListViewsResponse::kViewsFieldNumber;
const int ListViewsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListViewsResponse::ListViewsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListViewsResponse)
}
ListViewsResponse::ListViewsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  views_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListViewsResponse)
}
ListViewsResponse::ListViewsResponse(const ListViewsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      views_(from.views_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListViewsResponse)
}

void ListViewsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListViewsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListViewsResponse::~ListViewsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListViewsResponse)
  SharedDtor();
}

void ListViewsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListViewsResponse::ArenaDtor(void* object) {
  ListViewsResponse* _this = reinterpret_cast< ListViewsResponse* >(object);
  (void)_this;
}
void ListViewsResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListViewsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListViewsResponse& ListViewsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListViewsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ListViewsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListViewsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  views_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListViewsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListViewsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.logging.v2.LogView views = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::LogView::_InternalParse;
          object = msg->add_views();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListViewsResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListViewsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListViewsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogView views = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_views()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListViewsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListViewsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListViewsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListViewsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListViewsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogView views = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->views_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->views(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListViewsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListViewsResponse)
}

::google::protobuf::uint8* ListViewsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListViewsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogView views = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->views_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->views(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListViewsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListViewsResponse)
  return target;
}

size_t ListViewsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListViewsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogView views = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->views_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->views(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListViewsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListViewsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListViewsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListViewsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListViewsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListViewsResponse)
    MergeFrom(*source);
  }
}

void ListViewsResponse::MergeFrom(const ListViewsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListViewsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  views_.MergeFrom(from.views_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListViewsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListViewsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListViewsResponse::CopyFrom(const ListViewsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListViewsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListViewsResponse::IsInitialized() const {
  return true;
}

void ListViewsResponse::Swap(ListViewsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListViewsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListViewsResponse::UnsafeArenaSwap(ListViewsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListViewsResponse::InternalSwap(ListViewsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&views_)->InternalSwap(CastToBase(&other->views_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListViewsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateViewRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_CreateViewRequest_default_instance_._instance.get_mutable()->view_ = const_cast< ::google::logging::v2::LogView*>(
      ::google::logging::v2::LogView::internal_default_instance());
}
class CreateViewRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::LogView& view(const CreateViewRequest* msg);
};

const ::google::logging::v2::LogView&
CreateViewRequest::HasBitSetters::view(const CreateViewRequest* msg) {
  return *msg->view_;
}
void CreateViewRequest::unsafe_arena_set_allocated_view(
    ::google::logging::v2::LogView* view) {
  if (GetArenaNoVirtual() == nullptr) {
    delete view_;
  }
  view_ = view;
  if (view) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.CreateViewRequest.view)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateViewRequest::kParentFieldNumber;
const int CreateViewRequest::kViewIdFieldNumber;
const int CreateViewRequest::kViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateViewRequest::CreateViewRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateViewRequest)
}
CreateViewRequest::CreateViewRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CreateViewRequest)
}
CreateViewRequest::CreateViewRequest(const CreateViewRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  view_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.view_id().size() > 0) {
    view_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_id(),
      GetArenaNoVirtual());
  }
  if (from.has_view()) {
    view_ = new ::google::logging::v2::LogView(*from.view_);
  } else {
    view_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateViewRequest)
}

void CreateViewRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = nullptr;
}

CreateViewRequest::~CreateViewRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateViewRequest)
  SharedDtor();
}

void CreateViewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete view_;
}

void CreateViewRequest::ArenaDtor(void* object) {
  CreateViewRequest* _this = reinterpret_cast< CreateViewRequest* >(object);
  (void)_this;
}
void CreateViewRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CreateViewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateViewRequest& CreateViewRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CreateViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  view_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && view_ != nullptr) {
    delete view_;
  }
  view_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateViewRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateViewRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CreateViewRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string view_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CreateViewRequest.view_id");
        object = msg->mutable_view_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogView view = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::LogView::_InternalParse;
        object = msg->mutable_view();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateViewRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CreateViewRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateViewRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string view_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_view_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->view_id().data(), static_cast<int>(this->view_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateViewRequest.view_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogView view = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CreateViewRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CreateViewRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateViewRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CreateViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateViewRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string view_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->view_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->view_id().data(), static_cast<int>(this->view_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateViewRequest.view_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->view_id(), output);
  }

  // .google.logging.v2.LogView view = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_view()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::view(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.CreateViewRequest)
}

::google::protobuf::uint8* CreateViewRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateViewRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string view_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->view_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->view_id().data(), static_cast<int>(this->view_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateViewRequest.view_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->view_id(), target);
  }

  // .google.logging.v2.LogView view = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_view()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::view(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateViewRequest)
  return target;
}

size_t CreateViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateViewRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string view_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->view_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->view_id());
  }

  // .google.logging.v2.LogView view = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_view()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *view_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateViewRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateViewRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateViewRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateViewRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateViewRequest)
    MergeFrom(*source);
  }
}

void CreateViewRequest::MergeFrom(const CreateViewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.view_id().size() > 0) {
    set_view_id(from.view_id());
  }
  if (from.has_view()) {
    mutable_view()->::google::logging::v2::LogView::MergeFrom(from.view());
  }
}

void CreateViewRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateViewRequest::CopyFrom(const CreateViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateViewRequest::IsInitialized() const {
  return true;
}

void CreateViewRequest::Swap(CreateViewRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateViewRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void CreateViewRequest::UnsafeArenaSwap(CreateViewRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateViewRequest::InternalSwap(CreateViewRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  view_id_.Swap(&other->view_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(view_, other->view_);
}

::google::protobuf::Metadata CreateViewRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateViewRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateViewRequest_default_instance_._instance.get_mutable()->view_ = const_cast< ::google::logging::v2::LogView*>(
      ::google::logging::v2::LogView::internal_default_instance());
  ::google::logging::v2::_UpdateViewRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
class UpdateViewRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::LogView& view(const UpdateViewRequest* msg);
  static const ::google::protobuf::FieldMask& update_mask(const UpdateViewRequest* msg);
};

const ::google::logging::v2::LogView&
UpdateViewRequest::HasBitSetters::view(const UpdateViewRequest* msg) {
  return *msg->view_;
}
const ::google::protobuf::FieldMask&
UpdateViewRequest::HasBitSetters::update_mask(const UpdateViewRequest* msg) {
  return *msg->update_mask_;
}
void UpdateViewRequest::unsafe_arena_set_allocated_view(
    ::google::logging::v2::LogView* view) {
  if (GetArenaNoVirtual() == nullptr) {
    delete view_;
  }
  view_ = view;
  if (view) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateViewRequest.view)
}
void UpdateViewRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateViewRequest.update_mask)
}
void UpdateViewRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateViewRequest::kNameFieldNumber;
const int UpdateViewRequest::kViewFieldNumber;
const int UpdateViewRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateViewRequest::UpdateViewRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateViewRequest)
}
UpdateViewRequest::UpdateViewRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateViewRequest)
}
UpdateViewRequest::UpdateViewRequest(const UpdateViewRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_view()) {
    view_ = new ::google::logging::v2::LogView(*from.view_);
  } else {
    view_ = nullptr;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateViewRequest)
}

void UpdateViewRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&view_)) + sizeof(update_mask_));
}

UpdateViewRequest::~UpdateViewRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateViewRequest)
  SharedDtor();
}

void UpdateViewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete view_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateViewRequest::ArenaDtor(void* object) {
  UpdateViewRequest* _this = reinterpret_cast< UpdateViewRequest* >(object);
  (void)_this;
}
void UpdateViewRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UpdateViewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateViewRequest& UpdateViewRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void UpdateViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && view_ != nullptr) {
    delete view_;
  }
  view_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateViewRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateViewRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.UpdateViewRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogView view = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::LogView::_InternalParse;
        object = msg->mutable_view();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FieldMask::_InternalParse;
        object = msg->mutable_update_mask();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateViewRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateViewRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateViewRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogView view = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateViewRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateViewRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateViewRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateViewRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.logging.v2.LogView view = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_view()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::view(this), output);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::update_mask(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateViewRequest)
}

::google::protobuf::uint8* UpdateViewRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateViewRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.logging.v2.LogView view = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_view()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::view(this), target);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::update_mask(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateViewRequest)
  return target;
}

size_t UpdateViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateViewRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.logging.v2.LogView view = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_view()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *view_);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateViewRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateViewRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateViewRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateViewRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateViewRequest)
    MergeFrom(*source);
  }
}

void UpdateViewRequest::MergeFrom(const UpdateViewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_view()) {
    mutable_view()->::google::logging::v2::LogView::MergeFrom(from.view());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateViewRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateViewRequest::CopyFrom(const UpdateViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateViewRequest::IsInitialized() const {
  return true;
}

void UpdateViewRequest::Swap(UpdateViewRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateViewRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void UpdateViewRequest::UnsafeArenaSwap(UpdateViewRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateViewRequest::InternalSwap(UpdateViewRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(view_, other->view_);
  swap(update_mask_, other->update_mask_);
}

::google::protobuf::Metadata UpdateViewRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetViewRequest::InitAsDefaultInstance() {
}
class GetViewRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetViewRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetViewRequest::GetViewRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetViewRequest)
}
GetViewRequest::GetViewRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetViewRequest)
}
GetViewRequest::GetViewRequest(const GetViewRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetViewRequest)
}

void GetViewRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetViewRequest::~GetViewRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetViewRequest)
  SharedDtor();
}

void GetViewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetViewRequest::ArenaDtor(void* object) {
  GetViewRequest* _this = reinterpret_cast< GetViewRequest* >(object);
  (void)_this;
}
void GetViewRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetViewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetViewRequest& GetViewRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void GetViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetViewRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetViewRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.GetViewRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetViewRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetViewRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetViewRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetViewRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetViewRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetViewRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetViewRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetViewRequest)
}

::google::protobuf::uint8* GetViewRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetViewRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetViewRequest)
  return target;
}

size_t GetViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetViewRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetViewRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetViewRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetViewRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetViewRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetViewRequest)
    MergeFrom(*source);
  }
}

void GetViewRequest::MergeFrom(const GetViewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetViewRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetViewRequest::CopyFrom(const GetViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetViewRequest::IsInitialized() const {
  return true;
}

void GetViewRequest::Swap(GetViewRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetViewRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GetViewRequest::UnsafeArenaSwap(GetViewRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetViewRequest::InternalSwap(GetViewRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetViewRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteViewRequest::InitAsDefaultInstance() {
}
class DeleteViewRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteViewRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteViewRequest::DeleteViewRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteViewRequest)
}
DeleteViewRequest::DeleteViewRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteViewRequest)
}
DeleteViewRequest::DeleteViewRequest(const DeleteViewRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteViewRequest)
}

void DeleteViewRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteViewRequest::~DeleteViewRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteViewRequest)
  SharedDtor();
}

void DeleteViewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteViewRequest::ArenaDtor(void* object) {
  DeleteViewRequest* _this = reinterpret_cast< DeleteViewRequest* >(object);
  (void)_this;
}
void DeleteViewRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeleteViewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteViewRequest& DeleteViewRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteViewRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void DeleteViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteViewRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteViewRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.DeleteViewRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteViewRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteViewRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteViewRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteViewRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteViewRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteViewRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteViewRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteViewRequest)
}

::google::protobuf::uint8* DeleteViewRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteViewRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteViewRequest)
  return target;
}

size_t DeleteViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteViewRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteViewRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteViewRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteViewRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteViewRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteViewRequest)
    MergeFrom(*source);
  }
}

void DeleteViewRequest::MergeFrom(const DeleteViewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void DeleteViewRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteViewRequest::CopyFrom(const DeleteViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteViewRequest::IsInitialized() const {
  return true;
}

void DeleteViewRequest::Swap(DeleteViewRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteViewRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void DeleteViewRequest::UnsafeArenaSwap(DeleteViewRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteViewRequest::InternalSwap(DeleteViewRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteViewRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListSinksRequest::InitAsDefaultInstance() {
}
class ListSinksRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSinksRequest::kParentFieldNumber;
const int ListSinksRequest::kPageTokenFieldNumber;
const int ListSinksRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSinksRequest::ListSinksRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListSinksRequest)
}
ListSinksRequest::ListSinksRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListSinksRequest)
}
ListSinksRequest::ListSinksRequest(const ListSinksRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListSinksRequest)
}

void ListSinksRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListSinksRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListSinksRequest::~ListSinksRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListSinksRequest)
  SharedDtor();
}

void ListSinksRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListSinksRequest::ArenaDtor(void* object) {
  ListSinksRequest* _this = reinterpret_cast< ListSinksRequest* >(object);
  (void)_this;
}
void ListSinksRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListSinksRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSinksRequest& ListSinksRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListSinksRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ListSinksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListSinksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSinksRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListSinksRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListSinksRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListSinksRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSinksRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListSinksRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListSinksRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListSinksRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListSinksRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListSinksRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSinksRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListSinksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListSinksRequest)
}

::google::protobuf::uint8* ListSinksRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListSinksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListSinksRequest)
  return target;
}

size_t ListSinksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListSinksRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSinksRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListSinksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSinksRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListSinksRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListSinksRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListSinksRequest)
    MergeFrom(*source);
  }
}

void ListSinksRequest::MergeFrom(const ListSinksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListSinksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListSinksRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListSinksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSinksRequest::CopyFrom(const ListSinksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListSinksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSinksRequest::IsInitialized() const {
  return true;
}

void ListSinksRequest::Swap(ListSinksRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListSinksRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListSinksRequest::UnsafeArenaSwap(ListSinksRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListSinksRequest::InternalSwap(ListSinksRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListSinksRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListSinksResponse::InitAsDefaultInstance() {
}
class ListSinksResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSinksResponse::kSinksFieldNumber;
const int ListSinksResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSinksResponse::ListSinksResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListSinksResponse)
}
ListSinksResponse::ListSinksResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  sinks_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListSinksResponse)
}
ListSinksResponse::ListSinksResponse(const ListSinksResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      sinks_(from.sinks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListSinksResponse)
}

void ListSinksResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListSinksResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListSinksResponse::~ListSinksResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListSinksResponse)
  SharedDtor();
}

void ListSinksResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListSinksResponse::ArenaDtor(void* object) {
  ListSinksResponse* _this = reinterpret_cast< ListSinksResponse* >(object);
  (void)_this;
}
void ListSinksResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListSinksResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSinksResponse& ListSinksResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListSinksResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ListSinksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListSinksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sinks_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSinksResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListSinksResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.logging.v2.LogSink sinks = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::LogSink::_InternalParse;
          object = msg->add_sinks();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListSinksResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSinksResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListSinksResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogSink sinks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sinks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListSinksResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListSinksResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListSinksResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSinksResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListSinksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogSink sinks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sinks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sinks(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListSinksResponse)
}

::google::protobuf::uint8* ListSinksResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListSinksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogSink sinks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sinks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sinks(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListSinksResponse)
  return target;
}

size_t ListSinksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListSinksResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogSink sinks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sinks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sinks(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSinksResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListSinksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSinksResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListSinksResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListSinksResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListSinksResponse)
    MergeFrom(*source);
  }
}

void ListSinksResponse::MergeFrom(const ListSinksResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListSinksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sinks_.MergeFrom(from.sinks_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListSinksResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListSinksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSinksResponse::CopyFrom(const ListSinksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListSinksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSinksResponse::IsInitialized() const {
  return true;
}

void ListSinksResponse::Swap(ListSinksResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListSinksResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListSinksResponse::UnsafeArenaSwap(ListSinksResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListSinksResponse::InternalSwap(ListSinksResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&sinks_)->InternalSwap(CastToBase(&other->sinks_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListSinksResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetSinkRequest::InitAsDefaultInstance() {
}
class GetSinkRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSinkRequest::kSinkNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSinkRequest::GetSinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetSinkRequest)
}
GetSinkRequest::GetSinkRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetSinkRequest)
}
GetSinkRequest::GetSinkRequest(const GetSinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sink_name().size() > 0) {
    sink_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sink_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetSinkRequest)
}

void GetSinkRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetSinkRequest::~GetSinkRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetSinkRequest)
  SharedDtor();
}

void GetSinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  sink_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSinkRequest::ArenaDtor(void* object) {
  GetSinkRequest* _this = reinterpret_cast< GetSinkRequest* >(object);
  (void)_this;
}
void GetSinkRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetSinkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSinkRequest& GetSinkRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void GetSinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sink_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetSinkRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetSinkRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.GetSinkRequest.sink_name");
        object = msg->mutable_sink_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetSinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetSinkRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sink_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sink_name().data(), static_cast<int>(this->sink_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetSinkRequest.sink_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetSinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetSinkRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetSinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetSinkRequest.sink_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sink_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetSinkRequest)
}

::google::protobuf::uint8* GetSinkRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetSinkRequest.sink_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sink_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetSinkRequest)
  return target;
}

size_t GetSinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetSinkRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sink_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSinkRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetSinkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetSinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetSinkRequest)
    MergeFrom(*source);
  }
}

void GetSinkRequest::MergeFrom(const GetSinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sink_name().size() > 0) {
    set_sink_name(from.sink_name());
  }
}

void GetSinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSinkRequest::CopyFrom(const GetSinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSinkRequest::IsInitialized() const {
  return true;
}

void GetSinkRequest::Swap(GetSinkRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetSinkRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GetSinkRequest::UnsafeArenaSwap(GetSinkRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetSinkRequest::InternalSwap(GetSinkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sink_name_.Swap(&other->sink_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetSinkRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateSinkRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_CreateSinkRequest_default_instance_._instance.get_mutable()->sink_ = const_cast< ::google::logging::v2::LogSink*>(
      ::google::logging::v2::LogSink::internal_default_instance());
}
class CreateSinkRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::LogSink& sink(const CreateSinkRequest* msg);
};

const ::google::logging::v2::LogSink&
CreateSinkRequest::HasBitSetters::sink(const CreateSinkRequest* msg) {
  return *msg->sink_;
}
void CreateSinkRequest::unsafe_arena_set_allocated_sink(
    ::google::logging::v2::LogSink* sink) {
  if (GetArenaNoVirtual() == nullptr) {
    delete sink_;
  }
  sink_ = sink;
  if (sink) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.CreateSinkRequest.sink)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateSinkRequest::kParentFieldNumber;
const int CreateSinkRequest::kSinkFieldNumber;
const int CreateSinkRequest::kUniqueWriterIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateSinkRequest::CreateSinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateSinkRequest)
}
CreateSinkRequest::CreateSinkRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CreateSinkRequest)
}
CreateSinkRequest::CreateSinkRequest(const CreateSinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  if (from.has_sink()) {
    sink_ = new ::google::logging::v2::LogSink(*from.sink_);
  } else {
    sink_ = nullptr;
  }
  unique_writer_identity_ = from.unique_writer_identity_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateSinkRequest)
}

void CreateSinkRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sink_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_writer_identity_) -
      reinterpret_cast<char*>(&sink_)) + sizeof(unique_writer_identity_));
}

CreateSinkRequest::~CreateSinkRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateSinkRequest)
  SharedDtor();
}

void CreateSinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sink_;
}

void CreateSinkRequest::ArenaDtor(void* object) {
  CreateSinkRequest* _this = reinterpret_cast< CreateSinkRequest* >(object);
  (void)_this;
}
void CreateSinkRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CreateSinkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateSinkRequest& CreateSinkRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CreateSinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && sink_ != nullptr) {
    delete sink_;
  }
  sink_ = nullptr;
  unique_writer_identity_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateSinkRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateSinkRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CreateSinkRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::LogSink::_InternalParse;
        object = msg->mutable_sink();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_unique_writer_identity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateSinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CreateSinkRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateSinkRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sink()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unique_writer_identity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CreateSinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CreateSinkRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateSinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CreateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateSinkRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_sink()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::sink(this), output);
  }

  // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->unique_writer_identity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->unique_writer_identity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.CreateSinkRequest)
}

::google::protobuf::uint8* CreateSinkRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateSinkRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_sink()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::sink(this), target);
  }

  // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->unique_writer_identity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->unique_writer_identity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateSinkRequest)
  return target;
}

size_t CreateSinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateSinkRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_sink()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sink_);
  }

  // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->unique_writer_identity() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSinkRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateSinkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateSinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateSinkRequest)
    MergeFrom(*source);
  }
}

void CreateSinkRequest::MergeFrom(const CreateSinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.has_sink()) {
    mutable_sink()->::google::logging::v2::LogSink::MergeFrom(from.sink());
  }
  if (from.unique_writer_identity() != 0) {
    set_unique_writer_identity(from.unique_writer_identity());
  }
}

void CreateSinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSinkRequest::CopyFrom(const CreateSinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSinkRequest::IsInitialized() const {
  return true;
}

void CreateSinkRequest::Swap(CreateSinkRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateSinkRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void CreateSinkRequest::UnsafeArenaSwap(CreateSinkRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateSinkRequest::InternalSwap(CreateSinkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sink_, other->sink_);
  swap(unique_writer_identity_, other->unique_writer_identity_);
}

::google::protobuf::Metadata CreateSinkRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateSinkRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateSinkRequest_default_instance_._instance.get_mutable()->sink_ = const_cast< ::google::logging::v2::LogSink*>(
      ::google::logging::v2::LogSink::internal_default_instance());
  ::google::logging::v2::_UpdateSinkRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
class UpdateSinkRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::LogSink& sink(const UpdateSinkRequest* msg);
  static const ::google::protobuf::FieldMask& update_mask(const UpdateSinkRequest* msg);
};

const ::google::logging::v2::LogSink&
UpdateSinkRequest::HasBitSetters::sink(const UpdateSinkRequest* msg) {
  return *msg->sink_;
}
const ::google::protobuf::FieldMask&
UpdateSinkRequest::HasBitSetters::update_mask(const UpdateSinkRequest* msg) {
  return *msg->update_mask_;
}
void UpdateSinkRequest::unsafe_arena_set_allocated_sink(
    ::google::logging::v2::LogSink* sink) {
  if (GetArenaNoVirtual() == nullptr) {
    delete sink_;
  }
  sink_ = sink;
  if (sink) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateSinkRequest.sink)
}
void UpdateSinkRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateSinkRequest.update_mask)
}
void UpdateSinkRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSinkRequest::kSinkNameFieldNumber;
const int UpdateSinkRequest::kSinkFieldNumber;
const int UpdateSinkRequest::kUniqueWriterIdentityFieldNumber;
const int UpdateSinkRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSinkRequest::UpdateSinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateSinkRequest)
}
UpdateSinkRequest::UpdateSinkRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateSinkRequest)
}
UpdateSinkRequest::UpdateSinkRequest(const UpdateSinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sink_name().size() > 0) {
    sink_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sink_name(),
      GetArenaNoVirtual());
  }
  if (from.has_sink()) {
    sink_ = new ::google::logging::v2::LogSink(*from.sink_);
  } else {
    sink_ = nullptr;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  unique_writer_identity_ = from.unique_writer_identity_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateSinkRequest)
}

void UpdateSinkRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sink_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_writer_identity_) -
      reinterpret_cast<char*>(&sink_)) + sizeof(unique_writer_identity_));
}

UpdateSinkRequest::~UpdateSinkRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateSinkRequest)
  SharedDtor();
}

void UpdateSinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  sink_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sink_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateSinkRequest::ArenaDtor(void* object) {
  UpdateSinkRequest* _this = reinterpret_cast< UpdateSinkRequest* >(object);
  (void)_this;
}
void UpdateSinkRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UpdateSinkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateSinkRequest& UpdateSinkRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void UpdateSinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sink_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && sink_ != nullptr) {
    delete sink_;
  }
  sink_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  unique_writer_identity_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateSinkRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateSinkRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.UpdateSinkRequest.sink_name");
        object = msg->mutable_sink_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::LogSink::_InternalParse;
        object = msg->mutable_sink();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_unique_writer_identity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FieldMask::_InternalParse;
        object = msg->mutable_update_mask();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateSinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateSinkRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sink_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sink_name().data(), static_cast<int>(this->sink_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateSinkRequest.sink_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sink()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unique_writer_identity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateSinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateSinkRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateSinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateSinkRequest.sink_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sink_name(), output);
  }

  // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_sink()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::sink(this), output);
  }

  // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->unique_writer_identity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->unique_writer_identity(), output);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::update_mask(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateSinkRequest)
}

::google::protobuf::uint8* UpdateSinkRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateSinkRequest.sink_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sink_name(), target);
  }

  // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_sink()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::sink(this), target);
  }

  // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->unique_writer_identity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->unique_writer_identity(), target);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::update_mask(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateSinkRequest)
  return target;
}

size_t UpdateSinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateSinkRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sink_name());
  }

  // .google.logging.v2.LogSink sink = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_sink()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sink_);
  }

  // .google.protobuf.FieldMask update_mask = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  // bool unique_writer_identity = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->unique_writer_identity() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSinkRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateSinkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateSinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateSinkRequest)
    MergeFrom(*source);
  }
}

void UpdateSinkRequest::MergeFrom(const UpdateSinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sink_name().size() > 0) {
    set_sink_name(from.sink_name());
  }
  if (from.has_sink()) {
    mutable_sink()->::google::logging::v2::LogSink::MergeFrom(from.sink());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
  if (from.unique_writer_identity() != 0) {
    set_unique_writer_identity(from.unique_writer_identity());
  }
}

void UpdateSinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSinkRequest::CopyFrom(const UpdateSinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSinkRequest::IsInitialized() const {
  return true;
}

void UpdateSinkRequest::Swap(UpdateSinkRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateSinkRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void UpdateSinkRequest::UnsafeArenaSwap(UpdateSinkRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateSinkRequest::InternalSwap(UpdateSinkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sink_name_.Swap(&other->sink_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sink_, other->sink_);
  swap(update_mask_, other->update_mask_);
  swap(unique_writer_identity_, other->unique_writer_identity_);
}

::google::protobuf::Metadata UpdateSinkRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteSinkRequest::InitAsDefaultInstance() {
}
class DeleteSinkRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSinkRequest::kSinkNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSinkRequest::DeleteSinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteSinkRequest)
}
DeleteSinkRequest::DeleteSinkRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteSinkRequest)
}
DeleteSinkRequest::DeleteSinkRequest(const DeleteSinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sink_name().size() > 0) {
    sink_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sink_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteSinkRequest)
}

void DeleteSinkRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteSinkRequest::~DeleteSinkRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteSinkRequest)
  SharedDtor();
}

void DeleteSinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  sink_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteSinkRequest::ArenaDtor(void* object) {
  DeleteSinkRequest* _this = reinterpret_cast< DeleteSinkRequest* >(object);
  (void)_this;
}
void DeleteSinkRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeleteSinkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteSinkRequest& DeleteSinkRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteSinkRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void DeleteSinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sink_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteSinkRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteSinkRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.DeleteSinkRequest.sink_name");
        object = msg->mutable_sink_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteSinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteSinkRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sink_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sink_name().data(), static_cast<int>(this->sink_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteSinkRequest.sink_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteSinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteSinkRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteSinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteSinkRequest.sink_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sink_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteSinkRequest)
}

::google::protobuf::uint8* DeleteSinkRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteSinkRequest.sink_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sink_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteSinkRequest)
  return target;
}

size_t DeleteSinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteSinkRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sink_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->sink_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sink_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSinkRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteSinkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteSinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteSinkRequest)
    MergeFrom(*source);
  }
}

void DeleteSinkRequest::MergeFrom(const DeleteSinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sink_name().size() > 0) {
    set_sink_name(from.sink_name());
  }
}

void DeleteSinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSinkRequest::CopyFrom(const DeleteSinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSinkRequest::IsInitialized() const {
  return true;
}

void DeleteSinkRequest::Swap(DeleteSinkRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteSinkRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void DeleteSinkRequest::UnsafeArenaSwap(DeleteSinkRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteSinkRequest::InternalSwap(DeleteSinkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sink_name_.Swap(&other->sink_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteSinkRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogExclusion::InitAsDefaultInstance() {
  ::google::logging::v2::_LogExclusion_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::logging::v2::_LogExclusion_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class LogExclusion::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const LogExclusion* msg);
  static const ::google::protobuf::Timestamp& update_time(const LogExclusion* msg);
};

const ::google::protobuf::Timestamp&
LogExclusion::HasBitSetters::create_time(const LogExclusion* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
LogExclusion::HasBitSetters::update_time(const LogExclusion* msg) {
  return *msg->update_time_;
}
void LogExclusion::unsafe_arena_set_allocated_create_time(
    ::google::protobuf::Timestamp* create_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete create_time_;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogExclusion.create_time)
}
void LogExclusion::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void LogExclusion::unsafe_arena_set_allocated_update_time(
    ::google::protobuf::Timestamp* update_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_time_;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogExclusion.update_time)
}
void LogExclusion::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogExclusion::kNameFieldNumber;
const int LogExclusion::kDescriptionFieldNumber;
const int LogExclusion::kFilterFieldNumber;
const int LogExclusion::kDisabledFieldNumber;
const int LogExclusion::kCreateTimeFieldNumber;
const int LogExclusion::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogExclusion::LogExclusion()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogExclusion)
}
LogExclusion::LogExclusion(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.LogExclusion)
}
LogExclusion::LogExclusion(const LogExclusion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogExclusion)
}

void LogExclusion::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disabled_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(disabled_));
}

LogExclusion::~LogExclusion() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogExclusion)
  SharedDtor();
}

void LogExclusion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void LogExclusion::ArenaDtor(void* object) {
  LogExclusion* _this = reinterpret_cast< LogExclusion* >(object);
  (void)_this;
}
void LogExclusion::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void LogExclusion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogExclusion& LogExclusion::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogExclusion_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void LogExclusion::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogExclusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  disabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogExclusion::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogExclusion*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogExclusion.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogExclusion.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filter = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.LogExclusion.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool disabled = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_disabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.protobuf.Timestamp create_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogExclusion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.LogExclusion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogExclusion.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogExclusion.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogExclusion.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.LogExclusion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.LogExclusion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogExclusion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.LogExclusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string filter = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filter(), output);
  }

  // bool disabled = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->disabled(), output);
  }

  // .google.protobuf.Timestamp create_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::update_time(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.LogExclusion)
}

::google::protobuf::uint8* LogExclusion::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogExclusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string filter = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filter(), target);
  }

  // bool disabled = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->disabled(), target);
  }

  // .google.protobuf.Timestamp create_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::update_time(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogExclusion)
  return target;
}

size_t LogExclusion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogExclusion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string filter = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // .google.protobuf.Timestamp create_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // bool disabled = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogExclusion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogExclusion)
  GOOGLE_DCHECK_NE(&from, this);
  const LogExclusion* source =
      ::google::protobuf::DynamicCastToGenerated<LogExclusion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogExclusion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogExclusion)
    MergeFrom(*source);
  }
}

void LogExclusion::MergeFrom(const LogExclusion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogExclusion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void LogExclusion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogExclusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogExclusion::CopyFrom(const LogExclusion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogExclusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogExclusion::IsInitialized() const {
  return true;
}

void LogExclusion::Swap(LogExclusion* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogExclusion* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void LogExclusion::UnsafeArenaSwap(LogExclusion* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogExclusion::InternalSwap(LogExclusion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(disabled_, other->disabled_);
}

::google::protobuf::Metadata LogExclusion::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListExclusionsRequest::InitAsDefaultInstance() {
}
class ListExclusionsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListExclusionsRequest::kParentFieldNumber;
const int ListExclusionsRequest::kPageTokenFieldNumber;
const int ListExclusionsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListExclusionsRequest::ListExclusionsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListExclusionsRequest)
}
ListExclusionsRequest::ListExclusionsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListExclusionsRequest)
}
ListExclusionsRequest::ListExclusionsRequest(const ListExclusionsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListExclusionsRequest)
}

void ListExclusionsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListExclusionsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListExclusionsRequest::~ListExclusionsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListExclusionsRequest)
  SharedDtor();
}

void ListExclusionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListExclusionsRequest::ArenaDtor(void* object) {
  ListExclusionsRequest* _this = reinterpret_cast< ListExclusionsRequest* >(object);
  (void)_this;
}
void ListExclusionsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListExclusionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListExclusionsRequest& ListExclusionsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListExclusionsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ListExclusionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListExclusionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListExclusionsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListExclusionsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListExclusionsRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListExclusionsRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListExclusionsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListExclusionsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListExclusionsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListExclusionsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListExclusionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListExclusionsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListExclusionsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListExclusionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListExclusionsRequest)
}

::google::protobuf::uint8* ListExclusionsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListExclusionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListExclusionsRequest)
  return target;
}

size_t ListExclusionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListExclusionsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListExclusionsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListExclusionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListExclusionsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListExclusionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListExclusionsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListExclusionsRequest)
    MergeFrom(*source);
  }
}

void ListExclusionsRequest::MergeFrom(const ListExclusionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListExclusionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListExclusionsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListExclusionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListExclusionsRequest::CopyFrom(const ListExclusionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListExclusionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListExclusionsRequest::IsInitialized() const {
  return true;
}

void ListExclusionsRequest::Swap(ListExclusionsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListExclusionsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListExclusionsRequest::UnsafeArenaSwap(ListExclusionsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListExclusionsRequest::InternalSwap(ListExclusionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListExclusionsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListExclusionsResponse::InitAsDefaultInstance() {
}
class ListExclusionsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListExclusionsResponse::kExclusionsFieldNumber;
const int ListExclusionsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListExclusionsResponse::ListExclusionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListExclusionsResponse)
}
ListExclusionsResponse::ListExclusionsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  exclusions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListExclusionsResponse)
}
ListExclusionsResponse::ListExclusionsResponse(const ListExclusionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      exclusions_(from.exclusions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListExclusionsResponse)
}

void ListExclusionsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListExclusionsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListExclusionsResponse::~ListExclusionsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListExclusionsResponse)
  SharedDtor();
}

void ListExclusionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListExclusionsResponse::ArenaDtor(void* object) {
  ListExclusionsResponse* _this = reinterpret_cast< ListExclusionsResponse* >(object);
  (void)_this;
}
void ListExclusionsResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListExclusionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListExclusionsResponse& ListExclusionsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListExclusionsResponse_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ListExclusionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListExclusionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exclusions_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListExclusionsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListExclusionsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.logging.v2.LogExclusion exclusions = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::logging::v2::LogExclusion::_InternalParse;
          object = msg->add_exclusions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.ListExclusionsResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListExclusionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListExclusionsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogExclusion exclusions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_exclusions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListExclusionsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListExclusionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListExclusionsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListExclusionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListExclusionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogExclusion exclusions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exclusions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->exclusions(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListExclusionsResponse)
}

::google::protobuf::uint8* ListExclusionsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListExclusionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogExclusion exclusions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exclusions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->exclusions(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListExclusionsResponse)
  return target;
}

size_t ListExclusionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListExclusionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogExclusion exclusions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->exclusions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exclusions(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListExclusionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListExclusionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListExclusionsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListExclusionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListExclusionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListExclusionsResponse)
    MergeFrom(*source);
  }
}

void ListExclusionsResponse::MergeFrom(const ListExclusionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListExclusionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exclusions_.MergeFrom(from.exclusions_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListExclusionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListExclusionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListExclusionsResponse::CopyFrom(const ListExclusionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListExclusionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListExclusionsResponse::IsInitialized() const {
  return true;
}

void ListExclusionsResponse::Swap(ListExclusionsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListExclusionsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListExclusionsResponse::UnsafeArenaSwap(ListExclusionsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListExclusionsResponse::InternalSwap(ListExclusionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&exclusions_)->InternalSwap(CastToBase(&other->exclusions_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListExclusionsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetExclusionRequest::InitAsDefaultInstance() {
}
class GetExclusionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetExclusionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetExclusionRequest::GetExclusionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetExclusionRequest)
}
GetExclusionRequest::GetExclusionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetExclusionRequest)
}
GetExclusionRequest::GetExclusionRequest(const GetExclusionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetExclusionRequest)
}

void GetExclusionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetExclusionRequest::~GetExclusionRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetExclusionRequest)
  SharedDtor();
}

void GetExclusionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetExclusionRequest::ArenaDtor(void* object) {
  GetExclusionRequest* _this = reinterpret_cast< GetExclusionRequest* >(object);
  (void)_this;
}
void GetExclusionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetExclusionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetExclusionRequest& GetExclusionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void GetExclusionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetExclusionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetExclusionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.GetExclusionRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetExclusionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetExclusionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetExclusionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetExclusionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetExclusionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetExclusionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetExclusionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetExclusionRequest)
}

::google::protobuf::uint8* GetExclusionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetExclusionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetExclusionRequest)
  return target;
}

size_t GetExclusionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetExclusionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetExclusionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetExclusionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetExclusionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetExclusionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetExclusionRequest)
    MergeFrom(*source);
  }
}

void GetExclusionRequest::MergeFrom(const GetExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetExclusionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetExclusionRequest::CopyFrom(const GetExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExclusionRequest::IsInitialized() const {
  return true;
}

void GetExclusionRequest::Swap(GetExclusionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetExclusionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GetExclusionRequest::UnsafeArenaSwap(GetExclusionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetExclusionRequest::InternalSwap(GetExclusionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetExclusionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateExclusionRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_CreateExclusionRequest_default_instance_._instance.get_mutable()->exclusion_ = const_cast< ::google::logging::v2::LogExclusion*>(
      ::google::logging::v2::LogExclusion::internal_default_instance());
}
class CreateExclusionRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::LogExclusion& exclusion(const CreateExclusionRequest* msg);
};

const ::google::logging::v2::LogExclusion&
CreateExclusionRequest::HasBitSetters::exclusion(const CreateExclusionRequest* msg) {
  return *msg->exclusion_;
}
void CreateExclusionRequest::unsafe_arena_set_allocated_exclusion(
    ::google::logging::v2::LogExclusion* exclusion) {
  if (GetArenaNoVirtual() == nullptr) {
    delete exclusion_;
  }
  exclusion_ = exclusion;
  if (exclusion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.CreateExclusionRequest.exclusion)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateExclusionRequest::kParentFieldNumber;
const int CreateExclusionRequest::kExclusionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateExclusionRequest::CreateExclusionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateExclusionRequest)
}
CreateExclusionRequest::CreateExclusionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CreateExclusionRequest)
}
CreateExclusionRequest::CreateExclusionRequest(const CreateExclusionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  if (from.has_exclusion()) {
    exclusion_ = new ::google::logging::v2::LogExclusion(*from.exclusion_);
  } else {
    exclusion_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateExclusionRequest)
}

void CreateExclusionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exclusion_ = nullptr;
}

CreateExclusionRequest::~CreateExclusionRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateExclusionRequest)
  SharedDtor();
}

void CreateExclusionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete exclusion_;
}

void CreateExclusionRequest::ArenaDtor(void* object) {
  CreateExclusionRequest* _this = reinterpret_cast< CreateExclusionRequest* >(object);
  (void)_this;
}
void CreateExclusionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CreateExclusionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateExclusionRequest& CreateExclusionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CreateExclusionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && exclusion_ != nullptr) {
    delete exclusion_;
  }
  exclusion_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateExclusionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateExclusionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CreateExclusionRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::LogExclusion::_InternalParse;
        object = msg->mutable_exclusion();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateExclusionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CreateExclusionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateExclusionRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exclusion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CreateExclusionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CreateExclusionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateExclusionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CreateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateExclusionRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_exclusion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::exclusion(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.CreateExclusionRequest)
}

::google::protobuf::uint8* CreateExclusionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateExclusionRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_exclusion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::exclusion(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateExclusionRequest)
  return target;
}

size_t CreateExclusionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateExclusionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_exclusion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exclusion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateExclusionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateExclusionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateExclusionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateExclusionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateExclusionRequest)
    MergeFrom(*source);
  }
}

void CreateExclusionRequest::MergeFrom(const CreateExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.has_exclusion()) {
    mutable_exclusion()->::google::logging::v2::LogExclusion::MergeFrom(from.exclusion());
  }
}

void CreateExclusionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateExclusionRequest::CopyFrom(const CreateExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateExclusionRequest::IsInitialized() const {
  return true;
}

void CreateExclusionRequest::Swap(CreateExclusionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateExclusionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void CreateExclusionRequest::UnsafeArenaSwap(CreateExclusionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateExclusionRequest::InternalSwap(CreateExclusionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(exclusion_, other->exclusion_);
}

::google::protobuf::Metadata CreateExclusionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateExclusionRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateExclusionRequest_default_instance_._instance.get_mutable()->exclusion_ = const_cast< ::google::logging::v2::LogExclusion*>(
      ::google::logging::v2::LogExclusion::internal_default_instance());
  ::google::logging::v2::_UpdateExclusionRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
class UpdateExclusionRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::LogExclusion& exclusion(const UpdateExclusionRequest* msg);
  static const ::google::protobuf::FieldMask& update_mask(const UpdateExclusionRequest* msg);
};

const ::google::logging::v2::LogExclusion&
UpdateExclusionRequest::HasBitSetters::exclusion(const UpdateExclusionRequest* msg) {
  return *msg->exclusion_;
}
const ::google::protobuf::FieldMask&
UpdateExclusionRequest::HasBitSetters::update_mask(const UpdateExclusionRequest* msg) {
  return *msg->update_mask_;
}
void UpdateExclusionRequest::unsafe_arena_set_allocated_exclusion(
    ::google::logging::v2::LogExclusion* exclusion) {
  if (GetArenaNoVirtual() == nullptr) {
    delete exclusion_;
  }
  exclusion_ = exclusion;
  if (exclusion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateExclusionRequest.exclusion)
}
void UpdateExclusionRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateExclusionRequest.update_mask)
}
void UpdateExclusionRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateExclusionRequest::kNameFieldNumber;
const int UpdateExclusionRequest::kExclusionFieldNumber;
const int UpdateExclusionRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateExclusionRequest::UpdateExclusionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateExclusionRequest)
}
UpdateExclusionRequest::UpdateExclusionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateExclusionRequest)
}
UpdateExclusionRequest::UpdateExclusionRequest(const UpdateExclusionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_exclusion()) {
    exclusion_ = new ::google::logging::v2::LogExclusion(*from.exclusion_);
  } else {
    exclusion_ = nullptr;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateExclusionRequest)
}

void UpdateExclusionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exclusion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&exclusion_)) + sizeof(update_mask_));
}

UpdateExclusionRequest::~UpdateExclusionRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateExclusionRequest)
  SharedDtor();
}

void UpdateExclusionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete exclusion_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateExclusionRequest::ArenaDtor(void* object) {
  UpdateExclusionRequest* _this = reinterpret_cast< UpdateExclusionRequest* >(object);
  (void)_this;
}
void UpdateExclusionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UpdateExclusionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateExclusionRequest& UpdateExclusionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void UpdateExclusionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && exclusion_ != nullptr) {
    delete exclusion_;
  }
  exclusion_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateExclusionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateExclusionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.UpdateExclusionRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::LogExclusion::_InternalParse;
        object = msg->mutable_exclusion();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FieldMask::_InternalParse;
        object = msg->mutable_update_mask();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateExclusionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateExclusionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateExclusionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exclusion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateExclusionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateExclusionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateExclusionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateExclusionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_exclusion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::exclusion(this), output);
  }

  // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::update_mask(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateExclusionRequest)
}

::google::protobuf::uint8* UpdateExclusionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateExclusionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_exclusion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::exclusion(this), target);
  }

  // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::update_mask(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateExclusionRequest)
  return target;
}

size_t UpdateExclusionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateExclusionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.logging.v2.LogExclusion exclusion = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_exclusion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exclusion_);
  }

  // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateExclusionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateExclusionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateExclusionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateExclusionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateExclusionRequest)
    MergeFrom(*source);
  }
}

void UpdateExclusionRequest::MergeFrom(const UpdateExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_exclusion()) {
    mutable_exclusion()->::google::logging::v2::LogExclusion::MergeFrom(from.exclusion());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateExclusionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateExclusionRequest::CopyFrom(const UpdateExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateExclusionRequest::IsInitialized() const {
  return true;
}

void UpdateExclusionRequest::Swap(UpdateExclusionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateExclusionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void UpdateExclusionRequest::UnsafeArenaSwap(UpdateExclusionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateExclusionRequest::InternalSwap(UpdateExclusionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(exclusion_, other->exclusion_);
  swap(update_mask_, other->update_mask_);
}

::google::protobuf::Metadata UpdateExclusionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteExclusionRequest::InitAsDefaultInstance() {
}
class DeleteExclusionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteExclusionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteExclusionRequest::DeleteExclusionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteExclusionRequest)
}
DeleteExclusionRequest::DeleteExclusionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteExclusionRequest)
}
DeleteExclusionRequest::DeleteExclusionRequest(const DeleteExclusionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteExclusionRequest)
}

void DeleteExclusionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteExclusionRequest::~DeleteExclusionRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteExclusionRequest)
  SharedDtor();
}

void DeleteExclusionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteExclusionRequest::ArenaDtor(void* object) {
  DeleteExclusionRequest* _this = reinterpret_cast< DeleteExclusionRequest* >(object);
  (void)_this;
}
void DeleteExclusionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeleteExclusionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteExclusionRequest& DeleteExclusionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteExclusionRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void DeleteExclusionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteExclusionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteExclusionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.DeleteExclusionRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteExclusionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteExclusionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteExclusionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteExclusionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteExclusionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteExclusionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteExclusionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteExclusionRequest)
}

::google::protobuf::uint8* DeleteExclusionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteExclusionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteExclusionRequest)
  return target;
}

size_t DeleteExclusionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteExclusionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteExclusionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteExclusionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteExclusionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteExclusionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteExclusionRequest)
    MergeFrom(*source);
  }
}

void DeleteExclusionRequest::MergeFrom(const DeleteExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void DeleteExclusionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteExclusionRequest::CopyFrom(const DeleteExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteExclusionRequest::IsInitialized() const {
  return true;
}

void DeleteExclusionRequest::Swap(DeleteExclusionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteExclusionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void DeleteExclusionRequest::UnsafeArenaSwap(DeleteExclusionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteExclusionRequest::InternalSwap(DeleteExclusionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteExclusionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetCmekSettingsRequest::InitAsDefaultInstance() {
}
class GetCmekSettingsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCmekSettingsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCmekSettingsRequest::GetCmekSettingsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetCmekSettingsRequest)
}
GetCmekSettingsRequest::GetCmekSettingsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetCmekSettingsRequest)
}
GetCmekSettingsRequest::GetCmekSettingsRequest(const GetCmekSettingsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetCmekSettingsRequest)
}

void GetCmekSettingsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetCmekSettingsRequest::~GetCmekSettingsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetCmekSettingsRequest)
  SharedDtor();
}

void GetCmekSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetCmekSettingsRequest::ArenaDtor(void* object) {
  GetCmekSettingsRequest* _this = reinterpret_cast< GetCmekSettingsRequest* >(object);
  (void)_this;
}
void GetCmekSettingsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetCmekSettingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCmekSettingsRequest& GetCmekSettingsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void GetCmekSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetCmekSettingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetCmekSettingsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetCmekSettingsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.GetCmekSettingsRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetCmekSettingsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetCmekSettingsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetCmekSettingsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetCmekSettingsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetCmekSettingsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetCmekSettingsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetCmekSettingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetCmekSettingsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetCmekSettingsRequest)
}

::google::protobuf::uint8* GetCmekSettingsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetCmekSettingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetCmekSettingsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetCmekSettingsRequest)
  return target;
}

size_t GetCmekSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetCmekSettingsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCmekSettingsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetCmekSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCmekSettingsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetCmekSettingsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetCmekSettingsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetCmekSettingsRequest)
    MergeFrom(*source);
  }
}

void GetCmekSettingsRequest::MergeFrom(const GetCmekSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetCmekSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetCmekSettingsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetCmekSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCmekSettingsRequest::CopyFrom(const GetCmekSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetCmekSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCmekSettingsRequest::IsInitialized() const {
  return true;
}

void GetCmekSettingsRequest::Swap(GetCmekSettingsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetCmekSettingsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GetCmekSettingsRequest::UnsafeArenaSwap(GetCmekSettingsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetCmekSettingsRequest::InternalSwap(GetCmekSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetCmekSettingsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateCmekSettingsRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateCmekSettingsRequest_default_instance_._instance.get_mutable()->cmek_settings_ = const_cast< ::google::logging::v2::CmekSettings*>(
      ::google::logging::v2::CmekSettings::internal_default_instance());
  ::google::logging::v2::_UpdateCmekSettingsRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
class UpdateCmekSettingsRequest::HasBitSetters {
 public:
  static const ::google::logging::v2::CmekSettings& cmek_settings(const UpdateCmekSettingsRequest* msg);
  static const ::google::protobuf::FieldMask& update_mask(const UpdateCmekSettingsRequest* msg);
};

const ::google::logging::v2::CmekSettings&
UpdateCmekSettingsRequest::HasBitSetters::cmek_settings(const UpdateCmekSettingsRequest* msg) {
  return *msg->cmek_settings_;
}
const ::google::protobuf::FieldMask&
UpdateCmekSettingsRequest::HasBitSetters::update_mask(const UpdateCmekSettingsRequest* msg) {
  return *msg->update_mask_;
}
void UpdateCmekSettingsRequest::unsafe_arena_set_allocated_cmek_settings(
    ::google::logging::v2::CmekSettings* cmek_settings) {
  if (GetArenaNoVirtual() == nullptr) {
    delete cmek_settings_;
  }
  cmek_settings_ = cmek_settings;
  if (cmek_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateCmekSettingsRequest.cmek_settings)
}
void UpdateCmekSettingsRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateCmekSettingsRequest.update_mask)
}
void UpdateCmekSettingsRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateCmekSettingsRequest::kNameFieldNumber;
const int UpdateCmekSettingsRequest::kCmekSettingsFieldNumber;
const int UpdateCmekSettingsRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateCmekSettingsRequest::UpdateCmekSettingsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateCmekSettingsRequest)
}
UpdateCmekSettingsRequest::UpdateCmekSettingsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateCmekSettingsRequest)
}
UpdateCmekSettingsRequest::UpdateCmekSettingsRequest(const UpdateCmekSettingsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_cmek_settings()) {
    cmek_settings_ = new ::google::logging::v2::CmekSettings(*from.cmek_settings_);
  } else {
    cmek_settings_ = nullptr;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateCmekSettingsRequest)
}

void UpdateCmekSettingsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmek_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&cmek_settings_)) + sizeof(update_mask_));
}

UpdateCmekSettingsRequest::~UpdateCmekSettingsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateCmekSettingsRequest)
  SharedDtor();
}

void UpdateCmekSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cmek_settings_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateCmekSettingsRequest::ArenaDtor(void* object) {
  UpdateCmekSettingsRequest* _this = reinterpret_cast< UpdateCmekSettingsRequest* >(object);
  (void)_this;
}
void UpdateCmekSettingsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UpdateCmekSettingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCmekSettingsRequest& UpdateCmekSettingsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateCmekSettingsRequest_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void UpdateCmekSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateCmekSettingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && cmek_settings_ != nullptr) {
    delete cmek_settings_;
  }
  cmek_settings_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateCmekSettingsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateCmekSettingsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.UpdateCmekSettingsRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.logging.v2.CmekSettings cmek_settings = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::logging::v2::CmekSettings::_InternalParse;
        object = msg->mutable_cmek_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FieldMask::_InternalParse;
        object = msg->mutable_update_mask();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateCmekSettingsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateCmekSettingsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateCmekSettingsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.CmekSettings cmek_settings = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cmek_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateCmekSettingsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateCmekSettingsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateCmekSettingsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateCmekSettingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateCmekSettingsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.logging.v2.CmekSettings cmek_settings = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_cmek_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::cmek_settings(this), output);
  }

  // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::update_mask(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateCmekSettingsRequest)
}

::google::protobuf::uint8* UpdateCmekSettingsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateCmekSettingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateCmekSettingsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.logging.v2.CmekSettings cmek_settings = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_cmek_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::cmek_settings(this), target);
  }

  // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::update_mask(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateCmekSettingsRequest)
  return target;
}

size_t UpdateCmekSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateCmekSettingsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.logging.v2.CmekSettings cmek_settings = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_cmek_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cmek_settings_);
  }

  // .google.protobuf.FieldMask update_mask = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCmekSettingsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateCmekSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCmekSettingsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateCmekSettingsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateCmekSettingsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateCmekSettingsRequest)
    MergeFrom(*source);
  }
}

void UpdateCmekSettingsRequest::MergeFrom(const UpdateCmekSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateCmekSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_cmek_settings()) {
    mutable_cmek_settings()->::google::logging::v2::CmekSettings::MergeFrom(from.cmek_settings());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateCmekSettingsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateCmekSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCmekSettingsRequest::CopyFrom(const UpdateCmekSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateCmekSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCmekSettingsRequest::IsInitialized() const {
  return true;
}

void UpdateCmekSettingsRequest::Swap(UpdateCmekSettingsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateCmekSettingsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void UpdateCmekSettingsRequest::UnsafeArenaSwap(UpdateCmekSettingsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateCmekSettingsRequest::InternalSwap(UpdateCmekSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmek_settings_, other->cmek_settings_);
  swap(update_mask_, other->update_mask_);
}

::google::protobuf::Metadata UpdateCmekSettingsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CmekSettings::InitAsDefaultInstance() {
}
class CmekSettings::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmekSettings::kNameFieldNumber;
const int CmekSettings::kKmsKeyNameFieldNumber;
const int CmekSettings::kServiceAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmekSettings::CmekSettings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CmekSettings)
}
CmekSettings::CmekSettings(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CmekSettings)
}
CmekSettings::CmekSettings(const CmekSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  kms_key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kms_key_name().size() > 0) {
    kms_key_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kms_key_name(),
      GetArenaNoVirtual());
  }
  service_account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_account_id().size() > 0) {
    service_account_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CmekSettings)
}

void CmekSettings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CmekSettings_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kms_key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CmekSettings::~CmekSettings() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CmekSettings)
  SharedDtor();
}

void CmekSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kms_key_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmekSettings::ArenaDtor(void* object) {
  CmekSettings* _this = reinterpret_cast< CmekSettings* >(object);
  (void)_this;
}
void CmekSettings::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CmekSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CmekSettings& CmekSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CmekSettings_google_2flogging_2fv2_2flogging_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CmekSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CmekSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  kms_key_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  service_account_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CmekSettings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CmekSettings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CmekSettings.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string kms_key_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CmekSettings.kms_key_name");
        object = msg->mutable_kms_key_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string service_account_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.logging.v2.CmekSettings.service_account_id");
        object = msg->mutable_service_account_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CmekSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CmekSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CmekSettings.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kms_key_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kms_key_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kms_key_name().data(), static_cast<int>(this->kms_key_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CmekSettings.kms_key_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_account_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account_id().data(), static_cast<int>(this->service_account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CmekSettings.service_account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CmekSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CmekSettings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CmekSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CmekSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CmekSettings.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string kms_key_name = 2;
  if (this->kms_key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kms_key_name().data(), static_cast<int>(this->kms_key_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CmekSettings.kms_key_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->kms_key_name(), output);
  }

  // string service_account_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->service_account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account_id().data(), static_cast<int>(this->service_account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CmekSettings.service_account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.CmekSettings)
}

::google::protobuf::uint8* CmekSettings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CmekSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CmekSettings.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string kms_key_name = 2;
  if (this->kms_key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kms_key_name().data(), static_cast<int>(this->kms_key_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CmekSettings.kms_key_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->kms_key_name(), target);
  }

  // string service_account_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->service_account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account_id().data(), static_cast<int>(this->service_account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CmekSettings.service_account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CmekSettings)
  return target;
}

size_t CmekSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CmekSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string kms_key_name = 2;
  if (this->kms_key_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kms_key_name());
  }

  // string service_account_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->service_account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmekSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CmekSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const CmekSettings* source =
      ::google::protobuf::DynamicCastToGenerated<CmekSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CmekSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CmekSettings)
    MergeFrom(*source);
  }
}

void CmekSettings::MergeFrom(const CmekSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CmekSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.kms_key_name().size() > 0) {
    set_kms_key_name(from.kms_key_name());
  }
  if (from.service_account_id().size() > 0) {
    set_service_account_id(from.service_account_id());
  }
}

void CmekSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CmekSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmekSettings::CopyFrom(const CmekSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CmekSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmekSettings::IsInitialized() const {
  return true;
}

void CmekSettings::Swap(CmekSettings* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CmekSettings* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void CmekSettings::UnsafeArenaSwap(CmekSettings* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CmekSettings::InternalSwap(CmekSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kms_key_name_.Swap(&other->kms_key_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_account_id_.Swap(&other->service_account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CmekSettings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto);
  return ::file_level_metadata_google_2flogging_2fv2_2flogging_5fconfig_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace logging
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::logging::v2::LogBucket* Arena::CreateMaybeMessage< ::google::logging::v2::LogBucket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::LogBucket >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::LogView* Arena::CreateMaybeMessage< ::google::logging::v2::LogView >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::LogView >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::LogSink* Arena::CreateMaybeMessage< ::google::logging::v2::LogSink >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::LogSink >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::BigQueryOptions* Arena::CreateMaybeMessage< ::google::logging::v2::BigQueryOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::BigQueryOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListBucketsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListBucketsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListBucketsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListBucketsResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListBucketsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListBucketsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::CreateBucketRequest* Arena::CreateMaybeMessage< ::google::logging::v2::CreateBucketRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::CreateBucketRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::UpdateBucketRequest* Arena::CreateMaybeMessage< ::google::logging::v2::UpdateBucketRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::UpdateBucketRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::GetBucketRequest* Arena::CreateMaybeMessage< ::google::logging::v2::GetBucketRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::GetBucketRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::DeleteBucketRequest* Arena::CreateMaybeMessage< ::google::logging::v2::DeleteBucketRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::DeleteBucketRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::UndeleteBucketRequest* Arena::CreateMaybeMessage< ::google::logging::v2::UndeleteBucketRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::UndeleteBucketRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListViewsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListViewsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListViewsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListViewsResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListViewsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListViewsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::CreateViewRequest* Arena::CreateMaybeMessage< ::google::logging::v2::CreateViewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::CreateViewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::UpdateViewRequest* Arena::CreateMaybeMessage< ::google::logging::v2::UpdateViewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::UpdateViewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::GetViewRequest* Arena::CreateMaybeMessage< ::google::logging::v2::GetViewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::GetViewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::DeleteViewRequest* Arena::CreateMaybeMessage< ::google::logging::v2::DeleteViewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::DeleteViewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListSinksRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListSinksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListSinksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListSinksResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListSinksResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListSinksResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::GetSinkRequest* Arena::CreateMaybeMessage< ::google::logging::v2::GetSinkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::GetSinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::CreateSinkRequest* Arena::CreateMaybeMessage< ::google::logging::v2::CreateSinkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::CreateSinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::UpdateSinkRequest* Arena::CreateMaybeMessage< ::google::logging::v2::UpdateSinkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::UpdateSinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::DeleteSinkRequest* Arena::CreateMaybeMessage< ::google::logging::v2::DeleteSinkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::DeleteSinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::LogExclusion* Arena::CreateMaybeMessage< ::google::logging::v2::LogExclusion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::LogExclusion >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListExclusionsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListExclusionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListExclusionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListExclusionsResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListExclusionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListExclusionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::GetExclusionRequest* Arena::CreateMaybeMessage< ::google::logging::v2::GetExclusionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::GetExclusionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::CreateExclusionRequest* Arena::CreateMaybeMessage< ::google::logging::v2::CreateExclusionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::CreateExclusionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::UpdateExclusionRequest* Arena::CreateMaybeMessage< ::google::logging::v2::UpdateExclusionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::UpdateExclusionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::DeleteExclusionRequest* Arena::CreateMaybeMessage< ::google::logging::v2::DeleteExclusionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::DeleteExclusionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::GetCmekSettingsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::GetCmekSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::GetCmekSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::UpdateCmekSettingsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::UpdateCmekSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::UpdateCmekSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::CmekSettings* Arena::CreateMaybeMessage< ::google::logging::v2::CmekSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::CmekSettings >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
