// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/watcher/v1/watch.proto

#include "google/watcher/v1/watch.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fwatcher_2fv1_2fwatch_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Change_google_2fwatcher_2fv1_2fwatch_2eproto;
namespace google {
namespace watcher {
namespace v1 {
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request> _instance;
} _Request_default_instance_;
class ChangeBatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeBatch> _instance;
} _ChangeBatch_default_instance_;
class ChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Change> _instance;
} _Change_default_instance_;
}  // namespace v1
}  // namespace watcher
}  // namespace google
static void InitDefaultsRequest_google_2fwatcher_2fv1_2fwatch_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::watcher::v1::_Request_default_instance_;
    new (ptr) ::google::watcher::v1::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::watcher::v1::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_google_2fwatcher_2fv1_2fwatch_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_google_2fwatcher_2fv1_2fwatch_2eproto}, {}};

static void InitDefaultsChangeBatch_google_2fwatcher_2fv1_2fwatch_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::watcher::v1::_ChangeBatch_default_instance_;
    new (ptr) ::google::watcher::v1::ChangeBatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::watcher::v1::ChangeBatch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChangeBatch_google_2fwatcher_2fv1_2fwatch_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChangeBatch_google_2fwatcher_2fv1_2fwatch_2eproto}, {
      &scc_info_Change_google_2fwatcher_2fv1_2fwatch_2eproto.base,}};

static void InitDefaultsChange_google_2fwatcher_2fv1_2fwatch_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::watcher::v1::_Change_default_instance_;
    new (ptr) ::google::watcher::v1::Change();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::watcher::v1::Change::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Change_google_2fwatcher_2fv1_2fwatch_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChange_google_2fwatcher_2fv1_2fwatch_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

void InitDefaults_google_2fwatcher_2fv1_2fwatch_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Request_google_2fwatcher_2fv1_2fwatch_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeBatch_google_2fwatcher_2fv1_2fwatch_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Change_google_2fwatcher_2fv1_2fwatch_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fwatcher_2fv1_2fwatch_2eproto[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fwatcher_2fv1_2fwatch_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fwatcher_2fv1_2fwatch_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fwatcher_2fv1_2fwatch_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Request, target_),
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Request, resume_marker_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::ChangeBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::ChangeBatch, changes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Change, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Change, element_),
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Change, state_),
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Change, data_),
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Change, resume_marker_),
  PROTOBUF_FIELD_OFFSET(::google::watcher::v1::Change, continued_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::watcher::v1::Request)},
  { 7, -1, sizeof(::google::watcher::v1::ChangeBatch)},
  { 13, -1, sizeof(::google::watcher::v1::Change)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::watcher::v1::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::watcher::v1::_ChangeBatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::watcher::v1::_Change_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fwatcher_2fv1_2fwatch_2eproto = {
  {}, AddDescriptors_google_2fwatcher_2fv1_2fwatch_2eproto, "google/watcher/v1/watch.proto", schemas,
  file_default_instances, TableStruct_google_2fwatcher_2fv1_2fwatch_2eproto::offsets,
  file_level_metadata_google_2fwatcher_2fv1_2fwatch_2eproto, 3, file_level_enum_descriptors_google_2fwatcher_2fv1_2fwatch_2eproto, file_level_service_descriptors_google_2fwatcher_2fv1_2fwatch_2eproto,
};

const char descriptor_table_protodef_google_2fwatcher_2fv1_2fwatch_2eproto[] =
  "\n\035google/watcher/v1/watch.proto\022\021google."
  "watcher.v1\032\034google/api/annotations.proto"
  "\032\031google/protobuf/any.proto\032\033google/prot"
  "obuf/empty.proto\"0\n\007Request\022\016\n\006target\030\001 "
  "\001(\t\022\025\n\rresume_marker\030\002 \001(\014\"9\n\013ChangeBatc"
  "h\022*\n\007changes\030\001 \003(\0132\031.google.watcher.v1.C"
  "hange\"\346\001\n\006Change\022\017\n\007element\030\001 \001(\t\022.\n\005sta"
  "te\030\002 \001(\0162\037.google.watcher.v1.Change.Stat"
  "e\022\"\n\004data\030\006 \001(\0132\024.google.protobuf.Any\022\025\n"
  "\rresume_marker\030\004 \001(\014\022\021\n\tcontinued\030\005 \001(\010\""
  "M\n\005State\022\n\n\006EXISTS\020\000\022\022\n\016DOES_NOT_EXIST\020\001"
  "\022\031\n\025INITIAL_STATE_SKIPPED\020\002\022\t\n\005ERROR\020\0032c"
  "\n\007Watcher\022X\n\005Watch\022\032.google.watcher.v1.R"
  "equest\032\036.google.watcher.v1.ChangeBatch\"\021"
  "\202\323\344\223\002\013\022\t/v1/watch0\001B_\n\025com.google.watche"
  "r.v1B\nWatchProtoP\001Z8google.golang.org/ge"
  "nproto/googleapis/watcher/v1;watcherb\006pr"
  "oto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fwatcher_2fv1_2fwatch_2eproto = {
  false, InitDefaults_google_2fwatcher_2fv1_2fwatch_2eproto, 
  descriptor_table_protodef_google_2fwatcher_2fv1_2fwatch_2eproto,
  "google/watcher/v1/watch.proto", &assign_descriptors_table_google_2fwatcher_2fv1_2fwatch_2eproto, 684,
};

void AddDescriptors_google_2fwatcher_2fv1_2fwatch_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fany_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fwatcher_2fv1_2fwatch_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fwatcher_2fv1_2fwatch_2eproto = []() { AddDescriptors_google_2fwatcher_2fv1_2fwatch_2eproto(); return true; }();
namespace google {
namespace watcher {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Change_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fwatcher_2fv1_2fwatch_2eproto);
  return file_level_enum_descriptors_google_2fwatcher_2fv1_2fwatch_2eproto[0];
}
bool Change_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Change_State Change::EXISTS;
const Change_State Change::DOES_NOT_EXIST;
const Change_State Change::INITIAL_STATE_SKIPPED;
const Change_State Change::ERROR;
const Change_State Change::State_MIN;
const Change_State Change::State_MAX;
const int Change::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Request::InitAsDefaultInstance() {
}
class Request::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kTargetFieldNumber;
const int Request::kResumeMarkerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.watcher.v1.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target().size() > 0) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  resume_marker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resume_marker().size() > 0) {
    resume_marker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resume_marker_);
  }
  // @@protoc_insertion_point(copy_constructor:google.watcher.v1.Request)
}

void Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Request_google_2fwatcher_2fv1_2fwatch_2eproto.base);
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resume_marker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:google.watcher.v1.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resume_marker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Request_google_2fwatcher_2fv1_2fwatch_2eproto.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:google.watcher.v1.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resume_marker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.watcher.v1.Request.target");
        object = msg->mutable_target();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes resume_marker = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_resume_marker();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.watcher.v1.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.watcher.v1.Request.target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes resume_marker = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resume_marker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.watcher.v1.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.watcher.v1.Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.watcher.v1.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target = 1;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.watcher.v1.Request.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target(), output);
  }

  // bytes resume_marker = 2;
  if (this->resume_marker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->resume_marker(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.watcher.v1.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.watcher.v1.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target = 1;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.watcher.v1.Request.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target(), target);
  }

  // bytes resume_marker = 2;
  if (this->resume_marker().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->resume_marker(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.watcher.v1.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.watcher.v1.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target = 1;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  // bytes resume_marker = 2;
  if (this->resume_marker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->resume_marker());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.watcher.v1.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::DynamicCastToGenerated<Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.watcher.v1.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.watcher.v1.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.watcher.v1.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.resume_marker().size() > 0) {

    resume_marker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resume_marker_);
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.watcher.v1.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.watcher.v1.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resume_marker_.Swap(&other->resume_marker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fwatcher_2fv1_2fwatch_2eproto);
  return ::file_level_metadata_google_2fwatcher_2fv1_2fwatch_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ChangeBatch::InitAsDefaultInstance() {
}
class ChangeBatch::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeBatch::kChangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeBatch::ChangeBatch()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.watcher.v1.ChangeBatch)
}
ChangeBatch::ChangeBatch(const ChangeBatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      changes_(from.changes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.watcher.v1.ChangeBatch)
}

void ChangeBatch::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ChangeBatch_google_2fwatcher_2fv1_2fwatch_2eproto.base);
}

ChangeBatch::~ChangeBatch() {
  // @@protoc_insertion_point(destructor:google.watcher.v1.ChangeBatch)
  SharedDtor();
}

void ChangeBatch::SharedDtor() {
}

void ChangeBatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeBatch& ChangeBatch::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ChangeBatch_google_2fwatcher_2fv1_2fwatch_2eproto.base);
  return *internal_default_instance();
}


void ChangeBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:google.watcher.v1.ChangeBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  changes_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChangeBatch::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ChangeBatch*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.watcher.v1.Change changes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::watcher::v1::Change::_InternalParse;
          object = msg->add_changes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChangeBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.watcher.v1.ChangeBatch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.watcher.v1.Change changes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.watcher.v1.ChangeBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.watcher.v1.ChangeBatch)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChangeBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.watcher.v1.ChangeBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.watcher.v1.Change changes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->changes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.watcher.v1.ChangeBatch)
}

::google::protobuf::uint8* ChangeBatch::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.watcher.v1.ChangeBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.watcher.v1.Change changes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->changes(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.watcher.v1.ChangeBatch)
  return target;
}

size_t ChangeBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.watcher.v1.ChangeBatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.watcher.v1.Change changes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->changes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->changes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.watcher.v1.ChangeBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeBatch* source =
      ::google::protobuf::DynamicCastToGenerated<ChangeBatch>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.watcher.v1.ChangeBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.watcher.v1.ChangeBatch)
    MergeFrom(*source);
  }
}

void ChangeBatch::MergeFrom(const ChangeBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.watcher.v1.ChangeBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  changes_.MergeFrom(from.changes_);
}

void ChangeBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.watcher.v1.ChangeBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeBatch::CopyFrom(const ChangeBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.watcher.v1.ChangeBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeBatch::IsInitialized() const {
  return true;
}

void ChangeBatch::Swap(ChangeBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeBatch::InternalSwap(ChangeBatch* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&changes_)->InternalSwap(CastToBase(&other->changes_));
}

::google::protobuf::Metadata ChangeBatch::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fwatcher_2fv1_2fwatch_2eproto);
  return ::file_level_metadata_google_2fwatcher_2fv1_2fwatch_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Change::InitAsDefaultInstance() {
  ::google::watcher::v1::_Change_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
class Change::HasBitSetters {
 public:
  static const ::google::protobuf::Any& data(const Change* msg);
};

const ::google::protobuf::Any&
Change::HasBitSetters::data(const Change* msg) {
  return *msg->data_;
}
void Change::clear_data() {
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Change::kElementFieldNumber;
const int Change::kStateFieldNumber;
const int Change::kDataFieldNumber;
const int Change::kResumeMarkerFieldNumber;
const int Change::kContinuedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Change::Change()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.watcher.v1.Change)
}
Change::Change(const Change& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  element_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.element().size() > 0) {
    element_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_);
  }
  resume_marker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resume_marker().size() > 0) {
    resume_marker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resume_marker_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&continued_) -
    reinterpret_cast<char*>(&state_)) + sizeof(continued_));
  // @@protoc_insertion_point(copy_constructor:google.watcher.v1.Change)
}

void Change::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Change_google_2fwatcher_2fv1_2fwatch_2eproto.base);
  element_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resume_marker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&continued_) -
      reinterpret_cast<char*>(&data_)) + sizeof(continued_));
}

Change::~Change() {
  // @@protoc_insertion_point(destructor:google.watcher.v1.Change)
  SharedDtor();
}

void Change::SharedDtor() {
  element_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resume_marker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void Change::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Change& Change::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Change_google_2fwatcher_2fv1_2fwatch_2eproto.base);
  return *internal_default_instance();
}


void Change::Clear() {
// @@protoc_insertion_point(message_clear_start:google.watcher.v1.Change)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resume_marker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&continued_) -
      reinterpret_cast<char*>(&state_)) + sizeof(continued_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Change::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Change*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string element = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.watcher.v1.Change.element");
        object = msg->mutable_element();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.watcher.v1.Change.State state = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_state(static_cast<::google::watcher::v1::Change_State>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes resume_marker = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_resume_marker();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool continued = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_continued(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.protobuf.Any data = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Change::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.watcher.v1.Change)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_element()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->element().data(), static_cast<int>(this->element().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.watcher.v1.Change.element"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.watcher.v1.Change.State state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::watcher::v1::Change_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes resume_marker = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resume_marker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool continued = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &continued_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.watcher.v1.Change)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.watcher.v1.Change)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Change::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.watcher.v1.Change)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string element = 1;
  if (this->element().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element().data(), static_cast<int>(this->element().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.watcher.v1.Change.element");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->element(), output);
  }

  // .google.watcher.v1.Change.State state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // bytes resume_marker = 4;
  if (this->resume_marker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->resume_marker(), output);
  }

  // bool continued = 5;
  if (this->continued() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->continued(), output);
  }

  // .google.protobuf.Any data = 6;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.watcher.v1.Change)
}

::google::protobuf::uint8* Change::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.watcher.v1.Change)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string element = 1;
  if (this->element().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element().data(), static_cast<int>(this->element().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.watcher.v1.Change.element");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->element(), target);
  }

  // .google.watcher.v1.Change.State state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // bytes resume_marker = 4;
  if (this->resume_marker().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->resume_marker(), target);
  }

  // bool continued = 5;
  if (this->continued() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->continued(), target);
  }

  // .google.protobuf.Any data = 6;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.watcher.v1.Change)
  return target;
}

size_t Change::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.watcher.v1.Change)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string element = 1;
  if (this->element().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->element());
  }

  // bytes resume_marker = 4;
  if (this->resume_marker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->resume_marker());
  }

  // .google.protobuf.Any data = 6;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .google.watcher.v1.Change.State state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // bool continued = 5;
  if (this->continued() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Change::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.watcher.v1.Change)
  GOOGLE_DCHECK_NE(&from, this);
  const Change* source =
      ::google::protobuf::DynamicCastToGenerated<Change>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.watcher.v1.Change)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.watcher.v1.Change)
    MergeFrom(*source);
  }
}

void Change::MergeFrom(const Change& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.watcher.v1.Change)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.element().size() > 0) {

    element_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_);
  }
  if (from.resume_marker().size() > 0) {

    resume_marker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resume_marker_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.continued() != 0) {
    set_continued(from.continued());
  }
}

void Change::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.watcher.v1.Change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Change::CopyFrom(const Change& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.watcher.v1.Change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Change::IsInitialized() const {
  return true;
}

void Change::Swap(Change* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Change::InternalSwap(Change* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  element_.Swap(&other->element_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resume_marker_.Swap(&other->resume_marker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(state_, other->state_);
  swap(continued_, other->continued_);
}

::google::protobuf::Metadata Change::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fwatcher_2fv1_2fwatch_2eproto);
  return ::file_level_metadata_google_2fwatcher_2fv1_2fwatch_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace watcher
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::watcher::v1::Request* Arena::CreateMaybeMessage< ::google::watcher::v1::Request >(Arena* arena) {
  return Arena::CreateInternal< ::google::watcher::v1::Request >(arena);
}
template<> PROTOBUF_NOINLINE ::google::watcher::v1::ChangeBatch* Arena::CreateMaybeMessage< ::google::watcher::v1::ChangeBatch >(Arena* arena) {
  return Arena::CreateInternal< ::google::watcher::v1::ChangeBatch >(arena);
}
template<> PROTOBUF_NOINLINE ::google::watcher::v1::Change* Arena::CreateMaybeMessage< ::google::watcher::v1::Change >(Arena* arena) {
  return Arena::CreateInternal< ::google::watcher::v1::Change >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
