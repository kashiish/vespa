// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/localized_settings.proto

#ifndef PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto
#define PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/actions/sdk/v2/theme_customization.pb.h"
#include "google/api/field_behavior.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
class LocalizedSettings;
class LocalizedSettingsDefaultTypeInternal;
extern LocalizedSettingsDefaultTypeInternal _LocalizedSettings_default_instance_;
}  // namespace v2
}  // namespace sdk
}  // namespace actions
namespace protobuf {
template<> ::google::actions::sdk::v2::LocalizedSettings* Arena::CreateMaybeMessage<::google::actions::sdk::v2::LocalizedSettings>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace actions {
namespace sdk {
namespace v2 {

// ===================================================================

class LocalizedSettings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.LocalizedSettings) */ {
 public:
  LocalizedSettings();
  virtual ~LocalizedSettings();

  LocalizedSettings(const LocalizedSettings& from);

  inline LocalizedSettings& operator=(const LocalizedSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalizedSettings(LocalizedSettings&& from) noexcept
    : LocalizedSettings() {
    *this = ::std::move(from);
  }

  inline LocalizedSettings& operator=(LocalizedSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocalizedSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalizedSettings* internal_default_instance() {
    return reinterpret_cast<const LocalizedSettings*>(
               &_LocalizedSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LocalizedSettings* other);
  friend void swap(LocalizedSettings& a, LocalizedSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalizedSettings* New() const final {
    return CreateMaybeMessage<LocalizedSettings>(nullptr);
  }

  LocalizedSettings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocalizedSettings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocalizedSettings& from);
  void MergeFrom(const LocalizedSettings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocalizedSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string sample_invocations = 12 [(.google.api.field_behavior) = OPTIONAL];
  int sample_invocations_size() const;
  void clear_sample_invocations();
  static const int kSampleInvocationsFieldNumber = 12;
  const ::std::string& sample_invocations(int index) const;
  ::std::string* mutable_sample_invocations(int index);
  void set_sample_invocations(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_sample_invocations(int index, ::std::string&& value);
  #endif
  void set_sample_invocations(int index, const char* value);
  void set_sample_invocations(int index, const char* value, size_t size);
  ::std::string* add_sample_invocations();
  void add_sample_invocations(const ::std::string& value);
  #if LANG_CXX11
  void add_sample_invocations(::std::string&& value);
  #endif
  void add_sample_invocations(const char* value);
  void add_sample_invocations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& sample_invocations() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_sample_invocations();

  // string display_name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 1;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // string pronunciation = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_pronunciation();
  static const int kPronunciationFieldNumber = 2;
  const ::std::string& pronunciation() const;
  void set_pronunciation(const ::std::string& value);
  #if LANG_CXX11
  void set_pronunciation(::std::string&& value);
  #endif
  void set_pronunciation(const char* value);
  void set_pronunciation(const char* value, size_t size);
  ::std::string* mutable_pronunciation();
  ::std::string* release_pronunciation();
  void set_allocated_pronunciation(::std::string* pronunciation);

  // string short_description = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_short_description();
  static const int kShortDescriptionFieldNumber = 3;
  const ::std::string& short_description() const;
  void set_short_description(const ::std::string& value);
  #if LANG_CXX11
  void set_short_description(::std::string&& value);
  #endif
  void set_short_description(const char* value);
  void set_short_description(const char* value, size_t size);
  ::std::string* mutable_short_description();
  ::std::string* release_short_description();
  void set_allocated_short_description(::std::string* short_description);

  // string full_description = 4 [(.google.api.field_behavior) = REQUIRED];
  void clear_full_description();
  static const int kFullDescriptionFieldNumber = 4;
  const ::std::string& full_description() const;
  void set_full_description(const ::std::string& value);
  #if LANG_CXX11
  void set_full_description(::std::string&& value);
  #endif
  void set_full_description(const char* value);
  void set_full_description(const char* value, size_t size);
  ::std::string* mutable_full_description();
  ::std::string* release_full_description();
  void set_allocated_full_description(::std::string* full_description);

  // string small_logo_image = 5 [(.google.api.field_behavior) = REQUIRED];
  void clear_small_logo_image();
  static const int kSmallLogoImageFieldNumber = 5;
  const ::std::string& small_logo_image() const;
  void set_small_logo_image(const ::std::string& value);
  #if LANG_CXX11
  void set_small_logo_image(::std::string&& value);
  #endif
  void set_small_logo_image(const char* value);
  void set_small_logo_image(const char* value, size_t size);
  ::std::string* mutable_small_logo_image();
  ::std::string* release_small_logo_image();
  void set_allocated_small_logo_image(::std::string* small_logo_image);

  // string large_banner_image = 6 [(.google.api.field_behavior) = OPTIONAL];
  void clear_large_banner_image();
  static const int kLargeBannerImageFieldNumber = 6;
  const ::std::string& large_banner_image() const;
  void set_large_banner_image(const ::std::string& value);
  #if LANG_CXX11
  void set_large_banner_image(::std::string&& value);
  #endif
  void set_large_banner_image(const char* value);
  void set_large_banner_image(const char* value, size_t size);
  ::std::string* mutable_large_banner_image();
  ::std::string* release_large_banner_image();
  void set_allocated_large_banner_image(::std::string* large_banner_image);

  // string developer_name = 7 [(.google.api.field_behavior) = REQUIRED];
  void clear_developer_name();
  static const int kDeveloperNameFieldNumber = 7;
  const ::std::string& developer_name() const;
  void set_developer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_developer_name(::std::string&& value);
  #endif
  void set_developer_name(const char* value);
  void set_developer_name(const char* value, size_t size);
  ::std::string* mutable_developer_name();
  ::std::string* release_developer_name();
  void set_allocated_developer_name(::std::string* developer_name);

  // string developer_email = 8 [(.google.api.field_behavior) = REQUIRED];
  void clear_developer_email();
  static const int kDeveloperEmailFieldNumber = 8;
  const ::std::string& developer_email() const;
  void set_developer_email(const ::std::string& value);
  #if LANG_CXX11
  void set_developer_email(::std::string&& value);
  #endif
  void set_developer_email(const char* value);
  void set_developer_email(const char* value, size_t size);
  ::std::string* mutable_developer_email();
  ::std::string* release_developer_email();
  void set_allocated_developer_email(::std::string* developer_email);

  // string terms_of_service_url = 9 [(.google.api.field_behavior) = OPTIONAL];
  void clear_terms_of_service_url();
  static const int kTermsOfServiceUrlFieldNumber = 9;
  const ::std::string& terms_of_service_url() const;
  void set_terms_of_service_url(const ::std::string& value);
  #if LANG_CXX11
  void set_terms_of_service_url(::std::string&& value);
  #endif
  void set_terms_of_service_url(const char* value);
  void set_terms_of_service_url(const char* value, size_t size);
  ::std::string* mutable_terms_of_service_url();
  ::std::string* release_terms_of_service_url();
  void set_allocated_terms_of_service_url(::std::string* terms_of_service_url);

  // string voice = 10 [(.google.api.field_behavior) = REQUIRED];
  void clear_voice();
  static const int kVoiceFieldNumber = 10;
  const ::std::string& voice() const;
  void set_voice(const ::std::string& value);
  #if LANG_CXX11
  void set_voice(::std::string&& value);
  #endif
  void set_voice(const char* value);
  void set_voice(const char* value, size_t size);
  ::std::string* mutable_voice();
  ::std::string* release_voice();
  void set_allocated_voice(::std::string* voice);

  // string privacy_policy_url = 11 [(.google.api.field_behavior) = REQUIRED];
  void clear_privacy_policy_url();
  static const int kPrivacyPolicyUrlFieldNumber = 11;
  const ::std::string& privacy_policy_url() const;
  void set_privacy_policy_url(const ::std::string& value);
  #if LANG_CXX11
  void set_privacy_policy_url(::std::string&& value);
  #endif
  void set_privacy_policy_url(const char* value);
  void set_privacy_policy_url(const char* value, size_t size);
  ::std::string* mutable_privacy_policy_url();
  ::std::string* release_privacy_policy_url();
  void set_allocated_privacy_policy_url(::std::string* privacy_policy_url);

  // string voice_locale = 14 [(.google.api.field_behavior) = OPTIONAL];
  void clear_voice_locale();
  static const int kVoiceLocaleFieldNumber = 14;
  const ::std::string& voice_locale() const;
  void set_voice_locale(const ::std::string& value);
  #if LANG_CXX11
  void set_voice_locale(::std::string&& value);
  #endif
  void set_voice_locale(const char* value);
  void set_voice_locale(const char* value, size_t size);
  ::std::string* mutable_voice_locale();
  ::std::string* release_voice_locale();
  void set_allocated_voice_locale(::std::string* voice_locale);

  // .google.actions.sdk.v2.ThemeCustomization theme_customization = 13 [(.google.api.field_behavior) = OPTIONAL];
  bool has_theme_customization() const;
  void clear_theme_customization();
  static const int kThemeCustomizationFieldNumber = 13;
  const ::google::actions::sdk::v2::ThemeCustomization& theme_customization() const;
  ::google::actions::sdk::v2::ThemeCustomization* release_theme_customization();
  ::google::actions::sdk::v2::ThemeCustomization* mutable_theme_customization();
  void set_allocated_theme_customization(::google::actions::sdk::v2::ThemeCustomization* theme_customization);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.LocalizedSettings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> sample_invocations_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr pronunciation_;
  ::google::protobuf::internal::ArenaStringPtr short_description_;
  ::google::protobuf::internal::ArenaStringPtr full_description_;
  ::google::protobuf::internal::ArenaStringPtr small_logo_image_;
  ::google::protobuf::internal::ArenaStringPtr large_banner_image_;
  ::google::protobuf::internal::ArenaStringPtr developer_name_;
  ::google::protobuf::internal::ArenaStringPtr developer_email_;
  ::google::protobuf::internal::ArenaStringPtr terms_of_service_url_;
  ::google::protobuf::internal::ArenaStringPtr voice_;
  ::google::protobuf::internal::ArenaStringPtr privacy_policy_url_;
  ::google::protobuf::internal::ArenaStringPtr voice_locale_;
  ::google::actions::sdk::v2::ThemeCustomization* theme_customization_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LocalizedSettings

// string display_name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::display_name() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.display_name)
  return display_name_.GetNoArena();
}
inline void LocalizedSettings::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.display_name)
}
#if LANG_CXX11
inline void LocalizedSettings::set_display_name(::std::string&& value) {
  
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.display_name)
}
#endif
inline void LocalizedSettings::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.display_name)
}
inline void LocalizedSettings::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.display_name)
}
inline ::std::string* LocalizedSettings::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_display_name() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_display_name(::std::string* display_name) {
  if (display_name != nullptr) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.display_name)
}

// string pronunciation = 2 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_pronunciation() {
  pronunciation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::pronunciation() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.pronunciation)
  return pronunciation_.GetNoArena();
}
inline void LocalizedSettings::set_pronunciation(const ::std::string& value) {
  
  pronunciation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.pronunciation)
}
#if LANG_CXX11
inline void LocalizedSettings::set_pronunciation(::std::string&& value) {
  
  pronunciation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.pronunciation)
}
#endif
inline void LocalizedSettings::set_pronunciation(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pronunciation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.pronunciation)
}
inline void LocalizedSettings::set_pronunciation(const char* value, size_t size) {
  
  pronunciation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.pronunciation)
}
inline ::std::string* LocalizedSettings::mutable_pronunciation() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.pronunciation)
  return pronunciation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_pronunciation() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.pronunciation)
  
  return pronunciation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_pronunciation(::std::string* pronunciation) {
  if (pronunciation != nullptr) {
    
  } else {
    
  }
  pronunciation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pronunciation);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.pronunciation)
}

// string short_description = 3 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_short_description() {
  short_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::short_description() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.short_description)
  return short_description_.GetNoArena();
}
inline void LocalizedSettings::set_short_description(const ::std::string& value) {
  
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.short_description)
}
#if LANG_CXX11
inline void LocalizedSettings::set_short_description(::std::string&& value) {
  
  short_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.short_description)
}
#endif
inline void LocalizedSettings::set_short_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.short_description)
}
inline void LocalizedSettings::set_short_description(const char* value, size_t size) {
  
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.short_description)
}
inline ::std::string* LocalizedSettings::mutable_short_description() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.short_description)
  return short_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_short_description() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.short_description)
  
  return short_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_short_description(::std::string* short_description) {
  if (short_description != nullptr) {
    
  } else {
    
  }
  short_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_description);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.short_description)
}

// string full_description = 4 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_full_description() {
  full_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::full_description() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.full_description)
  return full_description_.GetNoArena();
}
inline void LocalizedSettings::set_full_description(const ::std::string& value) {
  
  full_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.full_description)
}
#if LANG_CXX11
inline void LocalizedSettings::set_full_description(::std::string&& value) {
  
  full_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.full_description)
}
#endif
inline void LocalizedSettings::set_full_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  full_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.full_description)
}
inline void LocalizedSettings::set_full_description(const char* value, size_t size) {
  
  full_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.full_description)
}
inline ::std::string* LocalizedSettings::mutable_full_description() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.full_description)
  return full_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_full_description() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.full_description)
  
  return full_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_full_description(::std::string* full_description) {
  if (full_description != nullptr) {
    
  } else {
    
  }
  full_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_description);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.full_description)
}

// string small_logo_image = 5 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_small_logo_image() {
  small_logo_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::small_logo_image() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.small_logo_image)
  return small_logo_image_.GetNoArena();
}
inline void LocalizedSettings::set_small_logo_image(const ::std::string& value) {
  
  small_logo_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.small_logo_image)
}
#if LANG_CXX11
inline void LocalizedSettings::set_small_logo_image(::std::string&& value) {
  
  small_logo_image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.small_logo_image)
}
#endif
inline void LocalizedSettings::set_small_logo_image(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  small_logo_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.small_logo_image)
}
inline void LocalizedSettings::set_small_logo_image(const char* value, size_t size) {
  
  small_logo_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.small_logo_image)
}
inline ::std::string* LocalizedSettings::mutable_small_logo_image() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.small_logo_image)
  return small_logo_image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_small_logo_image() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.small_logo_image)
  
  return small_logo_image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_small_logo_image(::std::string* small_logo_image) {
  if (small_logo_image != nullptr) {
    
  } else {
    
  }
  small_logo_image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), small_logo_image);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.small_logo_image)
}

// string large_banner_image = 6 [(.google.api.field_behavior) = OPTIONAL];
inline void LocalizedSettings::clear_large_banner_image() {
  large_banner_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::large_banner_image() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.large_banner_image)
  return large_banner_image_.GetNoArena();
}
inline void LocalizedSettings::set_large_banner_image(const ::std::string& value) {
  
  large_banner_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.large_banner_image)
}
#if LANG_CXX11
inline void LocalizedSettings::set_large_banner_image(::std::string&& value) {
  
  large_banner_image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.large_banner_image)
}
#endif
inline void LocalizedSettings::set_large_banner_image(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  large_banner_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.large_banner_image)
}
inline void LocalizedSettings::set_large_banner_image(const char* value, size_t size) {
  
  large_banner_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.large_banner_image)
}
inline ::std::string* LocalizedSettings::mutable_large_banner_image() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.large_banner_image)
  return large_banner_image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_large_banner_image() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.large_banner_image)
  
  return large_banner_image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_large_banner_image(::std::string* large_banner_image) {
  if (large_banner_image != nullptr) {
    
  } else {
    
  }
  large_banner_image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), large_banner_image);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.large_banner_image)
}

// string developer_name = 7 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_developer_name() {
  developer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::developer_name() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.developer_name)
  return developer_name_.GetNoArena();
}
inline void LocalizedSettings::set_developer_name(const ::std::string& value) {
  
  developer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.developer_name)
}
#if LANG_CXX11
inline void LocalizedSettings::set_developer_name(::std::string&& value) {
  
  developer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.developer_name)
}
#endif
inline void LocalizedSettings::set_developer_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  developer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.developer_name)
}
inline void LocalizedSettings::set_developer_name(const char* value, size_t size) {
  
  developer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.developer_name)
}
inline ::std::string* LocalizedSettings::mutable_developer_name() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.developer_name)
  return developer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_developer_name() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.developer_name)
  
  return developer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_developer_name(::std::string* developer_name) {
  if (developer_name != nullptr) {
    
  } else {
    
  }
  developer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), developer_name);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.developer_name)
}

// string developer_email = 8 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_developer_email() {
  developer_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::developer_email() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.developer_email)
  return developer_email_.GetNoArena();
}
inline void LocalizedSettings::set_developer_email(const ::std::string& value) {
  
  developer_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.developer_email)
}
#if LANG_CXX11
inline void LocalizedSettings::set_developer_email(::std::string&& value) {
  
  developer_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.developer_email)
}
#endif
inline void LocalizedSettings::set_developer_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  developer_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.developer_email)
}
inline void LocalizedSettings::set_developer_email(const char* value, size_t size) {
  
  developer_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.developer_email)
}
inline ::std::string* LocalizedSettings::mutable_developer_email() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.developer_email)
  return developer_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_developer_email() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.developer_email)
  
  return developer_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_developer_email(::std::string* developer_email) {
  if (developer_email != nullptr) {
    
  } else {
    
  }
  developer_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), developer_email);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.developer_email)
}

// string terms_of_service_url = 9 [(.google.api.field_behavior) = OPTIONAL];
inline void LocalizedSettings::clear_terms_of_service_url() {
  terms_of_service_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::terms_of_service_url() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.terms_of_service_url)
  return terms_of_service_url_.GetNoArena();
}
inline void LocalizedSettings::set_terms_of_service_url(const ::std::string& value) {
  
  terms_of_service_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.terms_of_service_url)
}
#if LANG_CXX11
inline void LocalizedSettings::set_terms_of_service_url(::std::string&& value) {
  
  terms_of_service_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.terms_of_service_url)
}
#endif
inline void LocalizedSettings::set_terms_of_service_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  terms_of_service_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.terms_of_service_url)
}
inline void LocalizedSettings::set_terms_of_service_url(const char* value, size_t size) {
  
  terms_of_service_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.terms_of_service_url)
}
inline ::std::string* LocalizedSettings::mutable_terms_of_service_url() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.terms_of_service_url)
  return terms_of_service_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_terms_of_service_url() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.terms_of_service_url)
  
  return terms_of_service_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_terms_of_service_url(::std::string* terms_of_service_url) {
  if (terms_of_service_url != nullptr) {
    
  } else {
    
  }
  terms_of_service_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), terms_of_service_url);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.terms_of_service_url)
}

// string voice = 10 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_voice() {
  voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::voice() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.voice)
  return voice_.GetNoArena();
}
inline void LocalizedSettings::set_voice(const ::std::string& value) {
  
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.voice)
}
#if LANG_CXX11
inline void LocalizedSettings::set_voice(::std::string&& value) {
  
  voice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.voice)
}
#endif
inline void LocalizedSettings::set_voice(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.voice)
}
inline void LocalizedSettings::set_voice(const char* value, size_t size) {
  
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.voice)
}
inline ::std::string* LocalizedSettings::mutable_voice() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.voice)
  return voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_voice() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.voice)
  
  return voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_voice(::std::string* voice) {
  if (voice != nullptr) {
    
  } else {
    
  }
  voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.voice)
}

// string voice_locale = 14 [(.google.api.field_behavior) = OPTIONAL];
inline void LocalizedSettings::clear_voice_locale() {
  voice_locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::voice_locale() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.voice_locale)
  return voice_locale_.GetNoArena();
}
inline void LocalizedSettings::set_voice_locale(const ::std::string& value) {
  
  voice_locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.voice_locale)
}
#if LANG_CXX11
inline void LocalizedSettings::set_voice_locale(::std::string&& value) {
  
  voice_locale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.voice_locale)
}
#endif
inline void LocalizedSettings::set_voice_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  voice_locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.voice_locale)
}
inline void LocalizedSettings::set_voice_locale(const char* value, size_t size) {
  
  voice_locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.voice_locale)
}
inline ::std::string* LocalizedSettings::mutable_voice_locale() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.voice_locale)
  return voice_locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_voice_locale() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.voice_locale)
  
  return voice_locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_voice_locale(::std::string* voice_locale) {
  if (voice_locale != nullptr) {
    
  } else {
    
  }
  voice_locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_locale);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.voice_locale)
}

// string privacy_policy_url = 11 [(.google.api.field_behavior) = REQUIRED];
inline void LocalizedSettings::clear_privacy_policy_url() {
  privacy_policy_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedSettings::privacy_policy_url() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.privacy_policy_url)
  return privacy_policy_url_.GetNoArena();
}
inline void LocalizedSettings::set_privacy_policy_url(const ::std::string& value) {
  
  privacy_policy_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.privacy_policy_url)
}
#if LANG_CXX11
inline void LocalizedSettings::set_privacy_policy_url(::std::string&& value) {
  
  privacy_policy_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.LocalizedSettings.privacy_policy_url)
}
#endif
inline void LocalizedSettings::set_privacy_policy_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  privacy_policy_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.privacy_policy_url)
}
inline void LocalizedSettings::set_privacy_policy_url(const char* value, size_t size) {
  
  privacy_policy_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.privacy_policy_url)
}
inline ::std::string* LocalizedSettings::mutable_privacy_policy_url() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.privacy_policy_url)
  return privacy_policy_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedSettings::release_privacy_policy_url() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.privacy_policy_url)
  
  return privacy_policy_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedSettings::set_allocated_privacy_policy_url(::std::string* privacy_policy_url) {
  if (privacy_policy_url != nullptr) {
    
  } else {
    
  }
  privacy_policy_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privacy_policy_url);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.privacy_policy_url)
}

// repeated string sample_invocations = 12 [(.google.api.field_behavior) = OPTIONAL];
inline int LocalizedSettings::sample_invocations_size() const {
  return sample_invocations_.size();
}
inline void LocalizedSettings::clear_sample_invocations() {
  sample_invocations_.Clear();
}
inline const ::std::string& LocalizedSettings::sample_invocations(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
  return sample_invocations_.Get(index);
}
inline ::std::string* LocalizedSettings::mutable_sample_invocations(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
  return sample_invocations_.Mutable(index);
}
inline void LocalizedSettings::set_sample_invocations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
  sample_invocations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void LocalizedSettings::set_sample_invocations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
  sample_invocations_.Mutable(index)->assign(std::move(value));
}
#endif
inline void LocalizedSettings::set_sample_invocations(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  sample_invocations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
}
inline void LocalizedSettings::set_sample_invocations(int index, const char* value, size_t size) {
  sample_invocations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
}
inline ::std::string* LocalizedSettings::add_sample_invocations() {
  // @@protoc_insertion_point(field_add_mutable:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
  return sample_invocations_.Add();
}
inline void LocalizedSettings::add_sample_invocations(const ::std::string& value) {
  sample_invocations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
}
#if LANG_CXX11
inline void LocalizedSettings::add_sample_invocations(::std::string&& value) {
  sample_invocations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
}
#endif
inline void LocalizedSettings::add_sample_invocations(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  sample_invocations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
}
inline void LocalizedSettings::add_sample_invocations(const char* value, size_t size) {
  sample_invocations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
LocalizedSettings::sample_invocations() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
  return sample_invocations_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
LocalizedSettings::mutable_sample_invocations() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.LocalizedSettings.sample_invocations)
  return &sample_invocations_;
}

// .google.actions.sdk.v2.ThemeCustomization theme_customization = 13 [(.google.api.field_behavior) = OPTIONAL];
inline bool LocalizedSettings::has_theme_customization() const {
  return this != internal_default_instance() && theme_customization_ != nullptr;
}
inline const ::google::actions::sdk::v2::ThemeCustomization& LocalizedSettings::theme_customization() const {
  const ::google::actions::sdk::v2::ThemeCustomization* p = theme_customization_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.LocalizedSettings.theme_customization)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::ThemeCustomization*>(
      &::google::actions::sdk::v2::_ThemeCustomization_default_instance_);
}
inline ::google::actions::sdk::v2::ThemeCustomization* LocalizedSettings::release_theme_customization() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.LocalizedSettings.theme_customization)
  
  ::google::actions::sdk::v2::ThemeCustomization* temp = theme_customization_;
  theme_customization_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::ThemeCustomization* LocalizedSettings::mutable_theme_customization() {
  
  if (theme_customization_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::ThemeCustomization>(GetArenaNoVirtual());
    theme_customization_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.LocalizedSettings.theme_customization)
  return theme_customization_;
}
inline void LocalizedSettings::set_allocated_theme_customization(::google::actions::sdk::v2::ThemeCustomization* theme_customization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(theme_customization_);
  }
  if (theme_customization) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      theme_customization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, theme_customization, submessage_arena);
    }
    
  } else {
    
  }
  theme_customization_ = theme_customization;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.LocalizedSettings.theme_customization)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto
