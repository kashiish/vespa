// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/prompt/prompt.proto

#ifndef PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto
#define PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/actions/sdk/v2/conversation/prompt/content/canvas.pb.h"
#include "google/actions/sdk/v2/conversation/prompt/content/content.pb.h"
#include "google/actions/sdk/v2/conversation/prompt/content/link.pb.h"
#include "google/actions/sdk/v2/conversation/prompt/simple.pb.h"
#include "google/actions/sdk/v2/conversation/prompt/suggestion.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class Prompt;
class PromptDefaultTypeInternal;
extern PromptDefaultTypeInternal _Prompt_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
namespace protobuf {
template<> ::google::actions::sdk::v2::conversation::Prompt* Arena::CreateMaybeMessage<::google::actions::sdk::v2::conversation::Prompt>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {

// ===================================================================

class Prompt final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.conversation.Prompt) */ {
 public:
  Prompt();
  virtual ~Prompt();

  Prompt(const Prompt& from);

  inline Prompt& operator=(const Prompt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Prompt(Prompt&& from) noexcept
    : Prompt() {
    *this = ::std::move(from);
  }

  inline Prompt& operator=(Prompt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Prompt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Prompt* internal_default_instance() {
    return reinterpret_cast<const Prompt*>(
               &_Prompt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Prompt* other);
  friend void swap(Prompt& a, Prompt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Prompt* New() const final {
    return CreateMaybeMessage<Prompt>(nullptr);
  }

  Prompt* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Prompt>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Prompt& from);
  void MergeFrom(const Prompt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Prompt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.actions.sdk.v2.conversation.Suggestion suggestions = 5;
  int suggestions_size() const;
  void clear_suggestions();
  static const int kSuggestionsFieldNumber = 5;
  ::google::actions::sdk::v2::conversation::Suggestion* mutable_suggestions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Suggestion >*
      mutable_suggestions();
  const ::google::actions::sdk::v2::conversation::Suggestion& suggestions(int index) const;
  ::google::actions::sdk::v2::conversation::Suggestion* add_suggestions();
  const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Suggestion >&
      suggestions() const;

  // .google.actions.sdk.v2.conversation.Simple first_simple = 2;
  bool has_first_simple() const;
  void clear_first_simple();
  static const int kFirstSimpleFieldNumber = 2;
  const ::google::actions::sdk::v2::conversation::Simple& first_simple() const;
  ::google::actions::sdk::v2::conversation::Simple* release_first_simple();
  ::google::actions::sdk::v2::conversation::Simple* mutable_first_simple();
  void set_allocated_first_simple(::google::actions::sdk::v2::conversation::Simple* first_simple);

  // .google.actions.sdk.v2.conversation.Content content = 3;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 3;
  const ::google::actions::sdk::v2::conversation::Content& content() const;
  ::google::actions::sdk::v2::conversation::Content* release_content();
  ::google::actions::sdk::v2::conversation::Content* mutable_content();
  void set_allocated_content(::google::actions::sdk::v2::conversation::Content* content);

  // .google.actions.sdk.v2.conversation.Simple last_simple = 4;
  bool has_last_simple() const;
  void clear_last_simple();
  static const int kLastSimpleFieldNumber = 4;
  const ::google::actions::sdk::v2::conversation::Simple& last_simple() const;
  ::google::actions::sdk::v2::conversation::Simple* release_last_simple();
  ::google::actions::sdk::v2::conversation::Simple* mutable_last_simple();
  void set_allocated_last_simple(::google::actions::sdk::v2::conversation::Simple* last_simple);

  // .google.actions.sdk.v2.conversation.Link link = 6;
  bool has_link() const;
  void clear_link();
  static const int kLinkFieldNumber = 6;
  const ::google::actions::sdk::v2::conversation::Link& link() const;
  ::google::actions::sdk::v2::conversation::Link* release_link();
  ::google::actions::sdk::v2::conversation::Link* mutable_link();
  void set_allocated_link(::google::actions::sdk::v2::conversation::Link* link);

  // .google.actions.sdk.v2.conversation.Canvas canvas = 9;
  bool has_canvas() const;
  void clear_canvas();
  static const int kCanvasFieldNumber = 9;
  const ::google::actions::sdk::v2::conversation::Canvas& canvas() const;
  ::google::actions::sdk::v2::conversation::Canvas* release_canvas();
  ::google::actions::sdk::v2::conversation::Canvas* mutable_canvas();
  void set_allocated_canvas(::google::actions::sdk::v2::conversation::Canvas* canvas);

  // bool append = 1 [deprecated = true];
  PROTOBUF_DEPRECATED void clear_append();
  PROTOBUF_DEPRECATED static const int kAppendFieldNumber = 1;
  PROTOBUF_DEPRECATED bool append() const;
  PROTOBUF_DEPRECATED void set_append(bool value);

  // bool override = 8;
  void clear_override();
  static const int kOverrideFieldNumber = 8;
  bool override() const;
  void set_override(bool value);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.conversation.Prompt)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Suggestion > suggestions_;
  ::google::actions::sdk::v2::conversation::Simple* first_simple_;
  ::google::actions::sdk::v2::conversation::Content* content_;
  ::google::actions::sdk::v2::conversation::Simple* last_simple_;
  ::google::actions::sdk::v2::conversation::Link* link_;
  ::google::actions::sdk::v2::conversation::Canvas* canvas_;
  bool append_;
  bool override_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Prompt

// bool append = 1 [deprecated = true];
inline void Prompt::clear_append() {
  append_ = false;
}
inline bool Prompt::append() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Prompt.append)
  return append_;
}
inline void Prompt::set_append(bool value) {
  
  append_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Prompt.append)
}

// bool override = 8;
inline void Prompt::clear_override() {
  override_ = false;
}
inline bool Prompt::override() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Prompt.override)
  return override_;
}
inline void Prompt::set_override(bool value) {
  
  override_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Prompt.override)
}

// .google.actions.sdk.v2.conversation.Simple first_simple = 2;
inline bool Prompt::has_first_simple() const {
  return this != internal_default_instance() && first_simple_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Simple& Prompt::first_simple() const {
  const ::google::actions::sdk::v2::conversation::Simple* p = first_simple_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Prompt.first_simple)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Simple*>(
      &::google::actions::sdk::v2::conversation::_Simple_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Simple* Prompt::release_first_simple() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Prompt.first_simple)
  
  ::google::actions::sdk::v2::conversation::Simple* temp = first_simple_;
  first_simple_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Simple* Prompt::mutable_first_simple() {
  
  if (first_simple_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Simple>(GetArenaNoVirtual());
    first_simple_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Prompt.first_simple)
  return first_simple_;
}
inline void Prompt::set_allocated_first_simple(::google::actions::sdk::v2::conversation::Simple* first_simple) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(first_simple_);
  }
  if (first_simple) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      first_simple = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, first_simple, submessage_arena);
    }
    
  } else {
    
  }
  first_simple_ = first_simple;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Prompt.first_simple)
}

// .google.actions.sdk.v2.conversation.Content content = 3;
inline bool Prompt::has_content() const {
  return this != internal_default_instance() && content_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Content& Prompt::content() const {
  const ::google::actions::sdk::v2::conversation::Content* p = content_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Prompt.content)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Content*>(
      &::google::actions::sdk::v2::conversation::_Content_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Content* Prompt::release_content() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Prompt.content)
  
  ::google::actions::sdk::v2::conversation::Content* temp = content_;
  content_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Content* Prompt::mutable_content() {
  
  if (content_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Content>(GetArenaNoVirtual());
    content_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Prompt.content)
  return content_;
}
inline void Prompt::set_allocated_content(::google::actions::sdk::v2::conversation::Content* content) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(content_);
  }
  if (content) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      content = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, content, submessage_arena);
    }
    
  } else {
    
  }
  content_ = content;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Prompt.content)
}

// .google.actions.sdk.v2.conversation.Simple last_simple = 4;
inline bool Prompt::has_last_simple() const {
  return this != internal_default_instance() && last_simple_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Simple& Prompt::last_simple() const {
  const ::google::actions::sdk::v2::conversation::Simple* p = last_simple_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Prompt.last_simple)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Simple*>(
      &::google::actions::sdk::v2::conversation::_Simple_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Simple* Prompt::release_last_simple() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Prompt.last_simple)
  
  ::google::actions::sdk::v2::conversation::Simple* temp = last_simple_;
  last_simple_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Simple* Prompt::mutable_last_simple() {
  
  if (last_simple_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Simple>(GetArenaNoVirtual());
    last_simple_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Prompt.last_simple)
  return last_simple_;
}
inline void Prompt::set_allocated_last_simple(::google::actions::sdk::v2::conversation::Simple* last_simple) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_simple_);
  }
  if (last_simple) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_simple = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_simple, submessage_arena);
    }
    
  } else {
    
  }
  last_simple_ = last_simple;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Prompt.last_simple)
}

// repeated .google.actions.sdk.v2.conversation.Suggestion suggestions = 5;
inline int Prompt::suggestions_size() const {
  return suggestions_.size();
}
inline ::google::actions::sdk::v2::conversation::Suggestion* Prompt::mutable_suggestions(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Prompt.suggestions)
  return suggestions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Suggestion >*
Prompt::mutable_suggestions() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.conversation.Prompt.suggestions)
  return &suggestions_;
}
inline const ::google::actions::sdk::v2::conversation::Suggestion& Prompt::suggestions(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Prompt.suggestions)
  return suggestions_.Get(index);
}
inline ::google::actions::sdk::v2::conversation::Suggestion* Prompt::add_suggestions() {
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.conversation.Prompt.suggestions)
  return suggestions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Suggestion >&
Prompt::suggestions() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.conversation.Prompt.suggestions)
  return suggestions_;
}

// .google.actions.sdk.v2.conversation.Link link = 6;
inline bool Prompt::has_link() const {
  return this != internal_default_instance() && link_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Link& Prompt::link() const {
  const ::google::actions::sdk::v2::conversation::Link* p = link_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Prompt.link)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Link*>(
      &::google::actions::sdk::v2::conversation::_Link_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Link* Prompt::release_link() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Prompt.link)
  
  ::google::actions::sdk::v2::conversation::Link* temp = link_;
  link_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Link* Prompt::mutable_link() {
  
  if (link_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Link>(GetArenaNoVirtual());
    link_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Prompt.link)
  return link_;
}
inline void Prompt::set_allocated_link(::google::actions::sdk::v2::conversation::Link* link) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(link_);
  }
  if (link) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      link = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, link, submessage_arena);
    }
    
  } else {
    
  }
  link_ = link;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Prompt.link)
}

// .google.actions.sdk.v2.conversation.Canvas canvas = 9;
inline bool Prompt::has_canvas() const {
  return this != internal_default_instance() && canvas_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Canvas& Prompt::canvas() const {
  const ::google::actions::sdk::v2::conversation::Canvas* p = canvas_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Prompt.canvas)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Canvas*>(
      &::google::actions::sdk::v2::conversation::_Canvas_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Canvas* Prompt::release_canvas() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Prompt.canvas)
  
  ::google::actions::sdk::v2::conversation::Canvas* temp = canvas_;
  canvas_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Canvas* Prompt::mutable_canvas() {
  
  if (canvas_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Canvas>(GetArenaNoVirtual());
    canvas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Prompt.canvas)
  return canvas_;
}
inline void Prompt::set_allocated_canvas(::google::actions::sdk::v2::conversation::Canvas* canvas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(canvas_);
  }
  if (canvas) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      canvas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, canvas, submessage_arena);
    }
    
  } else {
    
  }
  canvas_ = canvas;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Prompt.canvas)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto
