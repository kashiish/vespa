// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/scene.proto

#ifndef PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto
#define PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/actions/sdk/v2/conversation/prompt/prompt.pb.h"
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class Slot;
class SlotDefaultTypeInternal;
extern SlotDefaultTypeInternal _Slot_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
namespace protobuf {
template<> ::google::actions::sdk::v2::conversation::Slot* Arena::CreateMaybeMessage<::google::actions::sdk::v2::conversation::Slot>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {

enum Slot_SlotMode {
  Slot_SlotMode_MODE_UNSPECIFIED = 0,
  Slot_SlotMode_OPTIONAL = 1,
  Slot_SlotMode_REQUIRED = 2,
  Slot_SlotMode_Slot_SlotMode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Slot_SlotMode_Slot_SlotMode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Slot_SlotMode_IsValid(int value);
const Slot_SlotMode Slot_SlotMode_SlotMode_MIN = Slot_SlotMode_MODE_UNSPECIFIED;
const Slot_SlotMode Slot_SlotMode_SlotMode_MAX = Slot_SlotMode_REQUIRED;
const int Slot_SlotMode_SlotMode_ARRAYSIZE = Slot_SlotMode_SlotMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Slot_SlotMode_descriptor();
inline const ::std::string& Slot_SlotMode_Name(Slot_SlotMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Slot_SlotMode_descriptor(), value);
}
inline bool Slot_SlotMode_Parse(
    const ::std::string& name, Slot_SlotMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Slot_SlotMode>(
    Slot_SlotMode_descriptor(), name, value);
}
enum Slot_SlotStatus {
  Slot_SlotStatus_SLOT_UNSPECIFIED = 0,
  Slot_SlotStatus_EMPTY = 1,
  Slot_SlotStatus_INVALID = 2,
  Slot_SlotStatus_FILLED = 3,
  Slot_SlotStatus_Slot_SlotStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Slot_SlotStatus_Slot_SlotStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Slot_SlotStatus_IsValid(int value);
const Slot_SlotStatus Slot_SlotStatus_SlotStatus_MIN = Slot_SlotStatus_SLOT_UNSPECIFIED;
const Slot_SlotStatus Slot_SlotStatus_SlotStatus_MAX = Slot_SlotStatus_FILLED;
const int Slot_SlotStatus_SlotStatus_ARRAYSIZE = Slot_SlotStatus_SlotStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* Slot_SlotStatus_descriptor();
inline const ::std::string& Slot_SlotStatus_Name(Slot_SlotStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    Slot_SlotStatus_descriptor(), value);
}
inline bool Slot_SlotStatus_Parse(
    const ::std::string& name, Slot_SlotStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Slot_SlotStatus>(
    Slot_SlotStatus_descriptor(), name, value);
}
enum SlotFillingStatus {
  UNSPECIFIED = 0,
  INITIALIZED = 1,
  COLLECTING = 2,
  FINAL = 4,
  SlotFillingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  SlotFillingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool SlotFillingStatus_IsValid(int value);
const SlotFillingStatus SlotFillingStatus_MIN = UNSPECIFIED;
const SlotFillingStatus SlotFillingStatus_MAX = FINAL;
const int SlotFillingStatus_ARRAYSIZE = SlotFillingStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* SlotFillingStatus_descriptor();
inline const ::std::string& SlotFillingStatus_Name(SlotFillingStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    SlotFillingStatus_descriptor(), value);
}
inline bool SlotFillingStatus_Parse(
    const ::std::string& name, SlotFillingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SlotFillingStatus>(
    SlotFillingStatus_descriptor(), name, value);
}
// ===================================================================

class Slot final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.conversation.Slot) */ {
 public:
  Slot();
  virtual ~Slot();

  Slot(const Slot& from);

  inline Slot& operator=(const Slot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Slot(Slot&& from) noexcept
    : Slot() {
    *this = ::std::move(from);
  }

  inline Slot& operator=(Slot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Slot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Slot* internal_default_instance() {
    return reinterpret_cast<const Slot*>(
               &_Slot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Slot* other);
  friend void swap(Slot& a, Slot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Slot* New() const final {
    return CreateMaybeMessage<Slot>(nullptr);
  }

  Slot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Slot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Slot& from);
  void MergeFrom(const Slot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Slot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Slot_SlotMode SlotMode;
  static const SlotMode MODE_UNSPECIFIED =
    Slot_SlotMode_MODE_UNSPECIFIED;
  static const SlotMode OPTIONAL =
    Slot_SlotMode_OPTIONAL;
  static const SlotMode REQUIRED =
    Slot_SlotMode_REQUIRED;
  static inline bool SlotMode_IsValid(int value) {
    return Slot_SlotMode_IsValid(value);
  }
  static const SlotMode SlotMode_MIN =
    Slot_SlotMode_SlotMode_MIN;
  static const SlotMode SlotMode_MAX =
    Slot_SlotMode_SlotMode_MAX;
  static const int SlotMode_ARRAYSIZE =
    Slot_SlotMode_SlotMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SlotMode_descriptor() {
    return Slot_SlotMode_descriptor();
  }
  static inline const ::std::string& SlotMode_Name(SlotMode value) {
    return Slot_SlotMode_Name(value);
  }
  static inline bool SlotMode_Parse(const ::std::string& name,
      SlotMode* value) {
    return Slot_SlotMode_Parse(name, value);
  }

  typedef Slot_SlotStatus SlotStatus;
  static const SlotStatus SLOT_UNSPECIFIED =
    Slot_SlotStatus_SLOT_UNSPECIFIED;
  static const SlotStatus EMPTY =
    Slot_SlotStatus_EMPTY;
  static const SlotStatus INVALID =
    Slot_SlotStatus_INVALID;
  static const SlotStatus FILLED =
    Slot_SlotStatus_FILLED;
  static inline bool SlotStatus_IsValid(int value) {
    return Slot_SlotStatus_IsValid(value);
  }
  static const SlotStatus SlotStatus_MIN =
    Slot_SlotStatus_SlotStatus_MIN;
  static const SlotStatus SlotStatus_MAX =
    Slot_SlotStatus_SlotStatus_MAX;
  static const int SlotStatus_ARRAYSIZE =
    Slot_SlotStatus_SlotStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SlotStatus_descriptor() {
    return Slot_SlotStatus_descriptor();
  }
  static inline const ::std::string& SlotStatus_Name(SlotStatus value) {
    return Slot_SlotStatus_Name(value);
  }
  static inline bool SlotStatus_Parse(const ::std::string& name,
      SlotStatus* value) {
    return Slot_SlotStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.protobuf.Value value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::google::protobuf::Value& value() const;
  ::google::protobuf::Value* release_value();
  ::google::protobuf::Value* mutable_value();
  void set_allocated_value(::google::protobuf::Value* value);

  // .google.actions.sdk.v2.conversation.Prompt prompt = 5;
  bool has_prompt() const;
  void clear_prompt();
  static const int kPromptFieldNumber = 5;
  const ::google::actions::sdk::v2::conversation::Prompt& prompt() const;
  ::google::actions::sdk::v2::conversation::Prompt* release_prompt();
  ::google::actions::sdk::v2::conversation::Prompt* mutable_prompt();
  void set_allocated_prompt(::google::actions::sdk::v2::conversation::Prompt* prompt);

  // .google.actions.sdk.v2.conversation.Slot.SlotMode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::google::actions::sdk::v2::conversation::Slot_SlotMode mode() const;
  void set_mode(::google::actions::sdk::v2::conversation::Slot_SlotMode value);

  // .google.actions.sdk.v2.conversation.Slot.SlotStatus status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::actions::sdk::v2::conversation::Slot_SlotStatus status() const;
  void set_status(::google::actions::sdk::v2::conversation::Slot_SlotStatus value);

  // bool updated = 4;
  void clear_updated();
  static const int kUpdatedFieldNumber = 4;
  bool updated() const;
  void set_updated(bool value);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.conversation.Slot)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Value* value_;
  ::google::actions::sdk::v2::conversation::Prompt* prompt_;
  int mode_;
  int status_;
  bool updated_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Slot

// .google.actions.sdk.v2.conversation.Slot.SlotMode mode = 1;
inline void Slot::clear_mode() {
  mode_ = 0;
}
inline ::google::actions::sdk::v2::conversation::Slot_SlotMode Slot::mode() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Slot.mode)
  return static_cast< ::google::actions::sdk::v2::conversation::Slot_SlotMode >(mode_);
}
inline void Slot::set_mode(::google::actions::sdk::v2::conversation::Slot_SlotMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Slot.mode)
}

// .google.actions.sdk.v2.conversation.Slot.SlotStatus status = 2;
inline void Slot::clear_status() {
  status_ = 0;
}
inline ::google::actions::sdk::v2::conversation::Slot_SlotStatus Slot::status() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Slot.status)
  return static_cast< ::google::actions::sdk::v2::conversation::Slot_SlotStatus >(status_);
}
inline void Slot::set_status(::google::actions::sdk::v2::conversation::Slot_SlotStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Slot.status)
}

// .google.protobuf.Value value = 3;
inline bool Slot::has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline const ::google::protobuf::Value& Slot::value() const {
  const ::google::protobuf::Value* p = value_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Slot.value)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Value*>(
      &::google::protobuf::_Value_default_instance_);
}
inline ::google::protobuf::Value* Slot::release_value() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Slot.value)
  
  ::google::protobuf::Value* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::google::protobuf::Value* Slot::mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Slot.value)
  return value_;
}
inline void Slot::set_allocated_value(::google::protobuf::Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Slot.value)
}

// bool updated = 4;
inline void Slot::clear_updated() {
  updated_ = false;
}
inline bool Slot::updated() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Slot.updated)
  return updated_;
}
inline void Slot::set_updated(bool value) {
  
  updated_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Slot.updated)
}

// .google.actions.sdk.v2.conversation.Prompt prompt = 5;
inline bool Slot::has_prompt() const {
  return this != internal_default_instance() && prompt_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Prompt& Slot::prompt() const {
  const ::google::actions::sdk::v2::conversation::Prompt* p = prompt_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Slot.prompt)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Prompt*>(
      &::google::actions::sdk::v2::conversation::_Prompt_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Prompt* Slot::release_prompt() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Slot.prompt)
  
  ::google::actions::sdk::v2::conversation::Prompt* temp = prompt_;
  prompt_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Prompt* Slot::mutable_prompt() {
  
  if (prompt_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Prompt>(GetArenaNoVirtual());
    prompt_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Slot.prompt)
  return prompt_;
}
inline void Slot::set_allocated_prompt(::google::actions::sdk::v2::conversation::Prompt* prompt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(prompt_);
  }
  if (prompt) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      prompt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, prompt, submessage_arena);
    }
    
  } else {
    
  }
  prompt_ = prompt;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Slot.prompt)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::actions::sdk::v2::conversation::Slot_SlotMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::actions::sdk::v2::conversation::Slot_SlotMode>() {
  return ::google::actions::sdk::v2::conversation::Slot_SlotMode_descriptor();
}
template <> struct is_proto_enum< ::google::actions::sdk::v2::conversation::Slot_SlotStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::actions::sdk::v2::conversation::Slot_SlotStatus>() {
  return ::google::actions::sdk::v2::conversation::Slot_SlotStatus_descriptor();
}
template <> struct is_proto_enum< ::google::actions::sdk::v2::conversation::SlotFillingStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::actions::sdk::v2::conversation::SlotFillingStatus>() {
  return ::google::actions::sdk::v2::conversation::SlotFillingStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto
