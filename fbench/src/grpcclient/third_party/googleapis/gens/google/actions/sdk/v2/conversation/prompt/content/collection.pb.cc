// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/prompt/content/collection.proto

#include "google/actions/sdk/v2/conversation/prompt/content/collection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Collection_CollectionItem_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto;
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class Collection_CollectionItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Collection_CollectionItem> _instance;
} _Collection_CollectionItem_default_instance_;
class CollectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Collection> _instance;
} _Collection_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
static void InitDefaultsCollection_CollectionItem_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::conversation::_Collection_CollectionItem_default_instance_;
    new (ptr) ::google::actions::sdk::v2::conversation::Collection_CollectionItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::conversation::Collection_CollectionItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Collection_CollectionItem_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCollection_CollectionItem_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto}, {}};

static void InitDefaultsCollection_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::conversation::_Collection_default_instance_;
    new (ptr) ::google::actions::sdk::v2::conversation::Collection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::conversation::Collection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Collection_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCollection_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto}, {
      &scc_info_Collection_CollectionItem_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto.base,}};

void InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Collection_CollectionItem_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Collection_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Collection_CollectionItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Collection_CollectionItem, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Collection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Collection, title_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Collection, subtitle_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Collection, items_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Collection, image_fill_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::actions::sdk::v2::conversation::Collection_CollectionItem)},
  { 6, -1, sizeof(::google::actions::sdk::v2::conversation::Collection)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::conversation::_Collection_CollectionItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::conversation::_Collection_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto = {
  {}, AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto, "google/actions/sdk/v2/conversation/prompt/content/collection.proto", schemas,
  file_default_instances, TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto::offsets,
  file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto, 2, file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto, file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto,
};

const char descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto[] =
  "\nBgoogle/actions/sdk/v2/conversation/pro"
  "mpt/content/collection.proto\022\"google.act"
  "ions.sdk.v2.conversation\032=google/actions"
  "/sdk/v2/conversation/prompt/content/imag"
  "e.proto\"\343\001\n\nCollection\022\r\n\005title\030\001 \001(\t\022\020\n"
  "\010subtitle\030\002 \001(\t\022L\n\005items\030\003 \003(\0132=.google."
  "actions.sdk.v2.conversation.Collection.C"
  "ollectionItem\022G\n\nimage_fill\030\004 \001(\01623.goog"
  "le.actions.sdk.v2.conversation.Image.Ima"
  "geFill\032\035\n\016CollectionItem\022\013\n\003key\030\001 \001(\tB\213\001"
  "\n&com.google.actions.sdk.v2.conversation"
  "B\017CollectionProtoP\001ZNgoogle.golang.org/g"
  "enproto/googleapis/actions/sdk/v2/conver"
  "sation;conversationb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto = {
  false, InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto, 
  descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto,
  "google/actions/sdk/v2/conversation/prompt/content/collection.proto", &assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto, 547,
};

void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fimage_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto = []() { AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto(); return true; }();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {

// ===================================================================

void Collection_CollectionItem::InitAsDefaultInstance() {
}
class Collection_CollectionItem::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Collection_CollectionItem::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Collection_CollectionItem::Collection_CollectionItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.conversation.Collection.CollectionItem)
}
Collection_CollectionItem::Collection_CollectionItem(const Collection_CollectionItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.conversation.Collection.CollectionItem)
}

void Collection_CollectionItem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Collection_CollectionItem_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Collection_CollectionItem::~Collection_CollectionItem() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  SharedDtor();
}

void Collection_CollectionItem::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Collection_CollectionItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Collection_CollectionItem& Collection_CollectionItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Collection_CollectionItem_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto.base);
  return *internal_default_instance();
}


void Collection_CollectionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Collection_CollectionItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Collection_CollectionItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.conversation.Collection.CollectionItem.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Collection_CollectionItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.conversation.Collection.CollectionItem.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Collection_CollectionItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Collection.CollectionItem.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.conversation.Collection.CollectionItem)
}

::google::protobuf::uint8* Collection_CollectionItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Collection.CollectionItem.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  return target;
}

size_t Collection_CollectionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Collection_CollectionItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  GOOGLE_DCHECK_NE(&from, this);
  const Collection_CollectionItem* source =
      ::google::protobuf::DynamicCastToGenerated<Collection_CollectionItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.conversation.Collection.CollectionItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.conversation.Collection.CollectionItem)
    MergeFrom(*source);
  }
}

void Collection_CollectionItem::MergeFrom(const Collection_CollectionItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void Collection_CollectionItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Collection_CollectionItem::CopyFrom(const Collection_CollectionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.conversation.Collection.CollectionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Collection_CollectionItem::IsInitialized() const {
  return true;
}

void Collection_CollectionItem::Swap(Collection_CollectionItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Collection_CollectionItem::InternalSwap(Collection_CollectionItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Collection_CollectionItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Collection::InitAsDefaultInstance() {
}
class Collection::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Collection::kTitleFieldNumber;
const int Collection::kSubtitleFieldNumber;
const int Collection::kItemsFieldNumber;
const int Collection::kImageFillFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Collection::Collection()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.conversation.Collection)
}
Collection::Collection(const Collection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  subtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subtitle().size() > 0) {
    subtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtitle_);
  }
  image_fill_ = from.image_fill_;
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.conversation.Collection)
}

void Collection::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Collection_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto.base);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_fill_ = 0;
}

Collection::~Collection() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.conversation.Collection)
  SharedDtor();
}

void Collection::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Collection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Collection& Collection::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Collection_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto.base);
  return *internal_default_instance();
}


void Collection::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.conversation.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_fill_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Collection::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Collection*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.conversation.Collection.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string subtitle = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.conversation.Collection.subtitle");
        object = msg->mutable_subtitle();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .google.actions.sdk.v2.conversation.Collection.CollectionItem items = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::actions::sdk::v2::conversation::Collection_CollectionItem::_InternalParse;
          object = msg->add_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_image_fill(static_cast<::google::actions::sdk::v2::conversation::Image_ImageFill>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Collection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.conversation.Collection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.conversation.Collection.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subtitle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtitle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subtitle().data(), static_cast<int>(this->subtitle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.conversation.Collection.subtitle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.actions.sdk.v2.conversation.Collection.CollectionItem items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_image_fill(static_cast< ::google::actions::sdk::v2::conversation::Image_ImageFill >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.conversation.Collection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.conversation.Collection)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Collection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.conversation.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Collection.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtitle().data(), static_cast<int>(this->subtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Collection.subtitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subtitle(), output);
  }

  // repeated .google.actions.sdk.v2.conversation.Collection.CollectionItem items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->items(static_cast<int>(i)),
      output);
  }

  // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 4;
  if (this->image_fill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->image_fill(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.conversation.Collection)
}

::google::protobuf::uint8* Collection::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.conversation.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Collection.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtitle().data(), static_cast<int>(this->subtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Collection.subtitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subtitle(), target);
  }

  // repeated .google.actions.sdk.v2.conversation.Collection.CollectionItem items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->items(static_cast<int>(i)), target);
  }

  // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 4;
  if (this->image_fill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->image_fill(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.conversation.Collection)
  return target;
}

size_t Collection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.conversation.Collection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.actions.sdk.v2.conversation.Collection.CollectionItem items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subtitle());
  }

  // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 4;
  if (this->image_fill() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->image_fill());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Collection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.conversation.Collection)
  GOOGLE_DCHECK_NE(&from, this);
  const Collection* source =
      ::google::protobuf::DynamicCastToGenerated<Collection>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.conversation.Collection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.conversation.Collection)
    MergeFrom(*source);
  }
}

void Collection::MergeFrom(const Collection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.conversation.Collection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.subtitle().size() > 0) {

    subtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtitle_);
  }
  if (from.image_fill() != 0) {
    set_image_fill(from.image_fill());
  }
}

void Collection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.conversation.Collection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Collection::CopyFrom(const Collection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.conversation.Collection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Collection::IsInitialized() const {
  return true;
}

void Collection::Swap(Collection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Collection::InternalSwap(Collection* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subtitle_.Swap(&other->subtitle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(image_fill_, other->image_fill_);
}

::google::protobuf::Metadata Collection::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::conversation::Collection_CollectionItem* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::conversation::Collection_CollectionItem >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::conversation::Collection_CollectionItem >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::conversation::Collection* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::conversation::Collection >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::conversation::Collection >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
