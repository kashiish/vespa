// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/prompt/content/canvas.proto

#include "google/actions/sdk/v2/conversation/prompt/content/canvas.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class CanvasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Canvas> _instance;
} _Canvas_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
static void InitDefaultsCanvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::conversation::_Canvas_default_instance_;
    new (ptr) ::google::actions::sdk::v2::conversation::Canvas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::conversation::Canvas::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Canvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCanvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

void InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Canvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Canvas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Canvas, url_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Canvas, data_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Canvas, suppress_mic_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Canvas, enable_full_screen_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::actions::sdk::v2::conversation::Canvas)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::conversation::_Canvas_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto = {
  {}, AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto, "google/actions/sdk/v2/conversation/prompt/content/canvas.proto", schemas,
  file_default_instances, TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto::offsets,
  file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto, 1, file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto, file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto,
};

const char descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto[] =
  "\n>google/actions/sdk/v2/conversation/pro"
  "mpt/content/canvas.proto\022\"google.actions"
  ".sdk.v2.conversation\032\034google/protobuf/st"
  "ruct.proto\"m\n\006Canvas\022\013\n\003url\030\001 \001(\t\022$\n\004dat"
  "a\030\004 \003(\0132\026.google.protobuf.Value\022\024\n\014suppr"
  "ess_mic\030\003 \001(\010\022\032\n\022enable_full_screen\030\010 \001("
  "\010B\207\001\n&com.google.actions.sdk.v2.conversa"
  "tionB\013CanvasProtoP\001ZNgoogle.golang.org/g"
  "enproto/googleapis/actions/sdk/v2/conver"
  "sation;conversationb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto = {
  false, InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto, 
  descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto,
  "google/actions/sdk/v2/conversation/prompt/content/canvas.proto", &assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto, 387,
};

void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fstruct_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto = []() { AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto(); return true; }();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {

// ===================================================================

void Canvas::InitAsDefaultInstance() {
}
class Canvas::HasBitSetters {
 public:
};

void Canvas::clear_data() {
  data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Canvas::kUrlFieldNumber;
const int Canvas::kDataFieldNumber;
const int Canvas::kSuppressMicFieldNumber;
const int Canvas::kEnableFullScreenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Canvas::Canvas()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.conversation.Canvas)
}
Canvas::Canvas(const Canvas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&suppress_mic_, &from.suppress_mic_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_full_screen_) -
    reinterpret_cast<char*>(&suppress_mic_)) + sizeof(enable_full_screen_));
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.conversation.Canvas)
}

void Canvas::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Canvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto.base);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&suppress_mic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_full_screen_) -
      reinterpret_cast<char*>(&suppress_mic_)) + sizeof(enable_full_screen_));
}

Canvas::~Canvas() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.conversation.Canvas)
  SharedDtor();
}

void Canvas::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Canvas::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Canvas& Canvas::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Canvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto.base);
  return *internal_default_instance();
}


void Canvas::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.conversation.Canvas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&suppress_mic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_full_screen_) -
      reinterpret_cast<char*>(&suppress_mic_)) + sizeof(enable_full_screen_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Canvas::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Canvas*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.conversation.Canvas.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool suppress_mic = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_suppress_mic(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.protobuf.Value data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::Value::_InternalParse;
          object = msg->add_data();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // bool enable_full_screen = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_enable_full_screen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Canvas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.conversation.Canvas)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.conversation.Canvas.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool suppress_mic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &suppress_mic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Value data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_full_screen = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_full_screen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.conversation.Canvas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.conversation.Canvas)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Canvas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.conversation.Canvas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Canvas.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // bool suppress_mic = 3;
  if (this->suppress_mic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->suppress_mic(), output);
  }

  // repeated .google.protobuf.Value data = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->data(static_cast<int>(i)),
      output);
  }

  // bool enable_full_screen = 8;
  if (this->enable_full_screen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->enable_full_screen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.conversation.Canvas)
}

::google::protobuf::uint8* Canvas::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.conversation.Canvas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Canvas.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // bool suppress_mic = 3;
  if (this->suppress_mic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->suppress_mic(), target);
  }

  // repeated .google.protobuf.Value data = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->data(static_cast<int>(i)), target);
  }

  // bool enable_full_screen = 8;
  if (this->enable_full_screen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->enable_full_screen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.conversation.Canvas)
  return target;
}

size_t Canvas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.conversation.Canvas)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Value data = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // bool suppress_mic = 3;
  if (this->suppress_mic() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_full_screen = 8;
  if (this->enable_full_screen() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Canvas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.conversation.Canvas)
  GOOGLE_DCHECK_NE(&from, this);
  const Canvas* source =
      ::google::protobuf::DynamicCastToGenerated<Canvas>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.conversation.Canvas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.conversation.Canvas)
    MergeFrom(*source);
  }
}

void Canvas::MergeFrom(const Canvas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.conversation.Canvas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.suppress_mic() != 0) {
    set_suppress_mic(from.suppress_mic());
  }
  if (from.enable_full_screen() != 0) {
    set_enable_full_screen(from.enable_full_screen());
  }
}

void Canvas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.conversation.Canvas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Canvas::CopyFrom(const Canvas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.conversation.Canvas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Canvas::IsInitialized() const {
  return true;
}

void Canvas::Swap(Canvas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Canvas::InternalSwap(Canvas* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(suppress_mic_, other->suppress_mic_);
  swap(enable_full_screen_, other->enable_full_screen_);
}

::google::protobuf::Metadata Canvas::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::conversation::Canvas* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::conversation::Canvas >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::conversation::Canvas >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
