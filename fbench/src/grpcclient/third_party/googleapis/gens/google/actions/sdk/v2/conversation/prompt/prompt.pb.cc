// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/prompt/prompt.proto

#include "google/actions/sdk/v2/conversation/prompt/prompt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Canvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcontent_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_Content_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcontent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2flink_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Link_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2flink_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fsimple_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Simple_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fsimple_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fsuggestion_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Suggestion_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fsuggestion_2eproto;
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class PromptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Prompt> _instance;
} _Prompt_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
static void InitDefaultsPrompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::conversation::_Prompt_default_instance_;
    new (ptr) ::google::actions::sdk::v2::conversation::Prompt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::conversation::Prompt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Prompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsPrompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto}, {
      &scc_info_Simple_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fsimple_2eproto.base,
      &scc_info_Content_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcontent_2eproto.base,
      &scc_info_Suggestion_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fsuggestion_2eproto.base,
      &scc_info_Link_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2flink_2eproto.base,
      &scc_info_Canvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto.base,}};

void InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Prompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, append_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, override_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, first_simple_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, content_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, last_simple_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, suggestions_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, link_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Prompt, canvas_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::actions::sdk::v2::conversation::Prompt)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::conversation::_Prompt_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto = {
  {}, AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto, "google/actions/sdk/v2/conversation/prompt/prompt.proto", schemas,
  file_default_instances, TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto::offsets,
  file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto, 1, file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto, file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto,
};

const char descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto[] =
  "\n6google/actions/sdk/v2/conversation/pro"
  "mpt/prompt.proto\022\"google.actions.sdk.v2."
  "conversation\032>google/actions/sdk/v2/conv"
  "ersation/prompt/content/canvas.proto\032\?go"
  "ogle/actions/sdk/v2/conversation/prompt/"
  "content/content.proto\032<google/actions/sd"
  "k/v2/conversation/prompt/content/link.pr"
  "oto\0326google/actions/sdk/v2/conversation/"
  "prompt/simple.proto\032:google/actions/sdk/"
  "v2/conversation/prompt/suggestion.proto\""
  "\250\003\n\006Prompt\022\022\n\006append\030\001 \001(\010B\002\030\001\022\020\n\010overri"
  "de\030\010 \001(\010\022@\n\014first_simple\030\002 \001(\0132*.google."
  "actions.sdk.v2.conversation.Simple\022<\n\007co"
  "ntent\030\003 \001(\0132+.google.actions.sdk.v2.conv"
  "ersation.Content\022\?\n\013last_simple\030\004 \001(\0132*."
  "google.actions.sdk.v2.conversation.Simpl"
  "e\022C\n\013suggestions\030\005 \003(\0132..google.actions."
  "sdk.v2.conversation.Suggestion\0226\n\004link\030\006"
  " \001(\0132(.google.actions.sdk.v2.conversatio"
  "n.Link\022:\n\006canvas\030\t \001(\0132*.google.actions."
  "sdk.v2.conversation.CanvasB\207\001\n&com.googl"
  "e.actions.sdk.v2.conversationB\013PromptPro"
  "toP\001ZNgoogle.golang.org/genproto/googlea"
  "pis/actions/sdk/v2/conversation;conversa"
  "tionb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto = {
  false, InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto, 
  descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto,
  "google/actions/sdk/v2/conversation/prompt/prompt.proto", &assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto, 972,
};

void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcontent_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2flink_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fsimple_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fsuggestion_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto = []() { AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto(); return true; }();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {

// ===================================================================

void Prompt::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::conversation::_Prompt_default_instance_._instance.get_mutable()->first_simple_ = const_cast< ::google::actions::sdk::v2::conversation::Simple*>(
      ::google::actions::sdk::v2::conversation::Simple::internal_default_instance());
  ::google::actions::sdk::v2::conversation::_Prompt_default_instance_._instance.get_mutable()->content_ = const_cast< ::google::actions::sdk::v2::conversation::Content*>(
      ::google::actions::sdk::v2::conversation::Content::internal_default_instance());
  ::google::actions::sdk::v2::conversation::_Prompt_default_instance_._instance.get_mutable()->last_simple_ = const_cast< ::google::actions::sdk::v2::conversation::Simple*>(
      ::google::actions::sdk::v2::conversation::Simple::internal_default_instance());
  ::google::actions::sdk::v2::conversation::_Prompt_default_instance_._instance.get_mutable()->link_ = const_cast< ::google::actions::sdk::v2::conversation::Link*>(
      ::google::actions::sdk::v2::conversation::Link::internal_default_instance());
  ::google::actions::sdk::v2::conversation::_Prompt_default_instance_._instance.get_mutable()->canvas_ = const_cast< ::google::actions::sdk::v2::conversation::Canvas*>(
      ::google::actions::sdk::v2::conversation::Canvas::internal_default_instance());
}
class Prompt::HasBitSetters {
 public:
  static const ::google::actions::sdk::v2::conversation::Simple& first_simple(const Prompt* msg);
  static const ::google::actions::sdk::v2::conversation::Content& content(const Prompt* msg);
  static const ::google::actions::sdk::v2::conversation::Simple& last_simple(const Prompt* msg);
  static const ::google::actions::sdk::v2::conversation::Link& link(const Prompt* msg);
  static const ::google::actions::sdk::v2::conversation::Canvas& canvas(const Prompt* msg);
};

const ::google::actions::sdk::v2::conversation::Simple&
Prompt::HasBitSetters::first_simple(const Prompt* msg) {
  return *msg->first_simple_;
}
const ::google::actions::sdk::v2::conversation::Content&
Prompt::HasBitSetters::content(const Prompt* msg) {
  return *msg->content_;
}
const ::google::actions::sdk::v2::conversation::Simple&
Prompt::HasBitSetters::last_simple(const Prompt* msg) {
  return *msg->last_simple_;
}
const ::google::actions::sdk::v2::conversation::Link&
Prompt::HasBitSetters::link(const Prompt* msg) {
  return *msg->link_;
}
const ::google::actions::sdk::v2::conversation::Canvas&
Prompt::HasBitSetters::canvas(const Prompt* msg) {
  return *msg->canvas_;
}
void Prompt::clear_first_simple() {
  if (GetArenaNoVirtual() == nullptr && first_simple_ != nullptr) {
    delete first_simple_;
  }
  first_simple_ = nullptr;
}
void Prompt::clear_content() {
  if (GetArenaNoVirtual() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
}
void Prompt::clear_last_simple() {
  if (GetArenaNoVirtual() == nullptr && last_simple_ != nullptr) {
    delete last_simple_;
  }
  last_simple_ = nullptr;
}
void Prompt::clear_suggestions() {
  suggestions_.Clear();
}
void Prompt::clear_link() {
  if (GetArenaNoVirtual() == nullptr && link_ != nullptr) {
    delete link_;
  }
  link_ = nullptr;
}
void Prompt::clear_canvas() {
  if (GetArenaNoVirtual() == nullptr && canvas_ != nullptr) {
    delete canvas_;
  }
  canvas_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Prompt::kAppendFieldNumber;
const int Prompt::kOverrideFieldNumber;
const int Prompt::kFirstSimpleFieldNumber;
const int Prompt::kContentFieldNumber;
const int Prompt::kLastSimpleFieldNumber;
const int Prompt::kSuggestionsFieldNumber;
const int Prompt::kLinkFieldNumber;
const int Prompt::kCanvasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Prompt::Prompt()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.conversation.Prompt)
}
Prompt::Prompt(const Prompt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      suggestions_(from.suggestions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_first_simple()) {
    first_simple_ = new ::google::actions::sdk::v2::conversation::Simple(*from.first_simple_);
  } else {
    first_simple_ = nullptr;
  }
  if (from.has_content()) {
    content_ = new ::google::actions::sdk::v2::conversation::Content(*from.content_);
  } else {
    content_ = nullptr;
  }
  if (from.has_last_simple()) {
    last_simple_ = new ::google::actions::sdk::v2::conversation::Simple(*from.last_simple_);
  } else {
    last_simple_ = nullptr;
  }
  if (from.has_link()) {
    link_ = new ::google::actions::sdk::v2::conversation::Link(*from.link_);
  } else {
    link_ = nullptr;
  }
  if (from.has_canvas()) {
    canvas_ = new ::google::actions::sdk::v2::conversation::Canvas(*from.canvas_);
  } else {
    canvas_ = nullptr;
  }
  ::memcpy(&append_, &from.append_,
    static_cast<size_t>(reinterpret_cast<char*>(&override_) -
    reinterpret_cast<char*>(&append_)) + sizeof(override_));
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.conversation.Prompt)
}

void Prompt::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Prompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto.base);
  ::memset(&first_simple_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&override_) -
      reinterpret_cast<char*>(&first_simple_)) + sizeof(override_));
}

Prompt::~Prompt() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.conversation.Prompt)
  SharedDtor();
}

void Prompt::SharedDtor() {
  if (this != internal_default_instance()) delete first_simple_;
  if (this != internal_default_instance()) delete content_;
  if (this != internal_default_instance()) delete last_simple_;
  if (this != internal_default_instance()) delete link_;
  if (this != internal_default_instance()) delete canvas_;
}

void Prompt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Prompt& Prompt::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Prompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto.base);
  return *internal_default_instance();
}


void Prompt::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.conversation.Prompt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suggestions_.Clear();
  if (GetArenaNoVirtual() == nullptr && first_simple_ != nullptr) {
    delete first_simple_;
  }
  first_simple_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && last_simple_ != nullptr) {
    delete last_simple_;
  }
  last_simple_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && link_ != nullptr) {
    delete link_;
  }
  link_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && canvas_ != nullptr) {
    delete canvas_;
  }
  canvas_ = nullptr;
  ::memset(&append_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&override_) -
      reinterpret_cast<char*>(&append_)) + sizeof(override_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Prompt::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Prompt*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool append = 1 [deprecated = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_append(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.actions.sdk.v2.conversation.Simple first_simple = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Simple::_InternalParse;
        object = msg->mutable_first_simple();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.actions.sdk.v2.conversation.Content content = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Content::_InternalParse;
        object = msg->mutable_content();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.actions.sdk.v2.conversation.Simple last_simple = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Simple::_InternalParse;
        object = msg->mutable_last_simple();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .google.actions.sdk.v2.conversation.Suggestion suggestions = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::actions::sdk::v2::conversation::Suggestion::_InternalParse;
          object = msg->add_suggestions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // .google.actions.sdk.v2.conversation.Link link = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Link::_InternalParse;
        object = msg->mutable_link();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool override = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_override(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.actions.sdk.v2.conversation.Canvas canvas = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Canvas::_InternalParse;
        object = msg->mutable_canvas();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Prompt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.conversation.Prompt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool append = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &append_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Simple first_simple = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_first_simple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Content content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Simple last_simple = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_simple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.actions.sdk.v2.conversation.Suggestion suggestions = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_suggestions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Link link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool override = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &override_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Canvas canvas = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_canvas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.conversation.Prompt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.conversation.Prompt)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Prompt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.conversation.Prompt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool append = 1 [deprecated = true];
  if (this->append() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->append(), output);
  }

  // .google.actions.sdk.v2.conversation.Simple first_simple = 2;
  if (this->has_first_simple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::first_simple(this), output);
  }

  // .google.actions.sdk.v2.conversation.Content content = 3;
  if (this->has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::content(this), output);
  }

  // .google.actions.sdk.v2.conversation.Simple last_simple = 4;
  if (this->has_last_simple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::last_simple(this), output);
  }

  // repeated .google.actions.sdk.v2.conversation.Suggestion suggestions = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suggestions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->suggestions(static_cast<int>(i)),
      output);
  }

  // .google.actions.sdk.v2.conversation.Link link = 6;
  if (this->has_link()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::link(this), output);
  }

  // bool override = 8;
  if (this->override() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->override(), output);
  }

  // .google.actions.sdk.v2.conversation.Canvas canvas = 9;
  if (this->has_canvas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::canvas(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.conversation.Prompt)
}

::google::protobuf::uint8* Prompt::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.conversation.Prompt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool append = 1 [deprecated = true];
  if (this->append() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->append(), target);
  }

  // .google.actions.sdk.v2.conversation.Simple first_simple = 2;
  if (this->has_first_simple()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::first_simple(this), target);
  }

  // .google.actions.sdk.v2.conversation.Content content = 3;
  if (this->has_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::content(this), target);
  }

  // .google.actions.sdk.v2.conversation.Simple last_simple = 4;
  if (this->has_last_simple()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::last_simple(this), target);
  }

  // repeated .google.actions.sdk.v2.conversation.Suggestion suggestions = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suggestions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->suggestions(static_cast<int>(i)), target);
  }

  // .google.actions.sdk.v2.conversation.Link link = 6;
  if (this->has_link()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::link(this), target);
  }

  // bool override = 8;
  if (this->override() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->override(), target);
  }

  // .google.actions.sdk.v2.conversation.Canvas canvas = 9;
  if (this->has_canvas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::canvas(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.conversation.Prompt)
  return target;
}

size_t Prompt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.conversation.Prompt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.actions.sdk.v2.conversation.Suggestion suggestions = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->suggestions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->suggestions(static_cast<int>(i)));
    }
  }

  // .google.actions.sdk.v2.conversation.Simple first_simple = 2;
  if (this->has_first_simple()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *first_simple_);
  }

  // .google.actions.sdk.v2.conversation.Content content = 3;
  if (this->has_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_);
  }

  // .google.actions.sdk.v2.conversation.Simple last_simple = 4;
  if (this->has_last_simple()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_simple_);
  }

  // .google.actions.sdk.v2.conversation.Link link = 6;
  if (this->has_link()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *link_);
  }

  // .google.actions.sdk.v2.conversation.Canvas canvas = 9;
  if (this->has_canvas()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *canvas_);
  }

  // bool append = 1 [deprecated = true];
  if (this->append() != 0) {
    total_size += 1 + 1;
  }

  // bool override = 8;
  if (this->override() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Prompt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.conversation.Prompt)
  GOOGLE_DCHECK_NE(&from, this);
  const Prompt* source =
      ::google::protobuf::DynamicCastToGenerated<Prompt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.conversation.Prompt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.conversation.Prompt)
    MergeFrom(*source);
  }
}

void Prompt::MergeFrom(const Prompt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.conversation.Prompt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  suggestions_.MergeFrom(from.suggestions_);
  if (from.has_first_simple()) {
    mutable_first_simple()->::google::actions::sdk::v2::conversation::Simple::MergeFrom(from.first_simple());
  }
  if (from.has_content()) {
    mutable_content()->::google::actions::sdk::v2::conversation::Content::MergeFrom(from.content());
  }
  if (from.has_last_simple()) {
    mutable_last_simple()->::google::actions::sdk::v2::conversation::Simple::MergeFrom(from.last_simple());
  }
  if (from.has_link()) {
    mutable_link()->::google::actions::sdk::v2::conversation::Link::MergeFrom(from.link());
  }
  if (from.has_canvas()) {
    mutable_canvas()->::google::actions::sdk::v2::conversation::Canvas::MergeFrom(from.canvas());
  }
  if (from.append() != 0) {
    set_append(from.append());
  }
  if (from.override() != 0) {
    set_override(from.override());
  }
}

void Prompt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.conversation.Prompt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Prompt::CopyFrom(const Prompt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.conversation.Prompt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Prompt::IsInitialized() const {
  return true;
}

void Prompt::Swap(Prompt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Prompt::InternalSwap(Prompt* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&suggestions_)->InternalSwap(CastToBase(&other->suggestions_));
  swap(first_simple_, other->first_simple_);
  swap(content_, other->content_);
  swap(last_simple_, other->last_simple_);
  swap(link_, other->link_);
  swap(canvas_, other->canvas_);
  swap(append_, other->append_);
  swap(override_, other->override_);
}

::google::protobuf::Metadata Prompt::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::conversation::Prompt* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::conversation::Prompt >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::conversation::Prompt >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
