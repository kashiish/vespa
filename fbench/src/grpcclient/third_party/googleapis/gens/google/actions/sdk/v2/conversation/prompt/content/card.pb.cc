// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/prompt/content/card.proto

#include "google/actions/sdk/v2/conversation/prompt/content/card.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fimage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Image_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fimage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2flink_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Link_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2flink_2eproto;
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class CardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Card> _instance;
} _Card_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
static void InitDefaultsCard_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::conversation::_Card_default_instance_;
    new (ptr) ::google::actions::sdk::v2::conversation::Card();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::conversation::Card::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Card_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCard_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto}, {
      &scc_info_Image_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fimage_2eproto.base,
      &scc_info_Link_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2flink_2eproto.base,}};

void InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Card_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Card, title_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Card, subtitle_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Card, text_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Card, image_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Card, image_fill_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Card, button_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::actions::sdk::v2::conversation::Card)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::conversation::_Card_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto = {
  {}, AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto, "google/actions/sdk/v2/conversation/prompt/content/card.proto", schemas,
  file_default_instances, TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto::offsets,
  file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto, 1, file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto, file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto,
};

const char descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto[] =
  "\n<google/actions/sdk/v2/conversation/pro"
  "mpt/content/card.proto\022\"google.actions.s"
  "dk.v2.conversation\032=google/actions/sdk/v"
  "2/conversation/prompt/content/image.prot"
  "o\032<google/actions/sdk/v2/conversation/pr"
  "ompt/content/link.proto\"\362\001\n\004Card\022\r\n\005titl"
  "e\030\001 \001(\t\022\020\n\010subtitle\030\002 \001(\t\022\014\n\004text\030\003 \001(\t\022"
  "8\n\005image\030\004 \001(\0132).google.actions.sdk.v2.c"
  "onversation.Image\022G\n\nimage_fill\030\005 \001(\01623."
  "google.actions.sdk.v2.conversation.Image"
  ".ImageFill\0228\n\006button\030\006 \001(\0132(.google.acti"
  "ons.sdk.v2.conversation.LinkB\205\001\n&com.goo"
  "gle.actions.sdk.v2.conversationB\tCardPro"
  "toP\001ZNgoogle.golang.org/genproto/googlea"
  "pis/actions/sdk/v2/conversation;conversa"
  "tionb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto = {
  false, InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto, 
  descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto,
  "google/actions/sdk/v2/conversation/prompt/content/card.proto", &assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto, 612,
};

void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fimage_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2flink_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto = []() { AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto(); return true; }();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {

// ===================================================================

void Card::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::conversation::_Card_default_instance_._instance.get_mutable()->image_ = const_cast< ::google::actions::sdk::v2::conversation::Image*>(
      ::google::actions::sdk::v2::conversation::Image::internal_default_instance());
  ::google::actions::sdk::v2::conversation::_Card_default_instance_._instance.get_mutable()->button_ = const_cast< ::google::actions::sdk::v2::conversation::Link*>(
      ::google::actions::sdk::v2::conversation::Link::internal_default_instance());
}
class Card::HasBitSetters {
 public:
  static const ::google::actions::sdk::v2::conversation::Image& image(const Card* msg);
  static const ::google::actions::sdk::v2::conversation::Link& button(const Card* msg);
};

const ::google::actions::sdk::v2::conversation::Image&
Card::HasBitSetters::image(const Card* msg) {
  return *msg->image_;
}
const ::google::actions::sdk::v2::conversation::Link&
Card::HasBitSetters::button(const Card* msg) {
  return *msg->button_;
}
void Card::clear_image() {
  if (GetArenaNoVirtual() == nullptr && image_ != nullptr) {
    delete image_;
  }
  image_ = nullptr;
}
void Card::clear_button() {
  if (GetArenaNoVirtual() == nullptr && button_ != nullptr) {
    delete button_;
  }
  button_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Card::kTitleFieldNumber;
const int Card::kSubtitleFieldNumber;
const int Card::kTextFieldNumber;
const int Card::kImageFieldNumber;
const int Card::kImageFillFieldNumber;
const int Card::kButtonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Card::Card()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.conversation.Card)
}
Card::Card(const Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  subtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subtitle().size() > 0) {
    subtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtitle_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_image()) {
    image_ = new ::google::actions::sdk::v2::conversation::Image(*from.image_);
  } else {
    image_ = nullptr;
  }
  if (from.has_button()) {
    button_ = new ::google::actions::sdk::v2::conversation::Link(*from.button_);
  } else {
    button_ = nullptr;
  }
  image_fill_ = from.image_fill_;
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.conversation.Card)
}

void Card::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Card_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto.base);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_fill_) -
      reinterpret_cast<char*>(&image_)) + sizeof(image_fill_));
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.conversation.Card)
  SharedDtor();
}

void Card::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete image_;
  if (this != internal_default_instance()) delete button_;
}

void Card::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Card& Card::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Card_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto.base);
  return *internal_default_instance();
}


void Card::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.conversation.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && image_ != nullptr) {
    delete image_;
  }
  image_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && button_ != nullptr) {
    delete button_;
  }
  button_ = nullptr;
  image_fill_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Card::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Card*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.conversation.Card.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string subtitle = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.conversation.Card.subtitle");
        object = msg->mutable_subtitle();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string text = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.conversation.Card.text");
        object = msg->mutable_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.actions.sdk.v2.conversation.Image image = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Image::_InternalParse;
        object = msg->mutable_image();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_image_fill(static_cast<::google::actions::sdk::v2::conversation::Image_ImageFill>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.actions.sdk.v2.conversation.Link button = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Link::_InternalParse;
        object = msg->mutable_button();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.conversation.Card)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.conversation.Card.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subtitle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtitle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subtitle().data(), static_cast<int>(this->subtitle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.conversation.Card.subtitle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.conversation.Card.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Image image = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_image_fill(static_cast< ::google::actions::sdk::v2::conversation::Image_ImageFill >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Link button = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_button()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.conversation.Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.conversation.Card)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.conversation.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Card.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtitle().data(), static_cast<int>(this->subtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Card.subtitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subtitle(), output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Card.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // .google.actions.sdk.v2.conversation.Image image = 4;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::image(this), output);
  }

  // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 5;
  if (this->image_fill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->image_fill(), output);
  }

  // .google.actions.sdk.v2.conversation.Link button = 6;
  if (this->has_button()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::button(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.conversation.Card)
}

::google::protobuf::uint8* Card::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.conversation.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Card.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtitle().data(), static_cast<int>(this->subtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Card.subtitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subtitle(), target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.conversation.Card.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // .google.actions.sdk.v2.conversation.Image image = 4;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::image(this), target);
  }

  // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 5;
  if (this->image_fill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->image_fill(), target);
  }

  // .google.actions.sdk.v2.conversation.Link button = 6;
  if (this->has_button()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::button(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.conversation.Card)
  return target;
}

size_t Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.conversation.Card)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subtitle());
  }

  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .google.actions.sdk.v2.conversation.Image image = 4;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // .google.actions.sdk.v2.conversation.Link button = 6;
  if (this->has_button()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *button_);
  }

  // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 5;
  if (this->image_fill() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->image_fill());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.conversation.Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Card* source =
      ::google::protobuf::DynamicCastToGenerated<Card>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.conversation.Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.conversation.Card)
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.conversation.Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.subtitle().size() > 0) {

    subtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtitle_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_image()) {
    mutable_image()->::google::actions::sdk::v2::conversation::Image::MergeFrom(from.image());
  }
  if (from.has_button()) {
    mutable_button()->::google::actions::sdk::v2::conversation::Link::MergeFrom(from.button());
  }
  if (from.image_fill() != 0) {
    set_image_fill(from.image_fill());
  }
}

void Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.conversation.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.conversation.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  return true;
}

void Card::Swap(Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Card::InternalSwap(Card* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subtitle_.Swap(&other->subtitle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(image_, other->image_);
  swap(button_, other->button_);
  swap(image_fill_, other->image_fill_);
}

::google::protobuf::Metadata Card::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcard_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::conversation::Card* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::conversation::Card >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::conversation::Card >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
