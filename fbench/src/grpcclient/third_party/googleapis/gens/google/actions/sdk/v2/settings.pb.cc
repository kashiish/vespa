// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/settings.proto

#include "google/actions/sdk/v2/settings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2faccount_5flinking_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountLinking_google_2factions_2fsdk_2fv2_2faccount_5flinking_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LocalizedSettings_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fsurface_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SurfaceRequirements_google_2factions_2fsdk_2fv2_2fsurface_2eproto;
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
class SettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Settings> _instance;
} _Settings_default_instance_;
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
static void InitDefaultsSettings_google_2factions_2fsdk_2fv2_2fsettings_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_Settings_default_instance_;
    new (ptr) ::google::actions::sdk::v2::Settings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::Settings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Settings_google_2factions_2fsdk_2fv2_2fsettings_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSettings_google_2factions_2fsdk_2fv2_2fsettings_2eproto}, {
      &scc_info_SurfaceRequirements_google_2factions_2fsdk_2fv2_2fsurface_2eproto.base,
      &scc_info_LocalizedSettings_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto.base,
      &scc_info_AccountLinking_google_2factions_2fsdk_2fv2_2faccount_5flinking_2eproto.base,}};

void InitDefaults_google_2factions_2fsdk_2fv2_2fsettings_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Settings_google_2factions_2fsdk_2fv2_2fsettings_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2factions_2fsdk_2fv2_2fsettings_2eproto[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2factions_2fsdk_2fv2_2fsettings_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, default_locale_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, enabled_regions_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, disabled_regions_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, category_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, uses_transactions_api_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, uses_digital_purchase_api_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, uses_interactive_canvas_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, uses_home_storage_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, designed_for_family_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, contains_alcohol_or_tobacco_content_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, keeps_mic_open_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, surface_requirements_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, testing_instructions_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, localized_settings_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, account_linking_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Settings, selected_android_apps_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::actions::sdk::v2::Settings)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_Settings_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2factions_2fsdk_2fv2_2fsettings_2eproto = {
  {}, AddDescriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto, "google/actions/sdk/v2/settings.proto", schemas,
  file_default_instances, TableStruct_google_2factions_2fsdk_2fv2_2fsettings_2eproto::offsets,
  file_level_metadata_google_2factions_2fsdk_2fv2_2fsettings_2eproto, 1, file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto, file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto,
};

const char descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fsettings_2eproto[] =
  "\n$google/actions/sdk/v2/settings.proto\022\025"
  "google.actions.sdk.v2\032+google/actions/sd"
  "k/v2/account_linking.proto\032.google/actio"
  "ns/sdk/v2/localized_settings.proto\032#goog"
  "le/actions/sdk/v2/surface.proto\"\257\010\n\010Sett"
  "ings\022\022\n\nproject_id\030\001 \001(\t\022\026\n\016default_loca"
  "le\030\002 \001(\t\022\027\n\017enabled_regions\030\003 \003(\t\022\030\n\020dis"
  "abled_regions\030\004 \003(\t\022:\n\010category\030\005 \001(\0162(."
  "google.actions.sdk.v2.Settings.Category\022"
  "\035\n\025uses_transactions_api\030\006 \001(\010\022!\n\031uses_d"
  "igital_purchase_api\030\007 \001(\010\022\037\n\027uses_intera"
  "ctive_canvas\030\010 \001(\010\022\031\n\021uses_home_storage\030"
  "\021 \001(\010\022\033\n\023designed_for_family\030\t \001(\010\022+\n#co"
  "ntains_alcohol_or_tobacco_content\030\013 \001(\010\022"
  "\026\n\016keeps_mic_open\030\014 \001(\010\022H\n\024surface_requi"
  "rements\030\r \001(\0132*.google.actions.sdk.v2.Su"
  "rfaceRequirements\022\034\n\024testing_instruction"
  "s\030\016 \001(\t\022D\n\022localized_settings\030\017 \001(\0132(.go"
  "ogle.actions.sdk.v2.LocalizedSettings\022>\n"
  "\017account_linking\030\020 \001(\0132%.google.actions."
  "sdk.v2.AccountLinking\022\035\n\025selected_androi"
  "d_apps\030\024 \003(\t\"\232\003\n\010Category\022\030\n\024CATEGORY_UN"
  "SPECIFIED\020\000\022\030\n\024BUSINESS_AND_FINANCE\020\002\022\033\n"
  "\027EDUCATION_AND_REFERENCE\020\003\022\022\n\016FOOD_AND_D"
  "RINK\020\004\022\024\n\020GAMES_AND_TRIVIA\020\005\022\026\n\022HEALTH_A"
  "ND_FITNESS\020\006\022\023\n\017KIDS_AND_FAMILY\020\024\022\r\n\tLIF"
  "ESTYLE\020\007\022\t\n\005LOCAL\020\010\022\021\n\rMOVIES_AND_TV\020\t\022\023"
  "\n\017MUSIC_AND_AUDIO\020\n\022\010\n\004NEWS\020\001\022\025\n\021NOVELTY"
  "_AND_HUMOR\020\013\022\020\n\014PRODUCTIVITY\020\014\022\014\n\010SHOPPI"
  "NG\020\r\022\n\n\006SOCIAL\020\016\022\n\n\006SPORTS\020\017\022\035\n\031TRAVEL_A"
  "ND_TRANSPORTATION\020\020\022\r\n\tUTILITIES\020\021\022\013\n\007WE"
  "ATHER\020\022\022\020\n\014HOME_CONTROL\020\023Bf\n\031com.google."
  "actions.sdk.v2B\rSettingsProtoP\001Z8google."
  "golang.org/genproto/googleapis/actions/s"
  "dk/v2;sdkb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2factions_2fsdk_2fv2_2fsettings_2eproto = {
  false, InitDefaults_google_2factions_2fsdk_2fv2_2fsettings_2eproto, 
  descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fsettings_2eproto,
  "google/actions/sdk/v2/settings.proto", &assign_descriptors_table_google_2factions_2fsdk_2fv2_2fsettings_2eproto, 1377,
};

void AddDescriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2faccount_5flinking_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2flocalized_5fsettings_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fsurface_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2factions_2fsdk_2fv2_2fsettings_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2factions_2fsdk_2fv2_2fsettings_2eproto = []() { AddDescriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto(); return true; }();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
const ::google::protobuf::EnumDescriptor* Settings_Category_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2factions_2fsdk_2fv2_2fsettings_2eproto);
  return file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto[0];
}
bool Settings_Category_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Settings_Category Settings::CATEGORY_UNSPECIFIED;
const Settings_Category Settings::BUSINESS_AND_FINANCE;
const Settings_Category Settings::EDUCATION_AND_REFERENCE;
const Settings_Category Settings::FOOD_AND_DRINK;
const Settings_Category Settings::GAMES_AND_TRIVIA;
const Settings_Category Settings::HEALTH_AND_FITNESS;
const Settings_Category Settings::KIDS_AND_FAMILY;
const Settings_Category Settings::LIFESTYLE;
const Settings_Category Settings::LOCAL;
const Settings_Category Settings::MOVIES_AND_TV;
const Settings_Category Settings::MUSIC_AND_AUDIO;
const Settings_Category Settings::NEWS;
const Settings_Category Settings::NOVELTY_AND_HUMOR;
const Settings_Category Settings::PRODUCTIVITY;
const Settings_Category Settings::SHOPPING;
const Settings_Category Settings::SOCIAL;
const Settings_Category Settings::SPORTS;
const Settings_Category Settings::TRAVEL_AND_TRANSPORTATION;
const Settings_Category Settings::UTILITIES;
const Settings_Category Settings::WEATHER;
const Settings_Category Settings::HOME_CONTROL;
const Settings_Category Settings::Category_MIN;
const Settings_Category Settings::Category_MAX;
const int Settings::Category_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Settings::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::_Settings_default_instance_._instance.get_mutable()->surface_requirements_ = const_cast< ::google::actions::sdk::v2::SurfaceRequirements*>(
      ::google::actions::sdk::v2::SurfaceRequirements::internal_default_instance());
  ::google::actions::sdk::v2::_Settings_default_instance_._instance.get_mutable()->localized_settings_ = const_cast< ::google::actions::sdk::v2::LocalizedSettings*>(
      ::google::actions::sdk::v2::LocalizedSettings::internal_default_instance());
  ::google::actions::sdk::v2::_Settings_default_instance_._instance.get_mutable()->account_linking_ = const_cast< ::google::actions::sdk::v2::AccountLinking*>(
      ::google::actions::sdk::v2::AccountLinking::internal_default_instance());
}
class Settings::HasBitSetters {
 public:
  static const ::google::actions::sdk::v2::SurfaceRequirements& surface_requirements(const Settings* msg);
  static const ::google::actions::sdk::v2::LocalizedSettings& localized_settings(const Settings* msg);
  static const ::google::actions::sdk::v2::AccountLinking& account_linking(const Settings* msg);
};

const ::google::actions::sdk::v2::SurfaceRequirements&
Settings::HasBitSetters::surface_requirements(const Settings* msg) {
  return *msg->surface_requirements_;
}
const ::google::actions::sdk::v2::LocalizedSettings&
Settings::HasBitSetters::localized_settings(const Settings* msg) {
  return *msg->localized_settings_;
}
const ::google::actions::sdk::v2::AccountLinking&
Settings::HasBitSetters::account_linking(const Settings* msg) {
  return *msg->account_linking_;
}
void Settings::clear_surface_requirements() {
  if (GetArenaNoVirtual() == nullptr && surface_requirements_ != nullptr) {
    delete surface_requirements_;
  }
  surface_requirements_ = nullptr;
}
void Settings::clear_localized_settings() {
  if (GetArenaNoVirtual() == nullptr && localized_settings_ != nullptr) {
    delete localized_settings_;
  }
  localized_settings_ = nullptr;
}
void Settings::clear_account_linking() {
  if (GetArenaNoVirtual() == nullptr && account_linking_ != nullptr) {
    delete account_linking_;
  }
  account_linking_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Settings::kProjectIdFieldNumber;
const int Settings::kDefaultLocaleFieldNumber;
const int Settings::kEnabledRegionsFieldNumber;
const int Settings::kDisabledRegionsFieldNumber;
const int Settings::kCategoryFieldNumber;
const int Settings::kUsesTransactionsApiFieldNumber;
const int Settings::kUsesDigitalPurchaseApiFieldNumber;
const int Settings::kUsesInteractiveCanvasFieldNumber;
const int Settings::kUsesHomeStorageFieldNumber;
const int Settings::kDesignedForFamilyFieldNumber;
const int Settings::kContainsAlcoholOrTobaccoContentFieldNumber;
const int Settings::kKeepsMicOpenFieldNumber;
const int Settings::kSurfaceRequirementsFieldNumber;
const int Settings::kTestingInstructionsFieldNumber;
const int Settings::kLocalizedSettingsFieldNumber;
const int Settings::kAccountLinkingFieldNumber;
const int Settings::kSelectedAndroidAppsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Settings::Settings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.Settings)
}
Settings::Settings(const Settings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      enabled_regions_(from.enabled_regions_),
      disabled_regions_(from.disabled_regions_),
      selected_android_apps_(from.selected_android_apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  default_locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_locale().size() > 0) {
    default_locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_locale_);
  }
  testing_instructions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.testing_instructions().size() > 0) {
    testing_instructions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.testing_instructions_);
  }
  if (from.has_surface_requirements()) {
    surface_requirements_ = new ::google::actions::sdk::v2::SurfaceRequirements(*from.surface_requirements_);
  } else {
    surface_requirements_ = nullptr;
  }
  if (from.has_localized_settings()) {
    localized_settings_ = new ::google::actions::sdk::v2::LocalizedSettings(*from.localized_settings_);
  } else {
    localized_settings_ = nullptr;
  }
  if (from.has_account_linking()) {
    account_linking_ = new ::google::actions::sdk::v2::AccountLinking(*from.account_linking_);
  } else {
    account_linking_ = nullptr;
  }
  ::memcpy(&category_, &from.category_,
    static_cast<size_t>(reinterpret_cast<char*>(&keeps_mic_open_) -
    reinterpret_cast<char*>(&category_)) + sizeof(keeps_mic_open_));
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.Settings)
}

void Settings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Settings_google_2factions_2fsdk_2fv2_2fsettings_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  testing_instructions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&surface_requirements_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keeps_mic_open_) -
      reinterpret_cast<char*>(&surface_requirements_)) + sizeof(keeps_mic_open_));
}

Settings::~Settings() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.Settings)
  SharedDtor();
}

void Settings::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  testing_instructions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete surface_requirements_;
  if (this != internal_default_instance()) delete localized_settings_;
  if (this != internal_default_instance()) delete account_linking_;
}

void Settings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Settings& Settings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Settings_google_2factions_2fsdk_2fv2_2fsettings_2eproto.base);
  return *internal_default_instance();
}


void Settings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_regions_.Clear();
  disabled_regions_.Clear();
  selected_android_apps_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  testing_instructions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && surface_requirements_ != nullptr) {
    delete surface_requirements_;
  }
  surface_requirements_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && localized_settings_ != nullptr) {
    delete localized_settings_;
  }
  localized_settings_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && account_linking_ != nullptr) {
    delete account_linking_;
  }
  account_linking_ = nullptr;
  ::memset(&category_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keeps_mic_open_) -
      reinterpret_cast<char*>(&category_)) + sizeof(keeps_mic_open_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Settings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Settings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Settings.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string default_locale = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Settings.default_locale");
        object = msg->mutable_default_locale();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string enabled_regions = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Settings.enabled_regions");
          object = msg->add_enabled_regions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated string disabled_regions = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Settings.disabled_regions");
          object = msg->add_disabled_regions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // .google.actions.sdk.v2.Settings.Category category = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_category(static_cast<::google::actions::sdk::v2::Settings_Category>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool uses_transactions_api = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_uses_transactions_api(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool uses_digital_purchase_api = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_uses_digital_purchase_api(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool uses_interactive_canvas = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_uses_interactive_canvas(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool designed_for_family = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_designed_for_family(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool contains_alcohol_or_tobacco_content = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_contains_alcohol_or_tobacco_content(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool keeps_mic_open = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_keeps_mic_open(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.actions.sdk.v2.SurfaceRequirements surface_requirements = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::SurfaceRequirements::_InternalParse;
        object = msg->mutable_surface_requirements();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string testing_instructions = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Settings.testing_instructions");
        object = msg->mutable_testing_instructions();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.actions.sdk.v2.LocalizedSettings localized_settings = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::LocalizedSettings::_InternalParse;
        object = msg->mutable_localized_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.actions.sdk.v2.AccountLinking account_linking = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::AccountLinking::_InternalParse;
        object = msg->mutable_account_linking();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool uses_home_storage = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 136) goto handle_unusual;
        msg->set_uses_home_storage(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string selected_android_apps = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Settings.selected_android_apps");
          object = msg->add_selected_android_apps();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 418 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Settings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.Settings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Settings.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_locale = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_locale().data(), static_cast<int>(this->default_locale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Settings.default_locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string enabled_regions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_enabled_regions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enabled_regions(this->enabled_regions_size() - 1).data(),
            static_cast<int>(this->enabled_regions(this->enabled_regions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Settings.enabled_regions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string disabled_regions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_disabled_regions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->disabled_regions(this->disabled_regions_size() - 1).data(),
            static_cast<int>(this->disabled_regions(this->disabled_regions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Settings.disabled_regions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.Settings.Category category = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_category(static_cast< ::google::actions::sdk::v2::Settings_Category >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool uses_transactions_api = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uses_transactions_api_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool uses_digital_purchase_api = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uses_digital_purchase_api_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool uses_interactive_canvas = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uses_interactive_canvas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool designed_for_family = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &designed_for_family_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool contains_alcohol_or_tobacco_content = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &contains_alcohol_or_tobacco_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool keeps_mic_open = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keeps_mic_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.SurfaceRequirements surface_requirements = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_surface_requirements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string testing_instructions = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_testing_instructions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->testing_instructions().data(), static_cast<int>(this->testing_instructions().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Settings.testing_instructions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.LocalizedSettings localized_settings = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_localized_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.AccountLinking account_linking = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_account_linking()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool uses_home_storage = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (136 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uses_home_storage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string selected_android_apps = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_selected_android_apps()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selected_android_apps(this->selected_android_apps_size() - 1).data(),
            static_cast<int>(this->selected_android_apps(this->selected_android_apps_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Settings.selected_android_apps"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.Settings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.Settings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Settings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string default_locale = 2;
  if (this->default_locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_locale().data(), static_cast<int>(this->default_locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.default_locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->default_locale(), output);
  }

  // repeated string enabled_regions = 3;
  for (int i = 0, n = this->enabled_regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enabled_regions(i).data(), static_cast<int>(this->enabled_regions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.enabled_regions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->enabled_regions(i), output);
  }

  // repeated string disabled_regions = 4;
  for (int i = 0, n = this->disabled_regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disabled_regions(i).data(), static_cast<int>(this->disabled_regions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.disabled_regions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->disabled_regions(i), output);
  }

  // .google.actions.sdk.v2.Settings.Category category = 5;
  if (this->category() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->category(), output);
  }

  // bool uses_transactions_api = 6;
  if (this->uses_transactions_api() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->uses_transactions_api(), output);
  }

  // bool uses_digital_purchase_api = 7;
  if (this->uses_digital_purchase_api() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->uses_digital_purchase_api(), output);
  }

  // bool uses_interactive_canvas = 8;
  if (this->uses_interactive_canvas() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->uses_interactive_canvas(), output);
  }

  // bool designed_for_family = 9;
  if (this->designed_for_family() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->designed_for_family(), output);
  }

  // bool contains_alcohol_or_tobacco_content = 11;
  if (this->contains_alcohol_or_tobacco_content() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->contains_alcohol_or_tobacco_content(), output);
  }

  // bool keeps_mic_open = 12;
  if (this->keeps_mic_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->keeps_mic_open(), output);
  }

  // .google.actions.sdk.v2.SurfaceRequirements surface_requirements = 13;
  if (this->has_surface_requirements()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::surface_requirements(this), output);
  }

  // string testing_instructions = 14;
  if (this->testing_instructions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->testing_instructions().data(), static_cast<int>(this->testing_instructions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.testing_instructions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->testing_instructions(), output);
  }

  // .google.actions.sdk.v2.LocalizedSettings localized_settings = 15;
  if (this->has_localized_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::localized_settings(this), output);
  }

  // .google.actions.sdk.v2.AccountLinking account_linking = 16;
  if (this->has_account_linking()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, HasBitSetters::account_linking(this), output);
  }

  // bool uses_home_storage = 17;
  if (this->uses_home_storage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->uses_home_storage(), output);
  }

  // repeated string selected_android_apps = 20;
  for (int i = 0, n = this->selected_android_apps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selected_android_apps(i).data(), static_cast<int>(this->selected_android_apps(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.selected_android_apps");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->selected_android_apps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.Settings)
}

::google::protobuf::uint8* Settings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string default_locale = 2;
  if (this->default_locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_locale().data(), static_cast<int>(this->default_locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.default_locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->default_locale(), target);
  }

  // repeated string enabled_regions = 3;
  for (int i = 0, n = this->enabled_regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enabled_regions(i).data(), static_cast<int>(this->enabled_regions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.enabled_regions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->enabled_regions(i), target);
  }

  // repeated string disabled_regions = 4;
  for (int i = 0, n = this->disabled_regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disabled_regions(i).data(), static_cast<int>(this->disabled_regions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.disabled_regions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->disabled_regions(i), target);
  }

  // .google.actions.sdk.v2.Settings.Category category = 5;
  if (this->category() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->category(), target);
  }

  // bool uses_transactions_api = 6;
  if (this->uses_transactions_api() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->uses_transactions_api(), target);
  }

  // bool uses_digital_purchase_api = 7;
  if (this->uses_digital_purchase_api() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->uses_digital_purchase_api(), target);
  }

  // bool uses_interactive_canvas = 8;
  if (this->uses_interactive_canvas() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->uses_interactive_canvas(), target);
  }

  // bool designed_for_family = 9;
  if (this->designed_for_family() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->designed_for_family(), target);
  }

  // bool contains_alcohol_or_tobacco_content = 11;
  if (this->contains_alcohol_or_tobacco_content() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->contains_alcohol_or_tobacco_content(), target);
  }

  // bool keeps_mic_open = 12;
  if (this->keeps_mic_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->keeps_mic_open(), target);
  }

  // .google.actions.sdk.v2.SurfaceRequirements surface_requirements = 13;
  if (this->has_surface_requirements()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::surface_requirements(this), target);
  }

  // string testing_instructions = 14;
  if (this->testing_instructions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->testing_instructions().data(), static_cast<int>(this->testing_instructions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.testing_instructions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->testing_instructions(), target);
  }

  // .google.actions.sdk.v2.LocalizedSettings localized_settings = 15;
  if (this->has_localized_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::localized_settings(this), target);
  }

  // .google.actions.sdk.v2.AccountLinking account_linking = 16;
  if (this->has_account_linking()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, HasBitSetters::account_linking(this), target);
  }

  // bool uses_home_storage = 17;
  if (this->uses_home_storage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->uses_home_storage(), target);
  }

  // repeated string selected_android_apps = 20;
  for (int i = 0, n = this->selected_android_apps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selected_android_apps(i).data(), static_cast<int>(this->selected_android_apps(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Settings.selected_android_apps");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(20, this->selected_android_apps(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.Settings)
  return target;
}

size_t Settings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.Settings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string enabled_regions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->enabled_regions_size());
  for (int i = 0, n = this->enabled_regions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->enabled_regions(i));
  }

  // repeated string disabled_regions = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->disabled_regions_size());
  for (int i = 0, n = this->disabled_regions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->disabled_regions(i));
  }

  // repeated string selected_android_apps = 20;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->selected_android_apps_size());
  for (int i = 0, n = this->selected_android_apps_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->selected_android_apps(i));
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string default_locale = 2;
  if (this->default_locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_locale());
  }

  // string testing_instructions = 14;
  if (this->testing_instructions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->testing_instructions());
  }

  // .google.actions.sdk.v2.SurfaceRequirements surface_requirements = 13;
  if (this->has_surface_requirements()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *surface_requirements_);
  }

  // .google.actions.sdk.v2.LocalizedSettings localized_settings = 15;
  if (this->has_localized_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *localized_settings_);
  }

  // .google.actions.sdk.v2.AccountLinking account_linking = 16;
  if (this->has_account_linking()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *account_linking_);
  }

  // .google.actions.sdk.v2.Settings.Category category = 5;
  if (this->category() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->category());
  }

  // bool uses_transactions_api = 6;
  if (this->uses_transactions_api() != 0) {
    total_size += 1 + 1;
  }

  // bool uses_digital_purchase_api = 7;
  if (this->uses_digital_purchase_api() != 0) {
    total_size += 1 + 1;
  }

  // bool uses_interactive_canvas = 8;
  if (this->uses_interactive_canvas() != 0) {
    total_size += 1 + 1;
  }

  // bool uses_home_storage = 17;
  if (this->uses_home_storage() != 0) {
    total_size += 2 + 1;
  }

  // bool designed_for_family = 9;
  if (this->designed_for_family() != 0) {
    total_size += 1 + 1;
  }

  // bool contains_alcohol_or_tobacco_content = 11;
  if (this->contains_alcohol_or_tobacco_content() != 0) {
    total_size += 1 + 1;
  }

  // bool keeps_mic_open = 12;
  if (this->keeps_mic_open() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Settings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.Settings)
  GOOGLE_DCHECK_NE(&from, this);
  const Settings* source =
      ::google::protobuf::DynamicCastToGenerated<Settings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.Settings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.Settings)
    MergeFrom(*source);
  }
}

void Settings::MergeFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.Settings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  enabled_regions_.MergeFrom(from.enabled_regions_);
  disabled_regions_.MergeFrom(from.disabled_regions_);
  selected_android_apps_.MergeFrom(from.selected_android_apps_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.default_locale().size() > 0) {

    default_locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_locale_);
  }
  if (from.testing_instructions().size() > 0) {

    testing_instructions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.testing_instructions_);
  }
  if (from.has_surface_requirements()) {
    mutable_surface_requirements()->::google::actions::sdk::v2::SurfaceRequirements::MergeFrom(from.surface_requirements());
  }
  if (from.has_localized_settings()) {
    mutable_localized_settings()->::google::actions::sdk::v2::LocalizedSettings::MergeFrom(from.localized_settings());
  }
  if (from.has_account_linking()) {
    mutable_account_linking()->::google::actions::sdk::v2::AccountLinking::MergeFrom(from.account_linking());
  }
  if (from.category() != 0) {
    set_category(from.category());
  }
  if (from.uses_transactions_api() != 0) {
    set_uses_transactions_api(from.uses_transactions_api());
  }
  if (from.uses_digital_purchase_api() != 0) {
    set_uses_digital_purchase_api(from.uses_digital_purchase_api());
  }
  if (from.uses_interactive_canvas() != 0) {
    set_uses_interactive_canvas(from.uses_interactive_canvas());
  }
  if (from.uses_home_storage() != 0) {
    set_uses_home_storage(from.uses_home_storage());
  }
  if (from.designed_for_family() != 0) {
    set_designed_for_family(from.designed_for_family());
  }
  if (from.contains_alcohol_or_tobacco_content() != 0) {
    set_contains_alcohol_or_tobacco_content(from.contains_alcohol_or_tobacco_content());
  }
  if (from.keeps_mic_open() != 0) {
    set_keeps_mic_open(from.keeps_mic_open());
  }
}

void Settings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Settings::CopyFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Settings::IsInitialized() const {
  return true;
}

void Settings::Swap(Settings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Settings::InternalSwap(Settings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  enabled_regions_.InternalSwap(CastToBase(&other->enabled_regions_));
  disabled_regions_.InternalSwap(CastToBase(&other->disabled_regions_));
  selected_android_apps_.InternalSwap(CastToBase(&other->selected_android_apps_));
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_locale_.Swap(&other->default_locale_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  testing_instructions_.Swap(&other->testing_instructions_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(surface_requirements_, other->surface_requirements_);
  swap(localized_settings_, other->localized_settings_);
  swap(account_linking_, other->account_linking_);
  swap(category_, other->category_);
  swap(uses_transactions_api_, other->uses_transactions_api_);
  swap(uses_digital_purchase_api_, other->uses_digital_purchase_api_);
  swap(uses_interactive_canvas_, other->uses_interactive_canvas_);
  swap(uses_home_storage_, other->uses_home_storage_);
  swap(designed_for_family_, other->designed_for_family_);
  swap(contains_alcohol_or_tobacco_content_, other->contains_alcohol_or_tobacco_content_);
  swap(keeps_mic_open_, other->keeps_mic_open_);
}

::google::protobuf::Metadata Settings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2fsettings_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2fsettings_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::Settings* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::Settings >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::Settings >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
