// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/settings.proto

#ifndef PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fsettings_2eproto
#define PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fsettings_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/actions/sdk/v2/account_linking.pb.h"
#include "google/actions/sdk/v2/localized_settings.pb.h"
#include "google/actions/sdk/v2/surface.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fsettings_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2factions_2fsdk_2fv2_2fsettings_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2factions_2fsdk_2fv2_2fsettings_2eproto();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
class Settings;
class SettingsDefaultTypeInternal;
extern SettingsDefaultTypeInternal _Settings_default_instance_;
}  // namespace v2
}  // namespace sdk
}  // namespace actions
namespace protobuf {
template<> ::google::actions::sdk::v2::Settings* Arena::CreateMaybeMessage<::google::actions::sdk::v2::Settings>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace actions {
namespace sdk {
namespace v2 {

enum Settings_Category {
  Settings_Category_CATEGORY_UNSPECIFIED = 0,
  Settings_Category_BUSINESS_AND_FINANCE = 2,
  Settings_Category_EDUCATION_AND_REFERENCE = 3,
  Settings_Category_FOOD_AND_DRINK = 4,
  Settings_Category_GAMES_AND_TRIVIA = 5,
  Settings_Category_HEALTH_AND_FITNESS = 6,
  Settings_Category_KIDS_AND_FAMILY = 20,
  Settings_Category_LIFESTYLE = 7,
  Settings_Category_LOCAL = 8,
  Settings_Category_MOVIES_AND_TV = 9,
  Settings_Category_MUSIC_AND_AUDIO = 10,
  Settings_Category_NEWS = 1,
  Settings_Category_NOVELTY_AND_HUMOR = 11,
  Settings_Category_PRODUCTIVITY = 12,
  Settings_Category_SHOPPING = 13,
  Settings_Category_SOCIAL = 14,
  Settings_Category_SPORTS = 15,
  Settings_Category_TRAVEL_AND_TRANSPORTATION = 16,
  Settings_Category_UTILITIES = 17,
  Settings_Category_WEATHER = 18,
  Settings_Category_HOME_CONTROL = 19,
  Settings_Category_Settings_Category_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Settings_Category_Settings_Category_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Settings_Category_IsValid(int value);
const Settings_Category Settings_Category_Category_MIN = Settings_Category_CATEGORY_UNSPECIFIED;
const Settings_Category Settings_Category_Category_MAX = Settings_Category_KIDS_AND_FAMILY;
const int Settings_Category_Category_ARRAYSIZE = Settings_Category_Category_MAX + 1;

const ::google::protobuf::EnumDescriptor* Settings_Category_descriptor();
inline const ::std::string& Settings_Category_Name(Settings_Category value) {
  return ::google::protobuf::internal::NameOfEnum(
    Settings_Category_descriptor(), value);
}
inline bool Settings_Category_Parse(
    const ::std::string& name, Settings_Category* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Settings_Category>(
    Settings_Category_descriptor(), name, value);
}
// ===================================================================

class Settings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.Settings) */ {
 public:
  Settings();
  virtual ~Settings();

  Settings(const Settings& from);

  inline Settings& operator=(const Settings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Settings(Settings&& from) noexcept
    : Settings() {
    *this = ::std::move(from);
  }

  inline Settings& operator=(Settings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Settings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Settings* internal_default_instance() {
    return reinterpret_cast<const Settings*>(
               &_Settings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Settings* other);
  friend void swap(Settings& a, Settings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Settings* New() const final {
    return CreateMaybeMessage<Settings>(nullptr);
  }

  Settings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Settings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Settings& from);
  void MergeFrom(const Settings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Settings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Settings_Category Category;
  static const Category CATEGORY_UNSPECIFIED =
    Settings_Category_CATEGORY_UNSPECIFIED;
  static const Category BUSINESS_AND_FINANCE =
    Settings_Category_BUSINESS_AND_FINANCE;
  static const Category EDUCATION_AND_REFERENCE =
    Settings_Category_EDUCATION_AND_REFERENCE;
  static const Category FOOD_AND_DRINK =
    Settings_Category_FOOD_AND_DRINK;
  static const Category GAMES_AND_TRIVIA =
    Settings_Category_GAMES_AND_TRIVIA;
  static const Category HEALTH_AND_FITNESS =
    Settings_Category_HEALTH_AND_FITNESS;
  static const Category KIDS_AND_FAMILY =
    Settings_Category_KIDS_AND_FAMILY;
  static const Category LIFESTYLE =
    Settings_Category_LIFESTYLE;
  static const Category LOCAL =
    Settings_Category_LOCAL;
  static const Category MOVIES_AND_TV =
    Settings_Category_MOVIES_AND_TV;
  static const Category MUSIC_AND_AUDIO =
    Settings_Category_MUSIC_AND_AUDIO;
  static const Category NEWS =
    Settings_Category_NEWS;
  static const Category NOVELTY_AND_HUMOR =
    Settings_Category_NOVELTY_AND_HUMOR;
  static const Category PRODUCTIVITY =
    Settings_Category_PRODUCTIVITY;
  static const Category SHOPPING =
    Settings_Category_SHOPPING;
  static const Category SOCIAL =
    Settings_Category_SOCIAL;
  static const Category SPORTS =
    Settings_Category_SPORTS;
  static const Category TRAVEL_AND_TRANSPORTATION =
    Settings_Category_TRAVEL_AND_TRANSPORTATION;
  static const Category UTILITIES =
    Settings_Category_UTILITIES;
  static const Category WEATHER =
    Settings_Category_WEATHER;
  static const Category HOME_CONTROL =
    Settings_Category_HOME_CONTROL;
  static inline bool Category_IsValid(int value) {
    return Settings_Category_IsValid(value);
  }
  static const Category Category_MIN =
    Settings_Category_Category_MIN;
  static const Category Category_MAX =
    Settings_Category_Category_MAX;
  static const int Category_ARRAYSIZE =
    Settings_Category_Category_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Category_descriptor() {
    return Settings_Category_descriptor();
  }
  static inline const ::std::string& Category_Name(Category value) {
    return Settings_Category_Name(value);
  }
  static inline bool Category_Parse(const ::std::string& name,
      Category* value) {
    return Settings_Category_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string enabled_regions = 3;
  int enabled_regions_size() const;
  void clear_enabled_regions();
  static const int kEnabledRegionsFieldNumber = 3;
  const ::std::string& enabled_regions(int index) const;
  ::std::string* mutable_enabled_regions(int index);
  void set_enabled_regions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_enabled_regions(int index, ::std::string&& value);
  #endif
  void set_enabled_regions(int index, const char* value);
  void set_enabled_regions(int index, const char* value, size_t size);
  ::std::string* add_enabled_regions();
  void add_enabled_regions(const ::std::string& value);
  #if LANG_CXX11
  void add_enabled_regions(::std::string&& value);
  #endif
  void add_enabled_regions(const char* value);
  void add_enabled_regions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& enabled_regions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_enabled_regions();

  // repeated string disabled_regions = 4;
  int disabled_regions_size() const;
  void clear_disabled_regions();
  static const int kDisabledRegionsFieldNumber = 4;
  const ::std::string& disabled_regions(int index) const;
  ::std::string* mutable_disabled_regions(int index);
  void set_disabled_regions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_disabled_regions(int index, ::std::string&& value);
  #endif
  void set_disabled_regions(int index, const char* value);
  void set_disabled_regions(int index, const char* value, size_t size);
  ::std::string* add_disabled_regions();
  void add_disabled_regions(const ::std::string& value);
  #if LANG_CXX11
  void add_disabled_regions(::std::string&& value);
  #endif
  void add_disabled_regions(const char* value);
  void add_disabled_regions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& disabled_regions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_disabled_regions();

  // repeated string selected_android_apps = 20;
  int selected_android_apps_size() const;
  void clear_selected_android_apps();
  static const int kSelectedAndroidAppsFieldNumber = 20;
  const ::std::string& selected_android_apps(int index) const;
  ::std::string* mutable_selected_android_apps(int index);
  void set_selected_android_apps(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_selected_android_apps(int index, ::std::string&& value);
  #endif
  void set_selected_android_apps(int index, const char* value);
  void set_selected_android_apps(int index, const char* value, size_t size);
  ::std::string* add_selected_android_apps();
  void add_selected_android_apps(const ::std::string& value);
  #if LANG_CXX11
  void add_selected_android_apps(::std::string&& value);
  #endif
  void add_selected_android_apps(const char* value);
  void add_selected_android_apps(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& selected_android_apps() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_selected_android_apps();

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string default_locale = 2;
  void clear_default_locale();
  static const int kDefaultLocaleFieldNumber = 2;
  const ::std::string& default_locale() const;
  void set_default_locale(const ::std::string& value);
  #if LANG_CXX11
  void set_default_locale(::std::string&& value);
  #endif
  void set_default_locale(const char* value);
  void set_default_locale(const char* value, size_t size);
  ::std::string* mutable_default_locale();
  ::std::string* release_default_locale();
  void set_allocated_default_locale(::std::string* default_locale);

  // string testing_instructions = 14;
  void clear_testing_instructions();
  static const int kTestingInstructionsFieldNumber = 14;
  const ::std::string& testing_instructions() const;
  void set_testing_instructions(const ::std::string& value);
  #if LANG_CXX11
  void set_testing_instructions(::std::string&& value);
  #endif
  void set_testing_instructions(const char* value);
  void set_testing_instructions(const char* value, size_t size);
  ::std::string* mutable_testing_instructions();
  ::std::string* release_testing_instructions();
  void set_allocated_testing_instructions(::std::string* testing_instructions);

  // .google.actions.sdk.v2.SurfaceRequirements surface_requirements = 13;
  bool has_surface_requirements() const;
  void clear_surface_requirements();
  static const int kSurfaceRequirementsFieldNumber = 13;
  const ::google::actions::sdk::v2::SurfaceRequirements& surface_requirements() const;
  ::google::actions::sdk::v2::SurfaceRequirements* release_surface_requirements();
  ::google::actions::sdk::v2::SurfaceRequirements* mutable_surface_requirements();
  void set_allocated_surface_requirements(::google::actions::sdk::v2::SurfaceRequirements* surface_requirements);

  // .google.actions.sdk.v2.LocalizedSettings localized_settings = 15;
  bool has_localized_settings() const;
  void clear_localized_settings();
  static const int kLocalizedSettingsFieldNumber = 15;
  const ::google::actions::sdk::v2::LocalizedSettings& localized_settings() const;
  ::google::actions::sdk::v2::LocalizedSettings* release_localized_settings();
  ::google::actions::sdk::v2::LocalizedSettings* mutable_localized_settings();
  void set_allocated_localized_settings(::google::actions::sdk::v2::LocalizedSettings* localized_settings);

  // .google.actions.sdk.v2.AccountLinking account_linking = 16;
  bool has_account_linking() const;
  void clear_account_linking();
  static const int kAccountLinkingFieldNumber = 16;
  const ::google::actions::sdk::v2::AccountLinking& account_linking() const;
  ::google::actions::sdk::v2::AccountLinking* release_account_linking();
  ::google::actions::sdk::v2::AccountLinking* mutable_account_linking();
  void set_allocated_account_linking(::google::actions::sdk::v2::AccountLinking* account_linking);

  // .google.actions.sdk.v2.Settings.Category category = 5;
  void clear_category();
  static const int kCategoryFieldNumber = 5;
  ::google::actions::sdk::v2::Settings_Category category() const;
  void set_category(::google::actions::sdk::v2::Settings_Category value);

  // bool uses_transactions_api = 6;
  void clear_uses_transactions_api();
  static const int kUsesTransactionsApiFieldNumber = 6;
  bool uses_transactions_api() const;
  void set_uses_transactions_api(bool value);

  // bool uses_digital_purchase_api = 7;
  void clear_uses_digital_purchase_api();
  static const int kUsesDigitalPurchaseApiFieldNumber = 7;
  bool uses_digital_purchase_api() const;
  void set_uses_digital_purchase_api(bool value);

  // bool uses_interactive_canvas = 8;
  void clear_uses_interactive_canvas();
  static const int kUsesInteractiveCanvasFieldNumber = 8;
  bool uses_interactive_canvas() const;
  void set_uses_interactive_canvas(bool value);

  // bool uses_home_storage = 17;
  void clear_uses_home_storage();
  static const int kUsesHomeStorageFieldNumber = 17;
  bool uses_home_storage() const;
  void set_uses_home_storage(bool value);

  // bool designed_for_family = 9;
  void clear_designed_for_family();
  static const int kDesignedForFamilyFieldNumber = 9;
  bool designed_for_family() const;
  void set_designed_for_family(bool value);

  // bool contains_alcohol_or_tobacco_content = 11;
  void clear_contains_alcohol_or_tobacco_content();
  static const int kContainsAlcoholOrTobaccoContentFieldNumber = 11;
  bool contains_alcohol_or_tobacco_content() const;
  void set_contains_alcohol_or_tobacco_content(bool value);

  // bool keeps_mic_open = 12;
  void clear_keeps_mic_open();
  static const int kKeepsMicOpenFieldNumber = 12;
  bool keeps_mic_open() const;
  void set_keeps_mic_open(bool value);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.Settings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> enabled_regions_;
  ::google::protobuf::RepeatedPtrField<::std::string> disabled_regions_;
  ::google::protobuf::RepeatedPtrField<::std::string> selected_android_apps_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr default_locale_;
  ::google::protobuf::internal::ArenaStringPtr testing_instructions_;
  ::google::actions::sdk::v2::SurfaceRequirements* surface_requirements_;
  ::google::actions::sdk::v2::LocalizedSettings* localized_settings_;
  ::google::actions::sdk::v2::AccountLinking* account_linking_;
  int category_;
  bool uses_transactions_api_;
  bool uses_digital_purchase_api_;
  bool uses_interactive_canvas_;
  bool uses_home_storage_;
  bool designed_for_family_;
  bool contains_alcohol_or_tobacco_content_;
  bool keeps_mic_open_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fsettings_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Settings

// string project_id = 1;
inline void Settings::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Settings::project_id() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.project_id)
  return project_id_.GetNoArena();
}
inline void Settings::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.project_id)
}
#if LANG_CXX11
inline void Settings::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Settings.project_id)
}
#endif
inline void Settings::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Settings.project_id)
}
inline void Settings::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Settings.project_id)
}
inline ::std::string* Settings::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Settings::release_project_id() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Settings.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Settings::set_allocated_project_id(::std::string* project_id) {
  if (project_id != nullptr) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Settings.project_id)
}

// string default_locale = 2;
inline void Settings::clear_default_locale() {
  default_locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Settings::default_locale() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.default_locale)
  return default_locale_.GetNoArena();
}
inline void Settings::set_default_locale(const ::std::string& value) {
  
  default_locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.default_locale)
}
#if LANG_CXX11
inline void Settings::set_default_locale(::std::string&& value) {
  
  default_locale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Settings.default_locale)
}
#endif
inline void Settings::set_default_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  default_locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Settings.default_locale)
}
inline void Settings::set_default_locale(const char* value, size_t size) {
  
  default_locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Settings.default_locale)
}
inline ::std::string* Settings::mutable_default_locale() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.default_locale)
  return default_locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Settings::release_default_locale() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Settings.default_locale)
  
  return default_locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Settings::set_allocated_default_locale(::std::string* default_locale) {
  if (default_locale != nullptr) {
    
  } else {
    
  }
  default_locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_locale);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Settings.default_locale)
}

// repeated string enabled_regions = 3;
inline int Settings::enabled_regions_size() const {
  return enabled_regions_.size();
}
inline void Settings::clear_enabled_regions() {
  enabled_regions_.Clear();
}
inline const ::std::string& Settings::enabled_regions(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.enabled_regions)
  return enabled_regions_.Get(index);
}
inline ::std::string* Settings::mutable_enabled_regions(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.enabled_regions)
  return enabled_regions_.Mutable(index);
}
inline void Settings::set_enabled_regions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.enabled_regions)
  enabled_regions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Settings::set_enabled_regions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.enabled_regions)
  enabled_regions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Settings::set_enabled_regions(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  enabled_regions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Settings.enabled_regions)
}
inline void Settings::set_enabled_regions(int index, const char* value, size_t size) {
  enabled_regions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Settings.enabled_regions)
}
inline ::std::string* Settings::add_enabled_regions() {
  // @@protoc_insertion_point(field_add_mutable:google.actions.sdk.v2.Settings.enabled_regions)
  return enabled_regions_.Add();
}
inline void Settings::add_enabled_regions(const ::std::string& value) {
  enabled_regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Settings.enabled_regions)
}
#if LANG_CXX11
inline void Settings::add_enabled_regions(::std::string&& value) {
  enabled_regions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Settings.enabled_regions)
}
#endif
inline void Settings::add_enabled_regions(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  enabled_regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.actions.sdk.v2.Settings.enabled_regions)
}
inline void Settings::add_enabled_regions(const char* value, size_t size) {
  enabled_regions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.actions.sdk.v2.Settings.enabled_regions)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Settings::enabled_regions() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.Settings.enabled_regions)
  return enabled_regions_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Settings::mutable_enabled_regions() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.Settings.enabled_regions)
  return &enabled_regions_;
}

// repeated string disabled_regions = 4;
inline int Settings::disabled_regions_size() const {
  return disabled_regions_.size();
}
inline void Settings::clear_disabled_regions() {
  disabled_regions_.Clear();
}
inline const ::std::string& Settings::disabled_regions(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.disabled_regions)
  return disabled_regions_.Get(index);
}
inline ::std::string* Settings::mutable_disabled_regions(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.disabled_regions)
  return disabled_regions_.Mutable(index);
}
inline void Settings::set_disabled_regions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.disabled_regions)
  disabled_regions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Settings::set_disabled_regions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.disabled_regions)
  disabled_regions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Settings::set_disabled_regions(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  disabled_regions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Settings.disabled_regions)
}
inline void Settings::set_disabled_regions(int index, const char* value, size_t size) {
  disabled_regions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Settings.disabled_regions)
}
inline ::std::string* Settings::add_disabled_regions() {
  // @@protoc_insertion_point(field_add_mutable:google.actions.sdk.v2.Settings.disabled_regions)
  return disabled_regions_.Add();
}
inline void Settings::add_disabled_regions(const ::std::string& value) {
  disabled_regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Settings.disabled_regions)
}
#if LANG_CXX11
inline void Settings::add_disabled_regions(::std::string&& value) {
  disabled_regions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Settings.disabled_regions)
}
#endif
inline void Settings::add_disabled_regions(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  disabled_regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.actions.sdk.v2.Settings.disabled_regions)
}
inline void Settings::add_disabled_regions(const char* value, size_t size) {
  disabled_regions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.actions.sdk.v2.Settings.disabled_regions)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Settings::disabled_regions() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.Settings.disabled_regions)
  return disabled_regions_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Settings::mutable_disabled_regions() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.Settings.disabled_regions)
  return &disabled_regions_;
}

// .google.actions.sdk.v2.Settings.Category category = 5;
inline void Settings::clear_category() {
  category_ = 0;
}
inline ::google::actions::sdk::v2::Settings_Category Settings::category() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.category)
  return static_cast< ::google::actions::sdk::v2::Settings_Category >(category_);
}
inline void Settings::set_category(::google::actions::sdk::v2::Settings_Category value) {
  
  category_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.category)
}

// bool uses_transactions_api = 6;
inline void Settings::clear_uses_transactions_api() {
  uses_transactions_api_ = false;
}
inline bool Settings::uses_transactions_api() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.uses_transactions_api)
  return uses_transactions_api_;
}
inline void Settings::set_uses_transactions_api(bool value) {
  
  uses_transactions_api_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.uses_transactions_api)
}

// bool uses_digital_purchase_api = 7;
inline void Settings::clear_uses_digital_purchase_api() {
  uses_digital_purchase_api_ = false;
}
inline bool Settings::uses_digital_purchase_api() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.uses_digital_purchase_api)
  return uses_digital_purchase_api_;
}
inline void Settings::set_uses_digital_purchase_api(bool value) {
  
  uses_digital_purchase_api_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.uses_digital_purchase_api)
}

// bool uses_interactive_canvas = 8;
inline void Settings::clear_uses_interactive_canvas() {
  uses_interactive_canvas_ = false;
}
inline bool Settings::uses_interactive_canvas() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.uses_interactive_canvas)
  return uses_interactive_canvas_;
}
inline void Settings::set_uses_interactive_canvas(bool value) {
  
  uses_interactive_canvas_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.uses_interactive_canvas)
}

// bool uses_home_storage = 17;
inline void Settings::clear_uses_home_storage() {
  uses_home_storage_ = false;
}
inline bool Settings::uses_home_storage() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.uses_home_storage)
  return uses_home_storage_;
}
inline void Settings::set_uses_home_storage(bool value) {
  
  uses_home_storage_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.uses_home_storage)
}

// bool designed_for_family = 9;
inline void Settings::clear_designed_for_family() {
  designed_for_family_ = false;
}
inline bool Settings::designed_for_family() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.designed_for_family)
  return designed_for_family_;
}
inline void Settings::set_designed_for_family(bool value) {
  
  designed_for_family_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.designed_for_family)
}

// bool contains_alcohol_or_tobacco_content = 11;
inline void Settings::clear_contains_alcohol_or_tobacco_content() {
  contains_alcohol_or_tobacco_content_ = false;
}
inline bool Settings::contains_alcohol_or_tobacco_content() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.contains_alcohol_or_tobacco_content)
  return contains_alcohol_or_tobacco_content_;
}
inline void Settings::set_contains_alcohol_or_tobacco_content(bool value) {
  
  contains_alcohol_or_tobacco_content_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.contains_alcohol_or_tobacco_content)
}

// bool keeps_mic_open = 12;
inline void Settings::clear_keeps_mic_open() {
  keeps_mic_open_ = false;
}
inline bool Settings::keeps_mic_open() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.keeps_mic_open)
  return keeps_mic_open_;
}
inline void Settings::set_keeps_mic_open(bool value) {
  
  keeps_mic_open_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.keeps_mic_open)
}

// .google.actions.sdk.v2.SurfaceRequirements surface_requirements = 13;
inline bool Settings::has_surface_requirements() const {
  return this != internal_default_instance() && surface_requirements_ != nullptr;
}
inline const ::google::actions::sdk::v2::SurfaceRequirements& Settings::surface_requirements() const {
  const ::google::actions::sdk::v2::SurfaceRequirements* p = surface_requirements_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.surface_requirements)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::SurfaceRequirements*>(
      &::google::actions::sdk::v2::_SurfaceRequirements_default_instance_);
}
inline ::google::actions::sdk::v2::SurfaceRequirements* Settings::release_surface_requirements() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Settings.surface_requirements)
  
  ::google::actions::sdk::v2::SurfaceRequirements* temp = surface_requirements_;
  surface_requirements_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::SurfaceRequirements* Settings::mutable_surface_requirements() {
  
  if (surface_requirements_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::SurfaceRequirements>(GetArenaNoVirtual());
    surface_requirements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.surface_requirements)
  return surface_requirements_;
}
inline void Settings::set_allocated_surface_requirements(::google::actions::sdk::v2::SurfaceRequirements* surface_requirements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(surface_requirements_);
  }
  if (surface_requirements) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      surface_requirements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, surface_requirements, submessage_arena);
    }
    
  } else {
    
  }
  surface_requirements_ = surface_requirements;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Settings.surface_requirements)
}

// string testing_instructions = 14;
inline void Settings::clear_testing_instructions() {
  testing_instructions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Settings::testing_instructions() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.testing_instructions)
  return testing_instructions_.GetNoArena();
}
inline void Settings::set_testing_instructions(const ::std::string& value) {
  
  testing_instructions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.testing_instructions)
}
#if LANG_CXX11
inline void Settings::set_testing_instructions(::std::string&& value) {
  
  testing_instructions_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Settings.testing_instructions)
}
#endif
inline void Settings::set_testing_instructions(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  testing_instructions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Settings.testing_instructions)
}
inline void Settings::set_testing_instructions(const char* value, size_t size) {
  
  testing_instructions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Settings.testing_instructions)
}
inline ::std::string* Settings::mutable_testing_instructions() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.testing_instructions)
  return testing_instructions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Settings::release_testing_instructions() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Settings.testing_instructions)
  
  return testing_instructions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Settings::set_allocated_testing_instructions(::std::string* testing_instructions) {
  if (testing_instructions != nullptr) {
    
  } else {
    
  }
  testing_instructions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), testing_instructions);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Settings.testing_instructions)
}

// .google.actions.sdk.v2.LocalizedSettings localized_settings = 15;
inline bool Settings::has_localized_settings() const {
  return this != internal_default_instance() && localized_settings_ != nullptr;
}
inline const ::google::actions::sdk::v2::LocalizedSettings& Settings::localized_settings() const {
  const ::google::actions::sdk::v2::LocalizedSettings* p = localized_settings_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.localized_settings)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::LocalizedSettings*>(
      &::google::actions::sdk::v2::_LocalizedSettings_default_instance_);
}
inline ::google::actions::sdk::v2::LocalizedSettings* Settings::release_localized_settings() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Settings.localized_settings)
  
  ::google::actions::sdk::v2::LocalizedSettings* temp = localized_settings_;
  localized_settings_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::LocalizedSettings* Settings::mutable_localized_settings() {
  
  if (localized_settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::LocalizedSettings>(GetArenaNoVirtual());
    localized_settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.localized_settings)
  return localized_settings_;
}
inline void Settings::set_allocated_localized_settings(::google::actions::sdk::v2::LocalizedSettings* localized_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(localized_settings_);
  }
  if (localized_settings) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      localized_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, localized_settings, submessage_arena);
    }
    
  } else {
    
  }
  localized_settings_ = localized_settings;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Settings.localized_settings)
}

// .google.actions.sdk.v2.AccountLinking account_linking = 16;
inline bool Settings::has_account_linking() const {
  return this != internal_default_instance() && account_linking_ != nullptr;
}
inline const ::google::actions::sdk::v2::AccountLinking& Settings::account_linking() const {
  const ::google::actions::sdk::v2::AccountLinking* p = account_linking_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.account_linking)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::AccountLinking*>(
      &::google::actions::sdk::v2::_AccountLinking_default_instance_);
}
inline ::google::actions::sdk::v2::AccountLinking* Settings::release_account_linking() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Settings.account_linking)
  
  ::google::actions::sdk::v2::AccountLinking* temp = account_linking_;
  account_linking_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::AccountLinking* Settings::mutable_account_linking() {
  
  if (account_linking_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::AccountLinking>(GetArenaNoVirtual());
    account_linking_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.account_linking)
  return account_linking_;
}
inline void Settings::set_allocated_account_linking(::google::actions::sdk::v2::AccountLinking* account_linking) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(account_linking_);
  }
  if (account_linking) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_linking = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, account_linking, submessage_arena);
    }
    
  } else {
    
  }
  account_linking_ = account_linking;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Settings.account_linking)
}

// repeated string selected_android_apps = 20;
inline int Settings::selected_android_apps_size() const {
  return selected_android_apps_.size();
}
inline void Settings::clear_selected_android_apps() {
  selected_android_apps_.Clear();
}
inline const ::std::string& Settings::selected_android_apps(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Settings.selected_android_apps)
  return selected_android_apps_.Get(index);
}
inline ::std::string* Settings::mutable_selected_android_apps(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Settings.selected_android_apps)
  return selected_android_apps_.Mutable(index);
}
inline void Settings::set_selected_android_apps(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.selected_android_apps)
  selected_android_apps_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Settings::set_selected_android_apps(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Settings.selected_android_apps)
  selected_android_apps_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Settings::set_selected_android_apps(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  selected_android_apps_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Settings.selected_android_apps)
}
inline void Settings::set_selected_android_apps(int index, const char* value, size_t size) {
  selected_android_apps_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Settings.selected_android_apps)
}
inline ::std::string* Settings::add_selected_android_apps() {
  // @@protoc_insertion_point(field_add_mutable:google.actions.sdk.v2.Settings.selected_android_apps)
  return selected_android_apps_.Add();
}
inline void Settings::add_selected_android_apps(const ::std::string& value) {
  selected_android_apps_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Settings.selected_android_apps)
}
#if LANG_CXX11
inline void Settings::add_selected_android_apps(::std::string&& value) {
  selected_android_apps_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Settings.selected_android_apps)
}
#endif
inline void Settings::add_selected_android_apps(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  selected_android_apps_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.actions.sdk.v2.Settings.selected_android_apps)
}
inline void Settings::add_selected_android_apps(const char* value, size_t size) {
  selected_android_apps_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.actions.sdk.v2.Settings.selected_android_apps)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Settings::selected_android_apps() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.Settings.selected_android_apps)
  return selected_android_apps_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Settings::mutable_selected_android_apps() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.Settings.selected_android_apps)
  return &selected_android_apps_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::actions::sdk::v2::Settings_Category> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::actions::sdk::v2::Settings_Category>() {
  return ::google::actions::sdk::v2::Settings_Category_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fsettings_2eproto
