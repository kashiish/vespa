// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/actions_testing.proto

#ifndef PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto
#define PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/actions/sdk/v2/conversation/intent.pb.h"
#include "google/actions/sdk/v2/conversation/prompt/content/canvas.pb.h"
#include "google/actions/sdk/v2/conversation/prompt/prompt.pb.h"
#include "google/actions/sdk/v2/event_logs.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include <google/protobuf/empty.pb.h>
#include "google/type/latlng.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
class DeviceProperties;
class DevicePropertiesDefaultTypeInternal;
extern DevicePropertiesDefaultTypeInternal _DeviceProperties_default_instance_;
class Diagnostics;
class DiagnosticsDefaultTypeInternal;
extern DiagnosticsDefaultTypeInternal _Diagnostics_default_instance_;
class Location;
class LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class MatchIntentsRequest;
class MatchIntentsRequestDefaultTypeInternal;
extern MatchIntentsRequestDefaultTypeInternal _MatchIntentsRequest_default_instance_;
class MatchIntentsResponse;
class MatchIntentsResponseDefaultTypeInternal;
extern MatchIntentsResponseDefaultTypeInternal _MatchIntentsResponse_default_instance_;
class Output;
class OutputDefaultTypeInternal;
extern OutputDefaultTypeInternal _Output_default_instance_;
class SendInteractionRequest;
class SendInteractionRequestDefaultTypeInternal;
extern SendInteractionRequestDefaultTypeInternal _SendInteractionRequest_default_instance_;
class SendInteractionResponse;
class SendInteractionResponseDefaultTypeInternal;
extern SendInteractionResponseDefaultTypeInternal _SendInteractionResponse_default_instance_;
class SetWebAndAppActivityControlRequest;
class SetWebAndAppActivityControlRequestDefaultTypeInternal;
extern SetWebAndAppActivityControlRequestDefaultTypeInternal _SetWebAndAppActivityControlRequest_default_instance_;
class UserInput;
class UserInputDefaultTypeInternal;
extern UserInputDefaultTypeInternal _UserInput_default_instance_;
}  // namespace v2
}  // namespace sdk
}  // namespace actions
namespace protobuf {
template<> ::google::actions::sdk::v2::DeviceProperties* Arena::CreateMaybeMessage<::google::actions::sdk::v2::DeviceProperties>(Arena*);
template<> ::google::actions::sdk::v2::Diagnostics* Arena::CreateMaybeMessage<::google::actions::sdk::v2::Diagnostics>(Arena*);
template<> ::google::actions::sdk::v2::Location* Arena::CreateMaybeMessage<::google::actions::sdk::v2::Location>(Arena*);
template<> ::google::actions::sdk::v2::MatchIntentsRequest* Arena::CreateMaybeMessage<::google::actions::sdk::v2::MatchIntentsRequest>(Arena*);
template<> ::google::actions::sdk::v2::MatchIntentsResponse* Arena::CreateMaybeMessage<::google::actions::sdk::v2::MatchIntentsResponse>(Arena*);
template<> ::google::actions::sdk::v2::Output* Arena::CreateMaybeMessage<::google::actions::sdk::v2::Output>(Arena*);
template<> ::google::actions::sdk::v2::SendInteractionRequest* Arena::CreateMaybeMessage<::google::actions::sdk::v2::SendInteractionRequest>(Arena*);
template<> ::google::actions::sdk::v2::SendInteractionResponse* Arena::CreateMaybeMessage<::google::actions::sdk::v2::SendInteractionResponse>(Arena*);
template<> ::google::actions::sdk::v2::SetWebAndAppActivityControlRequest* Arena::CreateMaybeMessage<::google::actions::sdk::v2::SetWebAndAppActivityControlRequest>(Arena*);
template<> ::google::actions::sdk::v2::UserInput* Arena::CreateMaybeMessage<::google::actions::sdk::v2::UserInput>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace actions {
namespace sdk {
namespace v2 {

enum UserInput_InputType {
  UserInput_InputType_INPUT_TYPE_UNSPECIFIED = 0,
  UserInput_InputType_TOUCH = 1,
  UserInput_InputType_VOICE = 2,
  UserInput_InputType_KEYBOARD = 3,
  UserInput_InputType_URL = 4,
  UserInput_InputType_UserInput_InputType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  UserInput_InputType_UserInput_InputType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool UserInput_InputType_IsValid(int value);
const UserInput_InputType UserInput_InputType_InputType_MIN = UserInput_InputType_INPUT_TYPE_UNSPECIFIED;
const UserInput_InputType UserInput_InputType_InputType_MAX = UserInput_InputType_URL;
const int UserInput_InputType_InputType_ARRAYSIZE = UserInput_InputType_InputType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserInput_InputType_descriptor();
inline const ::std::string& UserInput_InputType_Name(UserInput_InputType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserInput_InputType_descriptor(), value);
}
inline bool UserInput_InputType_Parse(
    const ::std::string& name, UserInput_InputType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserInput_InputType>(
    UserInput_InputType_descriptor(), name, value);
}
enum DeviceProperties_Surface {
  DeviceProperties_Surface_SURFACE_UNSPECIFIED = 0,
  DeviceProperties_Surface_SPEAKER = 1,
  DeviceProperties_Surface_PHONE = 2,
  DeviceProperties_Surface_ALLO = 3,
  DeviceProperties_Surface_SMART_DISPLAY = 4,
  DeviceProperties_Surface_KAI_OS = 5,
  DeviceProperties_Surface_DeviceProperties_Surface_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  DeviceProperties_Surface_DeviceProperties_Surface_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool DeviceProperties_Surface_IsValid(int value);
const DeviceProperties_Surface DeviceProperties_Surface_Surface_MIN = DeviceProperties_Surface_SURFACE_UNSPECIFIED;
const DeviceProperties_Surface DeviceProperties_Surface_Surface_MAX = DeviceProperties_Surface_KAI_OS;
const int DeviceProperties_Surface_Surface_ARRAYSIZE = DeviceProperties_Surface_Surface_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceProperties_Surface_descriptor();
inline const ::std::string& DeviceProperties_Surface_Name(DeviceProperties_Surface value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceProperties_Surface_descriptor(), value);
}
inline bool DeviceProperties_Surface_Parse(
    const ::std::string& name, DeviceProperties_Surface* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceProperties_Surface>(
    DeviceProperties_Surface_descriptor(), name, value);
}
// ===================================================================

class SendInteractionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.SendInteractionRequest) */ {
 public:
  SendInteractionRequest();
  virtual ~SendInteractionRequest();

  SendInteractionRequest(const SendInteractionRequest& from);

  inline SendInteractionRequest& operator=(const SendInteractionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendInteractionRequest(SendInteractionRequest&& from) noexcept
    : SendInteractionRequest() {
    *this = ::std::move(from);
  }

  inline SendInteractionRequest& operator=(SendInteractionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SendInteractionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInteractionRequest* internal_default_instance() {
    return reinterpret_cast<const SendInteractionRequest*>(
               &_SendInteractionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SendInteractionRequest* other);
  friend void swap(SendInteractionRequest& a, SendInteractionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendInteractionRequest* New() const final {
    return CreateMaybeMessage<SendInteractionRequest>(nullptr);
  }

  SendInteractionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendInteractionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendInteractionRequest& from);
  void MergeFrom(const SendInteractionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInteractionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string conversation_token = 4;
  void clear_conversation_token();
  static const int kConversationTokenFieldNumber = 4;
  const ::std::string& conversation_token() const;
  void set_conversation_token(const ::std::string& value);
  #if LANG_CXX11
  void set_conversation_token(::std::string&& value);
  #endif
  void set_conversation_token(const char* value);
  void set_conversation_token(const char* value, size_t size);
  ::std::string* mutable_conversation_token();
  ::std::string* release_conversation_token();
  void set_allocated_conversation_token(::std::string* conversation_token);

  // .google.actions.sdk.v2.UserInput input = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_input() const;
  void clear_input();
  static const int kInputFieldNumber = 2;
  const ::google::actions::sdk::v2::UserInput& input() const;
  ::google::actions::sdk::v2::UserInput* release_input();
  ::google::actions::sdk::v2::UserInput* mutable_input();
  void set_allocated_input(::google::actions::sdk::v2::UserInput* input);

  // .google.actions.sdk.v2.DeviceProperties device_properties = 3 [(.google.api.field_behavior) = REQUIRED];
  bool has_device_properties() const;
  void clear_device_properties();
  static const int kDevicePropertiesFieldNumber = 3;
  const ::google::actions::sdk::v2::DeviceProperties& device_properties() const;
  ::google::actions::sdk::v2::DeviceProperties* release_device_properties();
  ::google::actions::sdk::v2::DeviceProperties* mutable_device_properties();
  void set_allocated_device_properties(::google::actions::sdk::v2::DeviceProperties* device_properties);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.SendInteractionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr conversation_token_;
  ::google::actions::sdk::v2::UserInput* input_;
  ::google::actions::sdk::v2::DeviceProperties* device_properties_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class UserInput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.UserInput) */ {
 public:
  UserInput();
  virtual ~UserInput();

  UserInput(const UserInput& from);

  inline UserInput& operator=(const UserInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInput(UserInput&& from) noexcept
    : UserInput() {
    *this = ::std::move(from);
  }

  inline UserInput& operator=(UserInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserInput* internal_default_instance() {
    return reinterpret_cast<const UserInput*>(
               &_UserInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UserInput* other);
  friend void swap(UserInput& a, UserInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInput* New() const final {
    return CreateMaybeMessage<UserInput>(nullptr);
  }

  UserInput* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserInput>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserInput& from);
  void MergeFrom(const UserInput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserInput_InputType InputType;
  static const InputType INPUT_TYPE_UNSPECIFIED =
    UserInput_InputType_INPUT_TYPE_UNSPECIFIED;
  static const InputType TOUCH =
    UserInput_InputType_TOUCH;
  static const InputType VOICE =
    UserInput_InputType_VOICE;
  static const InputType KEYBOARD =
    UserInput_InputType_KEYBOARD;
  static const InputType URL =
    UserInput_InputType_URL;
  static inline bool InputType_IsValid(int value) {
    return UserInput_InputType_IsValid(value);
  }
  static const InputType InputType_MIN =
    UserInput_InputType_InputType_MIN;
  static const InputType InputType_MAX =
    UserInput_InputType_InputType_MAX;
  static const int InputType_ARRAYSIZE =
    UserInput_InputType_InputType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InputType_descriptor() {
    return UserInput_InputType_descriptor();
  }
  static inline const ::std::string& InputType_Name(InputType value) {
    return UserInput_InputType_Name(value);
  }
  static inline bool InputType_Parse(const ::std::string& name,
      InputType* value) {
    return UserInput_InputType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string query = 1;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // .google.actions.sdk.v2.UserInput.InputType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::actions::sdk::v2::UserInput_InputType type() const;
  void set_type(::google::actions::sdk::v2::UserInput_InputType value);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.UserInput)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class DeviceProperties final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.DeviceProperties) */ {
 public:
  DeviceProperties();
  virtual ~DeviceProperties();

  DeviceProperties(const DeviceProperties& from);

  inline DeviceProperties& operator=(const DeviceProperties& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceProperties(DeviceProperties&& from) noexcept
    : DeviceProperties() {
    *this = ::std::move(from);
  }

  inline DeviceProperties& operator=(DeviceProperties&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeviceProperties& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceProperties* internal_default_instance() {
    return reinterpret_cast<const DeviceProperties*>(
               &_DeviceProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DeviceProperties* other);
  friend void swap(DeviceProperties& a, DeviceProperties& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceProperties* New() const final {
    return CreateMaybeMessage<DeviceProperties>(nullptr);
  }

  DeviceProperties* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceProperties>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceProperties& from);
  void MergeFrom(const DeviceProperties& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceProperties* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceProperties_Surface Surface;
  static const Surface SURFACE_UNSPECIFIED =
    DeviceProperties_Surface_SURFACE_UNSPECIFIED;
  static const Surface SPEAKER =
    DeviceProperties_Surface_SPEAKER;
  static const Surface PHONE =
    DeviceProperties_Surface_PHONE;
  static const Surface ALLO =
    DeviceProperties_Surface_ALLO;
  static const Surface SMART_DISPLAY =
    DeviceProperties_Surface_SMART_DISPLAY;
  static const Surface KAI_OS =
    DeviceProperties_Surface_KAI_OS;
  static inline bool Surface_IsValid(int value) {
    return DeviceProperties_Surface_IsValid(value);
  }
  static const Surface Surface_MIN =
    DeviceProperties_Surface_Surface_MIN;
  static const Surface Surface_MAX =
    DeviceProperties_Surface_Surface_MAX;
  static const int Surface_ARRAYSIZE =
    DeviceProperties_Surface_Surface_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Surface_descriptor() {
    return DeviceProperties_Surface_descriptor();
  }
  static inline const ::std::string& Surface_Name(Surface value) {
    return DeviceProperties_Surface_Name(value);
  }
  static inline bool Surface_Parse(const ::std::string& name,
      Surface* value) {
    return DeviceProperties_Surface_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string locale = 3;
  void clear_locale();
  static const int kLocaleFieldNumber = 3;
  const ::std::string& locale() const;
  void set_locale(const ::std::string& value);
  #if LANG_CXX11
  void set_locale(::std::string&& value);
  #endif
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  ::std::string* mutable_locale();
  ::std::string* release_locale();
  void set_allocated_locale(::std::string* locale);

  // string time_zone = 4;
  void clear_time_zone();
  static const int kTimeZoneFieldNumber = 4;
  const ::std::string& time_zone() const;
  void set_time_zone(const ::std::string& value);
  #if LANG_CXX11
  void set_time_zone(::std::string&& value);
  #endif
  void set_time_zone(const char* value);
  void set_time_zone(const char* value, size_t size);
  ::std::string* mutable_time_zone();
  ::std::string* release_time_zone();
  void set_allocated_time_zone(::std::string* time_zone);

  // .google.actions.sdk.v2.Location location = 2;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 2;
  const ::google::actions::sdk::v2::Location& location() const;
  ::google::actions::sdk::v2::Location* release_location();
  ::google::actions::sdk::v2::Location* mutable_location();
  void set_allocated_location(::google::actions::sdk::v2::Location* location);

  // .google.actions.sdk.v2.DeviceProperties.Surface surface = 1;
  void clear_surface();
  static const int kSurfaceFieldNumber = 1;
  ::google::actions::sdk::v2::DeviceProperties_Surface surface() const;
  void set_surface(::google::actions::sdk::v2::DeviceProperties_Surface value);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.DeviceProperties)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr locale_;
  ::google::protobuf::internal::ArenaStringPtr time_zone_;
  ::google::actions::sdk::v2::Location* location_;
  int surface_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class Location final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Location(Location&& from) noexcept
    : Location() {
    *this = ::std::move(from);
  }

  inline Location& operator=(Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Location& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
               &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Location* other);
  friend void swap(Location& a, Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Location* New() const final {
    return CreateMaybeMessage<Location>(nullptr);
  }

  Location* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Location>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string formatted_address = 2;
  void clear_formatted_address();
  static const int kFormattedAddressFieldNumber = 2;
  const ::std::string& formatted_address() const;
  void set_formatted_address(const ::std::string& value);
  #if LANG_CXX11
  void set_formatted_address(::std::string&& value);
  #endif
  void set_formatted_address(const char* value);
  void set_formatted_address(const char* value, size_t size);
  ::std::string* mutable_formatted_address();
  ::std::string* release_formatted_address();
  void set_allocated_formatted_address(::std::string* formatted_address);

  // string zip_code = 3;
  void clear_zip_code();
  static const int kZipCodeFieldNumber = 3;
  const ::std::string& zip_code() const;
  void set_zip_code(const ::std::string& value);
  #if LANG_CXX11
  void set_zip_code(::std::string&& value);
  #endif
  void set_zip_code(const char* value);
  void set_zip_code(const char* value, size_t size);
  ::std::string* mutable_zip_code();
  ::std::string* release_zip_code();
  void set_allocated_zip_code(::std::string* zip_code);

  // string city = 4;
  void clear_city();
  static const int kCityFieldNumber = 4;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // .google.type.LatLng coordinates = 1;
  bool has_coordinates() const;
  void clear_coordinates();
  static const int kCoordinatesFieldNumber = 1;
  const ::google::type::LatLng& coordinates() const;
  ::google::type::LatLng* release_coordinates();
  ::google::type::LatLng* mutable_coordinates();
  void set_allocated_coordinates(::google::type::LatLng* coordinates);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.Location)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr formatted_address_;
  ::google::protobuf::internal::ArenaStringPtr zip_code_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::type::LatLng* coordinates_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class SendInteractionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.SendInteractionResponse) */ {
 public:
  SendInteractionResponse();
  virtual ~SendInteractionResponse();

  SendInteractionResponse(const SendInteractionResponse& from);

  inline SendInteractionResponse& operator=(const SendInteractionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendInteractionResponse(SendInteractionResponse&& from) noexcept
    : SendInteractionResponse() {
    *this = ::std::move(from);
  }

  inline SendInteractionResponse& operator=(SendInteractionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SendInteractionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInteractionResponse* internal_default_instance() {
    return reinterpret_cast<const SendInteractionResponse*>(
               &_SendInteractionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SendInteractionResponse* other);
  friend void swap(SendInteractionResponse& a, SendInteractionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendInteractionResponse* New() const final {
    return CreateMaybeMessage<SendInteractionResponse>(nullptr);
  }

  SendInteractionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendInteractionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendInteractionResponse& from);
  void MergeFrom(const SendInteractionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInteractionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string conversation_token = 3;
  void clear_conversation_token();
  static const int kConversationTokenFieldNumber = 3;
  const ::std::string& conversation_token() const;
  void set_conversation_token(const ::std::string& value);
  #if LANG_CXX11
  void set_conversation_token(::std::string&& value);
  #endif
  void set_conversation_token(const char* value);
  void set_conversation_token(const char* value, size_t size);
  ::std::string* mutable_conversation_token();
  ::std::string* release_conversation_token();
  void set_allocated_conversation_token(::std::string* conversation_token);

  // .google.actions.sdk.v2.Output output = 1;
  bool has_output() const;
  void clear_output();
  static const int kOutputFieldNumber = 1;
  const ::google::actions::sdk::v2::Output& output() const;
  ::google::actions::sdk::v2::Output* release_output();
  ::google::actions::sdk::v2::Output* mutable_output();
  void set_allocated_output(::google::actions::sdk::v2::Output* output);

  // .google.actions.sdk.v2.Diagnostics diagnostics = 2;
  bool has_diagnostics() const;
  void clear_diagnostics();
  static const int kDiagnosticsFieldNumber = 2;
  const ::google::actions::sdk::v2::Diagnostics& diagnostics() const;
  ::google::actions::sdk::v2::Diagnostics* release_diagnostics();
  ::google::actions::sdk::v2::Diagnostics* mutable_diagnostics();
  void set_allocated_diagnostics(::google::actions::sdk::v2::Diagnostics* diagnostics);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.SendInteractionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr conversation_token_;
  ::google::actions::sdk::v2::Output* output_;
  ::google::actions::sdk::v2::Diagnostics* diagnostics_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class Output final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.Output) */ {
 public:
  Output();
  virtual ~Output();

  Output(const Output& from);

  inline Output& operator=(const Output& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Output(Output&& from) noexcept
    : Output() {
    *this = ::std::move(from);
  }

  inline Output& operator=(Output&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Output& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Output* internal_default_instance() {
    return reinterpret_cast<const Output*>(
               &_Output_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Output* other);
  friend void swap(Output& a, Output& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Output* New() const final {
    return CreateMaybeMessage<Output>(nullptr);
  }

  Output* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Output>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Output& from);
  void MergeFrom(const Output& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Output* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string speech = 2;
  int speech_size() const;
  void clear_speech();
  static const int kSpeechFieldNumber = 2;
  const ::std::string& speech(int index) const;
  ::std::string* mutable_speech(int index);
  void set_speech(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_speech(int index, ::std::string&& value);
  #endif
  void set_speech(int index, const char* value);
  void set_speech(int index, const char* value, size_t size);
  ::std::string* add_speech();
  void add_speech(const ::std::string& value);
  #if LANG_CXX11
  void add_speech(::std::string&& value);
  #endif
  void add_speech(const char* value);
  void add_speech(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& speech() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_speech();

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .google.actions.sdk.v2.conversation.Canvas canvas = 3;
  bool has_canvas() const;
  void clear_canvas();
  static const int kCanvasFieldNumber = 3;
  const ::google::actions::sdk::v2::conversation::Canvas& canvas() const;
  ::google::actions::sdk::v2::conversation::Canvas* release_canvas();
  ::google::actions::sdk::v2::conversation::Canvas* mutable_canvas();
  void set_allocated_canvas(::google::actions::sdk::v2::conversation::Canvas* canvas);

  // .google.actions.sdk.v2.conversation.Prompt actions_builder_prompt = 4;
  bool has_actions_builder_prompt() const;
  void clear_actions_builder_prompt();
  static const int kActionsBuilderPromptFieldNumber = 4;
  const ::google::actions::sdk::v2::conversation::Prompt& actions_builder_prompt() const;
  ::google::actions::sdk::v2::conversation::Prompt* release_actions_builder_prompt();
  ::google::actions::sdk::v2::conversation::Prompt* mutable_actions_builder_prompt();
  void set_allocated_actions_builder_prompt(::google::actions::sdk::v2::conversation::Prompt* actions_builder_prompt);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.Output)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> speech_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::actions::sdk::v2::conversation::Canvas* canvas_;
  ::google::actions::sdk::v2::conversation::Prompt* actions_builder_prompt_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class Diagnostics final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.Diagnostics) */ {
 public:
  Diagnostics();
  virtual ~Diagnostics();

  Diagnostics(const Diagnostics& from);

  inline Diagnostics& operator=(const Diagnostics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Diagnostics(Diagnostics&& from) noexcept
    : Diagnostics() {
    *this = ::std::move(from);
  }

  inline Diagnostics& operator=(Diagnostics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Diagnostics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Diagnostics* internal_default_instance() {
    return reinterpret_cast<const Diagnostics*>(
               &_Diagnostics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Diagnostics* other);
  friend void swap(Diagnostics& a, Diagnostics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Diagnostics* New() const final {
    return CreateMaybeMessage<Diagnostics>(nullptr);
  }

  Diagnostics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Diagnostics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Diagnostics& from);
  void MergeFrom(const Diagnostics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Diagnostics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.actions.sdk.v2.ExecutionEvent actions_builder_events = 1;
  int actions_builder_events_size() const;
  void clear_actions_builder_events();
  static const int kActionsBuilderEventsFieldNumber = 1;
  ::google::actions::sdk::v2::ExecutionEvent* mutable_actions_builder_events(int index);
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::ExecutionEvent >*
      mutable_actions_builder_events();
  const ::google::actions::sdk::v2::ExecutionEvent& actions_builder_events(int index) const;
  ::google::actions::sdk::v2::ExecutionEvent* add_actions_builder_events();
  const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::ExecutionEvent >&
      actions_builder_events() const;

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.Diagnostics)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::ExecutionEvent > actions_builder_events_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class MatchIntentsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.MatchIntentsRequest) */ {
 public:
  MatchIntentsRequest();
  virtual ~MatchIntentsRequest();

  MatchIntentsRequest(const MatchIntentsRequest& from);

  inline MatchIntentsRequest& operator=(const MatchIntentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchIntentsRequest(MatchIntentsRequest&& from) noexcept
    : MatchIntentsRequest() {
    *this = ::std::move(from);
  }

  inline MatchIntentsRequest& operator=(MatchIntentsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MatchIntentsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchIntentsRequest* internal_default_instance() {
    return reinterpret_cast<const MatchIntentsRequest*>(
               &_MatchIntentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MatchIntentsRequest* other);
  friend void swap(MatchIntentsRequest& a, MatchIntentsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchIntentsRequest* New() const final {
    return CreateMaybeMessage<MatchIntentsRequest>(nullptr);
  }

  MatchIntentsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatchIntentsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatchIntentsRequest& from);
  void MergeFrom(const MatchIntentsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatchIntentsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string query = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // string locale = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_locale();
  static const int kLocaleFieldNumber = 3;
  const ::std::string& locale() const;
  void set_locale(const ::std::string& value);
  #if LANG_CXX11
  void set_locale(::std::string&& value);
  #endif
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  ::std::string* mutable_locale();
  ::std::string* release_locale();
  void set_allocated_locale(::std::string* locale);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.MatchIntentsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr locale_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class MatchIntentsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.MatchIntentsResponse) */ {
 public:
  MatchIntentsResponse();
  virtual ~MatchIntentsResponse();

  MatchIntentsResponse(const MatchIntentsResponse& from);

  inline MatchIntentsResponse& operator=(const MatchIntentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchIntentsResponse(MatchIntentsResponse&& from) noexcept
    : MatchIntentsResponse() {
    *this = ::std::move(from);
  }

  inline MatchIntentsResponse& operator=(MatchIntentsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MatchIntentsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchIntentsResponse* internal_default_instance() {
    return reinterpret_cast<const MatchIntentsResponse*>(
               &_MatchIntentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MatchIntentsResponse* other);
  friend void swap(MatchIntentsResponse& a, MatchIntentsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchIntentsResponse* New() const final {
    return CreateMaybeMessage<MatchIntentsResponse>(nullptr);
  }

  MatchIntentsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatchIntentsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatchIntentsResponse& from);
  void MergeFrom(const MatchIntentsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatchIntentsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.actions.sdk.v2.conversation.Intent matched_intents = 1;
  int matched_intents_size() const;
  void clear_matched_intents();
  static const int kMatchedIntentsFieldNumber = 1;
  ::google::actions::sdk::v2::conversation::Intent* mutable_matched_intents(int index);
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Intent >*
      mutable_matched_intents();
  const ::google::actions::sdk::v2::conversation::Intent& matched_intents(int index) const;
  ::google::actions::sdk::v2::conversation::Intent* add_matched_intents();
  const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Intent >&
      matched_intents() const;

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.MatchIntentsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Intent > matched_intents_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// -------------------------------------------------------------------

class SetWebAndAppActivityControlRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.SetWebAndAppActivityControlRequest) */ {
 public:
  SetWebAndAppActivityControlRequest();
  virtual ~SetWebAndAppActivityControlRequest();

  SetWebAndAppActivityControlRequest(const SetWebAndAppActivityControlRequest& from);

  inline SetWebAndAppActivityControlRequest& operator=(const SetWebAndAppActivityControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetWebAndAppActivityControlRequest(SetWebAndAppActivityControlRequest&& from) noexcept
    : SetWebAndAppActivityControlRequest() {
    *this = ::std::move(from);
  }

  inline SetWebAndAppActivityControlRequest& operator=(SetWebAndAppActivityControlRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetWebAndAppActivityControlRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetWebAndAppActivityControlRequest* internal_default_instance() {
    return reinterpret_cast<const SetWebAndAppActivityControlRequest*>(
               &_SetWebAndAppActivityControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(SetWebAndAppActivityControlRequest* other);
  friend void swap(SetWebAndAppActivityControlRequest& a, SetWebAndAppActivityControlRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetWebAndAppActivityControlRequest* New() const final {
    return CreateMaybeMessage<SetWebAndAppActivityControlRequest>(nullptr);
  }

  SetWebAndAppActivityControlRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetWebAndAppActivityControlRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetWebAndAppActivityControlRequest& from);
  void MergeFrom(const SetWebAndAppActivityControlRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetWebAndAppActivityControlRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool enabled = 1;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SendInteractionRequest

// string project = 1 [(.google.api.field_behavior) = REQUIRED];
inline void SendInteractionRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendInteractionRequest::project() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SendInteractionRequest.project)
  return project_.GetNoArena();
}
inline void SendInteractionRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.SendInteractionRequest.project)
}
#if LANG_CXX11
inline void SendInteractionRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.SendInteractionRequest.project)
}
#endif
inline void SendInteractionRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.SendInteractionRequest.project)
}
inline void SendInteractionRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.SendInteractionRequest.project)
}
inline ::std::string* SendInteractionRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SendInteractionRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendInteractionRequest::release_project() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SendInteractionRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendInteractionRequest::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SendInteractionRequest.project)
}

// .google.actions.sdk.v2.UserInput input = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool SendInteractionRequest::has_input() const {
  return this != internal_default_instance() && input_ != nullptr;
}
inline void SendInteractionRequest::clear_input() {
  if (GetArenaNoVirtual() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
}
inline const ::google::actions::sdk::v2::UserInput& SendInteractionRequest::input() const {
  const ::google::actions::sdk::v2::UserInput* p = input_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SendInteractionRequest.input)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::UserInput*>(
      &::google::actions::sdk::v2::_UserInput_default_instance_);
}
inline ::google::actions::sdk::v2::UserInput* SendInteractionRequest::release_input() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SendInteractionRequest.input)
  
  ::google::actions::sdk::v2::UserInput* temp = input_;
  input_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::UserInput* SendInteractionRequest::mutable_input() {
  
  if (input_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::UserInput>(GetArenaNoVirtual());
    input_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SendInteractionRequest.input)
  return input_;
}
inline void SendInteractionRequest::set_allocated_input(::google::actions::sdk::v2::UserInput* input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete input_;
  }
  if (input) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input, submessage_arena);
    }
    
  } else {
    
  }
  input_ = input;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SendInteractionRequest.input)
}

// .google.actions.sdk.v2.DeviceProperties device_properties = 3 [(.google.api.field_behavior) = REQUIRED];
inline bool SendInteractionRequest::has_device_properties() const {
  return this != internal_default_instance() && device_properties_ != nullptr;
}
inline void SendInteractionRequest::clear_device_properties() {
  if (GetArenaNoVirtual() == nullptr && device_properties_ != nullptr) {
    delete device_properties_;
  }
  device_properties_ = nullptr;
}
inline const ::google::actions::sdk::v2::DeviceProperties& SendInteractionRequest::device_properties() const {
  const ::google::actions::sdk::v2::DeviceProperties* p = device_properties_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SendInteractionRequest.device_properties)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::DeviceProperties*>(
      &::google::actions::sdk::v2::_DeviceProperties_default_instance_);
}
inline ::google::actions::sdk::v2::DeviceProperties* SendInteractionRequest::release_device_properties() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SendInteractionRequest.device_properties)
  
  ::google::actions::sdk::v2::DeviceProperties* temp = device_properties_;
  device_properties_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::DeviceProperties* SendInteractionRequest::mutable_device_properties() {
  
  if (device_properties_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::DeviceProperties>(GetArenaNoVirtual());
    device_properties_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SendInteractionRequest.device_properties)
  return device_properties_;
}
inline void SendInteractionRequest::set_allocated_device_properties(::google::actions::sdk::v2::DeviceProperties* device_properties) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete device_properties_;
  }
  if (device_properties) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device_properties = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_properties, submessage_arena);
    }
    
  } else {
    
  }
  device_properties_ = device_properties;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SendInteractionRequest.device_properties)
}

// string conversation_token = 4;
inline void SendInteractionRequest::clear_conversation_token() {
  conversation_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendInteractionRequest::conversation_token() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SendInteractionRequest.conversation_token)
  return conversation_token_.GetNoArena();
}
inline void SendInteractionRequest::set_conversation_token(const ::std::string& value) {
  
  conversation_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.SendInteractionRequest.conversation_token)
}
#if LANG_CXX11
inline void SendInteractionRequest::set_conversation_token(::std::string&& value) {
  
  conversation_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.SendInteractionRequest.conversation_token)
}
#endif
inline void SendInteractionRequest::set_conversation_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  conversation_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.SendInteractionRequest.conversation_token)
}
inline void SendInteractionRequest::set_conversation_token(const char* value, size_t size) {
  
  conversation_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.SendInteractionRequest.conversation_token)
}
inline ::std::string* SendInteractionRequest::mutable_conversation_token() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SendInteractionRequest.conversation_token)
  return conversation_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendInteractionRequest::release_conversation_token() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SendInteractionRequest.conversation_token)
  
  return conversation_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendInteractionRequest::set_allocated_conversation_token(::std::string* conversation_token) {
  if (conversation_token != nullptr) {
    
  } else {
    
  }
  conversation_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conversation_token);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SendInteractionRequest.conversation_token)
}

// -------------------------------------------------------------------

// UserInput

// string query = 1;
inline void UserInput::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInput::query() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.UserInput.query)
  return query_.GetNoArena();
}
inline void UserInput::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.UserInput.query)
}
#if LANG_CXX11
inline void UserInput::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.UserInput.query)
}
#endif
inline void UserInput::set_query(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.UserInput.query)
}
inline void UserInput::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.UserInput.query)
}
inline ::std::string* UserInput::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.UserInput.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInput::release_query() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.UserInput.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInput::set_allocated_query(::std::string* query) {
  if (query != nullptr) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.UserInput.query)
}

// .google.actions.sdk.v2.UserInput.InputType type = 2;
inline void UserInput::clear_type() {
  type_ = 0;
}
inline ::google::actions::sdk::v2::UserInput_InputType UserInput::type() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.UserInput.type)
  return static_cast< ::google::actions::sdk::v2::UserInput_InputType >(type_);
}
inline void UserInput::set_type(::google::actions::sdk::v2::UserInput_InputType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.UserInput.type)
}

// -------------------------------------------------------------------

// DeviceProperties

// .google.actions.sdk.v2.DeviceProperties.Surface surface = 1;
inline void DeviceProperties::clear_surface() {
  surface_ = 0;
}
inline ::google::actions::sdk::v2::DeviceProperties_Surface DeviceProperties::surface() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.DeviceProperties.surface)
  return static_cast< ::google::actions::sdk::v2::DeviceProperties_Surface >(surface_);
}
inline void DeviceProperties::set_surface(::google::actions::sdk::v2::DeviceProperties_Surface value) {
  
  surface_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.DeviceProperties.surface)
}

// .google.actions.sdk.v2.Location location = 2;
inline bool DeviceProperties::has_location() const {
  return this != internal_default_instance() && location_ != nullptr;
}
inline void DeviceProperties::clear_location() {
  if (GetArenaNoVirtual() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
}
inline const ::google::actions::sdk::v2::Location& DeviceProperties::location() const {
  const ::google::actions::sdk::v2::Location* p = location_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.DeviceProperties.location)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::Location*>(
      &::google::actions::sdk::v2::_Location_default_instance_);
}
inline ::google::actions::sdk::v2::Location* DeviceProperties::release_location() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.DeviceProperties.location)
  
  ::google::actions::sdk::v2::Location* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::Location* DeviceProperties::mutable_location() {
  
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::Location>(GetArenaNoVirtual());
    location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.DeviceProperties.location)
  return location_;
}
inline void DeviceProperties::set_allocated_location(::google::actions::sdk::v2::Location* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.DeviceProperties.location)
}

// string locale = 3;
inline void DeviceProperties::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeviceProperties::locale() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.DeviceProperties.locale)
  return locale_.GetNoArena();
}
inline void DeviceProperties::set_locale(const ::std::string& value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.DeviceProperties.locale)
}
#if LANG_CXX11
inline void DeviceProperties::set_locale(::std::string&& value) {
  
  locale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.DeviceProperties.locale)
}
#endif
inline void DeviceProperties::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.DeviceProperties.locale)
}
inline void DeviceProperties::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.DeviceProperties.locale)
}
inline ::std::string* DeviceProperties::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.DeviceProperties.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceProperties::release_locale() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.DeviceProperties.locale)
  
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceProperties::set_allocated_locale(::std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.DeviceProperties.locale)
}

// string time_zone = 4;
inline void DeviceProperties::clear_time_zone() {
  time_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeviceProperties::time_zone() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.DeviceProperties.time_zone)
  return time_zone_.GetNoArena();
}
inline void DeviceProperties::set_time_zone(const ::std::string& value) {
  
  time_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.DeviceProperties.time_zone)
}
#if LANG_CXX11
inline void DeviceProperties::set_time_zone(::std::string&& value) {
  
  time_zone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.DeviceProperties.time_zone)
}
#endif
inline void DeviceProperties::set_time_zone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  time_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.DeviceProperties.time_zone)
}
inline void DeviceProperties::set_time_zone(const char* value, size_t size) {
  
  time_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.DeviceProperties.time_zone)
}
inline ::std::string* DeviceProperties::mutable_time_zone() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.DeviceProperties.time_zone)
  return time_zone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceProperties::release_time_zone() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.DeviceProperties.time_zone)
  
  return time_zone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceProperties::set_allocated_time_zone(::std::string* time_zone) {
  if (time_zone != nullptr) {
    
  } else {
    
  }
  time_zone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_zone);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.DeviceProperties.time_zone)
}

// -------------------------------------------------------------------

// Location

// .google.type.LatLng coordinates = 1;
inline bool Location::has_coordinates() const {
  return this != internal_default_instance() && coordinates_ != nullptr;
}
inline const ::google::type::LatLng& Location::coordinates() const {
  const ::google::type::LatLng* p = coordinates_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Location.coordinates)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::type::LatLng*>(
      &::google::type::_LatLng_default_instance_);
}
inline ::google::type::LatLng* Location::release_coordinates() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Location.coordinates)
  
  ::google::type::LatLng* temp = coordinates_;
  coordinates_ = nullptr;
  return temp;
}
inline ::google::type::LatLng* Location::mutable_coordinates() {
  
  if (coordinates_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::type::LatLng>(GetArenaNoVirtual());
    coordinates_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Location.coordinates)
  return coordinates_;
}
inline void Location::set_allocated_coordinates(::google::type::LatLng* coordinates) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(coordinates_);
  }
  if (coordinates) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(coordinates)->GetArena();
    if (message_arena != submessage_arena) {
      coordinates = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinates, submessage_arena);
    }
    
  } else {
    
  }
  coordinates_ = coordinates;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Location.coordinates)
}

// string formatted_address = 2;
inline void Location::clear_formatted_address() {
  formatted_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Location::formatted_address() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Location.formatted_address)
  return formatted_address_.GetNoArena();
}
inline void Location::set_formatted_address(const ::std::string& value) {
  
  formatted_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Location.formatted_address)
}
#if LANG_CXX11
inline void Location::set_formatted_address(::std::string&& value) {
  
  formatted_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Location.formatted_address)
}
#endif
inline void Location::set_formatted_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  formatted_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Location.formatted_address)
}
inline void Location::set_formatted_address(const char* value, size_t size) {
  
  formatted_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Location.formatted_address)
}
inline ::std::string* Location::mutable_formatted_address() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Location.formatted_address)
  return formatted_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Location::release_formatted_address() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Location.formatted_address)
  
  return formatted_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Location::set_allocated_formatted_address(::std::string* formatted_address) {
  if (formatted_address != nullptr) {
    
  } else {
    
  }
  formatted_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), formatted_address);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Location.formatted_address)
}

// string zip_code = 3;
inline void Location::clear_zip_code() {
  zip_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Location::zip_code() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Location.zip_code)
  return zip_code_.GetNoArena();
}
inline void Location::set_zip_code(const ::std::string& value) {
  
  zip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Location.zip_code)
}
#if LANG_CXX11
inline void Location::set_zip_code(::std::string&& value) {
  
  zip_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Location.zip_code)
}
#endif
inline void Location::set_zip_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Location.zip_code)
}
inline void Location::set_zip_code(const char* value, size_t size) {
  
  zip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Location.zip_code)
}
inline ::std::string* Location::mutable_zip_code() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Location.zip_code)
  return zip_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Location::release_zip_code() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Location.zip_code)
  
  return zip_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Location::set_allocated_zip_code(::std::string* zip_code) {
  if (zip_code != nullptr) {
    
  } else {
    
  }
  zip_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zip_code);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Location.zip_code)
}

// string city = 4;
inline void Location::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Location::city() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Location.city)
  return city_.GetNoArena();
}
inline void Location::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Location.city)
}
#if LANG_CXX11
inline void Location::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Location.city)
}
#endif
inline void Location::set_city(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Location.city)
}
inline void Location::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Location.city)
}
inline ::std::string* Location::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Location.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Location::release_city() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Location.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Location::set_allocated_city(::std::string* city) {
  if (city != nullptr) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Location.city)
}

// -------------------------------------------------------------------

// SendInteractionResponse

// .google.actions.sdk.v2.Output output = 1;
inline bool SendInteractionResponse::has_output() const {
  return this != internal_default_instance() && output_ != nullptr;
}
inline void SendInteractionResponse::clear_output() {
  if (GetArenaNoVirtual() == nullptr && output_ != nullptr) {
    delete output_;
  }
  output_ = nullptr;
}
inline const ::google::actions::sdk::v2::Output& SendInteractionResponse::output() const {
  const ::google::actions::sdk::v2::Output* p = output_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SendInteractionResponse.output)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::Output*>(
      &::google::actions::sdk::v2::_Output_default_instance_);
}
inline ::google::actions::sdk::v2::Output* SendInteractionResponse::release_output() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SendInteractionResponse.output)
  
  ::google::actions::sdk::v2::Output* temp = output_;
  output_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::Output* SendInteractionResponse::mutable_output() {
  
  if (output_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::Output>(GetArenaNoVirtual());
    output_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SendInteractionResponse.output)
  return output_;
}
inline void SendInteractionResponse::set_allocated_output(::google::actions::sdk::v2::Output* output) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete output_;
  }
  if (output) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      output = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output, submessage_arena);
    }
    
  } else {
    
  }
  output_ = output;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SendInteractionResponse.output)
}

// .google.actions.sdk.v2.Diagnostics diagnostics = 2;
inline bool SendInteractionResponse::has_diagnostics() const {
  return this != internal_default_instance() && diagnostics_ != nullptr;
}
inline void SendInteractionResponse::clear_diagnostics() {
  if (GetArenaNoVirtual() == nullptr && diagnostics_ != nullptr) {
    delete diagnostics_;
  }
  diagnostics_ = nullptr;
}
inline const ::google::actions::sdk::v2::Diagnostics& SendInteractionResponse::diagnostics() const {
  const ::google::actions::sdk::v2::Diagnostics* p = diagnostics_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SendInteractionResponse.diagnostics)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::Diagnostics*>(
      &::google::actions::sdk::v2::_Diagnostics_default_instance_);
}
inline ::google::actions::sdk::v2::Diagnostics* SendInteractionResponse::release_diagnostics() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SendInteractionResponse.diagnostics)
  
  ::google::actions::sdk::v2::Diagnostics* temp = diagnostics_;
  diagnostics_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::Diagnostics* SendInteractionResponse::mutable_diagnostics() {
  
  if (diagnostics_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::Diagnostics>(GetArenaNoVirtual());
    diagnostics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SendInteractionResponse.diagnostics)
  return diagnostics_;
}
inline void SendInteractionResponse::set_allocated_diagnostics(::google::actions::sdk::v2::Diagnostics* diagnostics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete diagnostics_;
  }
  if (diagnostics) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      diagnostics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, diagnostics, submessage_arena);
    }
    
  } else {
    
  }
  diagnostics_ = diagnostics;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SendInteractionResponse.diagnostics)
}

// string conversation_token = 3;
inline void SendInteractionResponse::clear_conversation_token() {
  conversation_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendInteractionResponse::conversation_token() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SendInteractionResponse.conversation_token)
  return conversation_token_.GetNoArena();
}
inline void SendInteractionResponse::set_conversation_token(const ::std::string& value) {
  
  conversation_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.SendInteractionResponse.conversation_token)
}
#if LANG_CXX11
inline void SendInteractionResponse::set_conversation_token(::std::string&& value) {
  
  conversation_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.SendInteractionResponse.conversation_token)
}
#endif
inline void SendInteractionResponse::set_conversation_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  conversation_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.SendInteractionResponse.conversation_token)
}
inline void SendInteractionResponse::set_conversation_token(const char* value, size_t size) {
  
  conversation_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.SendInteractionResponse.conversation_token)
}
inline ::std::string* SendInteractionResponse::mutable_conversation_token() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SendInteractionResponse.conversation_token)
  return conversation_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendInteractionResponse::release_conversation_token() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SendInteractionResponse.conversation_token)
  
  return conversation_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendInteractionResponse::set_allocated_conversation_token(::std::string* conversation_token) {
  if (conversation_token != nullptr) {
    
  } else {
    
  }
  conversation_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conversation_token);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SendInteractionResponse.conversation_token)
}

// -------------------------------------------------------------------

// Output

// string text = 1;
inline void Output::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Output::text() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Output.text)
  return text_.GetNoArena();
}
inline void Output::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Output.text)
}
#if LANG_CXX11
inline void Output::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Output.text)
}
#endif
inline void Output::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Output.text)
}
inline void Output::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Output.text)
}
inline ::std::string* Output::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Output.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Output::release_text() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Output.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Output::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Output.text)
}

// repeated string speech = 2;
inline int Output::speech_size() const {
  return speech_.size();
}
inline void Output::clear_speech() {
  speech_.Clear();
}
inline const ::std::string& Output::speech(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Output.speech)
  return speech_.Get(index);
}
inline ::std::string* Output::mutable_speech(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Output.speech)
  return speech_.Mutable(index);
}
inline void Output::set_speech(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Output.speech)
  speech_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Output::set_speech(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Output.speech)
  speech_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Output::set_speech(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  speech_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Output.speech)
}
inline void Output::set_speech(int index, const char* value, size_t size) {
  speech_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Output.speech)
}
inline ::std::string* Output::add_speech() {
  // @@protoc_insertion_point(field_add_mutable:google.actions.sdk.v2.Output.speech)
  return speech_.Add();
}
inline void Output::add_speech(const ::std::string& value) {
  speech_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Output.speech)
}
#if LANG_CXX11
inline void Output::add_speech(::std::string&& value) {
  speech_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Output.speech)
}
#endif
inline void Output::add_speech(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  speech_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.actions.sdk.v2.Output.speech)
}
inline void Output::add_speech(const char* value, size_t size) {
  speech_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.actions.sdk.v2.Output.speech)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Output::speech() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.Output.speech)
  return speech_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Output::mutable_speech() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.Output.speech)
  return &speech_;
}

// .google.actions.sdk.v2.conversation.Canvas canvas = 3;
inline bool Output::has_canvas() const {
  return this != internal_default_instance() && canvas_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Canvas& Output::canvas() const {
  const ::google::actions::sdk::v2::conversation::Canvas* p = canvas_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Output.canvas)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Canvas*>(
      &::google::actions::sdk::v2::conversation::_Canvas_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Canvas* Output::release_canvas() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Output.canvas)
  
  ::google::actions::sdk::v2::conversation::Canvas* temp = canvas_;
  canvas_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Canvas* Output::mutable_canvas() {
  
  if (canvas_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Canvas>(GetArenaNoVirtual());
    canvas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Output.canvas)
  return canvas_;
}
inline void Output::set_allocated_canvas(::google::actions::sdk::v2::conversation::Canvas* canvas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(canvas_);
  }
  if (canvas) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      canvas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, canvas, submessage_arena);
    }
    
  } else {
    
  }
  canvas_ = canvas;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Output.canvas)
}

// .google.actions.sdk.v2.conversation.Prompt actions_builder_prompt = 4;
inline bool Output::has_actions_builder_prompt() const {
  return this != internal_default_instance() && actions_builder_prompt_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Prompt& Output::actions_builder_prompt() const {
  const ::google::actions::sdk::v2::conversation::Prompt* p = actions_builder_prompt_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Output.actions_builder_prompt)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Prompt*>(
      &::google::actions::sdk::v2::conversation::_Prompt_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Prompt* Output::release_actions_builder_prompt() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Output.actions_builder_prompt)
  
  ::google::actions::sdk::v2::conversation::Prompt* temp = actions_builder_prompt_;
  actions_builder_prompt_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Prompt* Output::mutable_actions_builder_prompt() {
  
  if (actions_builder_prompt_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Prompt>(GetArenaNoVirtual());
    actions_builder_prompt_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Output.actions_builder_prompt)
  return actions_builder_prompt_;
}
inline void Output::set_allocated_actions_builder_prompt(::google::actions::sdk::v2::conversation::Prompt* actions_builder_prompt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(actions_builder_prompt_);
  }
  if (actions_builder_prompt) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      actions_builder_prompt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actions_builder_prompt, submessage_arena);
    }
    
  } else {
    
  }
  actions_builder_prompt_ = actions_builder_prompt;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Output.actions_builder_prompt)
}

// -------------------------------------------------------------------

// Diagnostics

// repeated .google.actions.sdk.v2.ExecutionEvent actions_builder_events = 1;
inline int Diagnostics::actions_builder_events_size() const {
  return actions_builder_events_.size();
}
inline ::google::actions::sdk::v2::ExecutionEvent* Diagnostics::mutable_actions_builder_events(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Diagnostics.actions_builder_events)
  return actions_builder_events_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::ExecutionEvent >*
Diagnostics::mutable_actions_builder_events() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.Diagnostics.actions_builder_events)
  return &actions_builder_events_;
}
inline const ::google::actions::sdk::v2::ExecutionEvent& Diagnostics::actions_builder_events(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Diagnostics.actions_builder_events)
  return actions_builder_events_.Get(index);
}
inline ::google::actions::sdk::v2::ExecutionEvent* Diagnostics::add_actions_builder_events() {
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.Diagnostics.actions_builder_events)
  return actions_builder_events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::ExecutionEvent >&
Diagnostics::actions_builder_events() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.Diagnostics.actions_builder_events)
  return actions_builder_events_;
}

// -------------------------------------------------------------------

// MatchIntentsRequest

// string project = 1 [(.google.api.field_behavior) = REQUIRED];
inline void MatchIntentsRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchIntentsRequest::project() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.MatchIntentsRequest.project)
  return project_.GetNoArena();
}
inline void MatchIntentsRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.MatchIntentsRequest.project)
}
#if LANG_CXX11
inline void MatchIntentsRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.MatchIntentsRequest.project)
}
#endif
inline void MatchIntentsRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.MatchIntentsRequest.project)
}
inline void MatchIntentsRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.MatchIntentsRequest.project)
}
inline ::std::string* MatchIntentsRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.MatchIntentsRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchIntentsRequest::release_project() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.MatchIntentsRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchIntentsRequest::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.MatchIntentsRequest.project)
}

// string query = 2 [(.google.api.field_behavior) = REQUIRED];
inline void MatchIntentsRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchIntentsRequest::query() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.MatchIntentsRequest.query)
  return query_.GetNoArena();
}
inline void MatchIntentsRequest::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.MatchIntentsRequest.query)
}
#if LANG_CXX11
inline void MatchIntentsRequest::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.MatchIntentsRequest.query)
}
#endif
inline void MatchIntentsRequest::set_query(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.MatchIntentsRequest.query)
}
inline void MatchIntentsRequest::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.MatchIntentsRequest.query)
}
inline ::std::string* MatchIntentsRequest::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.MatchIntentsRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchIntentsRequest::release_query() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.MatchIntentsRequest.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchIntentsRequest::set_allocated_query(::std::string* query) {
  if (query != nullptr) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.MatchIntentsRequest.query)
}

// string locale = 3 [(.google.api.field_behavior) = REQUIRED];
inline void MatchIntentsRequest::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchIntentsRequest::locale() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.MatchIntentsRequest.locale)
  return locale_.GetNoArena();
}
inline void MatchIntentsRequest::set_locale(const ::std::string& value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.MatchIntentsRequest.locale)
}
#if LANG_CXX11
inline void MatchIntentsRequest::set_locale(::std::string&& value) {
  
  locale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.MatchIntentsRequest.locale)
}
#endif
inline void MatchIntentsRequest::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.MatchIntentsRequest.locale)
}
inline void MatchIntentsRequest::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.MatchIntentsRequest.locale)
}
inline ::std::string* MatchIntentsRequest::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.MatchIntentsRequest.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchIntentsRequest::release_locale() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.MatchIntentsRequest.locale)
  
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchIntentsRequest::set_allocated_locale(::std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.MatchIntentsRequest.locale)
}

// -------------------------------------------------------------------

// MatchIntentsResponse

// repeated .google.actions.sdk.v2.conversation.Intent matched_intents = 1;
inline int MatchIntentsResponse::matched_intents_size() const {
  return matched_intents_.size();
}
inline ::google::actions::sdk::v2::conversation::Intent* MatchIntentsResponse::mutable_matched_intents(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.MatchIntentsResponse.matched_intents)
  return matched_intents_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Intent >*
MatchIntentsResponse::mutable_matched_intents() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.MatchIntentsResponse.matched_intents)
  return &matched_intents_;
}
inline const ::google::actions::sdk::v2::conversation::Intent& MatchIntentsResponse::matched_intents(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.MatchIntentsResponse.matched_intents)
  return matched_intents_.Get(index);
}
inline ::google::actions::sdk::v2::conversation::Intent* MatchIntentsResponse::add_matched_intents() {
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.MatchIntentsResponse.matched_intents)
  return matched_intents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Intent >&
MatchIntentsResponse::matched_intents() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.MatchIntentsResponse.matched_intents)
  return matched_intents_;
}

// -------------------------------------------------------------------

// SetWebAndAppActivityControlRequest

// bool enabled = 1;
inline void SetWebAndAppActivityControlRequest::clear_enabled() {
  enabled_ = false;
}
inline bool SetWebAndAppActivityControlRequest::enabled() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SetWebAndAppActivityControlRequest.enabled)
  return enabled_;
}
inline void SetWebAndAppActivityControlRequest::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.SetWebAndAppActivityControlRequest.enabled)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::actions::sdk::v2::UserInput_InputType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::actions::sdk::v2::UserInput_InputType>() {
  return ::google::actions::sdk::v2::UserInput_InputType_descriptor();
}
template <> struct is_proto_enum< ::google::actions::sdk::v2::DeviceProperties_Surface> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::actions::sdk::v2::DeviceProperties_Surface>() {
  return ::google::actions::sdk::v2::DeviceProperties_Surface_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto
