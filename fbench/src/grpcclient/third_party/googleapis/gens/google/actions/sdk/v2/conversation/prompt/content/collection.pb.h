// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/prompt/content/collection.proto

#ifndef PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto
#define PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/actions/sdk/v2/conversation/prompt/content/image.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class Collection;
class CollectionDefaultTypeInternal;
extern CollectionDefaultTypeInternal _Collection_default_instance_;
class Collection_CollectionItem;
class Collection_CollectionItemDefaultTypeInternal;
extern Collection_CollectionItemDefaultTypeInternal _Collection_CollectionItem_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
namespace protobuf {
template<> ::google::actions::sdk::v2::conversation::Collection* Arena::CreateMaybeMessage<::google::actions::sdk::v2::conversation::Collection>(Arena*);
template<> ::google::actions::sdk::v2::conversation::Collection_CollectionItem* Arena::CreateMaybeMessage<::google::actions::sdk::v2::conversation::Collection_CollectionItem>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {

// ===================================================================

class Collection_CollectionItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.conversation.Collection.CollectionItem) */ {
 public:
  Collection_CollectionItem();
  virtual ~Collection_CollectionItem();

  Collection_CollectionItem(const Collection_CollectionItem& from);

  inline Collection_CollectionItem& operator=(const Collection_CollectionItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Collection_CollectionItem(Collection_CollectionItem&& from) noexcept
    : Collection_CollectionItem() {
    *this = ::std::move(from);
  }

  inline Collection_CollectionItem& operator=(Collection_CollectionItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Collection_CollectionItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Collection_CollectionItem* internal_default_instance() {
    return reinterpret_cast<const Collection_CollectionItem*>(
               &_Collection_CollectionItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Collection_CollectionItem* other);
  friend void swap(Collection_CollectionItem& a, Collection_CollectionItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Collection_CollectionItem* New() const final {
    return CreateMaybeMessage<Collection_CollectionItem>(nullptr);
  }

  Collection_CollectionItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Collection_CollectionItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Collection_CollectionItem& from);
  void MergeFrom(const Collection_CollectionItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Collection_CollectionItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.conversation.Collection.CollectionItem)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto;
};
// -------------------------------------------------------------------

class Collection final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.conversation.Collection) */ {
 public:
  Collection();
  virtual ~Collection();

  Collection(const Collection& from);

  inline Collection& operator=(const Collection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Collection(Collection&& from) noexcept
    : Collection() {
    *this = ::std::move(from);
  }

  inline Collection& operator=(Collection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Collection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Collection* internal_default_instance() {
    return reinterpret_cast<const Collection*>(
               &_Collection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Collection* other);
  friend void swap(Collection& a, Collection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Collection* New() const final {
    return CreateMaybeMessage<Collection>(nullptr);
  }

  Collection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Collection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Collection& from);
  void MergeFrom(const Collection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Collection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Collection_CollectionItem CollectionItem;

  // accessors -------------------------------------------------------

  // repeated .google.actions.sdk.v2.conversation.Collection.CollectionItem items = 3;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 3;
  ::google::actions::sdk::v2::conversation::Collection_CollectionItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Collection_CollectionItem >*
      mutable_items();
  const ::google::actions::sdk::v2::conversation::Collection_CollectionItem& items(int index) const;
  ::google::actions::sdk::v2::conversation::Collection_CollectionItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Collection_CollectionItem >&
      items() const;

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string subtitle = 2;
  void clear_subtitle();
  static const int kSubtitleFieldNumber = 2;
  const ::std::string& subtitle() const;
  void set_subtitle(const ::std::string& value);
  #if LANG_CXX11
  void set_subtitle(::std::string&& value);
  #endif
  void set_subtitle(const char* value);
  void set_subtitle(const char* value, size_t size);
  ::std::string* mutable_subtitle();
  ::std::string* release_subtitle();
  void set_allocated_subtitle(::std::string* subtitle);

  // .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 4;
  void clear_image_fill();
  static const int kImageFillFieldNumber = 4;
  ::google::actions::sdk::v2::conversation::Image_ImageFill image_fill() const;
  void set_image_fill(::google::actions::sdk::v2::conversation::Image_ImageFill value);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.conversation.Collection)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Collection_CollectionItem > items_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr subtitle_;
  int image_fill_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Collection_CollectionItem

// string key = 1;
inline void Collection_CollectionItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Collection_CollectionItem::key() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Collection.CollectionItem.key)
  return key_.GetNoArena();
}
inline void Collection_CollectionItem::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Collection.CollectionItem.key)
}
#if LANG_CXX11
inline void Collection_CollectionItem::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.conversation.Collection.CollectionItem.key)
}
#endif
inline void Collection_CollectionItem::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.conversation.Collection.CollectionItem.key)
}
inline void Collection_CollectionItem::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.conversation.Collection.CollectionItem.key)
}
inline ::std::string* Collection_CollectionItem::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Collection.CollectionItem.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Collection_CollectionItem::release_key() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Collection.CollectionItem.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Collection_CollectionItem::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Collection.CollectionItem.key)
}

// -------------------------------------------------------------------

// Collection

// string title = 1;
inline void Collection::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Collection::title() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Collection.title)
  return title_.GetNoArena();
}
inline void Collection::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Collection.title)
}
#if LANG_CXX11
inline void Collection::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.conversation.Collection.title)
}
#endif
inline void Collection::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.conversation.Collection.title)
}
inline void Collection::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.conversation.Collection.title)
}
inline ::std::string* Collection::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Collection.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Collection::release_title() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Collection.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Collection::set_allocated_title(::std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Collection.title)
}

// string subtitle = 2;
inline void Collection::clear_subtitle() {
  subtitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Collection::subtitle() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Collection.subtitle)
  return subtitle_.GetNoArena();
}
inline void Collection::set_subtitle(const ::std::string& value) {
  
  subtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Collection.subtitle)
}
#if LANG_CXX11
inline void Collection::set_subtitle(::std::string&& value) {
  
  subtitle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.conversation.Collection.subtitle)
}
#endif
inline void Collection::set_subtitle(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  subtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.conversation.Collection.subtitle)
}
inline void Collection::set_subtitle(const char* value, size_t size) {
  
  subtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.conversation.Collection.subtitle)
}
inline ::std::string* Collection::mutable_subtitle() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Collection.subtitle)
  return subtitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Collection::release_subtitle() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Collection.subtitle)
  
  return subtitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Collection::set_allocated_subtitle(::std::string* subtitle) {
  if (subtitle != nullptr) {
    
  } else {
    
  }
  subtitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subtitle);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Collection.subtitle)
}

// repeated .google.actions.sdk.v2.conversation.Collection.CollectionItem items = 3;
inline int Collection::items_size() const {
  return items_.size();
}
inline void Collection::clear_items() {
  items_.Clear();
}
inline ::google::actions::sdk::v2::conversation::Collection_CollectionItem* Collection::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Collection.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Collection_CollectionItem >*
Collection::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.conversation.Collection.items)
  return &items_;
}
inline const ::google::actions::sdk::v2::conversation::Collection_CollectionItem& Collection::items(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Collection.items)
  return items_.Get(index);
}
inline ::google::actions::sdk::v2::conversation::Collection_CollectionItem* Collection::add_items() {
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.conversation.Collection.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Collection_CollectionItem >&
Collection::items() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.conversation.Collection.items)
  return items_;
}

// .google.actions.sdk.v2.conversation.Image.ImageFill image_fill = 4;
inline void Collection::clear_image_fill() {
  image_fill_ = 0;
}
inline ::google::actions::sdk::v2::conversation::Image_ImageFill Collection::image_fill() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Collection.image_fill)
  return static_cast< ::google::actions::sdk::v2::conversation::Image_ImageFill >(image_fill_);
}
inline void Collection::set_image_fill(::google::actions::sdk::v2::conversation::Image_ImageFill value) {
  
  image_fill_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Collection.image_fill)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcollection_2eproto
