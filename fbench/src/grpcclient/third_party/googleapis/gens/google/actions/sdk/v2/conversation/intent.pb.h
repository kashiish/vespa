// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/intent.proto

#ifndef PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto
#define PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class Intent;
class IntentDefaultTypeInternal;
extern IntentDefaultTypeInternal _Intent_default_instance_;
class IntentParameterValue;
class IntentParameterValueDefaultTypeInternal;
extern IntentParameterValueDefaultTypeInternal _IntentParameterValue_default_instance_;
class Intent_ParamsEntry_DoNotUse;
class Intent_ParamsEntry_DoNotUseDefaultTypeInternal;
extern Intent_ParamsEntry_DoNotUseDefaultTypeInternal _Intent_ParamsEntry_DoNotUse_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
namespace protobuf {
template<> ::google::actions::sdk::v2::conversation::Intent* Arena::CreateMaybeMessage<::google::actions::sdk::v2::conversation::Intent>(Arena*);
template<> ::google::actions::sdk::v2::conversation::IntentParameterValue* Arena::CreateMaybeMessage<::google::actions::sdk::v2::conversation::IntentParameterValue>(Arena*);
template<> ::google::actions::sdk::v2::conversation::Intent_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::actions::sdk::v2::conversation::Intent_ParamsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {

// ===================================================================

class Intent_ParamsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Intent_ParamsEntry_DoNotUse, 
    ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Intent_ParamsEntry_DoNotUse, 
    ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Intent_ParamsEntry_DoNotUse();
  Intent_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Intent_ParamsEntry_DoNotUse& other);
  static const Intent_ParamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Intent_ParamsEntry_DoNotUse*>(&_Intent_ParamsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Intent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.conversation.Intent) */ {
 public:
  Intent();
  virtual ~Intent();

  Intent(const Intent& from);

  inline Intent& operator=(const Intent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent(Intent&& from) noexcept
    : Intent() {
    *this = ::std::move(from);
  }

  inline Intent& operator=(Intent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Intent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent* internal_default_instance() {
    return reinterpret_cast<const Intent*>(
               &_Intent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Intent* other);
  friend void swap(Intent& a, Intent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent* New() const final {
    return CreateMaybeMessage<Intent>(nullptr);
  }

  Intent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Intent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Intent& from);
  void MergeFrom(const Intent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Intent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.actions.sdk.v2.conversation.IntentParameterValue> params = 2;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >&
      params() const;
  ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >*
      mutable_params();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string query = 3;
  void clear_query();
  static const int kQueryFieldNumber = 3;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.conversation.Intent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Intent_ParamsEntry_DoNotUse,
      ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > params_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto;
};
// -------------------------------------------------------------------

class IntentParameterValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.conversation.IntentParameterValue) */ {
 public:
  IntentParameterValue();
  virtual ~IntentParameterValue();

  IntentParameterValue(const IntentParameterValue& from);

  inline IntentParameterValue& operator=(const IntentParameterValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntentParameterValue(IntentParameterValue&& from) noexcept
    : IntentParameterValue() {
    *this = ::std::move(from);
  }

  inline IntentParameterValue& operator=(IntentParameterValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IntentParameterValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntentParameterValue* internal_default_instance() {
    return reinterpret_cast<const IntentParameterValue*>(
               &_IntentParameterValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IntentParameterValue* other);
  friend void swap(IntentParameterValue& a, IntentParameterValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntentParameterValue* New() const final {
    return CreateMaybeMessage<IntentParameterValue>(nullptr);
  }

  IntentParameterValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntentParameterValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntentParameterValue& from);
  void MergeFrom(const IntentParameterValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntentParameterValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string original = 1;
  void clear_original();
  static const int kOriginalFieldNumber = 1;
  const ::std::string& original() const;
  void set_original(const ::std::string& value);
  #if LANG_CXX11
  void set_original(::std::string&& value);
  #endif
  void set_original(const char* value);
  void set_original(const char* value, size_t size);
  ::std::string* mutable_original();
  ::std::string* release_original();
  void set_allocated_original(::std::string* original);

  // .google.protobuf.Value resolved = 2;
  bool has_resolved() const;
  void clear_resolved();
  static const int kResolvedFieldNumber = 2;
  const ::google::protobuf::Value& resolved() const;
  ::google::protobuf::Value* release_resolved();
  ::google::protobuf::Value* mutable_resolved();
  void set_allocated_resolved(::google::protobuf::Value* resolved);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.conversation.IntentParameterValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr original_;
  ::google::protobuf::Value* resolved_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Intent

// string name = 1;
inline void Intent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Intent::name() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Intent.name)
  return name_.GetNoArena();
}
inline void Intent::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Intent.name)
}
#if LANG_CXX11
inline void Intent::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.conversation.Intent.name)
}
#endif
inline void Intent::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.conversation.Intent.name)
}
inline void Intent::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.conversation.Intent.name)
}
inline ::std::string* Intent::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Intent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Intent::release_name() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Intent.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Intent::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Intent.name)
}

// map<string, .google.actions.sdk.v2.conversation.IntentParameterValue> params = 2;
inline int Intent::params_size() const {
  return params_.size();
}
inline void Intent::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >&
Intent::params() const {
  // @@protoc_insertion_point(field_map:google.actions.sdk.v2.conversation.Intent.params)
  return params_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >*
Intent::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:google.actions.sdk.v2.conversation.Intent.params)
  return params_.MutableMap();
}

// string query = 3;
inline void Intent::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Intent::query() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.Intent.query)
  return query_.GetNoArena();
}
inline void Intent::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.Intent.query)
}
#if LANG_CXX11
inline void Intent::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.conversation.Intent.query)
}
#endif
inline void Intent::set_query(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.conversation.Intent.query)
}
inline void Intent::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.conversation.Intent.query)
}
inline ::std::string* Intent::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.Intent.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Intent::release_query() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.Intent.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Intent::set_allocated_query(::std::string* query) {
  if (query != nullptr) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.Intent.query)
}

// -------------------------------------------------------------------

// IntentParameterValue

// string original = 1;
inline void IntentParameterValue::clear_original() {
  original_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IntentParameterValue::original() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.IntentParameterValue.original)
  return original_.GetNoArena();
}
inline void IntentParameterValue::set_original(const ::std::string& value) {
  
  original_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.conversation.IntentParameterValue.original)
}
#if LANG_CXX11
inline void IntentParameterValue::set_original(::std::string&& value) {
  
  original_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.conversation.IntentParameterValue.original)
}
#endif
inline void IntentParameterValue::set_original(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  original_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.conversation.IntentParameterValue.original)
}
inline void IntentParameterValue::set_original(const char* value, size_t size) {
  
  original_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.conversation.IntentParameterValue.original)
}
inline ::std::string* IntentParameterValue::mutable_original() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.IntentParameterValue.original)
  return original_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IntentParameterValue::release_original() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.IntentParameterValue.original)
  
  return original_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntentParameterValue::set_allocated_original(::std::string* original) {
  if (original != nullptr) {
    
  } else {
    
  }
  original_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.IntentParameterValue.original)
}

// .google.protobuf.Value resolved = 2;
inline bool IntentParameterValue::has_resolved() const {
  return this != internal_default_instance() && resolved_ != nullptr;
}
inline const ::google::protobuf::Value& IntentParameterValue::resolved() const {
  const ::google::protobuf::Value* p = resolved_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.conversation.IntentParameterValue.resolved)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Value*>(
      &::google::protobuf::_Value_default_instance_);
}
inline ::google::protobuf::Value* IntentParameterValue::release_resolved() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.conversation.IntentParameterValue.resolved)
  
  ::google::protobuf::Value* temp = resolved_;
  resolved_ = nullptr;
  return temp;
}
inline ::google::protobuf::Value* IntentParameterValue::mutable_resolved() {
  
  if (resolved_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Value>(GetArenaNoVirtual());
    resolved_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.conversation.IntentParameterValue.resolved)
  return resolved_;
}
inline void IntentParameterValue::set_allocated_resolved(::google::protobuf::Value* resolved) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resolved_);
  }
  if (resolved) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(resolved)->GetArena();
    if (message_arena != submessage_arena) {
      resolved = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resolved, submessage_arena);
    }
    
  } else {
    
  }
  resolved_ = resolved;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.conversation.IntentParameterValue.resolved)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto
