// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/actions/sdk/v2/actions_sdk.proto

#include "google/actions/sdk/v2/actions_sdk.pb.h"
#include "google/actions/sdk/v2/actions_sdk.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace actions {
namespace sdk {
namespace v2 {

static const char* ActionsSdk_method_names[] = {
  "/google.actions.sdk.v2.ActionsSdk/WriteDraft",
  "/google.actions.sdk.v2.ActionsSdk/WritePreview",
  "/google.actions.sdk.v2.ActionsSdk/CreateVersion",
  "/google.actions.sdk.v2.ActionsSdk/ReadDraft",
  "/google.actions.sdk.v2.ActionsSdk/ReadVersion",
  "/google.actions.sdk.v2.ActionsSdk/EncryptSecret",
  "/google.actions.sdk.v2.ActionsSdk/DecryptSecret",
  "/google.actions.sdk.v2.ActionsSdk/ListSampleProjects",
  "/google.actions.sdk.v2.ActionsSdk/ListReleaseChannels",
  "/google.actions.sdk.v2.ActionsSdk/ListVersions",
};

std::unique_ptr< ActionsSdk::Stub> ActionsSdk::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ActionsSdk::Stub> stub(new ActionsSdk::Stub(channel, options));
  return stub;
}

ActionsSdk::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_WriteDraft_(ActionsSdk_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::CLIENT_STREAMING, channel)
  , rpcmethod_WritePreview_(ActionsSdk_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::CLIENT_STREAMING, channel)
  , rpcmethod_CreateVersion_(ActionsSdk_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::CLIENT_STREAMING, channel)
  , rpcmethod_ReadDraft_(ActionsSdk_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_ReadVersion_(ActionsSdk_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_EncryptSecret_(ActionsSdk_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DecryptSecret_(ActionsSdk_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSampleProjects_(ActionsSdk_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListReleaseChannels_(ActionsSdk_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListVersions_(ActionsSdk_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::ClientWriter< ::google::actions::sdk::v2::WriteDraftRequest>* ActionsSdk::Stub::WriteDraftRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Draft* response) {
  return ::grpc::internal::ClientWriterFactory< ::google::actions::sdk::v2::WriteDraftRequest>::Create(channel_.get(), rpcmethod_WriteDraft_, context, response);
}

void ActionsSdk::Stub::async::WriteDraft(::grpc::ClientContext* context, ::google::actions::sdk::v2::Draft* response, ::grpc::ClientWriteReactor< ::google::actions::sdk::v2::WriteDraftRequest>* reactor) {
  ::grpc::internal::ClientCallbackWriterFactory< ::google::actions::sdk::v2::WriteDraftRequest>::Create(stub_->channel_.get(), stub_->rpcmethod_WriteDraft_, context, response, reactor);
}

::grpc::ClientAsyncWriter< ::google::actions::sdk::v2::WriteDraftRequest>* ActionsSdk::Stub::AsyncWriteDraftRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Draft* response, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::google::actions::sdk::v2::WriteDraftRequest>::Create(channel_.get(), cq, rpcmethod_WriteDraft_, context, response, true, tag);
}

::grpc::ClientAsyncWriter< ::google::actions::sdk::v2::WriteDraftRequest>* ActionsSdk::Stub::PrepareAsyncWriteDraftRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Draft* response, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::google::actions::sdk::v2::WriteDraftRequest>::Create(channel_.get(), cq, rpcmethod_WriteDraft_, context, response, false, nullptr);
}

::grpc::ClientWriter< ::google::actions::sdk::v2::WritePreviewRequest>* ActionsSdk::Stub::WritePreviewRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Preview* response) {
  return ::grpc::internal::ClientWriterFactory< ::google::actions::sdk::v2::WritePreviewRequest>::Create(channel_.get(), rpcmethod_WritePreview_, context, response);
}

void ActionsSdk::Stub::async::WritePreview(::grpc::ClientContext* context, ::google::actions::sdk::v2::Preview* response, ::grpc::ClientWriteReactor< ::google::actions::sdk::v2::WritePreviewRequest>* reactor) {
  ::grpc::internal::ClientCallbackWriterFactory< ::google::actions::sdk::v2::WritePreviewRequest>::Create(stub_->channel_.get(), stub_->rpcmethod_WritePreview_, context, response, reactor);
}

::grpc::ClientAsyncWriter< ::google::actions::sdk::v2::WritePreviewRequest>* ActionsSdk::Stub::AsyncWritePreviewRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Preview* response, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::google::actions::sdk::v2::WritePreviewRequest>::Create(channel_.get(), cq, rpcmethod_WritePreview_, context, response, true, tag);
}

::grpc::ClientAsyncWriter< ::google::actions::sdk::v2::WritePreviewRequest>* ActionsSdk::Stub::PrepareAsyncWritePreviewRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Preview* response, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::google::actions::sdk::v2::WritePreviewRequest>::Create(channel_.get(), cq, rpcmethod_WritePreview_, context, response, false, nullptr);
}

::grpc::ClientWriter< ::google::actions::sdk::v2::CreateVersionRequest>* ActionsSdk::Stub::CreateVersionRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Version* response) {
  return ::grpc::internal::ClientWriterFactory< ::google::actions::sdk::v2::CreateVersionRequest>::Create(channel_.get(), rpcmethod_CreateVersion_, context, response);
}

void ActionsSdk::Stub::async::CreateVersion(::grpc::ClientContext* context, ::google::actions::sdk::v2::Version* response, ::grpc::ClientWriteReactor< ::google::actions::sdk::v2::CreateVersionRequest>* reactor) {
  ::grpc::internal::ClientCallbackWriterFactory< ::google::actions::sdk::v2::CreateVersionRequest>::Create(stub_->channel_.get(), stub_->rpcmethod_CreateVersion_, context, response, reactor);
}

::grpc::ClientAsyncWriter< ::google::actions::sdk::v2::CreateVersionRequest>* ActionsSdk::Stub::AsyncCreateVersionRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Version* response, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::google::actions::sdk::v2::CreateVersionRequest>::Create(channel_.get(), cq, rpcmethod_CreateVersion_, context, response, true, tag);
}

::grpc::ClientAsyncWriter< ::google::actions::sdk::v2::CreateVersionRequest>* ActionsSdk::Stub::PrepareAsyncCreateVersionRaw(::grpc::ClientContext* context, ::google::actions::sdk::v2::Version* response, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::google::actions::sdk::v2::CreateVersionRequest>::Create(channel_.get(), cq, rpcmethod_CreateVersion_, context, response, false, nullptr);
}

::grpc::ClientReader< ::google::actions::sdk::v2::ReadDraftResponse>* ActionsSdk::Stub::ReadDraftRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ReadDraftRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::google::actions::sdk::v2::ReadDraftResponse>::Create(channel_.get(), rpcmethod_ReadDraft_, context, request);
}

void ActionsSdk::Stub::async::ReadDraft(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ReadDraftRequest* request, ::grpc::ClientReadReactor< ::google::actions::sdk::v2::ReadDraftResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::google::actions::sdk::v2::ReadDraftResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_ReadDraft_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::google::actions::sdk::v2::ReadDraftResponse>* ActionsSdk::Stub::AsyncReadDraftRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ReadDraftRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::google::actions::sdk::v2::ReadDraftResponse>::Create(channel_.get(), cq, rpcmethod_ReadDraft_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::google::actions::sdk::v2::ReadDraftResponse>* ActionsSdk::Stub::PrepareAsyncReadDraftRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ReadDraftRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::google::actions::sdk::v2::ReadDraftResponse>::Create(channel_.get(), cq, rpcmethod_ReadDraft_, context, request, false, nullptr);
}

::grpc::ClientReader< ::google::actions::sdk::v2::ReadVersionResponse>* ActionsSdk::Stub::ReadVersionRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ReadVersionRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::google::actions::sdk::v2::ReadVersionResponse>::Create(channel_.get(), rpcmethod_ReadVersion_, context, request);
}

void ActionsSdk::Stub::async::ReadVersion(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ReadVersionRequest* request, ::grpc::ClientReadReactor< ::google::actions::sdk::v2::ReadVersionResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::google::actions::sdk::v2::ReadVersionResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_ReadVersion_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::google::actions::sdk::v2::ReadVersionResponse>* ActionsSdk::Stub::AsyncReadVersionRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ReadVersionRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::google::actions::sdk::v2::ReadVersionResponse>::Create(channel_.get(), cq, rpcmethod_ReadVersion_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::google::actions::sdk::v2::ReadVersionResponse>* ActionsSdk::Stub::PrepareAsyncReadVersionRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ReadVersionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::google::actions::sdk::v2::ReadVersionResponse>::Create(channel_.get(), cq, rpcmethod_ReadVersion_, context, request, false, nullptr);
}

::grpc::Status ActionsSdk::Stub::EncryptSecret(::grpc::ClientContext* context, const ::google::actions::sdk::v2::EncryptSecretRequest& request, ::google::actions::sdk::v2::EncryptSecretResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::actions::sdk::v2::EncryptSecretRequest, ::google::actions::sdk::v2::EncryptSecretResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_EncryptSecret_, context, request, response);
}

void ActionsSdk::Stub::async::EncryptSecret(::grpc::ClientContext* context, const ::google::actions::sdk::v2::EncryptSecretRequest* request, ::google::actions::sdk::v2::EncryptSecretResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::actions::sdk::v2::EncryptSecretRequest, ::google::actions::sdk::v2::EncryptSecretResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EncryptSecret_, context, request, response, std::move(f));
}

void ActionsSdk::Stub::async::EncryptSecret(::grpc::ClientContext* context, const ::google::actions::sdk::v2::EncryptSecretRequest* request, ::google::actions::sdk::v2::EncryptSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EncryptSecret_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::EncryptSecretResponse>* ActionsSdk::Stub::PrepareAsyncEncryptSecretRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::EncryptSecretRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::actions::sdk::v2::EncryptSecretResponse, ::google::actions::sdk::v2::EncryptSecretRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_EncryptSecret_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::EncryptSecretResponse>* ActionsSdk::Stub::AsyncEncryptSecretRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::EncryptSecretRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncEncryptSecretRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ActionsSdk::Stub::DecryptSecret(::grpc::ClientContext* context, const ::google::actions::sdk::v2::DecryptSecretRequest& request, ::google::actions::sdk::v2::DecryptSecretResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::actions::sdk::v2::DecryptSecretRequest, ::google::actions::sdk::v2::DecryptSecretResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DecryptSecret_, context, request, response);
}

void ActionsSdk::Stub::async::DecryptSecret(::grpc::ClientContext* context, const ::google::actions::sdk::v2::DecryptSecretRequest* request, ::google::actions::sdk::v2::DecryptSecretResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::actions::sdk::v2::DecryptSecretRequest, ::google::actions::sdk::v2::DecryptSecretResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DecryptSecret_, context, request, response, std::move(f));
}

void ActionsSdk::Stub::async::DecryptSecret(::grpc::ClientContext* context, const ::google::actions::sdk::v2::DecryptSecretRequest* request, ::google::actions::sdk::v2::DecryptSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DecryptSecret_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::DecryptSecretResponse>* ActionsSdk::Stub::PrepareAsyncDecryptSecretRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::DecryptSecretRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::actions::sdk::v2::DecryptSecretResponse, ::google::actions::sdk::v2::DecryptSecretRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DecryptSecret_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::DecryptSecretResponse>* ActionsSdk::Stub::AsyncDecryptSecretRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::DecryptSecretRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDecryptSecretRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ActionsSdk::Stub::ListSampleProjects(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListSampleProjectsRequest& request, ::google::actions::sdk::v2::ListSampleProjectsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::actions::sdk::v2::ListSampleProjectsRequest, ::google::actions::sdk::v2::ListSampleProjectsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListSampleProjects_, context, request, response);
}

void ActionsSdk::Stub::async::ListSampleProjects(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListSampleProjectsRequest* request, ::google::actions::sdk::v2::ListSampleProjectsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::actions::sdk::v2::ListSampleProjectsRequest, ::google::actions::sdk::v2::ListSampleProjectsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSampleProjects_, context, request, response, std::move(f));
}

void ActionsSdk::Stub::async::ListSampleProjects(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListSampleProjectsRequest* request, ::google::actions::sdk::v2::ListSampleProjectsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSampleProjects_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::ListSampleProjectsResponse>* ActionsSdk::Stub::PrepareAsyncListSampleProjectsRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListSampleProjectsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::actions::sdk::v2::ListSampleProjectsResponse, ::google::actions::sdk::v2::ListSampleProjectsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListSampleProjects_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::ListSampleProjectsResponse>* ActionsSdk::Stub::AsyncListSampleProjectsRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListSampleProjectsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListSampleProjectsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ActionsSdk::Stub::ListReleaseChannels(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListReleaseChannelsRequest& request, ::google::actions::sdk::v2::ListReleaseChannelsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::actions::sdk::v2::ListReleaseChannelsRequest, ::google::actions::sdk::v2::ListReleaseChannelsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListReleaseChannels_, context, request, response);
}

void ActionsSdk::Stub::async::ListReleaseChannels(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListReleaseChannelsRequest* request, ::google::actions::sdk::v2::ListReleaseChannelsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::actions::sdk::v2::ListReleaseChannelsRequest, ::google::actions::sdk::v2::ListReleaseChannelsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListReleaseChannels_, context, request, response, std::move(f));
}

void ActionsSdk::Stub::async::ListReleaseChannels(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListReleaseChannelsRequest* request, ::google::actions::sdk::v2::ListReleaseChannelsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListReleaseChannels_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::ListReleaseChannelsResponse>* ActionsSdk::Stub::PrepareAsyncListReleaseChannelsRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListReleaseChannelsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::actions::sdk::v2::ListReleaseChannelsResponse, ::google::actions::sdk::v2::ListReleaseChannelsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListReleaseChannels_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::ListReleaseChannelsResponse>* ActionsSdk::Stub::AsyncListReleaseChannelsRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListReleaseChannelsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListReleaseChannelsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ActionsSdk::Stub::ListVersions(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListVersionsRequest& request, ::google::actions::sdk::v2::ListVersionsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::actions::sdk::v2::ListVersionsRequest, ::google::actions::sdk::v2::ListVersionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListVersions_, context, request, response);
}

void ActionsSdk::Stub::async::ListVersions(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListVersionsRequest* request, ::google::actions::sdk::v2::ListVersionsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::actions::sdk::v2::ListVersionsRequest, ::google::actions::sdk::v2::ListVersionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListVersions_, context, request, response, std::move(f));
}

void ActionsSdk::Stub::async::ListVersions(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListVersionsRequest* request, ::google::actions::sdk::v2::ListVersionsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListVersions_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::ListVersionsResponse>* ActionsSdk::Stub::PrepareAsyncListVersionsRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListVersionsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::actions::sdk::v2::ListVersionsResponse, ::google::actions::sdk::v2::ListVersionsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListVersions_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::actions::sdk::v2::ListVersionsResponse>* ActionsSdk::Stub::AsyncListVersionsRaw(::grpc::ClientContext* context, const ::google::actions::sdk::v2::ListVersionsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListVersionsRaw(context, request, cq);
  result->StartCall();
  return result;
}

ActionsSdk::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[0],
      ::grpc::internal::RpcMethod::CLIENT_STREAMING,
      new ::grpc::internal::ClientStreamingHandler< ActionsSdk::Service, ::google::actions::sdk::v2::WriteDraftRequest, ::google::actions::sdk::v2::Draft>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReader<::google::actions::sdk::v2::WriteDraftRequest>* reader,
             ::google::actions::sdk::v2::Draft* resp) {
               return service->WriteDraft(ctx, reader, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[1],
      ::grpc::internal::RpcMethod::CLIENT_STREAMING,
      new ::grpc::internal::ClientStreamingHandler< ActionsSdk::Service, ::google::actions::sdk::v2::WritePreviewRequest, ::google::actions::sdk::v2::Preview>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReader<::google::actions::sdk::v2::WritePreviewRequest>* reader,
             ::google::actions::sdk::v2::Preview* resp) {
               return service->WritePreview(ctx, reader, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[2],
      ::grpc::internal::RpcMethod::CLIENT_STREAMING,
      new ::grpc::internal::ClientStreamingHandler< ActionsSdk::Service, ::google::actions::sdk::v2::CreateVersionRequest, ::google::actions::sdk::v2::Version>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReader<::google::actions::sdk::v2::CreateVersionRequest>* reader,
             ::google::actions::sdk::v2::Version* resp) {
               return service->CreateVersion(ctx, reader, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[3],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< ActionsSdk::Service, ::google::actions::sdk::v2::ReadDraftRequest, ::google::actions::sdk::v2::ReadDraftResponse>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::actions::sdk::v2::ReadDraftRequest* req,
             ::grpc::ServerWriter<::google::actions::sdk::v2::ReadDraftResponse>* writer) {
               return service->ReadDraft(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[4],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< ActionsSdk::Service, ::google::actions::sdk::v2::ReadVersionRequest, ::google::actions::sdk::v2::ReadVersionResponse>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::actions::sdk::v2::ReadVersionRequest* req,
             ::grpc::ServerWriter<::google::actions::sdk::v2::ReadVersionResponse>* writer) {
               return service->ReadVersion(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ActionsSdk::Service, ::google::actions::sdk::v2::EncryptSecretRequest, ::google::actions::sdk::v2::EncryptSecretResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::actions::sdk::v2::EncryptSecretRequest* req,
             ::google::actions::sdk::v2::EncryptSecretResponse* resp) {
               return service->EncryptSecret(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ActionsSdk::Service, ::google::actions::sdk::v2::DecryptSecretRequest, ::google::actions::sdk::v2::DecryptSecretResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::actions::sdk::v2::DecryptSecretRequest* req,
             ::google::actions::sdk::v2::DecryptSecretResponse* resp) {
               return service->DecryptSecret(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ActionsSdk::Service, ::google::actions::sdk::v2::ListSampleProjectsRequest, ::google::actions::sdk::v2::ListSampleProjectsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::actions::sdk::v2::ListSampleProjectsRequest* req,
             ::google::actions::sdk::v2::ListSampleProjectsResponse* resp) {
               return service->ListSampleProjects(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ActionsSdk::Service, ::google::actions::sdk::v2::ListReleaseChannelsRequest, ::google::actions::sdk::v2::ListReleaseChannelsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::actions::sdk::v2::ListReleaseChannelsRequest* req,
             ::google::actions::sdk::v2::ListReleaseChannelsResponse* resp) {
               return service->ListReleaseChannels(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ActionsSdk_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ActionsSdk::Service, ::google::actions::sdk::v2::ListVersionsRequest, ::google::actions::sdk::v2::ListVersionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ActionsSdk::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::actions::sdk::v2::ListVersionsRequest* req,
             ::google::actions::sdk::v2::ListVersionsResponse* resp) {
               return service->ListVersions(ctx, req, resp);
             }, this)));
}

ActionsSdk::Service::~Service() {
}

::grpc::Status ActionsSdk::Service::WriteDraft(::grpc::ServerContext* context, ::grpc::ServerReader< ::google::actions::sdk::v2::WriteDraftRequest>* reader, ::google::actions::sdk::v2::Draft* response) {
  (void) context;
  (void) reader;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::WritePreview(::grpc::ServerContext* context, ::grpc::ServerReader< ::google::actions::sdk::v2::WritePreviewRequest>* reader, ::google::actions::sdk::v2::Preview* response) {
  (void) context;
  (void) reader;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::CreateVersion(::grpc::ServerContext* context, ::grpc::ServerReader< ::google::actions::sdk::v2::CreateVersionRequest>* reader, ::google::actions::sdk::v2::Version* response) {
  (void) context;
  (void) reader;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::ReadDraft(::grpc::ServerContext* context, const ::google::actions::sdk::v2::ReadDraftRequest* request, ::grpc::ServerWriter< ::google::actions::sdk::v2::ReadDraftResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::ReadVersion(::grpc::ServerContext* context, const ::google::actions::sdk::v2::ReadVersionRequest* request, ::grpc::ServerWriter< ::google::actions::sdk::v2::ReadVersionResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::EncryptSecret(::grpc::ServerContext* context, const ::google::actions::sdk::v2::EncryptSecretRequest* request, ::google::actions::sdk::v2::EncryptSecretResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::DecryptSecret(::grpc::ServerContext* context, const ::google::actions::sdk::v2::DecryptSecretRequest* request, ::google::actions::sdk::v2::DecryptSecretResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::ListSampleProjects(::grpc::ServerContext* context, const ::google::actions::sdk::v2::ListSampleProjectsRequest* request, ::google::actions::sdk::v2::ListSampleProjectsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::ListReleaseChannels(::grpc::ServerContext* context, const ::google::actions::sdk::v2::ListReleaseChannelsRequest* request, ::google::actions::sdk::v2::ListReleaseChannelsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ActionsSdk::Service::ListVersions(::grpc::ServerContext* context, const ::google::actions::sdk::v2::ListVersionsRequest* request, ::google::actions::sdk::v2::ListVersionsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace actions
}  // namespace sdk
}  // namespace v2

