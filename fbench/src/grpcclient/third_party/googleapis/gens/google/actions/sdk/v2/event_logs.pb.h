// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/event_logs.proto

#ifndef PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto
#define PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/actions/sdk/v2/conversation/intent.pb.h"
#include "google/actions/sdk/v2/conversation/prompt/prompt.pb.h"
#include "google/actions/sdk/v2/conversation/scene.pb.h"
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[20]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
class Condition;
class ConditionDefaultTypeInternal;
extern ConditionDefaultTypeInternal _Condition_default_instance_;
class ConditionsEvaluated;
class ConditionsEvaluatedDefaultTypeInternal;
extern ConditionsEvaluatedDefaultTypeInternal _ConditionsEvaluated_default_instance_;
class EndConversation;
class EndConversationDefaultTypeInternal;
extern EndConversationDefaultTypeInternal _EndConversation_default_instance_;
class ExecutionEvent;
class ExecutionEventDefaultTypeInternal;
extern ExecutionEventDefaultTypeInternal _ExecutionEvent_default_instance_;
class ExecutionState;
class ExecutionStateDefaultTypeInternal;
extern ExecutionStateDefaultTypeInternal _ExecutionState_default_instance_;
class FormFilled;
class FormFilledDefaultTypeInternal;
extern FormFilledDefaultTypeInternal _FormFilled_default_instance_;
class IntentMatch;
class IntentMatchDefaultTypeInternal;
extern IntentMatchDefaultTypeInternal _IntentMatch_default_instance_;
class IntentMatch_IntentParametersEntry_DoNotUse;
class IntentMatch_IntentParametersEntry_DoNotUseDefaultTypeInternal;
extern IntentMatch_IntentParametersEntry_DoNotUseDefaultTypeInternal _IntentMatch_IntentParametersEntry_DoNotUse_default_instance_;
class OnSceneEnter;
class OnSceneEnterDefaultTypeInternal;
extern OnSceneEnterDefaultTypeInternal _OnSceneEnter_default_instance_;
class SlotMatch;
class SlotMatchDefaultTypeInternal;
extern SlotMatchDefaultTypeInternal _SlotMatch_default_instance_;
class SlotMatch_NluParametersEntry_DoNotUse;
class SlotMatch_NluParametersEntry_DoNotUseDefaultTypeInternal;
extern SlotMatch_NluParametersEntry_DoNotUseDefaultTypeInternal _SlotMatch_NluParametersEntry_DoNotUse_default_instance_;
class SlotRequested;
class SlotRequestedDefaultTypeInternal;
extern SlotRequestedDefaultTypeInternal _SlotRequested_default_instance_;
class SlotValidated;
class SlotValidatedDefaultTypeInternal;
extern SlotValidatedDefaultTypeInternal _SlotValidated_default_instance_;
class Slots;
class SlotsDefaultTypeInternal;
extern SlotsDefaultTypeInternal _Slots_default_instance_;
class Slots_SlotsEntry_DoNotUse;
class Slots_SlotsEntry_DoNotUseDefaultTypeInternal;
extern Slots_SlotsEntry_DoNotUseDefaultTypeInternal _Slots_SlotsEntry_DoNotUse_default_instance_;
class UserConversationInput;
class UserConversationInputDefaultTypeInternal;
extern UserConversationInputDefaultTypeInternal _UserConversationInput_default_instance_;
class WaitingForUserInput;
class WaitingForUserInputDefaultTypeInternal;
extern WaitingForUserInputDefaultTypeInternal _WaitingForUserInput_default_instance_;
class WebhookInitiatedTransition;
class WebhookInitiatedTransitionDefaultTypeInternal;
extern WebhookInitiatedTransitionDefaultTypeInternal _WebhookInitiatedTransition_default_instance_;
class WebhookRequest;
class WebhookRequestDefaultTypeInternal;
extern WebhookRequestDefaultTypeInternal _WebhookRequest_default_instance_;
class WebhookResponse;
class WebhookResponseDefaultTypeInternal;
extern WebhookResponseDefaultTypeInternal _WebhookResponse_default_instance_;
}  // namespace v2
}  // namespace sdk
}  // namespace actions
namespace protobuf {
template<> ::google::actions::sdk::v2::Condition* Arena::CreateMaybeMessage<::google::actions::sdk::v2::Condition>(Arena*);
template<> ::google::actions::sdk::v2::ConditionsEvaluated* Arena::CreateMaybeMessage<::google::actions::sdk::v2::ConditionsEvaluated>(Arena*);
template<> ::google::actions::sdk::v2::EndConversation* Arena::CreateMaybeMessage<::google::actions::sdk::v2::EndConversation>(Arena*);
template<> ::google::actions::sdk::v2::ExecutionEvent* Arena::CreateMaybeMessage<::google::actions::sdk::v2::ExecutionEvent>(Arena*);
template<> ::google::actions::sdk::v2::ExecutionState* Arena::CreateMaybeMessage<::google::actions::sdk::v2::ExecutionState>(Arena*);
template<> ::google::actions::sdk::v2::FormFilled* Arena::CreateMaybeMessage<::google::actions::sdk::v2::FormFilled>(Arena*);
template<> ::google::actions::sdk::v2::IntentMatch* Arena::CreateMaybeMessage<::google::actions::sdk::v2::IntentMatch>(Arena*);
template<> ::google::actions::sdk::v2::IntentMatch_IntentParametersEntry_DoNotUse* Arena::CreateMaybeMessage<::google::actions::sdk::v2::IntentMatch_IntentParametersEntry_DoNotUse>(Arena*);
template<> ::google::actions::sdk::v2::OnSceneEnter* Arena::CreateMaybeMessage<::google::actions::sdk::v2::OnSceneEnter>(Arena*);
template<> ::google::actions::sdk::v2::SlotMatch* Arena::CreateMaybeMessage<::google::actions::sdk::v2::SlotMatch>(Arena*);
template<> ::google::actions::sdk::v2::SlotMatch_NluParametersEntry_DoNotUse* Arena::CreateMaybeMessage<::google::actions::sdk::v2::SlotMatch_NluParametersEntry_DoNotUse>(Arena*);
template<> ::google::actions::sdk::v2::SlotRequested* Arena::CreateMaybeMessage<::google::actions::sdk::v2::SlotRequested>(Arena*);
template<> ::google::actions::sdk::v2::SlotValidated* Arena::CreateMaybeMessage<::google::actions::sdk::v2::SlotValidated>(Arena*);
template<> ::google::actions::sdk::v2::Slots* Arena::CreateMaybeMessage<::google::actions::sdk::v2::Slots>(Arena*);
template<> ::google::actions::sdk::v2::Slots_SlotsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::actions::sdk::v2::Slots_SlotsEntry_DoNotUse>(Arena*);
template<> ::google::actions::sdk::v2::UserConversationInput* Arena::CreateMaybeMessage<::google::actions::sdk::v2::UserConversationInput>(Arena*);
template<> ::google::actions::sdk::v2::WaitingForUserInput* Arena::CreateMaybeMessage<::google::actions::sdk::v2::WaitingForUserInput>(Arena*);
template<> ::google::actions::sdk::v2::WebhookInitiatedTransition* Arena::CreateMaybeMessage<::google::actions::sdk::v2::WebhookInitiatedTransition>(Arena*);
template<> ::google::actions::sdk::v2::WebhookRequest* Arena::CreateMaybeMessage<::google::actions::sdk::v2::WebhookRequest>(Arena*);
template<> ::google::actions::sdk::v2::WebhookResponse* Arena::CreateMaybeMessage<::google::actions::sdk::v2::WebhookResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace actions {
namespace sdk {
namespace v2 {

// ===================================================================

class ExecutionEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.ExecutionEvent) */ {
 public:
  ExecutionEvent();
  virtual ~ExecutionEvent();

  ExecutionEvent(const ExecutionEvent& from);

  inline ExecutionEvent& operator=(const ExecutionEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecutionEvent(ExecutionEvent&& from) noexcept
    : ExecutionEvent() {
    *this = ::std::move(from);
  }

  inline ExecutionEvent& operator=(ExecutionEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExecutionEvent& default_instance();

  enum EventDataCase {
    kUserInput = 4,
    kIntentMatch = 5,
    kConditionsEvaluated = 6,
    kOnSceneEnter = 7,
    kWebhookRequest = 8,
    kWebhookResponse = 9,
    kWebhookInitiatedTransition = 10,
    kSlotMatch = 11,
    kSlotRequested = 12,
    kSlotValidated = 13,
    kFormFilled = 14,
    kWaitingUserInput = 15,
    kEndConversation = 16,
    EVENTDATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecutionEvent* internal_default_instance() {
    return reinterpret_cast<const ExecutionEvent*>(
               &_ExecutionEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ExecutionEvent* other);
  friend void swap(ExecutionEvent& a, ExecutionEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecutionEvent* New() const final {
    return CreateMaybeMessage<ExecutionEvent>(nullptr);
  }

  ExecutionEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecutionEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecutionEvent& from);
  void MergeFrom(const ExecutionEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecutionEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string warning_messages = 17;
  int warning_messages_size() const;
  void clear_warning_messages();
  static const int kWarningMessagesFieldNumber = 17;
  const ::std::string& warning_messages(int index) const;
  ::std::string* mutable_warning_messages(int index);
  void set_warning_messages(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_warning_messages(int index, ::std::string&& value);
  #endif
  void set_warning_messages(int index, const char* value);
  void set_warning_messages(int index, const char* value, size_t size);
  ::std::string* add_warning_messages();
  void add_warning_messages(const ::std::string& value);
  #if LANG_CXX11
  void add_warning_messages(::std::string&& value);
  #endif
  void add_warning_messages(const char* value);
  void add_warning_messages(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& warning_messages() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_warning_messages();

  // .google.protobuf.Timestamp event_time = 1;
  bool has_event_time() const;
  void clear_event_time();
  static const int kEventTimeFieldNumber = 1;
  const ::google::protobuf::Timestamp& event_time() const;
  ::google::protobuf::Timestamp* release_event_time();
  ::google::protobuf::Timestamp* mutable_event_time();
  void set_allocated_event_time(::google::protobuf::Timestamp* event_time);

  // .google.actions.sdk.v2.ExecutionState execution_state = 2;
  bool has_execution_state() const;
  void clear_execution_state();
  static const int kExecutionStateFieldNumber = 2;
  const ::google::actions::sdk::v2::ExecutionState& execution_state() const;
  ::google::actions::sdk::v2::ExecutionState* release_execution_state();
  ::google::actions::sdk::v2::ExecutionState* mutable_execution_state();
  void set_allocated_execution_state(::google::actions::sdk::v2::ExecutionState* execution_state);

  // .google.rpc.Status status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* release_status();
  ::google::rpc::Status* mutable_status();
  void set_allocated_status(::google::rpc::Status* status);

  // .google.actions.sdk.v2.UserConversationInput user_input = 4;
  bool has_user_input() const;
  void clear_user_input();
  static const int kUserInputFieldNumber = 4;
  const ::google::actions::sdk::v2::UserConversationInput& user_input() const;
  ::google::actions::sdk::v2::UserConversationInput* release_user_input();
  ::google::actions::sdk::v2::UserConversationInput* mutable_user_input();
  void set_allocated_user_input(::google::actions::sdk::v2::UserConversationInput* user_input);

  // .google.actions.sdk.v2.IntentMatch intent_match = 5;
  bool has_intent_match() const;
  void clear_intent_match();
  static const int kIntentMatchFieldNumber = 5;
  const ::google::actions::sdk::v2::IntentMatch& intent_match() const;
  ::google::actions::sdk::v2::IntentMatch* release_intent_match();
  ::google::actions::sdk::v2::IntentMatch* mutable_intent_match();
  void set_allocated_intent_match(::google::actions::sdk::v2::IntentMatch* intent_match);

  // .google.actions.sdk.v2.ConditionsEvaluated conditions_evaluated = 6;
  bool has_conditions_evaluated() const;
  void clear_conditions_evaluated();
  static const int kConditionsEvaluatedFieldNumber = 6;
  const ::google::actions::sdk::v2::ConditionsEvaluated& conditions_evaluated() const;
  ::google::actions::sdk::v2::ConditionsEvaluated* release_conditions_evaluated();
  ::google::actions::sdk::v2::ConditionsEvaluated* mutable_conditions_evaluated();
  void set_allocated_conditions_evaluated(::google::actions::sdk::v2::ConditionsEvaluated* conditions_evaluated);

  // .google.actions.sdk.v2.OnSceneEnter on_scene_enter = 7;
  bool has_on_scene_enter() const;
  void clear_on_scene_enter();
  static const int kOnSceneEnterFieldNumber = 7;
  const ::google::actions::sdk::v2::OnSceneEnter& on_scene_enter() const;
  ::google::actions::sdk::v2::OnSceneEnter* release_on_scene_enter();
  ::google::actions::sdk::v2::OnSceneEnter* mutable_on_scene_enter();
  void set_allocated_on_scene_enter(::google::actions::sdk::v2::OnSceneEnter* on_scene_enter);

  // .google.actions.sdk.v2.WebhookRequest webhook_request = 8;
  bool has_webhook_request() const;
  void clear_webhook_request();
  static const int kWebhookRequestFieldNumber = 8;
  const ::google::actions::sdk::v2::WebhookRequest& webhook_request() const;
  ::google::actions::sdk::v2::WebhookRequest* release_webhook_request();
  ::google::actions::sdk::v2::WebhookRequest* mutable_webhook_request();
  void set_allocated_webhook_request(::google::actions::sdk::v2::WebhookRequest* webhook_request);

  // .google.actions.sdk.v2.WebhookResponse webhook_response = 9;
  bool has_webhook_response() const;
  void clear_webhook_response();
  static const int kWebhookResponseFieldNumber = 9;
  const ::google::actions::sdk::v2::WebhookResponse& webhook_response() const;
  ::google::actions::sdk::v2::WebhookResponse* release_webhook_response();
  ::google::actions::sdk::v2::WebhookResponse* mutable_webhook_response();
  void set_allocated_webhook_response(::google::actions::sdk::v2::WebhookResponse* webhook_response);

  // .google.actions.sdk.v2.WebhookInitiatedTransition webhook_initiated_transition = 10;
  bool has_webhook_initiated_transition() const;
  void clear_webhook_initiated_transition();
  static const int kWebhookInitiatedTransitionFieldNumber = 10;
  const ::google::actions::sdk::v2::WebhookInitiatedTransition& webhook_initiated_transition() const;
  ::google::actions::sdk::v2::WebhookInitiatedTransition* release_webhook_initiated_transition();
  ::google::actions::sdk::v2::WebhookInitiatedTransition* mutable_webhook_initiated_transition();
  void set_allocated_webhook_initiated_transition(::google::actions::sdk::v2::WebhookInitiatedTransition* webhook_initiated_transition);

  // .google.actions.sdk.v2.SlotMatch slot_match = 11;
  bool has_slot_match() const;
  void clear_slot_match();
  static const int kSlotMatchFieldNumber = 11;
  const ::google::actions::sdk::v2::SlotMatch& slot_match() const;
  ::google::actions::sdk::v2::SlotMatch* release_slot_match();
  ::google::actions::sdk::v2::SlotMatch* mutable_slot_match();
  void set_allocated_slot_match(::google::actions::sdk::v2::SlotMatch* slot_match);

  // .google.actions.sdk.v2.SlotRequested slot_requested = 12;
  bool has_slot_requested() const;
  void clear_slot_requested();
  static const int kSlotRequestedFieldNumber = 12;
  const ::google::actions::sdk::v2::SlotRequested& slot_requested() const;
  ::google::actions::sdk::v2::SlotRequested* release_slot_requested();
  ::google::actions::sdk::v2::SlotRequested* mutable_slot_requested();
  void set_allocated_slot_requested(::google::actions::sdk::v2::SlotRequested* slot_requested);

  // .google.actions.sdk.v2.SlotValidated slot_validated = 13;
  bool has_slot_validated() const;
  void clear_slot_validated();
  static const int kSlotValidatedFieldNumber = 13;
  const ::google::actions::sdk::v2::SlotValidated& slot_validated() const;
  ::google::actions::sdk::v2::SlotValidated* release_slot_validated();
  ::google::actions::sdk::v2::SlotValidated* mutable_slot_validated();
  void set_allocated_slot_validated(::google::actions::sdk::v2::SlotValidated* slot_validated);

  // .google.actions.sdk.v2.FormFilled form_filled = 14;
  bool has_form_filled() const;
  void clear_form_filled();
  static const int kFormFilledFieldNumber = 14;
  const ::google::actions::sdk::v2::FormFilled& form_filled() const;
  ::google::actions::sdk::v2::FormFilled* release_form_filled();
  ::google::actions::sdk::v2::FormFilled* mutable_form_filled();
  void set_allocated_form_filled(::google::actions::sdk::v2::FormFilled* form_filled);

  // .google.actions.sdk.v2.WaitingForUserInput waiting_user_input = 15;
  bool has_waiting_user_input() const;
  void clear_waiting_user_input();
  static const int kWaitingUserInputFieldNumber = 15;
  const ::google::actions::sdk::v2::WaitingForUserInput& waiting_user_input() const;
  ::google::actions::sdk::v2::WaitingForUserInput* release_waiting_user_input();
  ::google::actions::sdk::v2::WaitingForUserInput* mutable_waiting_user_input();
  void set_allocated_waiting_user_input(::google::actions::sdk::v2::WaitingForUserInput* waiting_user_input);

  // .google.actions.sdk.v2.EndConversation end_conversation = 16;
  bool has_end_conversation() const;
  void clear_end_conversation();
  static const int kEndConversationFieldNumber = 16;
  const ::google::actions::sdk::v2::EndConversation& end_conversation() const;
  ::google::actions::sdk::v2::EndConversation* release_end_conversation();
  ::google::actions::sdk::v2::EndConversation* mutable_end_conversation();
  void set_allocated_end_conversation(::google::actions::sdk::v2::EndConversation* end_conversation);

  void clear_EventData();
  EventDataCase EventData_case() const;
  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.ExecutionEvent)
 private:
  class HasBitSetters;
  void set_has_user_input();
  void set_has_intent_match();
  void set_has_conditions_evaluated();
  void set_has_on_scene_enter();
  void set_has_webhook_request();
  void set_has_webhook_response();
  void set_has_webhook_initiated_transition();
  void set_has_slot_match();
  void set_has_slot_requested();
  void set_has_slot_validated();
  void set_has_form_filled();
  void set_has_waiting_user_input();
  void set_has_end_conversation();

  inline bool has_EventData() const;
  inline void clear_has_EventData();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> warning_messages_;
  ::google::protobuf::Timestamp* event_time_;
  ::google::actions::sdk::v2::ExecutionState* execution_state_;
  ::google::rpc::Status* status_;
  union EventDataUnion {
    EventDataUnion() {}
    ::google::actions::sdk::v2::UserConversationInput* user_input_;
    ::google::actions::sdk::v2::IntentMatch* intent_match_;
    ::google::actions::sdk::v2::ConditionsEvaluated* conditions_evaluated_;
    ::google::actions::sdk::v2::OnSceneEnter* on_scene_enter_;
    ::google::actions::sdk::v2::WebhookRequest* webhook_request_;
    ::google::actions::sdk::v2::WebhookResponse* webhook_response_;
    ::google::actions::sdk::v2::WebhookInitiatedTransition* webhook_initiated_transition_;
    ::google::actions::sdk::v2::SlotMatch* slot_match_;
    ::google::actions::sdk::v2::SlotRequested* slot_requested_;
    ::google::actions::sdk::v2::SlotValidated* slot_validated_;
    ::google::actions::sdk::v2::FormFilled* form_filled_;
    ::google::actions::sdk::v2::WaitingForUserInput* waiting_user_input_;
    ::google::actions::sdk::v2::EndConversation* end_conversation_;
  } EventData_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class ExecutionState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.ExecutionState) */ {
 public:
  ExecutionState();
  virtual ~ExecutionState();

  ExecutionState(const ExecutionState& from);

  inline ExecutionState& operator=(const ExecutionState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecutionState(ExecutionState&& from) noexcept
    : ExecutionState() {
    *this = ::std::move(from);
  }

  inline ExecutionState& operator=(ExecutionState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExecutionState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecutionState* internal_default_instance() {
    return reinterpret_cast<const ExecutionState*>(
               &_ExecutionState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ExecutionState* other);
  friend void swap(ExecutionState& a, ExecutionState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecutionState* New() const final {
    return CreateMaybeMessage<ExecutionState>(nullptr);
  }

  ExecutionState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecutionState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecutionState& from);
  void MergeFrom(const ExecutionState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecutionState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.actions.sdk.v2.conversation.Prompt prompt_queue = 7;
  int prompt_queue_size() const;
  void clear_prompt_queue();
  static const int kPromptQueueFieldNumber = 7;
  ::google::actions::sdk::v2::conversation::Prompt* mutable_prompt_queue(int index);
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Prompt >*
      mutable_prompt_queue();
  const ::google::actions::sdk::v2::conversation::Prompt& prompt_queue(int index) const;
  ::google::actions::sdk::v2::conversation::Prompt* add_prompt_queue();
  const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Prompt >&
      prompt_queue() const;

  // string current_scene_id = 1;
  void clear_current_scene_id();
  static const int kCurrentSceneIdFieldNumber = 1;
  const ::std::string& current_scene_id() const;
  void set_current_scene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_current_scene_id(::std::string&& value);
  #endif
  void set_current_scene_id(const char* value);
  void set_current_scene_id(const char* value, size_t size);
  ::std::string* mutable_current_scene_id();
  ::std::string* release_current_scene_id();
  void set_allocated_current_scene_id(::std::string* current_scene_id);

  // .google.protobuf.Struct session_storage = 2;
  bool has_session_storage() const;
  void clear_session_storage();
  static const int kSessionStorageFieldNumber = 2;
  const ::google::protobuf::Struct& session_storage() const;
  ::google::protobuf::Struct* release_session_storage();
  ::google::protobuf::Struct* mutable_session_storage();
  void set_allocated_session_storage(::google::protobuf::Struct* session_storage);

  // .google.actions.sdk.v2.Slots slots = 5;
  bool has_slots() const;
  void clear_slots();
  static const int kSlotsFieldNumber = 5;
  const ::google::actions::sdk::v2::Slots& slots() const;
  ::google::actions::sdk::v2::Slots* release_slots();
  ::google::actions::sdk::v2::Slots* mutable_slots();
  void set_allocated_slots(::google::actions::sdk::v2::Slots* slots);

  // .google.protobuf.Struct user_storage = 6;
  bool has_user_storage() const;
  void clear_user_storage();
  static const int kUserStorageFieldNumber = 6;
  const ::google::protobuf::Struct& user_storage() const;
  ::google::protobuf::Struct* release_user_storage();
  ::google::protobuf::Struct* mutable_user_storage();
  void set_allocated_user_storage(::google::protobuf::Struct* user_storage);

  // .google.protobuf.Struct household_storage = 8;
  bool has_household_storage() const;
  void clear_household_storage();
  static const int kHouseholdStorageFieldNumber = 8;
  const ::google::protobuf::Struct& household_storage() const;
  ::google::protobuf::Struct* release_household_storage();
  ::google::protobuf::Struct* mutable_household_storage();
  void set_allocated_household_storage(::google::protobuf::Struct* household_storage);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.ExecutionState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Prompt > prompt_queue_;
  ::google::protobuf::internal::ArenaStringPtr current_scene_id_;
  ::google::protobuf::Struct* session_storage_;
  ::google::actions::sdk::v2::Slots* slots_;
  ::google::protobuf::Struct* user_storage_;
  ::google::protobuf::Struct* household_storage_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class Slots_SlotsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Slots_SlotsEntry_DoNotUse, 
    ::std::string, ::google::actions::sdk::v2::conversation::Slot,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Slots_SlotsEntry_DoNotUse, 
    ::std::string, ::google::actions::sdk::v2::conversation::Slot,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Slots_SlotsEntry_DoNotUse();
  Slots_SlotsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Slots_SlotsEntry_DoNotUse& other);
  static const Slots_SlotsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Slots_SlotsEntry_DoNotUse*>(&_Slots_SlotsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Slots final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.Slots) */ {
 public:
  Slots();
  virtual ~Slots();

  Slots(const Slots& from);

  inline Slots& operator=(const Slots& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Slots(Slots&& from) noexcept
    : Slots() {
    *this = ::std::move(from);
  }

  inline Slots& operator=(Slots&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Slots& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Slots* internal_default_instance() {
    return reinterpret_cast<const Slots*>(
               &_Slots_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Slots* other);
  friend void swap(Slots& a, Slots& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Slots* New() const final {
    return CreateMaybeMessage<Slots>(nullptr);
  }

  Slots* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Slots>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Slots& from);
  void MergeFrom(const Slots& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Slots* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.actions.sdk.v2.conversation.Slot> slots = 3;
  int slots_size() const;
  void clear_slots();
  static const int kSlotsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::Slot >&
      slots() const;
  ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::Slot >*
      mutable_slots();

  // .google.actions.sdk.v2.conversation.SlotFillingStatus status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::actions::sdk::v2::conversation::SlotFillingStatus status() const;
  void set_status(::google::actions::sdk::v2::conversation::SlotFillingStatus value);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.Slots)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Slots_SlotsEntry_DoNotUse,
      ::std::string, ::google::actions::sdk::v2::conversation::Slot,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > slots_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class UserConversationInput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.UserConversationInput) */ {
 public:
  UserConversationInput();
  virtual ~UserConversationInput();

  UserConversationInput(const UserConversationInput& from);

  inline UserConversationInput& operator=(const UserConversationInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserConversationInput(UserConversationInput&& from) noexcept
    : UserConversationInput() {
    *this = ::std::move(from);
  }

  inline UserConversationInput& operator=(UserConversationInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserConversationInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserConversationInput* internal_default_instance() {
    return reinterpret_cast<const UserConversationInput*>(
               &_UserConversationInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UserConversationInput* other);
  friend void swap(UserConversationInput& a, UserConversationInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserConversationInput* New() const final {
    return CreateMaybeMessage<UserConversationInput>(nullptr);
  }

  UserConversationInput* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserConversationInput>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserConversationInput& from);
  void MergeFrom(const UserConversationInput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserConversationInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string original_query = 2;
  void clear_original_query();
  static const int kOriginalQueryFieldNumber = 2;
  const ::std::string& original_query() const;
  void set_original_query(const ::std::string& value);
  #if LANG_CXX11
  void set_original_query(::std::string&& value);
  #endif
  void set_original_query(const char* value);
  void set_original_query(const char* value, size_t size);
  ::std::string* mutable_original_query();
  ::std::string* release_original_query();
  void set_allocated_original_query(::std::string* original_query);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.UserConversationInput)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr original_query_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class IntentMatch_IntentParametersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<IntentMatch_IntentParametersEntry_DoNotUse, 
    ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<IntentMatch_IntentParametersEntry_DoNotUse, 
    ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  IntentMatch_IntentParametersEntry_DoNotUse();
  IntentMatch_IntentParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const IntentMatch_IntentParametersEntry_DoNotUse& other);
  static const IntentMatch_IntentParametersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const IntentMatch_IntentParametersEntry_DoNotUse*>(&_IntentMatch_IntentParametersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class IntentMatch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.IntentMatch) */ {
 public:
  IntentMatch();
  virtual ~IntentMatch();

  IntentMatch(const IntentMatch& from);

  inline IntentMatch& operator=(const IntentMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntentMatch(IntentMatch&& from) noexcept
    : IntentMatch() {
    *this = ::std::move(from);
  }

  inline IntentMatch& operator=(IntentMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IntentMatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntentMatch* internal_default_instance() {
    return reinterpret_cast<const IntentMatch*>(
               &_IntentMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(IntentMatch* other);
  friend void swap(IntentMatch& a, IntentMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntentMatch* New() const final {
    return CreateMaybeMessage<IntentMatch>(nullptr);
  }

  IntentMatch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntentMatch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntentMatch& from);
  void MergeFrom(const IntentMatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntentMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.actions.sdk.v2.conversation.IntentParameterValue> intent_parameters = 5;
  int intent_parameters_size() const;
  void clear_intent_parameters();
  static const int kIntentParametersFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >&
      intent_parameters() const;
  ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >*
      mutable_intent_parameters();

  // string intent_id = 1;
  void clear_intent_id();
  static const int kIntentIdFieldNumber = 1;
  const ::std::string& intent_id() const;
  void set_intent_id(const ::std::string& value);
  #if LANG_CXX11
  void set_intent_id(::std::string&& value);
  #endif
  void set_intent_id(const char* value);
  void set_intent_id(const char* value, size_t size);
  ::std::string* mutable_intent_id();
  ::std::string* release_intent_id();
  void set_allocated_intent_id(::std::string* intent_id);

  // string handler = 3;
  void clear_handler();
  static const int kHandlerFieldNumber = 3;
  const ::std::string& handler() const;
  void set_handler(const ::std::string& value);
  #if LANG_CXX11
  void set_handler(::std::string&& value);
  #endif
  void set_handler(const char* value);
  void set_handler(const char* value, size_t size);
  ::std::string* mutable_handler();
  ::std::string* release_handler();
  void set_allocated_handler(::std::string* handler);

  // string next_scene_id = 4;
  void clear_next_scene_id();
  static const int kNextSceneIdFieldNumber = 4;
  const ::std::string& next_scene_id() const;
  void set_next_scene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_next_scene_id(::std::string&& value);
  #endif
  void set_next_scene_id(const char* value);
  void set_next_scene_id(const char* value, size_t size);
  ::std::string* mutable_next_scene_id();
  ::std::string* release_next_scene_id();
  void set_allocated_next_scene_id(::std::string* next_scene_id);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.IntentMatch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      IntentMatch_IntentParametersEntry_DoNotUse,
      ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > intent_parameters_;
  ::google::protobuf::internal::ArenaStringPtr intent_id_;
  ::google::protobuf::internal::ArenaStringPtr handler_;
  ::google::protobuf::internal::ArenaStringPtr next_scene_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class ConditionsEvaluated final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.ConditionsEvaluated) */ {
 public:
  ConditionsEvaluated();
  virtual ~ConditionsEvaluated();

  ConditionsEvaluated(const ConditionsEvaluated& from);

  inline ConditionsEvaluated& operator=(const ConditionsEvaluated& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConditionsEvaluated(ConditionsEvaluated&& from) noexcept
    : ConditionsEvaluated() {
    *this = ::std::move(from);
  }

  inline ConditionsEvaluated& operator=(ConditionsEvaluated&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConditionsEvaluated& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConditionsEvaluated* internal_default_instance() {
    return reinterpret_cast<const ConditionsEvaluated*>(
               &_ConditionsEvaluated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ConditionsEvaluated* other);
  friend void swap(ConditionsEvaluated& a, ConditionsEvaluated& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConditionsEvaluated* New() const final {
    return CreateMaybeMessage<ConditionsEvaluated>(nullptr);
  }

  ConditionsEvaluated* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConditionsEvaluated>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConditionsEvaluated& from);
  void MergeFrom(const ConditionsEvaluated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConditionsEvaluated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.actions.sdk.v2.Condition failed_conditions = 1;
  int failed_conditions_size() const;
  void clear_failed_conditions();
  static const int kFailedConditionsFieldNumber = 1;
  ::google::actions::sdk::v2::Condition* mutable_failed_conditions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::Condition >*
      mutable_failed_conditions();
  const ::google::actions::sdk::v2::Condition& failed_conditions(int index) const;
  ::google::actions::sdk::v2::Condition* add_failed_conditions();
  const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::Condition >&
      failed_conditions() const;

  // .google.actions.sdk.v2.Condition success_condition = 2;
  bool has_success_condition() const;
  void clear_success_condition();
  static const int kSuccessConditionFieldNumber = 2;
  const ::google::actions::sdk::v2::Condition& success_condition() const;
  ::google::actions::sdk::v2::Condition* release_success_condition();
  ::google::actions::sdk::v2::Condition* mutable_success_condition();
  void set_allocated_success_condition(::google::actions::sdk::v2::Condition* success_condition);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.ConditionsEvaluated)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::Condition > failed_conditions_;
  ::google::actions::sdk::v2::Condition* success_condition_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class Condition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.Condition) */ {
 public:
  Condition();
  virtual ~Condition();

  Condition(const Condition& from);

  inline Condition& operator=(const Condition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Condition(Condition&& from) noexcept
    : Condition() {
    *this = ::std::move(from);
  }

  inline Condition& operator=(Condition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Condition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Condition* internal_default_instance() {
    return reinterpret_cast<const Condition*>(
               &_Condition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Condition* other);
  friend void swap(Condition& a, Condition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Condition* New() const final {
    return CreateMaybeMessage<Condition>(nullptr);
  }

  Condition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Condition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Condition& from);
  void MergeFrom(const Condition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Condition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string expression = 1;
  void clear_expression();
  static const int kExpressionFieldNumber = 1;
  const ::std::string& expression() const;
  void set_expression(const ::std::string& value);
  #if LANG_CXX11
  void set_expression(::std::string&& value);
  #endif
  void set_expression(const char* value);
  void set_expression(const char* value, size_t size);
  ::std::string* mutable_expression();
  ::std::string* release_expression();
  void set_allocated_expression(::std::string* expression);

  // string handler = 2;
  void clear_handler();
  static const int kHandlerFieldNumber = 2;
  const ::std::string& handler() const;
  void set_handler(const ::std::string& value);
  #if LANG_CXX11
  void set_handler(::std::string&& value);
  #endif
  void set_handler(const char* value);
  void set_handler(const char* value, size_t size);
  ::std::string* mutable_handler();
  ::std::string* release_handler();
  void set_allocated_handler(::std::string* handler);

  // string next_scene_id = 3;
  void clear_next_scene_id();
  static const int kNextSceneIdFieldNumber = 3;
  const ::std::string& next_scene_id() const;
  void set_next_scene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_next_scene_id(::std::string&& value);
  #endif
  void set_next_scene_id(const char* value);
  void set_next_scene_id(const char* value, size_t size);
  ::std::string* mutable_next_scene_id();
  ::std::string* release_next_scene_id();
  void set_allocated_next_scene_id(::std::string* next_scene_id);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.Condition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr expression_;
  ::google::protobuf::internal::ArenaStringPtr handler_;
  ::google::protobuf::internal::ArenaStringPtr next_scene_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class OnSceneEnter final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.OnSceneEnter) */ {
 public:
  OnSceneEnter();
  virtual ~OnSceneEnter();

  OnSceneEnter(const OnSceneEnter& from);

  inline OnSceneEnter& operator=(const OnSceneEnter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnSceneEnter(OnSceneEnter&& from) noexcept
    : OnSceneEnter() {
    *this = ::std::move(from);
  }

  inline OnSceneEnter& operator=(OnSceneEnter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OnSceneEnter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnSceneEnter* internal_default_instance() {
    return reinterpret_cast<const OnSceneEnter*>(
               &_OnSceneEnter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(OnSceneEnter* other);
  friend void swap(OnSceneEnter& a, OnSceneEnter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnSceneEnter* New() const final {
    return CreateMaybeMessage<OnSceneEnter>(nullptr);
  }

  OnSceneEnter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OnSceneEnter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OnSceneEnter& from);
  void MergeFrom(const OnSceneEnter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OnSceneEnter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string handler = 1;
  void clear_handler();
  static const int kHandlerFieldNumber = 1;
  const ::std::string& handler() const;
  void set_handler(const ::std::string& value);
  #if LANG_CXX11
  void set_handler(::std::string&& value);
  #endif
  void set_handler(const char* value);
  void set_handler(const char* value, size_t size);
  ::std::string* mutable_handler();
  ::std::string* release_handler();
  void set_allocated_handler(::std::string* handler);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.OnSceneEnter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr handler_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class WebhookInitiatedTransition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.WebhookInitiatedTransition) */ {
 public:
  WebhookInitiatedTransition();
  virtual ~WebhookInitiatedTransition();

  WebhookInitiatedTransition(const WebhookInitiatedTransition& from);

  inline WebhookInitiatedTransition& operator=(const WebhookInitiatedTransition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WebhookInitiatedTransition(WebhookInitiatedTransition&& from) noexcept
    : WebhookInitiatedTransition() {
    *this = ::std::move(from);
  }

  inline WebhookInitiatedTransition& operator=(WebhookInitiatedTransition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WebhookInitiatedTransition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WebhookInitiatedTransition* internal_default_instance() {
    return reinterpret_cast<const WebhookInitiatedTransition*>(
               &_WebhookInitiatedTransition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(WebhookInitiatedTransition* other);
  friend void swap(WebhookInitiatedTransition& a, WebhookInitiatedTransition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WebhookInitiatedTransition* New() const final {
    return CreateMaybeMessage<WebhookInitiatedTransition>(nullptr);
  }

  WebhookInitiatedTransition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WebhookInitiatedTransition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WebhookInitiatedTransition& from);
  void MergeFrom(const WebhookInitiatedTransition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WebhookInitiatedTransition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string next_scene_id = 1;
  void clear_next_scene_id();
  static const int kNextSceneIdFieldNumber = 1;
  const ::std::string& next_scene_id() const;
  void set_next_scene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_next_scene_id(::std::string&& value);
  #endif
  void set_next_scene_id(const char* value);
  void set_next_scene_id(const char* value, size_t size);
  ::std::string* mutable_next_scene_id();
  ::std::string* release_next_scene_id();
  void set_allocated_next_scene_id(::std::string* next_scene_id);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.WebhookInitiatedTransition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr next_scene_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class WebhookRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.WebhookRequest) */ {
 public:
  WebhookRequest();
  virtual ~WebhookRequest();

  WebhookRequest(const WebhookRequest& from);

  inline WebhookRequest& operator=(const WebhookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WebhookRequest(WebhookRequest&& from) noexcept
    : WebhookRequest() {
    *this = ::std::move(from);
  }

  inline WebhookRequest& operator=(WebhookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WebhookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WebhookRequest* internal_default_instance() {
    return reinterpret_cast<const WebhookRequest*>(
               &_WebhookRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(WebhookRequest* other);
  friend void swap(WebhookRequest& a, WebhookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WebhookRequest* New() const final {
    return CreateMaybeMessage<WebhookRequest>(nullptr);
  }

  WebhookRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WebhookRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WebhookRequest& from);
  void MergeFrom(const WebhookRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WebhookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string request_json = 1;
  void clear_request_json();
  static const int kRequestJsonFieldNumber = 1;
  const ::std::string& request_json() const;
  void set_request_json(const ::std::string& value);
  #if LANG_CXX11
  void set_request_json(::std::string&& value);
  #endif
  void set_request_json(const char* value);
  void set_request_json(const char* value, size_t size);
  ::std::string* mutable_request_json();
  ::std::string* release_request_json();
  void set_allocated_request_json(::std::string* request_json);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.WebhookRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr request_json_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class WebhookResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.WebhookResponse) */ {
 public:
  WebhookResponse();
  virtual ~WebhookResponse();

  WebhookResponse(const WebhookResponse& from);

  inline WebhookResponse& operator=(const WebhookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WebhookResponse(WebhookResponse&& from) noexcept
    : WebhookResponse() {
    *this = ::std::move(from);
  }

  inline WebhookResponse& operator=(WebhookResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WebhookResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WebhookResponse* internal_default_instance() {
    return reinterpret_cast<const WebhookResponse*>(
               &_WebhookResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(WebhookResponse* other);
  friend void swap(WebhookResponse& a, WebhookResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WebhookResponse* New() const final {
    return CreateMaybeMessage<WebhookResponse>(nullptr);
  }

  WebhookResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WebhookResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WebhookResponse& from);
  void MergeFrom(const WebhookResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WebhookResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string response_json = 1;
  void clear_response_json();
  static const int kResponseJsonFieldNumber = 1;
  const ::std::string& response_json() const;
  void set_response_json(const ::std::string& value);
  #if LANG_CXX11
  void set_response_json(::std::string&& value);
  #endif
  void set_response_json(const char* value);
  void set_response_json(const char* value, size_t size);
  ::std::string* mutable_response_json();
  ::std::string* release_response_json();
  void set_allocated_response_json(::std::string* response_json);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.WebhookResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr response_json_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class SlotMatch_NluParametersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SlotMatch_NluParametersEntry_DoNotUse, 
    ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<SlotMatch_NluParametersEntry_DoNotUse, 
    ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SlotMatch_NluParametersEntry_DoNotUse();
  SlotMatch_NluParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SlotMatch_NluParametersEntry_DoNotUse& other);
  static const SlotMatch_NluParametersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SlotMatch_NluParametersEntry_DoNotUse*>(&_SlotMatch_NluParametersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SlotMatch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.SlotMatch) */ {
 public:
  SlotMatch();
  virtual ~SlotMatch();

  SlotMatch(const SlotMatch& from);

  inline SlotMatch& operator=(const SlotMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlotMatch(SlotMatch&& from) noexcept
    : SlotMatch() {
    *this = ::std::move(from);
  }

  inline SlotMatch& operator=(SlotMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SlotMatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlotMatch* internal_default_instance() {
    return reinterpret_cast<const SlotMatch*>(
               &_SlotMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(SlotMatch* other);
  friend void swap(SlotMatch& a, SlotMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlotMatch* New() const final {
    return CreateMaybeMessage<SlotMatch>(nullptr);
  }

  SlotMatch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SlotMatch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SlotMatch& from);
  void MergeFrom(const SlotMatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlotMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.actions.sdk.v2.conversation.IntentParameterValue> nlu_parameters = 2;
  int nlu_parameters_size() const;
  void clear_nlu_parameters();
  static const int kNluParametersFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >&
      nlu_parameters() const;
  ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >*
      mutable_nlu_parameters();

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.SlotMatch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SlotMatch_NluParametersEntry_DoNotUse,
      ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > nlu_parameters_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class SlotRequested final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.SlotRequested) */ {
 public:
  SlotRequested();
  virtual ~SlotRequested();

  SlotRequested(const SlotRequested& from);

  inline SlotRequested& operator=(const SlotRequested& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlotRequested(SlotRequested&& from) noexcept
    : SlotRequested() {
    *this = ::std::move(from);
  }

  inline SlotRequested& operator=(SlotRequested&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SlotRequested& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlotRequested* internal_default_instance() {
    return reinterpret_cast<const SlotRequested*>(
               &_SlotRequested_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(SlotRequested* other);
  friend void swap(SlotRequested& a, SlotRequested& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlotRequested* New() const final {
    return CreateMaybeMessage<SlotRequested>(nullptr);
  }

  SlotRequested* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SlotRequested>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SlotRequested& from);
  void MergeFrom(const SlotRequested& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlotRequested* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string slot = 1;
  void clear_slot();
  static const int kSlotFieldNumber = 1;
  const ::std::string& slot() const;
  void set_slot(const ::std::string& value);
  #if LANG_CXX11
  void set_slot(::std::string&& value);
  #endif
  void set_slot(const char* value);
  void set_slot(const char* value, size_t size);
  ::std::string* mutable_slot();
  ::std::string* release_slot();
  void set_allocated_slot(::std::string* slot);

  // .google.actions.sdk.v2.conversation.Prompt prompt = 3;
  bool has_prompt() const;
  void clear_prompt();
  static const int kPromptFieldNumber = 3;
  const ::google::actions::sdk::v2::conversation::Prompt& prompt() const;
  ::google::actions::sdk::v2::conversation::Prompt* release_prompt();
  ::google::actions::sdk::v2::conversation::Prompt* mutable_prompt();
  void set_allocated_prompt(::google::actions::sdk::v2::conversation::Prompt* prompt);

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.SlotRequested)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr slot_;
  ::google::actions::sdk::v2::conversation::Prompt* prompt_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class SlotValidated final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.SlotValidated) */ {
 public:
  SlotValidated();
  virtual ~SlotValidated();

  SlotValidated(const SlotValidated& from);

  inline SlotValidated& operator=(const SlotValidated& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlotValidated(SlotValidated&& from) noexcept
    : SlotValidated() {
    *this = ::std::move(from);
  }

  inline SlotValidated& operator=(SlotValidated&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SlotValidated& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlotValidated* internal_default_instance() {
    return reinterpret_cast<const SlotValidated*>(
               &_SlotValidated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(SlotValidated* other);
  friend void swap(SlotValidated& a, SlotValidated& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlotValidated* New() const final {
    return CreateMaybeMessage<SlotValidated>(nullptr);
  }

  SlotValidated* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SlotValidated>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SlotValidated& from);
  void MergeFrom(const SlotValidated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlotValidated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.SlotValidated)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class FormFilled final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.FormFilled) */ {
 public:
  FormFilled();
  virtual ~FormFilled();

  FormFilled(const FormFilled& from);

  inline FormFilled& operator=(const FormFilled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FormFilled(FormFilled&& from) noexcept
    : FormFilled() {
    *this = ::std::move(from);
  }

  inline FormFilled& operator=(FormFilled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FormFilled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FormFilled* internal_default_instance() {
    return reinterpret_cast<const FormFilled*>(
               &_FormFilled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(FormFilled* other);
  friend void swap(FormFilled& a, FormFilled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FormFilled* New() const final {
    return CreateMaybeMessage<FormFilled>(nullptr);
  }

  FormFilled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FormFilled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FormFilled& from);
  void MergeFrom(const FormFilled& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FormFilled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.FormFilled)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class WaitingForUserInput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.WaitingForUserInput) */ {
 public:
  WaitingForUserInput();
  virtual ~WaitingForUserInput();

  WaitingForUserInput(const WaitingForUserInput& from);

  inline WaitingForUserInput& operator=(const WaitingForUserInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WaitingForUserInput(WaitingForUserInput&& from) noexcept
    : WaitingForUserInput() {
    *this = ::std::move(from);
  }

  inline WaitingForUserInput& operator=(WaitingForUserInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WaitingForUserInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WaitingForUserInput* internal_default_instance() {
    return reinterpret_cast<const WaitingForUserInput*>(
               &_WaitingForUserInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(WaitingForUserInput* other);
  friend void swap(WaitingForUserInput& a, WaitingForUserInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WaitingForUserInput* New() const final {
    return CreateMaybeMessage<WaitingForUserInput>(nullptr);
  }

  WaitingForUserInput* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WaitingForUserInput>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WaitingForUserInput& from);
  void MergeFrom(const WaitingForUserInput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WaitingForUserInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.WaitingForUserInput)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// -------------------------------------------------------------------

class EndConversation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.actions.sdk.v2.EndConversation) */ {
 public:
  EndConversation();
  virtual ~EndConversation();

  EndConversation(const EndConversation& from);

  inline EndConversation& operator=(const EndConversation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndConversation(EndConversation&& from) noexcept
    : EndConversation() {
    *this = ::std::move(from);
  }

  inline EndConversation& operator=(EndConversation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EndConversation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndConversation* internal_default_instance() {
    return reinterpret_cast<const EndConversation*>(
               &_EndConversation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(EndConversation* other);
  friend void swap(EndConversation& a, EndConversation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndConversation* New() const final {
    return CreateMaybeMessage<EndConversation>(nullptr);
  }

  EndConversation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EndConversation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EndConversation& from);
  void MergeFrom(const EndConversation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndConversation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.EndConversation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ExecutionEvent

// .google.protobuf.Timestamp event_time = 1;
inline bool ExecutionEvent::has_event_time() const {
  return this != internal_default_instance() && event_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& ExecutionEvent::event_time() const {
  const ::google::protobuf::Timestamp* p = event_time_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.event_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ExecutionEvent::release_event_time() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.event_time)
  
  ::google::protobuf::Timestamp* temp = event_time_;
  event_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ExecutionEvent::mutable_event_time() {
  
  if (event_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    event_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.event_time)
  return event_time_;
}
inline void ExecutionEvent::set_allocated_event_time(::google::protobuf::Timestamp* event_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_time_);
  }
  if (event_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(event_time)->GetArena();
    if (message_arena != submessage_arena) {
      event_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_time, submessage_arena);
    }
    
  } else {
    
  }
  event_time_ = event_time;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ExecutionEvent.event_time)
}

// .google.actions.sdk.v2.ExecutionState execution_state = 2;
inline bool ExecutionEvent::has_execution_state() const {
  return this != internal_default_instance() && execution_state_ != nullptr;
}
inline void ExecutionEvent::clear_execution_state() {
  if (GetArenaNoVirtual() == nullptr && execution_state_ != nullptr) {
    delete execution_state_;
  }
  execution_state_ = nullptr;
}
inline const ::google::actions::sdk::v2::ExecutionState& ExecutionEvent::execution_state() const {
  const ::google::actions::sdk::v2::ExecutionState* p = execution_state_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.execution_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::ExecutionState*>(
      &::google::actions::sdk::v2::_ExecutionState_default_instance_);
}
inline ::google::actions::sdk::v2::ExecutionState* ExecutionEvent::release_execution_state() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.execution_state)
  
  ::google::actions::sdk::v2::ExecutionState* temp = execution_state_;
  execution_state_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::ExecutionState* ExecutionEvent::mutable_execution_state() {
  
  if (execution_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::ExecutionState>(GetArenaNoVirtual());
    execution_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.execution_state)
  return execution_state_;
}
inline void ExecutionEvent::set_allocated_execution_state(::google::actions::sdk::v2::ExecutionState* execution_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete execution_state_;
  }
  if (execution_state) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      execution_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution_state, submessage_arena);
    }
    
  } else {
    
  }
  execution_state_ = execution_state;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ExecutionEvent.execution_state)
}

// .google.rpc.Status status = 3;
inline bool ExecutionEvent::has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline const ::google::rpc::Status& ExecutionEvent::status() const {
  const ::google::rpc::Status* p = status_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.status)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* ExecutionEvent::release_status() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::google::rpc::Status* ExecutionEvent::mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::rpc::Status>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.status)
  return status_;
}
inline void ExecutionEvent::set_allocated_status(::google::rpc::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ExecutionEvent.status)
}

// .google.actions.sdk.v2.UserConversationInput user_input = 4;
inline bool ExecutionEvent::has_user_input() const {
  return EventData_case() == kUserInput;
}
inline void ExecutionEvent::set_has_user_input() {
  _oneof_case_[0] = kUserInput;
}
inline void ExecutionEvent::clear_user_input() {
  if (has_user_input()) {
    delete EventData_.user_input_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::UserConversationInput* ExecutionEvent::release_user_input() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.user_input)
  if (has_user_input()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::UserConversationInput* temp = EventData_.user_input_;
    EventData_.user_input_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::UserConversationInput& ExecutionEvent::user_input() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.user_input)
  return has_user_input()
      ? *EventData_.user_input_
      : *reinterpret_cast< ::google::actions::sdk::v2::UserConversationInput*>(&::google::actions::sdk::v2::_UserConversationInput_default_instance_);
}
inline ::google::actions::sdk::v2::UserConversationInput* ExecutionEvent::mutable_user_input() {
  if (!has_user_input()) {
    clear_EventData();
    set_has_user_input();
    EventData_.user_input_ = CreateMaybeMessage< ::google::actions::sdk::v2::UserConversationInput >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.user_input)
  return EventData_.user_input_;
}

// .google.actions.sdk.v2.IntentMatch intent_match = 5;
inline bool ExecutionEvent::has_intent_match() const {
  return EventData_case() == kIntentMatch;
}
inline void ExecutionEvent::set_has_intent_match() {
  _oneof_case_[0] = kIntentMatch;
}
inline void ExecutionEvent::clear_intent_match() {
  if (has_intent_match()) {
    delete EventData_.intent_match_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::IntentMatch* ExecutionEvent::release_intent_match() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.intent_match)
  if (has_intent_match()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::IntentMatch* temp = EventData_.intent_match_;
    EventData_.intent_match_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::IntentMatch& ExecutionEvent::intent_match() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.intent_match)
  return has_intent_match()
      ? *EventData_.intent_match_
      : *reinterpret_cast< ::google::actions::sdk::v2::IntentMatch*>(&::google::actions::sdk::v2::_IntentMatch_default_instance_);
}
inline ::google::actions::sdk::v2::IntentMatch* ExecutionEvent::mutable_intent_match() {
  if (!has_intent_match()) {
    clear_EventData();
    set_has_intent_match();
    EventData_.intent_match_ = CreateMaybeMessage< ::google::actions::sdk::v2::IntentMatch >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.intent_match)
  return EventData_.intent_match_;
}

// .google.actions.sdk.v2.ConditionsEvaluated conditions_evaluated = 6;
inline bool ExecutionEvent::has_conditions_evaluated() const {
  return EventData_case() == kConditionsEvaluated;
}
inline void ExecutionEvent::set_has_conditions_evaluated() {
  _oneof_case_[0] = kConditionsEvaluated;
}
inline void ExecutionEvent::clear_conditions_evaluated() {
  if (has_conditions_evaluated()) {
    delete EventData_.conditions_evaluated_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::ConditionsEvaluated* ExecutionEvent::release_conditions_evaluated() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.conditions_evaluated)
  if (has_conditions_evaluated()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::ConditionsEvaluated* temp = EventData_.conditions_evaluated_;
    EventData_.conditions_evaluated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::ConditionsEvaluated& ExecutionEvent::conditions_evaluated() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.conditions_evaluated)
  return has_conditions_evaluated()
      ? *EventData_.conditions_evaluated_
      : *reinterpret_cast< ::google::actions::sdk::v2::ConditionsEvaluated*>(&::google::actions::sdk::v2::_ConditionsEvaluated_default_instance_);
}
inline ::google::actions::sdk::v2::ConditionsEvaluated* ExecutionEvent::mutable_conditions_evaluated() {
  if (!has_conditions_evaluated()) {
    clear_EventData();
    set_has_conditions_evaluated();
    EventData_.conditions_evaluated_ = CreateMaybeMessage< ::google::actions::sdk::v2::ConditionsEvaluated >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.conditions_evaluated)
  return EventData_.conditions_evaluated_;
}

// .google.actions.sdk.v2.OnSceneEnter on_scene_enter = 7;
inline bool ExecutionEvent::has_on_scene_enter() const {
  return EventData_case() == kOnSceneEnter;
}
inline void ExecutionEvent::set_has_on_scene_enter() {
  _oneof_case_[0] = kOnSceneEnter;
}
inline void ExecutionEvent::clear_on_scene_enter() {
  if (has_on_scene_enter()) {
    delete EventData_.on_scene_enter_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::OnSceneEnter* ExecutionEvent::release_on_scene_enter() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.on_scene_enter)
  if (has_on_scene_enter()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::OnSceneEnter* temp = EventData_.on_scene_enter_;
    EventData_.on_scene_enter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::OnSceneEnter& ExecutionEvent::on_scene_enter() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.on_scene_enter)
  return has_on_scene_enter()
      ? *EventData_.on_scene_enter_
      : *reinterpret_cast< ::google::actions::sdk::v2::OnSceneEnter*>(&::google::actions::sdk::v2::_OnSceneEnter_default_instance_);
}
inline ::google::actions::sdk::v2::OnSceneEnter* ExecutionEvent::mutable_on_scene_enter() {
  if (!has_on_scene_enter()) {
    clear_EventData();
    set_has_on_scene_enter();
    EventData_.on_scene_enter_ = CreateMaybeMessage< ::google::actions::sdk::v2::OnSceneEnter >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.on_scene_enter)
  return EventData_.on_scene_enter_;
}

// .google.actions.sdk.v2.WebhookRequest webhook_request = 8;
inline bool ExecutionEvent::has_webhook_request() const {
  return EventData_case() == kWebhookRequest;
}
inline void ExecutionEvent::set_has_webhook_request() {
  _oneof_case_[0] = kWebhookRequest;
}
inline void ExecutionEvent::clear_webhook_request() {
  if (has_webhook_request()) {
    delete EventData_.webhook_request_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::WebhookRequest* ExecutionEvent::release_webhook_request() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.webhook_request)
  if (has_webhook_request()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::WebhookRequest* temp = EventData_.webhook_request_;
    EventData_.webhook_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::WebhookRequest& ExecutionEvent::webhook_request() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.webhook_request)
  return has_webhook_request()
      ? *EventData_.webhook_request_
      : *reinterpret_cast< ::google::actions::sdk::v2::WebhookRequest*>(&::google::actions::sdk::v2::_WebhookRequest_default_instance_);
}
inline ::google::actions::sdk::v2::WebhookRequest* ExecutionEvent::mutable_webhook_request() {
  if (!has_webhook_request()) {
    clear_EventData();
    set_has_webhook_request();
    EventData_.webhook_request_ = CreateMaybeMessage< ::google::actions::sdk::v2::WebhookRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.webhook_request)
  return EventData_.webhook_request_;
}

// .google.actions.sdk.v2.WebhookResponse webhook_response = 9;
inline bool ExecutionEvent::has_webhook_response() const {
  return EventData_case() == kWebhookResponse;
}
inline void ExecutionEvent::set_has_webhook_response() {
  _oneof_case_[0] = kWebhookResponse;
}
inline void ExecutionEvent::clear_webhook_response() {
  if (has_webhook_response()) {
    delete EventData_.webhook_response_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::WebhookResponse* ExecutionEvent::release_webhook_response() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.webhook_response)
  if (has_webhook_response()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::WebhookResponse* temp = EventData_.webhook_response_;
    EventData_.webhook_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::WebhookResponse& ExecutionEvent::webhook_response() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.webhook_response)
  return has_webhook_response()
      ? *EventData_.webhook_response_
      : *reinterpret_cast< ::google::actions::sdk::v2::WebhookResponse*>(&::google::actions::sdk::v2::_WebhookResponse_default_instance_);
}
inline ::google::actions::sdk::v2::WebhookResponse* ExecutionEvent::mutable_webhook_response() {
  if (!has_webhook_response()) {
    clear_EventData();
    set_has_webhook_response();
    EventData_.webhook_response_ = CreateMaybeMessage< ::google::actions::sdk::v2::WebhookResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.webhook_response)
  return EventData_.webhook_response_;
}

// .google.actions.sdk.v2.WebhookInitiatedTransition webhook_initiated_transition = 10;
inline bool ExecutionEvent::has_webhook_initiated_transition() const {
  return EventData_case() == kWebhookInitiatedTransition;
}
inline void ExecutionEvent::set_has_webhook_initiated_transition() {
  _oneof_case_[0] = kWebhookInitiatedTransition;
}
inline void ExecutionEvent::clear_webhook_initiated_transition() {
  if (has_webhook_initiated_transition()) {
    delete EventData_.webhook_initiated_transition_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::WebhookInitiatedTransition* ExecutionEvent::release_webhook_initiated_transition() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.webhook_initiated_transition)
  if (has_webhook_initiated_transition()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::WebhookInitiatedTransition* temp = EventData_.webhook_initiated_transition_;
    EventData_.webhook_initiated_transition_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::WebhookInitiatedTransition& ExecutionEvent::webhook_initiated_transition() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.webhook_initiated_transition)
  return has_webhook_initiated_transition()
      ? *EventData_.webhook_initiated_transition_
      : *reinterpret_cast< ::google::actions::sdk::v2::WebhookInitiatedTransition*>(&::google::actions::sdk::v2::_WebhookInitiatedTransition_default_instance_);
}
inline ::google::actions::sdk::v2::WebhookInitiatedTransition* ExecutionEvent::mutable_webhook_initiated_transition() {
  if (!has_webhook_initiated_transition()) {
    clear_EventData();
    set_has_webhook_initiated_transition();
    EventData_.webhook_initiated_transition_ = CreateMaybeMessage< ::google::actions::sdk::v2::WebhookInitiatedTransition >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.webhook_initiated_transition)
  return EventData_.webhook_initiated_transition_;
}

// .google.actions.sdk.v2.SlotMatch slot_match = 11;
inline bool ExecutionEvent::has_slot_match() const {
  return EventData_case() == kSlotMatch;
}
inline void ExecutionEvent::set_has_slot_match() {
  _oneof_case_[0] = kSlotMatch;
}
inline void ExecutionEvent::clear_slot_match() {
  if (has_slot_match()) {
    delete EventData_.slot_match_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::SlotMatch* ExecutionEvent::release_slot_match() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.slot_match)
  if (has_slot_match()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::SlotMatch* temp = EventData_.slot_match_;
    EventData_.slot_match_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::SlotMatch& ExecutionEvent::slot_match() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.slot_match)
  return has_slot_match()
      ? *EventData_.slot_match_
      : *reinterpret_cast< ::google::actions::sdk::v2::SlotMatch*>(&::google::actions::sdk::v2::_SlotMatch_default_instance_);
}
inline ::google::actions::sdk::v2::SlotMatch* ExecutionEvent::mutable_slot_match() {
  if (!has_slot_match()) {
    clear_EventData();
    set_has_slot_match();
    EventData_.slot_match_ = CreateMaybeMessage< ::google::actions::sdk::v2::SlotMatch >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.slot_match)
  return EventData_.slot_match_;
}

// .google.actions.sdk.v2.SlotRequested slot_requested = 12;
inline bool ExecutionEvent::has_slot_requested() const {
  return EventData_case() == kSlotRequested;
}
inline void ExecutionEvent::set_has_slot_requested() {
  _oneof_case_[0] = kSlotRequested;
}
inline void ExecutionEvent::clear_slot_requested() {
  if (has_slot_requested()) {
    delete EventData_.slot_requested_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::SlotRequested* ExecutionEvent::release_slot_requested() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.slot_requested)
  if (has_slot_requested()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::SlotRequested* temp = EventData_.slot_requested_;
    EventData_.slot_requested_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::SlotRequested& ExecutionEvent::slot_requested() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.slot_requested)
  return has_slot_requested()
      ? *EventData_.slot_requested_
      : *reinterpret_cast< ::google::actions::sdk::v2::SlotRequested*>(&::google::actions::sdk::v2::_SlotRequested_default_instance_);
}
inline ::google::actions::sdk::v2::SlotRequested* ExecutionEvent::mutable_slot_requested() {
  if (!has_slot_requested()) {
    clear_EventData();
    set_has_slot_requested();
    EventData_.slot_requested_ = CreateMaybeMessage< ::google::actions::sdk::v2::SlotRequested >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.slot_requested)
  return EventData_.slot_requested_;
}

// .google.actions.sdk.v2.SlotValidated slot_validated = 13;
inline bool ExecutionEvent::has_slot_validated() const {
  return EventData_case() == kSlotValidated;
}
inline void ExecutionEvent::set_has_slot_validated() {
  _oneof_case_[0] = kSlotValidated;
}
inline void ExecutionEvent::clear_slot_validated() {
  if (has_slot_validated()) {
    delete EventData_.slot_validated_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::SlotValidated* ExecutionEvent::release_slot_validated() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.slot_validated)
  if (has_slot_validated()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::SlotValidated* temp = EventData_.slot_validated_;
    EventData_.slot_validated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::SlotValidated& ExecutionEvent::slot_validated() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.slot_validated)
  return has_slot_validated()
      ? *EventData_.slot_validated_
      : *reinterpret_cast< ::google::actions::sdk::v2::SlotValidated*>(&::google::actions::sdk::v2::_SlotValidated_default_instance_);
}
inline ::google::actions::sdk::v2::SlotValidated* ExecutionEvent::mutable_slot_validated() {
  if (!has_slot_validated()) {
    clear_EventData();
    set_has_slot_validated();
    EventData_.slot_validated_ = CreateMaybeMessage< ::google::actions::sdk::v2::SlotValidated >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.slot_validated)
  return EventData_.slot_validated_;
}

// .google.actions.sdk.v2.FormFilled form_filled = 14;
inline bool ExecutionEvent::has_form_filled() const {
  return EventData_case() == kFormFilled;
}
inline void ExecutionEvent::set_has_form_filled() {
  _oneof_case_[0] = kFormFilled;
}
inline void ExecutionEvent::clear_form_filled() {
  if (has_form_filled()) {
    delete EventData_.form_filled_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::FormFilled* ExecutionEvent::release_form_filled() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.form_filled)
  if (has_form_filled()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::FormFilled* temp = EventData_.form_filled_;
    EventData_.form_filled_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::FormFilled& ExecutionEvent::form_filled() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.form_filled)
  return has_form_filled()
      ? *EventData_.form_filled_
      : *reinterpret_cast< ::google::actions::sdk::v2::FormFilled*>(&::google::actions::sdk::v2::_FormFilled_default_instance_);
}
inline ::google::actions::sdk::v2::FormFilled* ExecutionEvent::mutable_form_filled() {
  if (!has_form_filled()) {
    clear_EventData();
    set_has_form_filled();
    EventData_.form_filled_ = CreateMaybeMessage< ::google::actions::sdk::v2::FormFilled >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.form_filled)
  return EventData_.form_filled_;
}

// .google.actions.sdk.v2.WaitingForUserInput waiting_user_input = 15;
inline bool ExecutionEvent::has_waiting_user_input() const {
  return EventData_case() == kWaitingUserInput;
}
inline void ExecutionEvent::set_has_waiting_user_input() {
  _oneof_case_[0] = kWaitingUserInput;
}
inline void ExecutionEvent::clear_waiting_user_input() {
  if (has_waiting_user_input()) {
    delete EventData_.waiting_user_input_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::WaitingForUserInput* ExecutionEvent::release_waiting_user_input() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.waiting_user_input)
  if (has_waiting_user_input()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::WaitingForUserInput* temp = EventData_.waiting_user_input_;
    EventData_.waiting_user_input_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::WaitingForUserInput& ExecutionEvent::waiting_user_input() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.waiting_user_input)
  return has_waiting_user_input()
      ? *EventData_.waiting_user_input_
      : *reinterpret_cast< ::google::actions::sdk::v2::WaitingForUserInput*>(&::google::actions::sdk::v2::_WaitingForUserInput_default_instance_);
}
inline ::google::actions::sdk::v2::WaitingForUserInput* ExecutionEvent::mutable_waiting_user_input() {
  if (!has_waiting_user_input()) {
    clear_EventData();
    set_has_waiting_user_input();
    EventData_.waiting_user_input_ = CreateMaybeMessage< ::google::actions::sdk::v2::WaitingForUserInput >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.waiting_user_input)
  return EventData_.waiting_user_input_;
}

// .google.actions.sdk.v2.EndConversation end_conversation = 16;
inline bool ExecutionEvent::has_end_conversation() const {
  return EventData_case() == kEndConversation;
}
inline void ExecutionEvent::set_has_end_conversation() {
  _oneof_case_[0] = kEndConversation;
}
inline void ExecutionEvent::clear_end_conversation() {
  if (has_end_conversation()) {
    delete EventData_.end_conversation_;
    clear_has_EventData();
  }
}
inline ::google::actions::sdk::v2::EndConversation* ExecutionEvent::release_end_conversation() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionEvent.end_conversation)
  if (has_end_conversation()) {
    clear_has_EventData();
      ::google::actions::sdk::v2::EndConversation* temp = EventData_.end_conversation_;
    EventData_.end_conversation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::actions::sdk::v2::EndConversation& ExecutionEvent::end_conversation() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.end_conversation)
  return has_end_conversation()
      ? *EventData_.end_conversation_
      : *reinterpret_cast< ::google::actions::sdk::v2::EndConversation*>(&::google::actions::sdk::v2::_EndConversation_default_instance_);
}
inline ::google::actions::sdk::v2::EndConversation* ExecutionEvent::mutable_end_conversation() {
  if (!has_end_conversation()) {
    clear_EventData();
    set_has_end_conversation();
    EventData_.end_conversation_ = CreateMaybeMessage< ::google::actions::sdk::v2::EndConversation >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.end_conversation)
  return EventData_.end_conversation_;
}

// repeated string warning_messages = 17;
inline int ExecutionEvent::warning_messages_size() const {
  return warning_messages_.size();
}
inline void ExecutionEvent::clear_warning_messages() {
  warning_messages_.Clear();
}
inline const ::std::string& ExecutionEvent::warning_messages(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionEvent.warning_messages)
  return warning_messages_.Get(index);
}
inline ::std::string* ExecutionEvent::mutable_warning_messages(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionEvent.warning_messages)
  return warning_messages_.Mutable(index);
}
inline void ExecutionEvent::set_warning_messages(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.ExecutionEvent.warning_messages)
  warning_messages_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ExecutionEvent::set_warning_messages(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.ExecutionEvent.warning_messages)
  warning_messages_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ExecutionEvent::set_warning_messages(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  warning_messages_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.ExecutionEvent.warning_messages)
}
inline void ExecutionEvent::set_warning_messages(int index, const char* value, size_t size) {
  warning_messages_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.ExecutionEvent.warning_messages)
}
inline ::std::string* ExecutionEvent::add_warning_messages() {
  // @@protoc_insertion_point(field_add_mutable:google.actions.sdk.v2.ExecutionEvent.warning_messages)
  return warning_messages_.Add();
}
inline void ExecutionEvent::add_warning_messages(const ::std::string& value) {
  warning_messages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.ExecutionEvent.warning_messages)
}
#if LANG_CXX11
inline void ExecutionEvent::add_warning_messages(::std::string&& value) {
  warning_messages_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.ExecutionEvent.warning_messages)
}
#endif
inline void ExecutionEvent::add_warning_messages(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  warning_messages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.actions.sdk.v2.ExecutionEvent.warning_messages)
}
inline void ExecutionEvent::add_warning_messages(const char* value, size_t size) {
  warning_messages_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.actions.sdk.v2.ExecutionEvent.warning_messages)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ExecutionEvent::warning_messages() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.ExecutionEvent.warning_messages)
  return warning_messages_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
ExecutionEvent::mutable_warning_messages() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.ExecutionEvent.warning_messages)
  return &warning_messages_;
}

inline bool ExecutionEvent::has_EventData() const {
  return EventData_case() != EVENTDATA_NOT_SET;
}
inline void ExecutionEvent::clear_has_EventData() {
  _oneof_case_[0] = EVENTDATA_NOT_SET;
}
inline ExecutionEvent::EventDataCase ExecutionEvent::EventData_case() const {
  return ExecutionEvent::EventDataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ExecutionState

// string current_scene_id = 1;
inline void ExecutionState::clear_current_scene_id() {
  current_scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecutionState::current_scene_id() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionState.current_scene_id)
  return current_scene_id_.GetNoArena();
}
inline void ExecutionState::set_current_scene_id(const ::std::string& value) {
  
  current_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.ExecutionState.current_scene_id)
}
#if LANG_CXX11
inline void ExecutionState::set_current_scene_id(::std::string&& value) {
  
  current_scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.ExecutionState.current_scene_id)
}
#endif
inline void ExecutionState::set_current_scene_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.ExecutionState.current_scene_id)
}
inline void ExecutionState::set_current_scene_id(const char* value, size_t size) {
  
  current_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.ExecutionState.current_scene_id)
}
inline ::std::string* ExecutionState::mutable_current_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionState.current_scene_id)
  return current_scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecutionState::release_current_scene_id() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionState.current_scene_id)
  
  return current_scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecutionState::set_allocated_current_scene_id(::std::string* current_scene_id) {
  if (current_scene_id != nullptr) {
    
  } else {
    
  }
  current_scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), current_scene_id);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ExecutionState.current_scene_id)
}

// .google.protobuf.Struct session_storage = 2;
inline bool ExecutionState::has_session_storage() const {
  return this != internal_default_instance() && session_storage_ != nullptr;
}
inline const ::google::protobuf::Struct& ExecutionState::session_storage() const {
  const ::google::protobuf::Struct* p = session_storage_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionState.session_storage)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* ExecutionState::release_session_storage() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionState.session_storage)
  
  ::google::protobuf::Struct* temp = session_storage_;
  session_storage_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* ExecutionState::mutable_session_storage() {
  
  if (session_storage_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArenaNoVirtual());
    session_storage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionState.session_storage)
  return session_storage_;
}
inline void ExecutionState::set_allocated_session_storage(::google::protobuf::Struct* session_storage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_storage_);
  }
  if (session_storage) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(session_storage)->GetArena();
    if (message_arena != submessage_arena) {
      session_storage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_storage, submessage_arena);
    }
    
  } else {
    
  }
  session_storage_ = session_storage;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ExecutionState.session_storage)
}

// .google.actions.sdk.v2.Slots slots = 5;
inline bool ExecutionState::has_slots() const {
  return this != internal_default_instance() && slots_ != nullptr;
}
inline void ExecutionState::clear_slots() {
  if (GetArenaNoVirtual() == nullptr && slots_ != nullptr) {
    delete slots_;
  }
  slots_ = nullptr;
}
inline const ::google::actions::sdk::v2::Slots& ExecutionState::slots() const {
  const ::google::actions::sdk::v2::Slots* p = slots_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionState.slots)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::Slots*>(
      &::google::actions::sdk::v2::_Slots_default_instance_);
}
inline ::google::actions::sdk::v2::Slots* ExecutionState::release_slots() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionState.slots)
  
  ::google::actions::sdk::v2::Slots* temp = slots_;
  slots_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::Slots* ExecutionState::mutable_slots() {
  
  if (slots_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::Slots>(GetArenaNoVirtual());
    slots_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionState.slots)
  return slots_;
}
inline void ExecutionState::set_allocated_slots(::google::actions::sdk::v2::Slots* slots) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete slots_;
  }
  if (slots) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      slots = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, slots, submessage_arena);
    }
    
  } else {
    
  }
  slots_ = slots;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ExecutionState.slots)
}

// repeated .google.actions.sdk.v2.conversation.Prompt prompt_queue = 7;
inline int ExecutionState::prompt_queue_size() const {
  return prompt_queue_.size();
}
inline ::google::actions::sdk::v2::conversation::Prompt* ExecutionState::mutable_prompt_queue(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionState.prompt_queue)
  return prompt_queue_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Prompt >*
ExecutionState::mutable_prompt_queue() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.ExecutionState.prompt_queue)
  return &prompt_queue_;
}
inline const ::google::actions::sdk::v2::conversation::Prompt& ExecutionState::prompt_queue(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionState.prompt_queue)
  return prompt_queue_.Get(index);
}
inline ::google::actions::sdk::v2::conversation::Prompt* ExecutionState::add_prompt_queue() {
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.ExecutionState.prompt_queue)
  return prompt_queue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::conversation::Prompt >&
ExecutionState::prompt_queue() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.ExecutionState.prompt_queue)
  return prompt_queue_;
}

// .google.protobuf.Struct user_storage = 6;
inline bool ExecutionState::has_user_storage() const {
  return this != internal_default_instance() && user_storage_ != nullptr;
}
inline const ::google::protobuf::Struct& ExecutionState::user_storage() const {
  const ::google::protobuf::Struct* p = user_storage_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionState.user_storage)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* ExecutionState::release_user_storage() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionState.user_storage)
  
  ::google::protobuf::Struct* temp = user_storage_;
  user_storage_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* ExecutionState::mutable_user_storage() {
  
  if (user_storage_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArenaNoVirtual());
    user_storage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionState.user_storage)
  return user_storage_;
}
inline void ExecutionState::set_allocated_user_storage(::google::protobuf::Struct* user_storage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(user_storage_);
  }
  if (user_storage) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(user_storage)->GetArena();
    if (message_arena != submessage_arena) {
      user_storage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_storage, submessage_arena);
    }
    
  } else {
    
  }
  user_storage_ = user_storage;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ExecutionState.user_storage)
}

// .google.protobuf.Struct household_storage = 8;
inline bool ExecutionState::has_household_storage() const {
  return this != internal_default_instance() && household_storage_ != nullptr;
}
inline const ::google::protobuf::Struct& ExecutionState::household_storage() const {
  const ::google::protobuf::Struct* p = household_storage_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ExecutionState.household_storage)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* ExecutionState::release_household_storage() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ExecutionState.household_storage)
  
  ::google::protobuf::Struct* temp = household_storage_;
  household_storage_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* ExecutionState::mutable_household_storage() {
  
  if (household_storage_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArenaNoVirtual());
    household_storage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ExecutionState.household_storage)
  return household_storage_;
}
inline void ExecutionState::set_allocated_household_storage(::google::protobuf::Struct* household_storage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(household_storage_);
  }
  if (household_storage) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(household_storage)->GetArena();
    if (message_arena != submessage_arena) {
      household_storage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, household_storage, submessage_arena);
    }
    
  } else {
    
  }
  household_storage_ = household_storage;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ExecutionState.household_storage)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Slots

// .google.actions.sdk.v2.conversation.SlotFillingStatus status = 2;
inline void Slots::clear_status() {
  status_ = 0;
}
inline ::google::actions::sdk::v2::conversation::SlotFillingStatus Slots::status() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Slots.status)
  return static_cast< ::google::actions::sdk::v2::conversation::SlotFillingStatus >(status_);
}
inline void Slots::set_status(::google::actions::sdk::v2::conversation::SlotFillingStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Slots.status)
}

// map<string, .google.actions.sdk.v2.conversation.Slot> slots = 3;
inline int Slots::slots_size() const {
  return slots_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::Slot >&
Slots::slots() const {
  // @@protoc_insertion_point(field_map:google.actions.sdk.v2.Slots.slots)
  return slots_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::Slot >*
Slots::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_map:google.actions.sdk.v2.Slots.slots)
  return slots_.MutableMap();
}

// -------------------------------------------------------------------

// UserConversationInput

// string type = 1;
inline void UserConversationInput::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserConversationInput::type() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.UserConversationInput.type)
  return type_.GetNoArena();
}
inline void UserConversationInput::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.UserConversationInput.type)
}
#if LANG_CXX11
inline void UserConversationInput::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.UserConversationInput.type)
}
#endif
inline void UserConversationInput::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.UserConversationInput.type)
}
inline void UserConversationInput::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.UserConversationInput.type)
}
inline ::std::string* UserConversationInput::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.UserConversationInput.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserConversationInput::release_type() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.UserConversationInput.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserConversationInput::set_allocated_type(::std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.UserConversationInput.type)
}

// string original_query = 2;
inline void UserConversationInput::clear_original_query() {
  original_query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserConversationInput::original_query() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.UserConversationInput.original_query)
  return original_query_.GetNoArena();
}
inline void UserConversationInput::set_original_query(const ::std::string& value) {
  
  original_query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.UserConversationInput.original_query)
}
#if LANG_CXX11
inline void UserConversationInput::set_original_query(::std::string&& value) {
  
  original_query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.UserConversationInput.original_query)
}
#endif
inline void UserConversationInput::set_original_query(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  original_query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.UserConversationInput.original_query)
}
inline void UserConversationInput::set_original_query(const char* value, size_t size) {
  
  original_query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.UserConversationInput.original_query)
}
inline ::std::string* UserConversationInput::mutable_original_query() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.UserConversationInput.original_query)
  return original_query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserConversationInput::release_original_query() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.UserConversationInput.original_query)
  
  return original_query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserConversationInput::set_allocated_original_query(::std::string* original_query) {
  if (original_query != nullptr) {
    
  } else {
    
  }
  original_query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_query);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.UserConversationInput.original_query)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// IntentMatch

// string intent_id = 1;
inline void IntentMatch::clear_intent_id() {
  intent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IntentMatch::intent_id() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.IntentMatch.intent_id)
  return intent_id_.GetNoArena();
}
inline void IntentMatch::set_intent_id(const ::std::string& value) {
  
  intent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.IntentMatch.intent_id)
}
#if LANG_CXX11
inline void IntentMatch::set_intent_id(::std::string&& value) {
  
  intent_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.IntentMatch.intent_id)
}
#endif
inline void IntentMatch::set_intent_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  intent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.IntentMatch.intent_id)
}
inline void IntentMatch::set_intent_id(const char* value, size_t size) {
  
  intent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.IntentMatch.intent_id)
}
inline ::std::string* IntentMatch::mutable_intent_id() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.IntentMatch.intent_id)
  return intent_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IntentMatch::release_intent_id() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.IntentMatch.intent_id)
  
  return intent_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntentMatch::set_allocated_intent_id(::std::string* intent_id) {
  if (intent_id != nullptr) {
    
  } else {
    
  }
  intent_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), intent_id);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.IntentMatch.intent_id)
}

// map<string, .google.actions.sdk.v2.conversation.IntentParameterValue> intent_parameters = 5;
inline int IntentMatch::intent_parameters_size() const {
  return intent_parameters_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >&
IntentMatch::intent_parameters() const {
  // @@protoc_insertion_point(field_map:google.actions.sdk.v2.IntentMatch.intent_parameters)
  return intent_parameters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >*
IntentMatch::mutable_intent_parameters() {
  // @@protoc_insertion_point(field_mutable_map:google.actions.sdk.v2.IntentMatch.intent_parameters)
  return intent_parameters_.MutableMap();
}

// string handler = 3;
inline void IntentMatch::clear_handler() {
  handler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IntentMatch::handler() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.IntentMatch.handler)
  return handler_.GetNoArena();
}
inline void IntentMatch::set_handler(const ::std::string& value) {
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.IntentMatch.handler)
}
#if LANG_CXX11
inline void IntentMatch::set_handler(::std::string&& value) {
  
  handler_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.IntentMatch.handler)
}
#endif
inline void IntentMatch::set_handler(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.IntentMatch.handler)
}
inline void IntentMatch::set_handler(const char* value, size_t size) {
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.IntentMatch.handler)
}
inline ::std::string* IntentMatch::mutable_handler() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.IntentMatch.handler)
  return handler_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IntentMatch::release_handler() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.IntentMatch.handler)
  
  return handler_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntentMatch::set_allocated_handler(::std::string* handler) {
  if (handler != nullptr) {
    
  } else {
    
  }
  handler_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handler);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.IntentMatch.handler)
}

// string next_scene_id = 4;
inline void IntentMatch::clear_next_scene_id() {
  next_scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IntentMatch::next_scene_id() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.IntentMatch.next_scene_id)
  return next_scene_id_.GetNoArena();
}
inline void IntentMatch::set_next_scene_id(const ::std::string& value) {
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.IntentMatch.next_scene_id)
}
#if LANG_CXX11
inline void IntentMatch::set_next_scene_id(::std::string&& value) {
  
  next_scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.IntentMatch.next_scene_id)
}
#endif
inline void IntentMatch::set_next_scene_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.IntentMatch.next_scene_id)
}
inline void IntentMatch::set_next_scene_id(const char* value, size_t size) {
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.IntentMatch.next_scene_id)
}
inline ::std::string* IntentMatch::mutable_next_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.IntentMatch.next_scene_id)
  return next_scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IntentMatch::release_next_scene_id() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.IntentMatch.next_scene_id)
  
  return next_scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntentMatch::set_allocated_next_scene_id(::std::string* next_scene_id) {
  if (next_scene_id != nullptr) {
    
  } else {
    
  }
  next_scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_scene_id);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.IntentMatch.next_scene_id)
}

// -------------------------------------------------------------------

// ConditionsEvaluated

// repeated .google.actions.sdk.v2.Condition failed_conditions = 1;
inline int ConditionsEvaluated::failed_conditions_size() const {
  return failed_conditions_.size();
}
inline void ConditionsEvaluated::clear_failed_conditions() {
  failed_conditions_.Clear();
}
inline ::google::actions::sdk::v2::Condition* ConditionsEvaluated::mutable_failed_conditions(int index) {
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ConditionsEvaluated.failed_conditions)
  return failed_conditions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::Condition >*
ConditionsEvaluated::mutable_failed_conditions() {
  // @@protoc_insertion_point(field_mutable_list:google.actions.sdk.v2.ConditionsEvaluated.failed_conditions)
  return &failed_conditions_;
}
inline const ::google::actions::sdk::v2::Condition& ConditionsEvaluated::failed_conditions(int index) const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ConditionsEvaluated.failed_conditions)
  return failed_conditions_.Get(index);
}
inline ::google::actions::sdk::v2::Condition* ConditionsEvaluated::add_failed_conditions() {
  // @@protoc_insertion_point(field_add:google.actions.sdk.v2.ConditionsEvaluated.failed_conditions)
  return failed_conditions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::actions::sdk::v2::Condition >&
ConditionsEvaluated::failed_conditions() const {
  // @@protoc_insertion_point(field_list:google.actions.sdk.v2.ConditionsEvaluated.failed_conditions)
  return failed_conditions_;
}

// .google.actions.sdk.v2.Condition success_condition = 2;
inline bool ConditionsEvaluated::has_success_condition() const {
  return this != internal_default_instance() && success_condition_ != nullptr;
}
inline void ConditionsEvaluated::clear_success_condition() {
  if (GetArenaNoVirtual() == nullptr && success_condition_ != nullptr) {
    delete success_condition_;
  }
  success_condition_ = nullptr;
}
inline const ::google::actions::sdk::v2::Condition& ConditionsEvaluated::success_condition() const {
  const ::google::actions::sdk::v2::Condition* p = success_condition_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.ConditionsEvaluated.success_condition)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::Condition*>(
      &::google::actions::sdk::v2::_Condition_default_instance_);
}
inline ::google::actions::sdk::v2::Condition* ConditionsEvaluated::release_success_condition() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.ConditionsEvaluated.success_condition)
  
  ::google::actions::sdk::v2::Condition* temp = success_condition_;
  success_condition_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::Condition* ConditionsEvaluated::mutable_success_condition() {
  
  if (success_condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::Condition>(GetArenaNoVirtual());
    success_condition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.ConditionsEvaluated.success_condition)
  return success_condition_;
}
inline void ConditionsEvaluated::set_allocated_success_condition(::google::actions::sdk::v2::Condition* success_condition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete success_condition_;
  }
  if (success_condition) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      success_condition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, success_condition, submessage_arena);
    }
    
  } else {
    
  }
  success_condition_ = success_condition;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.ConditionsEvaluated.success_condition)
}

// -------------------------------------------------------------------

// Condition

// string expression = 1;
inline void Condition::clear_expression() {
  expression_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Condition::expression() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Condition.expression)
  return expression_.GetNoArena();
}
inline void Condition::set_expression(const ::std::string& value) {
  
  expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Condition.expression)
}
#if LANG_CXX11
inline void Condition::set_expression(::std::string&& value) {
  
  expression_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Condition.expression)
}
#endif
inline void Condition::set_expression(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Condition.expression)
}
inline void Condition::set_expression(const char* value, size_t size) {
  
  expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Condition.expression)
}
inline ::std::string* Condition::mutable_expression() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Condition.expression)
  return expression_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Condition::release_expression() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Condition.expression)
  
  return expression_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Condition::set_allocated_expression(::std::string* expression) {
  if (expression != nullptr) {
    
  } else {
    
  }
  expression_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expression);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Condition.expression)
}

// string handler = 2;
inline void Condition::clear_handler() {
  handler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Condition::handler() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Condition.handler)
  return handler_.GetNoArena();
}
inline void Condition::set_handler(const ::std::string& value) {
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Condition.handler)
}
#if LANG_CXX11
inline void Condition::set_handler(::std::string&& value) {
  
  handler_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Condition.handler)
}
#endif
inline void Condition::set_handler(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Condition.handler)
}
inline void Condition::set_handler(const char* value, size_t size) {
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Condition.handler)
}
inline ::std::string* Condition::mutable_handler() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Condition.handler)
  return handler_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Condition::release_handler() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Condition.handler)
  
  return handler_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Condition::set_allocated_handler(::std::string* handler) {
  if (handler != nullptr) {
    
  } else {
    
  }
  handler_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handler);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Condition.handler)
}

// string next_scene_id = 3;
inline void Condition::clear_next_scene_id() {
  next_scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Condition::next_scene_id() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.Condition.next_scene_id)
  return next_scene_id_.GetNoArena();
}
inline void Condition::set_next_scene_id(const ::std::string& value) {
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.Condition.next_scene_id)
}
#if LANG_CXX11
inline void Condition::set_next_scene_id(::std::string&& value) {
  
  next_scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.Condition.next_scene_id)
}
#endif
inline void Condition::set_next_scene_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.Condition.next_scene_id)
}
inline void Condition::set_next_scene_id(const char* value, size_t size) {
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.Condition.next_scene_id)
}
inline ::std::string* Condition::mutable_next_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.Condition.next_scene_id)
  return next_scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Condition::release_next_scene_id() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.Condition.next_scene_id)
  
  return next_scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Condition::set_allocated_next_scene_id(::std::string* next_scene_id) {
  if (next_scene_id != nullptr) {
    
  } else {
    
  }
  next_scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_scene_id);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.Condition.next_scene_id)
}

// -------------------------------------------------------------------

// OnSceneEnter

// string handler = 1;
inline void OnSceneEnter::clear_handler() {
  handler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnSceneEnter::handler() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.OnSceneEnter.handler)
  return handler_.GetNoArena();
}
inline void OnSceneEnter::set_handler(const ::std::string& value) {
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.OnSceneEnter.handler)
}
#if LANG_CXX11
inline void OnSceneEnter::set_handler(::std::string&& value) {
  
  handler_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.OnSceneEnter.handler)
}
#endif
inline void OnSceneEnter::set_handler(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.OnSceneEnter.handler)
}
inline void OnSceneEnter::set_handler(const char* value, size_t size) {
  
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.OnSceneEnter.handler)
}
inline ::std::string* OnSceneEnter::mutable_handler() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.OnSceneEnter.handler)
  return handler_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnSceneEnter::release_handler() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.OnSceneEnter.handler)
  
  return handler_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnSceneEnter::set_allocated_handler(::std::string* handler) {
  if (handler != nullptr) {
    
  } else {
    
  }
  handler_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handler);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.OnSceneEnter.handler)
}

// -------------------------------------------------------------------

// WebhookInitiatedTransition

// string next_scene_id = 1;
inline void WebhookInitiatedTransition::clear_next_scene_id() {
  next_scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WebhookInitiatedTransition::next_scene_id() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.WebhookInitiatedTransition.next_scene_id)
  return next_scene_id_.GetNoArena();
}
inline void WebhookInitiatedTransition::set_next_scene_id(const ::std::string& value) {
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.WebhookInitiatedTransition.next_scene_id)
}
#if LANG_CXX11
inline void WebhookInitiatedTransition::set_next_scene_id(::std::string&& value) {
  
  next_scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.WebhookInitiatedTransition.next_scene_id)
}
#endif
inline void WebhookInitiatedTransition::set_next_scene_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.WebhookInitiatedTransition.next_scene_id)
}
inline void WebhookInitiatedTransition::set_next_scene_id(const char* value, size_t size) {
  
  next_scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.WebhookInitiatedTransition.next_scene_id)
}
inline ::std::string* WebhookInitiatedTransition::mutable_next_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.WebhookInitiatedTransition.next_scene_id)
  return next_scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebhookInitiatedTransition::release_next_scene_id() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.WebhookInitiatedTransition.next_scene_id)
  
  return next_scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebhookInitiatedTransition::set_allocated_next_scene_id(::std::string* next_scene_id) {
  if (next_scene_id != nullptr) {
    
  } else {
    
  }
  next_scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_scene_id);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.WebhookInitiatedTransition.next_scene_id)
}

// -------------------------------------------------------------------

// WebhookRequest

// string request_json = 1;
inline void WebhookRequest::clear_request_json() {
  request_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WebhookRequest::request_json() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.WebhookRequest.request_json)
  return request_json_.GetNoArena();
}
inline void WebhookRequest::set_request_json(const ::std::string& value) {
  
  request_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.WebhookRequest.request_json)
}
#if LANG_CXX11
inline void WebhookRequest::set_request_json(::std::string&& value) {
  
  request_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.WebhookRequest.request_json)
}
#endif
inline void WebhookRequest::set_request_json(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  request_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.WebhookRequest.request_json)
}
inline void WebhookRequest::set_request_json(const char* value, size_t size) {
  
  request_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.WebhookRequest.request_json)
}
inline ::std::string* WebhookRequest::mutable_request_json() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.WebhookRequest.request_json)
  return request_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebhookRequest::release_request_json() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.WebhookRequest.request_json)
  
  return request_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebhookRequest::set_allocated_request_json(::std::string* request_json) {
  if (request_json != nullptr) {
    
  } else {
    
  }
  request_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_json);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.WebhookRequest.request_json)
}

// -------------------------------------------------------------------

// WebhookResponse

// string response_json = 1;
inline void WebhookResponse::clear_response_json() {
  response_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WebhookResponse::response_json() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.WebhookResponse.response_json)
  return response_json_.GetNoArena();
}
inline void WebhookResponse::set_response_json(const ::std::string& value) {
  
  response_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.WebhookResponse.response_json)
}
#if LANG_CXX11
inline void WebhookResponse::set_response_json(::std::string&& value) {
  
  response_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.WebhookResponse.response_json)
}
#endif
inline void WebhookResponse::set_response_json(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  response_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.WebhookResponse.response_json)
}
inline void WebhookResponse::set_response_json(const char* value, size_t size) {
  
  response_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.WebhookResponse.response_json)
}
inline ::std::string* WebhookResponse::mutable_response_json() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.WebhookResponse.response_json)
  return response_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebhookResponse::release_response_json() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.WebhookResponse.response_json)
  
  return response_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebhookResponse::set_allocated_response_json(::std::string* response_json) {
  if (response_json != nullptr) {
    
  } else {
    
  }
  response_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_json);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.WebhookResponse.response_json)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SlotMatch

// map<string, .google.actions.sdk.v2.conversation.IntentParameterValue> nlu_parameters = 2;
inline int SlotMatch::nlu_parameters_size() const {
  return nlu_parameters_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >&
SlotMatch::nlu_parameters() const {
  // @@protoc_insertion_point(field_map:google.actions.sdk.v2.SlotMatch.nlu_parameters)
  return nlu_parameters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::actions::sdk::v2::conversation::IntentParameterValue >*
SlotMatch::mutable_nlu_parameters() {
  // @@protoc_insertion_point(field_mutable_map:google.actions.sdk.v2.SlotMatch.nlu_parameters)
  return nlu_parameters_.MutableMap();
}

// -------------------------------------------------------------------

// SlotRequested

// string slot = 1;
inline void SlotRequested::clear_slot() {
  slot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SlotRequested::slot() const {
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SlotRequested.slot)
  return slot_.GetNoArena();
}
inline void SlotRequested::set_slot(const ::std::string& value) {
  
  slot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.actions.sdk.v2.SlotRequested.slot)
}
#if LANG_CXX11
inline void SlotRequested::set_slot(::std::string&& value) {
  
  slot_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.actions.sdk.v2.SlotRequested.slot)
}
#endif
inline void SlotRequested::set_slot(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  slot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.actions.sdk.v2.SlotRequested.slot)
}
inline void SlotRequested::set_slot(const char* value, size_t size) {
  
  slot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.actions.sdk.v2.SlotRequested.slot)
}
inline ::std::string* SlotRequested::mutable_slot() {
  
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SlotRequested.slot)
  return slot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SlotRequested::release_slot() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SlotRequested.slot)
  
  return slot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SlotRequested::set_allocated_slot(::std::string* slot) {
  if (slot != nullptr) {
    
  } else {
    
  }
  slot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slot);
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SlotRequested.slot)
}

// .google.actions.sdk.v2.conversation.Prompt prompt = 3;
inline bool SlotRequested::has_prompt() const {
  return this != internal_default_instance() && prompt_ != nullptr;
}
inline const ::google::actions::sdk::v2::conversation::Prompt& SlotRequested::prompt() const {
  const ::google::actions::sdk::v2::conversation::Prompt* p = prompt_;
  // @@protoc_insertion_point(field_get:google.actions.sdk.v2.SlotRequested.prompt)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::actions::sdk::v2::conversation::Prompt*>(
      &::google::actions::sdk::v2::conversation::_Prompt_default_instance_);
}
inline ::google::actions::sdk::v2::conversation::Prompt* SlotRequested::release_prompt() {
  // @@protoc_insertion_point(field_release:google.actions.sdk.v2.SlotRequested.prompt)
  
  ::google::actions::sdk::v2::conversation::Prompt* temp = prompt_;
  prompt_ = nullptr;
  return temp;
}
inline ::google::actions::sdk::v2::conversation::Prompt* SlotRequested::mutable_prompt() {
  
  if (prompt_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::actions::sdk::v2::conversation::Prompt>(GetArenaNoVirtual());
    prompt_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.actions.sdk.v2.SlotRequested.prompt)
  return prompt_;
}
inline void SlotRequested::set_allocated_prompt(::google::actions::sdk::v2::conversation::Prompt* prompt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(prompt_);
  }
  if (prompt) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      prompt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, prompt, submessage_arena);
    }
    
  } else {
    
  }
  prompt_ = prompt;
  // @@protoc_insertion_point(field_set_allocated:google.actions.sdk.v2.SlotRequested.prompt)
}

// -------------------------------------------------------------------

// SlotValidated

// -------------------------------------------------------------------

// FormFilled

// -------------------------------------------------------------------

// WaitingForUserInput

// -------------------------------------------------------------------

// EndConversation

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto
