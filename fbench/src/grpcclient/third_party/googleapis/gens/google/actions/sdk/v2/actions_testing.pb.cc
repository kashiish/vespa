// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/actions_testing.proto

#include "google/actions/sdk/v2/actions_testing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserInput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceProperties_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Diagnostics_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Location_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Output_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Intent_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Canvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Prompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto ::google::protobuf::internal::SCCInfo<16> scc_info_ExecutionEvent_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2ftype_2flatlng_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LatLng_google_2ftype_2flatlng_2eproto;
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
class SendInteractionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendInteractionRequest> _instance;
} _SendInteractionRequest_default_instance_;
class UserInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInput> _instance;
} _UserInput_default_instance_;
class DevicePropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceProperties> _instance;
} _DeviceProperties_default_instance_;
class LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Location> _instance;
} _Location_default_instance_;
class SendInteractionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendInteractionResponse> _instance;
} _SendInteractionResponse_default_instance_;
class OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Output> _instance;
} _Output_default_instance_;
class DiagnosticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Diagnostics> _instance;
} _Diagnostics_default_instance_;
class MatchIntentsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchIntentsRequest> _instance;
} _MatchIntentsRequest_default_instance_;
class MatchIntentsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchIntentsResponse> _instance;
} _MatchIntentsResponse_default_instance_;
class SetWebAndAppActivityControlRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetWebAndAppActivityControlRequest> _instance;
} _SetWebAndAppActivityControlRequest_default_instance_;
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
static void InitDefaultsSendInteractionRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_SendInteractionRequest_default_instance_;
    new (ptr) ::google::actions::sdk::v2::SendInteractionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::SendInteractionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SendInteractionRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSendInteractionRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {
      &scc_info_UserInput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base,
      &scc_info_DeviceProperties_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base,}};

static void InitDefaultsUserInput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_UserInput_default_instance_;
    new (ptr) ::google::actions::sdk::v2::UserInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::UserInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserInput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserInput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {}};

static void InitDefaultsDeviceProperties_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_DeviceProperties_default_instance_;
    new (ptr) ::google::actions::sdk::v2::DeviceProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::DeviceProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceProperties_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceProperties_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {
      &scc_info_Location_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base,}};

static void InitDefaultsLocation_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_Location_default_instance_;
    new (ptr) ::google::actions::sdk::v2::Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::Location::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Location_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocation_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {
      &scc_info_LatLng_google_2ftype_2flatlng_2eproto.base,}};

static void InitDefaultsSendInteractionResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_SendInteractionResponse_default_instance_;
    new (ptr) ::google::actions::sdk::v2::SendInteractionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::SendInteractionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SendInteractionResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSendInteractionResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {
      &scc_info_Output_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base,
      &scc_info_Diagnostics_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base,}};

static void InitDefaultsOutput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_Output_default_instance_;
    new (ptr) ::google::actions::sdk::v2::Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::Output::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Output_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOutput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {
      &scc_info_Canvas_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto.base,
      &scc_info_Prompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto.base,}};

static void InitDefaultsDiagnostics_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_Diagnostics_default_instance_;
    new (ptr) ::google::actions::sdk::v2::Diagnostics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::Diagnostics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Diagnostics_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDiagnostics_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {
      &scc_info_ExecutionEvent_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto.base,}};

static void InitDefaultsMatchIntentsRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_MatchIntentsRequest_default_instance_;
    new (ptr) ::google::actions::sdk::v2::MatchIntentsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::MatchIntentsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MatchIntentsRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMatchIntentsRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {}};

static void InitDefaultsMatchIntentsResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_MatchIntentsResponse_default_instance_;
    new (ptr) ::google::actions::sdk::v2::MatchIntentsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::MatchIntentsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MatchIntentsResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMatchIntentsResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {
      &scc_info_Intent_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto.base,}};

static void InitDefaultsSetWebAndAppActivityControlRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::_SetWebAndAppActivityControlRequest_default_instance_;
    new (ptr) ::google::actions::sdk::v2::SetWebAndAppActivityControlRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::SetWebAndAppActivityControlRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetWebAndAppActivityControlRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetWebAndAppActivityControlRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto}, {}};

void InitDefaults_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_SendInteractionRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserInput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceProperties_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Location_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendInteractionResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Output_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Diagnostics_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatchIntentsRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatchIntentsResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetWebAndAppActivityControlRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionRequest, project_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionRequest, input_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionRequest, device_properties_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionRequest, conversation_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::UserInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::UserInput, query_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::UserInput, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::DeviceProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::DeviceProperties, surface_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::DeviceProperties, location_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::DeviceProperties, locale_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::DeviceProperties, time_zone_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Location, coordinates_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Location, formatted_address_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Location, zip_code_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Location, city_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionResponse, output_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionResponse, diagnostics_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SendInteractionResponse, conversation_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Output, text_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Output, speech_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Output, canvas_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Output, actions_builder_prompt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Diagnostics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::Diagnostics, actions_builder_events_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::MatchIntentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::MatchIntentsRequest, project_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::MatchIntentsRequest, query_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::MatchIntentsRequest, locale_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::MatchIntentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::MatchIntentsResponse, matched_intents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SetWebAndAppActivityControlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::SetWebAndAppActivityControlRequest, enabled_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::actions::sdk::v2::SendInteractionRequest)},
  { 9, -1, sizeof(::google::actions::sdk::v2::UserInput)},
  { 16, -1, sizeof(::google::actions::sdk::v2::DeviceProperties)},
  { 25, -1, sizeof(::google::actions::sdk::v2::Location)},
  { 34, -1, sizeof(::google::actions::sdk::v2::SendInteractionResponse)},
  { 42, -1, sizeof(::google::actions::sdk::v2::Output)},
  { 51, -1, sizeof(::google::actions::sdk::v2::Diagnostics)},
  { 57, -1, sizeof(::google::actions::sdk::v2::MatchIntentsRequest)},
  { 65, -1, sizeof(::google::actions::sdk::v2::MatchIntentsResponse)},
  { 71, -1, sizeof(::google::actions::sdk::v2::SetWebAndAppActivityControlRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_SendInteractionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_UserInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_DeviceProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_SendInteractionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_Diagnostics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_MatchIntentsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_MatchIntentsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::_SetWebAndAppActivityControlRequest_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto = {
  {}, AddDescriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto, "google/actions/sdk/v2/actions_testing.proto", schemas,
  file_default_instances, TableStruct_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto::offsets,
  file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto, 10, file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto, file_level_service_descriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto,
};

const char descriptor_table_protodef_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[] =
  "\n+google/actions/sdk/v2/actions_testing."
  "proto\022\025google.actions.sdk.v2\032/google/act"
  "ions/sdk/v2/conversation/intent.proto\032>g"
  "oogle/actions/sdk/v2/conversation/prompt"
  "/content/canvas.proto\0326google/actions/sd"
  "k/v2/conversation/prompt/prompt.proto\032&g"
  "oogle/actions/sdk/v2/event_logs.proto\032\034g"
  "oogle/api/annotations.proto\032\027google/api/"
  "client.proto\032\037google/api/field_behavior."
  "proto\032\033google/protobuf/empty.proto\032\030goog"
  "le/type/latlng.proto\"\311\001\n\026SendInteraction"
  "Request\022\024\n\007project\030\001 \001(\tB\003\340A\002\0224\n\005input\030\002"
  " \001(\0132 .google.actions.sdk.v2.UserInputB\003"
  "\340A\002\022G\n\021device_properties\030\003 \001(\0132\'.google."
  "actions.sdk.v2.DevicePropertiesB\003\340A\002\022\032\n\022"
  "conversation_token\030\004 \001(\t\"\252\001\n\tUserInput\022\r"
  "\n\005query\030\001 \001(\t\0228\n\004type\030\002 \001(\0162*.google.act"
  "ions.sdk.v2.UserInput.InputType\"T\n\tInput"
  "Type\022\032\n\026INPUT_TYPE_UNSPECIFIED\020\000\022\t\n\005TOUC"
  "H\020\001\022\t\n\005VOICE\020\002\022\014\n\010KEYBOARD\020\003\022\007\n\003URL\020\004\"\217\002"
  "\n\020DeviceProperties\022@\n\007surface\030\001 \001(\0162/.go"
  "ogle.actions.sdk.v2.DeviceProperties.Sur"
  "face\0221\n\010location\030\002 \001(\0132\037.google.actions."
  "sdk.v2.Location\022\016\n\006locale\030\003 \001(\t\022\021\n\ttime_"
  "zone\030\004 \001(\t\"c\n\007Surface\022\027\n\023SURFACE_UNSPECI"
  "FIED\020\000\022\013\n\007SPEAKER\020\001\022\t\n\005PHONE\020\002\022\010\n\004ALLO\020\003"
  "\022\021\n\rSMART_DISPLAY\020\004\022\n\n\006KAI_OS\020\005\"o\n\010Locat"
  "ion\022(\n\013coordinates\030\001 \001(\0132\023.google.type.L"
  "atLng\022\031\n\021formatted_address\030\002 \001(\t\022\020\n\010zip_"
  "code\030\003 \001(\t\022\014\n\004city\030\004 \001(\t\"\235\001\n\027SendInterac"
  "tionResponse\022-\n\006output\030\001 \001(\0132\035.google.ac"
  "tions.sdk.v2.Output\0227\n\013diagnostics\030\002 \001(\013"
  "2\".google.actions.sdk.v2.Diagnostics\022\032\n\022"
  "conversation_token\030\003 \001(\t\"\256\001\n\006Output\022\014\n\004t"
  "ext\030\001 \001(\t\022\016\n\006speech\030\002 \003(\t\022:\n\006canvas\030\003 \001("
  "\0132*.google.actions.sdk.v2.conversation.C"
  "anvas\022J\n\026actions_builder_prompt\030\004 \001(\0132*."
  "google.actions.sdk.v2.conversation.Promp"
  "t\"T\n\013Diagnostics\022E\n\026actions_builder_even"
  "ts\030\001 \003(\0132%.google.actions.sdk.v2.Executi"
  "onEvent\"T\n\023MatchIntentsRequest\022\024\n\007projec"
  "t\030\001 \001(\tB\003\340A\002\022\022\n\005query\030\002 \001(\tB\003\340A\002\022\023\n\006loca"
  "le\030\003 \001(\tB\003\340A\002\"[\n\024MatchIntentsResponse\022C\n"
  "\017matched_intents\030\001 \003(\0132*.google.actions."
  "sdk.v2.conversation.Intent\"5\n\"SetWebAndA"
  "ppActivityControlRequest\022\017\n\007enabled\030\001 \001("
  "\0102\257\004\n\016ActionsTesting\022\245\001\n\017SendInteraction"
  "\022-.google.actions.sdk.v2.SendInteraction"
  "Request\032..google.actions.sdk.v2.SendInte"
  "ractionResponse\"3\202\323\344\223\002-\"(/v2/{project=pr"
  "ojects/*}:sendInteraction:\001*\022\260\001\n\014MatchIn"
  "tents\022*.google.actions.sdk.v2.MatchInten"
  "tsRequest\032+.google.actions.sdk.v2.MatchI"
  "ntentsResponse\"G\202\323\344\223\002*\"%/v2/{project=pro"
  "jects/*}:matchIntents:\001*\332A\024project,query"
  ",locale\022\246\001\n\033SetWebAndAppActivityControl\022"
  "9.google.actions.sdk.v2.SetWebAndAppActi"
  "vityControlRequest\032\026.google.protobuf.Emp"
  "ty\"4\202\323\344\223\002$\"\037/v2:setWebAndAppActivityCont"
  "rol:\001*\332A\007enabled\032\031\312A\026actions.googleapis."
  "comBl\n\031com.google.actions.sdk.v2B\023Action"
  "sTestingProtoP\001Z8google.golang.org/genpr"
  "oto/googleapis/actions/sdk/v2;sdkb\006proto"
  "3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto = {
  false, InitDefaults_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto, 
  descriptor_table_protodef_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto,
  "google/actions/sdk/v2/actions_testing.proto", &assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto, 2521,
};

void AddDescriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[9] =
  {
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fintent_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fcontent_2fcanvas_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto,
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fevent_5flogs_2eproto,
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_google_2fapi_2fclient_2eproto,
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
    ::AddDescriptors_google_2ftype_2flatlng_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto, deps, 9);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto = []() { AddDescriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto(); return true; }();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
const ::google::protobuf::EnumDescriptor* UserInput_InputType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[0];
}
bool UserInput_InputType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserInput_InputType UserInput::INPUT_TYPE_UNSPECIFIED;
const UserInput_InputType UserInput::TOUCH;
const UserInput_InputType UserInput::VOICE;
const UserInput_InputType UserInput::KEYBOARD;
const UserInput_InputType UserInput::URL;
const UserInput_InputType UserInput::InputType_MIN;
const UserInput_InputType UserInput::InputType_MAX;
const int UserInput::InputType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DeviceProperties_Surface_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[1];
}
bool DeviceProperties_Surface_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DeviceProperties_Surface DeviceProperties::SURFACE_UNSPECIFIED;
const DeviceProperties_Surface DeviceProperties::SPEAKER;
const DeviceProperties_Surface DeviceProperties::PHONE;
const DeviceProperties_Surface DeviceProperties::ALLO;
const DeviceProperties_Surface DeviceProperties::SMART_DISPLAY;
const DeviceProperties_Surface DeviceProperties::KAI_OS;
const DeviceProperties_Surface DeviceProperties::Surface_MIN;
const DeviceProperties_Surface DeviceProperties::Surface_MAX;
const int DeviceProperties::Surface_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SendInteractionRequest::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::_SendInteractionRequest_default_instance_._instance.get_mutable()->input_ = const_cast< ::google::actions::sdk::v2::UserInput*>(
      ::google::actions::sdk::v2::UserInput::internal_default_instance());
  ::google::actions::sdk::v2::_SendInteractionRequest_default_instance_._instance.get_mutable()->device_properties_ = const_cast< ::google::actions::sdk::v2::DeviceProperties*>(
      ::google::actions::sdk::v2::DeviceProperties::internal_default_instance());
}
class SendInteractionRequest::HasBitSetters {
 public:
  static const ::google::actions::sdk::v2::UserInput& input(const SendInteractionRequest* msg);
  static const ::google::actions::sdk::v2::DeviceProperties& device_properties(const SendInteractionRequest* msg);
};

const ::google::actions::sdk::v2::UserInput&
SendInteractionRequest::HasBitSetters::input(const SendInteractionRequest* msg) {
  return *msg->input_;
}
const ::google::actions::sdk::v2::DeviceProperties&
SendInteractionRequest::HasBitSetters::device_properties(const SendInteractionRequest* msg) {
  return *msg->device_properties_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendInteractionRequest::kProjectFieldNumber;
const int SendInteractionRequest::kInputFieldNumber;
const int SendInteractionRequest::kDevicePropertiesFieldNumber;
const int SendInteractionRequest::kConversationTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendInteractionRequest::SendInteractionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.SendInteractionRequest)
}
SendInteractionRequest::SendInteractionRequest(const SendInteractionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  conversation_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conversation_token().size() > 0) {
    conversation_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_token_);
  }
  if (from.has_input()) {
    input_ = new ::google::actions::sdk::v2::UserInput(*from.input_);
  } else {
    input_ = nullptr;
  }
  if (from.has_device_properties()) {
    device_properties_ = new ::google::actions::sdk::v2::DeviceProperties(*from.device_properties_);
  } else {
    device_properties_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.SendInteractionRequest)
}

void SendInteractionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SendInteractionRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_properties_) -
      reinterpret_cast<char*>(&input_)) + sizeof(device_properties_));
}

SendInteractionRequest::~SendInteractionRequest() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.SendInteractionRequest)
  SharedDtor();
}

void SendInteractionRequest::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete device_properties_;
}

void SendInteractionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendInteractionRequest& SendInteractionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SendInteractionRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void SendInteractionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.SendInteractionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && device_properties_ != nullptr) {
    delete device_properties_;
  }
  device_properties_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SendInteractionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SendInteractionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.SendInteractionRequest.project");
        object = msg->mutable_project();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.actions.sdk.v2.UserInput input = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::UserInput::_InternalParse;
        object = msg->mutable_input();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.actions.sdk.v2.DeviceProperties device_properties = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::DeviceProperties::_InternalParse;
        object = msg->mutable_device_properties();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string conversation_token = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.SendInteractionRequest.conversation_token");
        object = msg->mutable_conversation_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SendInteractionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.SendInteractionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.SendInteractionRequest.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.UserInput input = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.DeviceProperties device_properties = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string conversation_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conversation_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->conversation_token().data(), static_cast<int>(this->conversation_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.SendInteractionRequest.conversation_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.SendInteractionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.SendInteractionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SendInteractionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.SendInteractionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.SendInteractionRequest.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project(), output);
  }

  // .google.actions.sdk.v2.UserInput input = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::input(this), output);
  }

  // .google.actions.sdk.v2.DeviceProperties device_properties = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_device_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::device_properties(this), output);
  }

  // string conversation_token = 4;
  if (this->conversation_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conversation_token().data(), static_cast<int>(this->conversation_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.SendInteractionRequest.conversation_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->conversation_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.SendInteractionRequest)
}

::google::protobuf::uint8* SendInteractionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.SendInteractionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.SendInteractionRequest.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project(), target);
  }

  // .google.actions.sdk.v2.UserInput input = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::input(this), target);
  }

  // .google.actions.sdk.v2.DeviceProperties device_properties = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_device_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::device_properties(this), target);
  }

  // string conversation_token = 4;
  if (this->conversation_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conversation_token().data(), static_cast<int>(this->conversation_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.SendInteractionRequest.conversation_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->conversation_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.SendInteractionRequest)
  return target;
}

size_t SendInteractionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.SendInteractionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // string conversation_token = 4;
  if (this->conversation_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->conversation_token());
  }

  // .google.actions.sdk.v2.UserInput input = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .google.actions.sdk.v2.DeviceProperties device_properties = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_device_properties()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_properties_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendInteractionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.SendInteractionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendInteractionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SendInteractionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.SendInteractionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.SendInteractionRequest)
    MergeFrom(*source);
  }
}

void SendInteractionRequest::MergeFrom(const SendInteractionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.SendInteractionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.conversation_token().size() > 0) {

    conversation_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_token_);
  }
  if (from.has_input()) {
    mutable_input()->::google::actions::sdk::v2::UserInput::MergeFrom(from.input());
  }
  if (from.has_device_properties()) {
    mutable_device_properties()->::google::actions::sdk::v2::DeviceProperties::MergeFrom(from.device_properties());
  }
}

void SendInteractionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.SendInteractionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendInteractionRequest::CopyFrom(const SendInteractionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.SendInteractionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendInteractionRequest::IsInitialized() const {
  return true;
}

void SendInteractionRequest::Swap(SendInteractionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendInteractionRequest::InternalSwap(SendInteractionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  conversation_token_.Swap(&other->conversation_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_, other->input_);
  swap(device_properties_, other->device_properties_);
}

::google::protobuf::Metadata SendInteractionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserInput::InitAsDefaultInstance() {
}
class UserInput::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInput::kQueryFieldNumber;
const int UserInput::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInput::UserInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.UserInput)
}
UserInput::UserInput(const UserInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.UserInput)
}

void UserInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserInput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

UserInput::~UserInput() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.UserInput)
  SharedDtor();
}

void UserInput::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserInput& UserInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserInput_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void UserInput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.UserInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.UserInput.query");
        object = msg->mutable_query();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.actions.sdk.v2.UserInput.InputType type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::google::actions::sdk::v2::UserInput_InputType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.UserInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.UserInput.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.UserInput.InputType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::actions::sdk::v2::UserInput_InputType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.UserInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.UserInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.UserInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.UserInput.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // .google.actions.sdk.v2.UserInput.InputType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.UserInput)
}

::google::protobuf::uint8* UserInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.UserInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.UserInput.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // .google.actions.sdk.v2.UserInput.InputType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.UserInput)
  return target;
}

size_t UserInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.UserInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // .google.actions.sdk.v2.UserInput.InputType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.UserInput)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInput* source =
      ::google::protobuf::DynamicCastToGenerated<UserInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.UserInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.UserInput)
    MergeFrom(*source);
  }
}

void UserInput::MergeFrom(const UserInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.UserInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void UserInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.UserInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInput::CopyFrom(const UserInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.UserInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInput::IsInitialized() const {
  return true;
}

void UserInput::Swap(UserInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInput::InternalSwap(UserInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::google::protobuf::Metadata UserInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeviceProperties::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::_DeviceProperties_default_instance_._instance.get_mutable()->location_ = const_cast< ::google::actions::sdk::v2::Location*>(
      ::google::actions::sdk::v2::Location::internal_default_instance());
}
class DeviceProperties::HasBitSetters {
 public:
  static const ::google::actions::sdk::v2::Location& location(const DeviceProperties* msg);
};

const ::google::actions::sdk::v2::Location&
DeviceProperties::HasBitSetters::location(const DeviceProperties* msg) {
  return *msg->location_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceProperties::kSurfaceFieldNumber;
const int DeviceProperties::kLocationFieldNumber;
const int DeviceProperties::kLocaleFieldNumber;
const int DeviceProperties::kTimeZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceProperties::DeviceProperties()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.DeviceProperties)
}
DeviceProperties::DeviceProperties(const DeviceProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locale().size() > 0) {
    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time_zone().size() > 0) {
    time_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone_);
  }
  if (from.has_location()) {
    location_ = new ::google::actions::sdk::v2::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  surface_ = from.surface_;
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.DeviceProperties)
}

void DeviceProperties::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeviceProperties_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&surface_) -
      reinterpret_cast<char*>(&location_)) + sizeof(surface_));
}

DeviceProperties::~DeviceProperties() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.DeviceProperties)
  SharedDtor();
}

void DeviceProperties::SharedDtor() {
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete location_;
}

void DeviceProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeviceProperties& DeviceProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeviceProperties_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void DeviceProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.DeviceProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  surface_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeviceProperties::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeviceProperties*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.actions.sdk.v2.DeviceProperties.Surface surface = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_surface(static_cast<::google::actions::sdk::v2::DeviceProperties_Surface>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.actions.sdk.v2.Location location = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::Location::_InternalParse;
        object = msg->mutable_location();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string locale = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.DeviceProperties.locale");
        object = msg->mutable_locale();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string time_zone = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.DeviceProperties.time_zone");
        object = msg->mutable_time_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeviceProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.DeviceProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.actions.sdk.v2.DeviceProperties.Surface surface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_surface(static_cast< ::google::actions::sdk::v2::DeviceProperties_Surface >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.Location location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string locale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), static_cast<int>(this->locale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.DeviceProperties.locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time_zone = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time_zone().data(), static_cast<int>(this->time_zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.DeviceProperties.time_zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.DeviceProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.DeviceProperties)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeviceProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.DeviceProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.actions.sdk.v2.DeviceProperties.Surface surface = 1;
  if (this->surface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->surface(), output);
  }

  // .google.actions.sdk.v2.Location location = 2;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::location(this), output);
  }

  // string locale = 3;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.DeviceProperties.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->locale(), output);
  }

  // string time_zone = 4;
  if (this->time_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_zone().data(), static_cast<int>(this->time_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.DeviceProperties.time_zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->time_zone(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.DeviceProperties)
}

::google::protobuf::uint8* DeviceProperties::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.DeviceProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.actions.sdk.v2.DeviceProperties.Surface surface = 1;
  if (this->surface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->surface(), target);
  }

  // .google.actions.sdk.v2.Location location = 2;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::location(this), target);
  }

  // string locale = 3;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.DeviceProperties.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->locale(), target);
  }

  // string time_zone = 4;
  if (this->time_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_zone().data(), static_cast<int>(this->time_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.DeviceProperties.time_zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->time_zone(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.DeviceProperties)
  return target;
}

size_t DeviceProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.DeviceProperties)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string locale = 3;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  // string time_zone = 4;
  if (this->time_zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time_zone());
  }

  // .google.actions.sdk.v2.Location location = 2;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .google.actions.sdk.v2.DeviceProperties.Surface surface = 1;
  if (this->surface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->surface());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.DeviceProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceProperties* source =
      ::google::protobuf::DynamicCastToGenerated<DeviceProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.DeviceProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.DeviceProperties)
    MergeFrom(*source);
  }
}

void DeviceProperties::MergeFrom(const DeviceProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.DeviceProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.locale().size() > 0) {

    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  if (from.time_zone().size() > 0) {

    time_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone_);
  }
  if (from.has_location()) {
    mutable_location()->::google::actions::sdk::v2::Location::MergeFrom(from.location());
  }
  if (from.surface() != 0) {
    set_surface(from.surface());
  }
}

void DeviceProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.DeviceProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceProperties::CopyFrom(const DeviceProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.DeviceProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceProperties::IsInitialized() const {
  return true;
}

void DeviceProperties::Swap(DeviceProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceProperties::InternalSwap(DeviceProperties* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  locale_.Swap(&other->locale_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_zone_.Swap(&other->time_zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(location_, other->location_);
  swap(surface_, other->surface_);
}

::google::protobuf::Metadata DeviceProperties::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Location::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::_Location_default_instance_._instance.get_mutable()->coordinates_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
}
class Location::HasBitSetters {
 public:
  static const ::google::type::LatLng& coordinates(const Location* msg);
};

const ::google::type::LatLng&
Location::HasBitSetters::coordinates(const Location* msg) {
  return *msg->coordinates_;
}
void Location::clear_coordinates() {
  if (GetArenaNoVirtual() == nullptr && coordinates_ != nullptr) {
    delete coordinates_;
  }
  coordinates_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kCoordinatesFieldNumber;
const int Location::kFormattedAddressFieldNumber;
const int Location::kZipCodeFieldNumber;
const int Location::kCityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.Location)
}
Location::Location(const Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  formatted_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.formatted_address().size() > 0) {
    formatted_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatted_address_);
  }
  zip_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zip_code().size() > 0) {
    zip_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zip_code_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.has_coordinates()) {
    coordinates_ = new ::google::type::LatLng(*from.coordinates_);
  } else {
    coordinates_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.Location)
}

void Location::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Location_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  formatted_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zip_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coordinates_ = nullptr;
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  formatted_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zip_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete coordinates_;
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Location& Location::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Location_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  formatted_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zip_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && coordinates_ != nullptr) {
    delete coordinates_;
  }
  coordinates_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Location::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Location*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.type.LatLng coordinates = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::type::LatLng::_InternalParse;
        object = msg->mutable_coordinates();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string formatted_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Location.formatted_address");
        object = msg->mutable_formatted_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string zip_code = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Location.zip_code");
        object = msg->mutable_zip_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string city = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Location.city");
        object = msg->mutable_city();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.Location)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.type.LatLng coordinates = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string formatted_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formatted_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->formatted_address().data(), static_cast<int>(this->formatted_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Location.formatted_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zip_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zip_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zip_code().data(), static_cast<int>(this->zip_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Location.zip_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string city = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Location.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.Location)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.LatLng coordinates = 1;
  if (this->has_coordinates()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::coordinates(this), output);
  }

  // string formatted_address = 2;
  if (this->formatted_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->formatted_address().data(), static_cast<int>(this->formatted_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Location.formatted_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->formatted_address(), output);
  }

  // string zip_code = 3;
  if (this->zip_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zip_code().data(), static_cast<int>(this->zip_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Location.zip_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->zip_code(), output);
  }

  // string city = 4;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Location.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->city(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.LatLng coordinates = 1;
  if (this->has_coordinates()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::coordinates(this), target);
  }

  // string formatted_address = 2;
  if (this->formatted_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->formatted_address().data(), static_cast<int>(this->formatted_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Location.formatted_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->formatted_address(), target);
  }

  // string zip_code = 3;
  if (this->zip_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zip_code().data(), static_cast<int>(this->zip_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Location.zip_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->zip_code(), target);
  }

  // string city = 4;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Location.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->city(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string formatted_address = 2;
  if (this->formatted_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->formatted_address());
  }

  // string zip_code = 3;
  if (this->zip_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zip_code());
  }

  // string city = 4;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // .google.type.LatLng coordinates = 1;
  if (this->has_coordinates()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinates_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Location* source =
      ::google::protobuf::DynamicCastToGenerated<Location>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.formatted_address().size() > 0) {

    formatted_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatted_address_);
  }
  if (from.zip_code().size() > 0) {

    zip_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zip_code_);
  }
  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.has_coordinates()) {
    mutable_coordinates()->::google::type::LatLng::MergeFrom(from.coordinates());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  formatted_address_.Swap(&other->formatted_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zip_code_.Swap(&other->zip_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(coordinates_, other->coordinates_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SendInteractionResponse::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::_SendInteractionResponse_default_instance_._instance.get_mutable()->output_ = const_cast< ::google::actions::sdk::v2::Output*>(
      ::google::actions::sdk::v2::Output::internal_default_instance());
  ::google::actions::sdk::v2::_SendInteractionResponse_default_instance_._instance.get_mutable()->diagnostics_ = const_cast< ::google::actions::sdk::v2::Diagnostics*>(
      ::google::actions::sdk::v2::Diagnostics::internal_default_instance());
}
class SendInteractionResponse::HasBitSetters {
 public:
  static const ::google::actions::sdk::v2::Output& output(const SendInteractionResponse* msg);
  static const ::google::actions::sdk::v2::Diagnostics& diagnostics(const SendInteractionResponse* msg);
};

const ::google::actions::sdk::v2::Output&
SendInteractionResponse::HasBitSetters::output(const SendInteractionResponse* msg) {
  return *msg->output_;
}
const ::google::actions::sdk::v2::Diagnostics&
SendInteractionResponse::HasBitSetters::diagnostics(const SendInteractionResponse* msg) {
  return *msg->diagnostics_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendInteractionResponse::kOutputFieldNumber;
const int SendInteractionResponse::kDiagnosticsFieldNumber;
const int SendInteractionResponse::kConversationTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendInteractionResponse::SendInteractionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.SendInteractionResponse)
}
SendInteractionResponse::SendInteractionResponse(const SendInteractionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conversation_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conversation_token().size() > 0) {
    conversation_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_token_);
  }
  if (from.has_output()) {
    output_ = new ::google::actions::sdk::v2::Output(*from.output_);
  } else {
    output_ = nullptr;
  }
  if (from.has_diagnostics()) {
    diagnostics_ = new ::google::actions::sdk::v2::Diagnostics(*from.diagnostics_);
  } else {
    diagnostics_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.SendInteractionResponse)
}

void SendInteractionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SendInteractionResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  conversation_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diagnostics_) -
      reinterpret_cast<char*>(&output_)) + sizeof(diagnostics_));
}

SendInteractionResponse::~SendInteractionResponse() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.SendInteractionResponse)
  SharedDtor();
}

void SendInteractionResponse::SharedDtor() {
  conversation_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete output_;
  if (this != internal_default_instance()) delete diagnostics_;
}

void SendInteractionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendInteractionResponse& SendInteractionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SendInteractionResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void SendInteractionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.SendInteractionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conversation_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && output_ != nullptr) {
    delete output_;
  }
  output_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && diagnostics_ != nullptr) {
    delete diagnostics_;
  }
  diagnostics_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SendInteractionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SendInteractionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.actions.sdk.v2.Output output = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::Output::_InternalParse;
        object = msg->mutable_output();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.actions.sdk.v2.Diagnostics diagnostics = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::Diagnostics::_InternalParse;
        object = msg->mutable_diagnostics();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string conversation_token = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.SendInteractionResponse.conversation_token");
        object = msg->mutable_conversation_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SendInteractionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.SendInteractionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.actions.sdk.v2.Output output = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.Diagnostics diagnostics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string conversation_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conversation_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->conversation_token().data(), static_cast<int>(this->conversation_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.SendInteractionResponse.conversation_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.SendInteractionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.SendInteractionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SendInteractionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.SendInteractionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.actions.sdk.v2.Output output = 1;
  if (this->has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::output(this), output);
  }

  // .google.actions.sdk.v2.Diagnostics diagnostics = 2;
  if (this->has_diagnostics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::diagnostics(this), output);
  }

  // string conversation_token = 3;
  if (this->conversation_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conversation_token().data(), static_cast<int>(this->conversation_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.SendInteractionResponse.conversation_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->conversation_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.SendInteractionResponse)
}

::google::protobuf::uint8* SendInteractionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.SendInteractionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.actions.sdk.v2.Output output = 1;
  if (this->has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::output(this), target);
  }

  // .google.actions.sdk.v2.Diagnostics diagnostics = 2;
  if (this->has_diagnostics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::diagnostics(this), target);
  }

  // string conversation_token = 3;
  if (this->conversation_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conversation_token().data(), static_cast<int>(this->conversation_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.SendInteractionResponse.conversation_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->conversation_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.SendInteractionResponse)
  return target;
}

size_t SendInteractionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.SendInteractionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string conversation_token = 3;
  if (this->conversation_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->conversation_token());
  }

  // .google.actions.sdk.v2.Output output = 1;
  if (this->has_output()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_);
  }

  // .google.actions.sdk.v2.Diagnostics diagnostics = 2;
  if (this->has_diagnostics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *diagnostics_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendInteractionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.SendInteractionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendInteractionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SendInteractionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.SendInteractionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.SendInteractionResponse)
    MergeFrom(*source);
  }
}

void SendInteractionResponse::MergeFrom(const SendInteractionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.SendInteractionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conversation_token().size() > 0) {

    conversation_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_token_);
  }
  if (from.has_output()) {
    mutable_output()->::google::actions::sdk::v2::Output::MergeFrom(from.output());
  }
  if (from.has_diagnostics()) {
    mutable_diagnostics()->::google::actions::sdk::v2::Diagnostics::MergeFrom(from.diagnostics());
  }
}

void SendInteractionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.SendInteractionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendInteractionResponse::CopyFrom(const SendInteractionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.SendInteractionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendInteractionResponse::IsInitialized() const {
  return true;
}

void SendInteractionResponse::Swap(SendInteractionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendInteractionResponse::InternalSwap(SendInteractionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  conversation_token_.Swap(&other->conversation_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(output_, other->output_);
  swap(diagnostics_, other->diagnostics_);
}

::google::protobuf::Metadata SendInteractionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Output::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::_Output_default_instance_._instance.get_mutable()->canvas_ = const_cast< ::google::actions::sdk::v2::conversation::Canvas*>(
      ::google::actions::sdk::v2::conversation::Canvas::internal_default_instance());
  ::google::actions::sdk::v2::_Output_default_instance_._instance.get_mutable()->actions_builder_prompt_ = const_cast< ::google::actions::sdk::v2::conversation::Prompt*>(
      ::google::actions::sdk::v2::conversation::Prompt::internal_default_instance());
}
class Output::HasBitSetters {
 public:
  static const ::google::actions::sdk::v2::conversation::Canvas& canvas(const Output* msg);
  static const ::google::actions::sdk::v2::conversation::Prompt& actions_builder_prompt(const Output* msg);
};

const ::google::actions::sdk::v2::conversation::Canvas&
Output::HasBitSetters::canvas(const Output* msg) {
  return *msg->canvas_;
}
const ::google::actions::sdk::v2::conversation::Prompt&
Output::HasBitSetters::actions_builder_prompt(const Output* msg) {
  return *msg->actions_builder_prompt_;
}
void Output::clear_canvas() {
  if (GetArenaNoVirtual() == nullptr && canvas_ != nullptr) {
    delete canvas_;
  }
  canvas_ = nullptr;
}
void Output::clear_actions_builder_prompt() {
  if (GetArenaNoVirtual() == nullptr && actions_builder_prompt_ != nullptr) {
    delete actions_builder_prompt_;
  }
  actions_builder_prompt_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Output::kTextFieldNumber;
const int Output::kSpeechFieldNumber;
const int Output::kCanvasFieldNumber;
const int Output::kActionsBuilderPromptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Output::Output()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.Output)
}
Output::Output(const Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      speech_(from.speech_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_canvas()) {
    canvas_ = new ::google::actions::sdk::v2::conversation::Canvas(*from.canvas_);
  } else {
    canvas_ = nullptr;
  }
  if (from.has_actions_builder_prompt()) {
    actions_builder_prompt_ = new ::google::actions::sdk::v2::conversation::Prompt(*from.actions_builder_prompt_);
  } else {
    actions_builder_prompt_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.Output)
}

void Output::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Output_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&canvas_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actions_builder_prompt_) -
      reinterpret_cast<char*>(&canvas_)) + sizeof(actions_builder_prompt_));
}

Output::~Output() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.Output)
  SharedDtor();
}

void Output::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete canvas_;
  if (this != internal_default_instance()) delete actions_builder_prompt_;
}

void Output::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Output& Output::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Output_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void Output::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  speech_.Clear();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && canvas_ != nullptr) {
    delete canvas_;
  }
  canvas_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && actions_builder_prompt_ != nullptr) {
    delete actions_builder_prompt_;
  }
  actions_builder_prompt_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Output::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Output*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Output.text");
        object = msg->mutable_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string speech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.Output.speech");
          object = msg->add_speech();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .google.actions.sdk.v2.conversation.Canvas canvas = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Canvas::_InternalParse;
        object = msg->mutable_canvas();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.actions.sdk.v2.conversation.Prompt actions_builder_prompt = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Prompt::_InternalParse;
        object = msg->mutable_actions_builder_prompt();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.Output)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Output.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string speech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_speech()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->speech(this->speech_size() - 1).data(),
            static_cast<int>(this->speech(this->speech_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.Output.speech"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Canvas canvas = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_canvas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Prompt actions_builder_prompt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actions_builder_prompt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.Output)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Output.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // repeated string speech = 2;
  for (int i = 0, n = this->speech_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->speech(i).data(), static_cast<int>(this->speech(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Output.speech");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->speech(i), output);
  }

  // .google.actions.sdk.v2.conversation.Canvas canvas = 3;
  if (this->has_canvas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::canvas(this), output);
  }

  // .google.actions.sdk.v2.conversation.Prompt actions_builder_prompt = 4;
  if (this->has_actions_builder_prompt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::actions_builder_prompt(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.Output)
}

::google::protobuf::uint8* Output::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Output.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // repeated string speech = 2;
  for (int i = 0, n = this->speech_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->speech(i).data(), static_cast<int>(this->speech(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.Output.speech");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->speech(i), target);
  }

  // .google.actions.sdk.v2.conversation.Canvas canvas = 3;
  if (this->has_canvas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::canvas(this), target);
  }

  // .google.actions.sdk.v2.conversation.Prompt actions_builder_prompt = 4;
  if (this->has_actions_builder_prompt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::actions_builder_prompt(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.Output)
  return target;
}

size_t Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.Output)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string speech = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->speech_size());
  for (int i = 0, n = this->speech_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->speech(i));
  }

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .google.actions.sdk.v2.conversation.Canvas canvas = 3;
  if (this->has_canvas()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *canvas_);
  }

  // .google.actions.sdk.v2.conversation.Prompt actions_builder_prompt = 4;
  if (this->has_actions_builder_prompt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *actions_builder_prompt_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const Output* source =
      ::google::protobuf::DynamicCastToGenerated<Output>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.Output)
    MergeFrom(*source);
  }
}

void Output::MergeFrom(const Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  speech_.MergeFrom(from.speech_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_canvas()) {
    mutable_canvas()->::google::actions::sdk::v2::conversation::Canvas::MergeFrom(from.canvas());
  }
  if (from.has_actions_builder_prompt()) {
    mutable_actions_builder_prompt()->::google::actions::sdk::v2::conversation::Prompt::MergeFrom(from.actions_builder_prompt());
  }
}

void Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Output::CopyFrom(const Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Output::IsInitialized() const {
  return true;
}

void Output::Swap(Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Output::InternalSwap(Output* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  speech_.InternalSwap(CastToBase(&other->speech_));
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(canvas_, other->canvas_);
  swap(actions_builder_prompt_, other->actions_builder_prompt_);
}

::google::protobuf::Metadata Output::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Diagnostics::InitAsDefaultInstance() {
}
class Diagnostics::HasBitSetters {
 public:
};

void Diagnostics::clear_actions_builder_events() {
  actions_builder_events_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Diagnostics::kActionsBuilderEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Diagnostics::Diagnostics()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.Diagnostics)
}
Diagnostics::Diagnostics(const Diagnostics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      actions_builder_events_(from.actions_builder_events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.Diagnostics)
}

void Diagnostics::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Diagnostics_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
}

Diagnostics::~Diagnostics() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.Diagnostics)
  SharedDtor();
}

void Diagnostics::SharedDtor() {
}

void Diagnostics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Diagnostics& Diagnostics::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Diagnostics_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void Diagnostics::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.Diagnostics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_builder_events_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Diagnostics::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Diagnostics*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.actions.sdk.v2.ExecutionEvent actions_builder_events = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::actions::sdk::v2::ExecutionEvent::_InternalParse;
          object = msg->add_actions_builder_events();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Diagnostics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.Diagnostics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.actions.sdk.v2.ExecutionEvent actions_builder_events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_actions_builder_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.Diagnostics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.Diagnostics)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Diagnostics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.Diagnostics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.actions.sdk.v2.ExecutionEvent actions_builder_events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_builder_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->actions_builder_events(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.Diagnostics)
}

::google::protobuf::uint8* Diagnostics::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.Diagnostics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.actions.sdk.v2.ExecutionEvent actions_builder_events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_builder_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->actions_builder_events(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.Diagnostics)
  return target;
}

size_t Diagnostics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.Diagnostics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.actions.sdk.v2.ExecutionEvent actions_builder_events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->actions_builder_events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actions_builder_events(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Diagnostics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.Diagnostics)
  GOOGLE_DCHECK_NE(&from, this);
  const Diagnostics* source =
      ::google::protobuf::DynamicCastToGenerated<Diagnostics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.Diagnostics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.Diagnostics)
    MergeFrom(*source);
  }
}

void Diagnostics::MergeFrom(const Diagnostics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.Diagnostics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_builder_events_.MergeFrom(from.actions_builder_events_);
}

void Diagnostics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.Diagnostics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Diagnostics::CopyFrom(const Diagnostics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.Diagnostics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Diagnostics::IsInitialized() const {
  return true;
}

void Diagnostics::Swap(Diagnostics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Diagnostics::InternalSwap(Diagnostics* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&actions_builder_events_)->InternalSwap(CastToBase(&other->actions_builder_events_));
}

::google::protobuf::Metadata Diagnostics::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MatchIntentsRequest::InitAsDefaultInstance() {
}
class MatchIntentsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchIntentsRequest::kProjectFieldNumber;
const int MatchIntentsRequest::kQueryFieldNumber;
const int MatchIntentsRequest::kLocaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchIntentsRequest::MatchIntentsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.MatchIntentsRequest)
}
MatchIntentsRequest::MatchIntentsRequest(const MatchIntentsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locale().size() > 0) {
    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.MatchIntentsRequest)
}

void MatchIntentsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MatchIntentsRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MatchIntentsRequest::~MatchIntentsRequest() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.MatchIntentsRequest)
  SharedDtor();
}

void MatchIntentsRequest::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MatchIntentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatchIntentsRequest& MatchIntentsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MatchIntentsRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void MatchIntentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.MatchIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MatchIntentsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MatchIntentsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.MatchIntentsRequest.project");
        object = msg->mutable_project();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string query = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.MatchIntentsRequest.query");
        object = msg->mutable_query();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string locale = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.actions.sdk.v2.MatchIntentsRequest.locale");
        object = msg->mutable_locale();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MatchIntentsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.MatchIntentsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.MatchIntentsRequest.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string query = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.MatchIntentsRequest.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string locale = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), static_cast<int>(this->locale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.actions.sdk.v2.MatchIntentsRequest.locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.MatchIntentsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.MatchIntentsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MatchIntentsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.MatchIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.MatchIntentsRequest.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project(), output);
  }

  // string query = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.MatchIntentsRequest.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->query(), output);
  }

  // string locale = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.MatchIntentsRequest.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->locale(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.MatchIntentsRequest)
}

::google::protobuf::uint8* MatchIntentsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.MatchIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.MatchIntentsRequest.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project(), target);
  }

  // string query = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.MatchIntentsRequest.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->query(), target);
  }

  // string locale = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.actions.sdk.v2.MatchIntentsRequest.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->locale(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.MatchIntentsRequest)
  return target;
}

size_t MatchIntentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.MatchIntentsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // string query = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // string locale = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchIntentsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.MatchIntentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchIntentsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MatchIntentsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.MatchIntentsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.MatchIntentsRequest)
    MergeFrom(*source);
  }
}

void MatchIntentsRequest::MergeFrom(const MatchIntentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.MatchIntentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.locale().size() > 0) {

    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
}

void MatchIntentsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.MatchIntentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchIntentsRequest::CopyFrom(const MatchIntentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.MatchIntentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchIntentsRequest::IsInitialized() const {
  return true;
}

void MatchIntentsRequest::Swap(MatchIntentsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchIntentsRequest::InternalSwap(MatchIntentsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  locale_.Swap(&other->locale_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MatchIntentsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MatchIntentsResponse::InitAsDefaultInstance() {
}
class MatchIntentsResponse::HasBitSetters {
 public:
};

void MatchIntentsResponse::clear_matched_intents() {
  matched_intents_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchIntentsResponse::kMatchedIntentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchIntentsResponse::MatchIntentsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.MatchIntentsResponse)
}
MatchIntentsResponse::MatchIntentsResponse(const MatchIntentsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      matched_intents_(from.matched_intents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.MatchIntentsResponse)
}

void MatchIntentsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MatchIntentsResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
}

MatchIntentsResponse::~MatchIntentsResponse() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.MatchIntentsResponse)
  SharedDtor();
}

void MatchIntentsResponse::SharedDtor() {
}

void MatchIntentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatchIntentsResponse& MatchIntentsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MatchIntentsResponse_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void MatchIntentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.MatchIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matched_intents_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MatchIntentsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MatchIntentsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.actions.sdk.v2.conversation.Intent matched_intents = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::actions::sdk::v2::conversation::Intent::_InternalParse;
          object = msg->add_matched_intents();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MatchIntentsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.MatchIntentsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.actions.sdk.v2.conversation.Intent matched_intents = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_matched_intents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.MatchIntentsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.MatchIntentsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MatchIntentsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.MatchIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.actions.sdk.v2.conversation.Intent matched_intents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matched_intents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->matched_intents(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.MatchIntentsResponse)
}

::google::protobuf::uint8* MatchIntentsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.MatchIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.actions.sdk.v2.conversation.Intent matched_intents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matched_intents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->matched_intents(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.MatchIntentsResponse)
  return target;
}

size_t MatchIntentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.MatchIntentsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.actions.sdk.v2.conversation.Intent matched_intents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->matched_intents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->matched_intents(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchIntentsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.MatchIntentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchIntentsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<MatchIntentsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.MatchIntentsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.MatchIntentsResponse)
    MergeFrom(*source);
  }
}

void MatchIntentsResponse::MergeFrom(const MatchIntentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.MatchIntentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matched_intents_.MergeFrom(from.matched_intents_);
}

void MatchIntentsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.MatchIntentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchIntentsResponse::CopyFrom(const MatchIntentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.MatchIntentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchIntentsResponse::IsInitialized() const {
  return true;
}

void MatchIntentsResponse::Swap(MatchIntentsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchIntentsResponse::InternalSwap(MatchIntentsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&matched_intents_)->InternalSwap(CastToBase(&other->matched_intents_));
}

::google::protobuf::Metadata MatchIntentsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetWebAndAppActivityControlRequest::InitAsDefaultInstance() {
}
class SetWebAndAppActivityControlRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetWebAndAppActivityControlRequest::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetWebAndAppActivityControlRequest::SetWebAndAppActivityControlRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
}
SetWebAndAppActivityControlRequest::SetWebAndAppActivityControlRequest(const SetWebAndAppActivityControlRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
}

void SetWebAndAppActivityControlRequest::SharedCtor() {
  enabled_ = false;
}

SetWebAndAppActivityControlRequest::~SetWebAndAppActivityControlRequest() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  SharedDtor();
}

void SetWebAndAppActivityControlRequest::SharedDtor() {
}

void SetWebAndAppActivityControlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetWebAndAppActivityControlRequest& SetWebAndAppActivityControlRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetWebAndAppActivityControlRequest_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto.base);
  return *internal_default_instance();
}


void SetWebAndAppActivityControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetWebAndAppActivityControlRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetWebAndAppActivityControlRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetWebAndAppActivityControlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetWebAndAppActivityControlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
}

::google::protobuf::uint8* SetWebAndAppActivityControlRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  return target;
}

size_t SetWebAndAppActivityControlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetWebAndAppActivityControlRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetWebAndAppActivityControlRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetWebAndAppActivityControlRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
    MergeFrom(*source);
  }
}

void SetWebAndAppActivityControlRequest::MergeFrom(const SetWebAndAppActivityControlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void SetWebAndAppActivityControlRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetWebAndAppActivityControlRequest::CopyFrom(const SetWebAndAppActivityControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.SetWebAndAppActivityControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetWebAndAppActivityControlRequest::IsInitialized() const {
  return true;
}

void SetWebAndAppActivityControlRequest::Swap(SetWebAndAppActivityControlRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetWebAndAppActivityControlRequest::InternalSwap(SetWebAndAppActivityControlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(enabled_, other->enabled_);
}

::google::protobuf::Metadata SetWebAndAppActivityControlRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2factions_5ftesting_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::SendInteractionRequest* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::SendInteractionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::SendInteractionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::UserInput* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::UserInput >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::UserInput >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::DeviceProperties* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::DeviceProperties >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::DeviceProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::Location* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::Location >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::Location >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::SendInteractionResponse* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::SendInteractionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::SendInteractionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::Output* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::Output >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::Output >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::Diagnostics* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::Diagnostics >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::Diagnostics >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::MatchIntentsRequest* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::MatchIntentsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::MatchIntentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::MatchIntentsResponse* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::MatchIntentsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::MatchIntentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::SetWebAndAppActivityControlRequest* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::SetWebAndAppActivityControlRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::SetWebAndAppActivityControlRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
