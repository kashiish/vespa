// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/conversation/scene.proto

#include "google/actions/sdk/v2/conversation/scene.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Prompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
class SlotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Slot> _instance;
} _Slot_default_instance_;
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
static void InitDefaultsSlot_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::actions::sdk::v2::conversation::_Slot_default_instance_;
    new (ptr) ::google::actions::sdk::v2::conversation::Slot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::actions::sdk::v2::conversation::Slot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Slot_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSlot_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Prompt_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto.base,}};

void InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Slot_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto[3];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Slot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Slot, mode_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Slot, status_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Slot, value_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Slot, updated_),
  PROTOBUF_FIELD_OFFSET(::google::actions::sdk::v2::conversation::Slot, prompt_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::actions::sdk::v2::conversation::Slot)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::actions::sdk::v2::conversation::_Slot_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto = {
  {}, AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto, "google/actions/sdk/v2/conversation/scene.proto", schemas,
  file_default_instances, TableStruct_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto::offsets,
  file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto, 1, file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto, file_level_service_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto,
};

const char descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto[] =
  "\n.google/actions/sdk/v2/conversation/sce"
  "ne.proto\022\"google.actions.sdk.v2.conversa"
  "tion\0326google/actions/sdk/v2/conversation"
  "/prompt/prompt.proto\032\034google/protobuf/st"
  "ruct.proto\"\206\003\n\004Slot\022\?\n\004mode\030\001 \001(\01621.goog"
  "le.actions.sdk.v2.conversation.Slot.Slot"
  "Mode\022C\n\006status\030\002 \001(\01623.google.actions.sd"
  "k.v2.conversation.Slot.SlotStatus\022%\n\005val"
  "ue\030\003 \001(\0132\026.google.protobuf.Value\022\017\n\007upda"
  "ted\030\004 \001(\010\022:\n\006prompt\030\005 \001(\0132*.google.actio"
  "ns.sdk.v2.conversation.Prompt\"<\n\010SlotMod"
  "e\022\024\n\020MODE_UNSPECIFIED\020\000\022\014\n\010OPTIONAL\020\001\022\014\n"
  "\010REQUIRED\020\002\"F\n\nSlotStatus\022\024\n\020SLOT_UNSPEC"
  "IFIED\020\000\022\t\n\005EMPTY\020\001\022\013\n\007INVALID\020\002\022\n\n\006FILLE"
  "D\020\003*P\n\021SlotFillingStatus\022\017\n\013UNSPECIFIED\020"
  "\000\022\017\n\013INITIALIZED\020\001\022\016\n\nCOLLECTING\020\002\022\t\n\005FI"
  "NAL\020\004B\206\001\n&com.google.actions.sdk.v2.conv"
  "ersationB\nSceneProtoP\001ZNgoogle.golang.or"
  "g/genproto/googleapis/actions/sdk/v2/con"
  "versation;conversationb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto = {
  false, InitDefaults_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto, 
  descriptor_table_protodef_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto,
  "google/actions/sdk/v2/conversation/scene.proto", &assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto, 790,
};

void AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fprompt_2fprompt_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fstruct_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto = []() { AddDescriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto(); return true; }();
namespace google {
namespace actions {
namespace sdk {
namespace v2 {
namespace conversation {
const ::google::protobuf::EnumDescriptor* Slot_SlotMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto);
  return file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto[0];
}
bool Slot_SlotMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Slot_SlotMode Slot::MODE_UNSPECIFIED;
const Slot_SlotMode Slot::OPTIONAL;
const Slot_SlotMode Slot::REQUIRED;
const Slot_SlotMode Slot::SlotMode_MIN;
const Slot_SlotMode Slot::SlotMode_MAX;
const int Slot::SlotMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Slot_SlotStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto);
  return file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto[1];
}
bool Slot_SlotStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Slot_SlotStatus Slot::SLOT_UNSPECIFIED;
const Slot_SlotStatus Slot::EMPTY;
const Slot_SlotStatus Slot::INVALID;
const Slot_SlotStatus Slot::FILLED;
const Slot_SlotStatus Slot::SlotStatus_MIN;
const Slot_SlotStatus Slot::SlotStatus_MAX;
const int Slot::SlotStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SlotFillingStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto);
  return file_level_enum_descriptors_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto[2];
}
bool SlotFillingStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Slot::InitAsDefaultInstance() {
  ::google::actions::sdk::v2::conversation::_Slot_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  ::google::actions::sdk::v2::conversation::_Slot_default_instance_._instance.get_mutable()->prompt_ = const_cast< ::google::actions::sdk::v2::conversation::Prompt*>(
      ::google::actions::sdk::v2::conversation::Prompt::internal_default_instance());
}
class Slot::HasBitSetters {
 public:
  static const ::google::protobuf::Value& value(const Slot* msg);
  static const ::google::actions::sdk::v2::conversation::Prompt& prompt(const Slot* msg);
};

const ::google::protobuf::Value&
Slot::HasBitSetters::value(const Slot* msg) {
  return *msg->value_;
}
const ::google::actions::sdk::v2::conversation::Prompt&
Slot::HasBitSetters::prompt(const Slot* msg) {
  return *msg->prompt_;
}
void Slot::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
void Slot::clear_prompt() {
  if (GetArenaNoVirtual() == nullptr && prompt_ != nullptr) {
    delete prompt_;
  }
  prompt_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Slot::kModeFieldNumber;
const int Slot::kStatusFieldNumber;
const int Slot::kValueFieldNumber;
const int Slot::kUpdatedFieldNumber;
const int Slot::kPromptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Slot::Slot()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.actions.sdk.v2.conversation.Slot)
}
Slot::Slot(const Slot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::google::protobuf::Value(*from.value_);
  } else {
    value_ = nullptr;
  }
  if (from.has_prompt()) {
    prompt_ = new ::google::actions::sdk::v2::conversation::Prompt(*from.prompt_);
  } else {
    prompt_ = nullptr;
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&updated_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(updated_));
  // @@protoc_insertion_point(copy_constructor:google.actions.sdk.v2.conversation.Slot)
}

void Slot::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Slot_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_) -
      reinterpret_cast<char*>(&value_)) + sizeof(updated_));
}

Slot::~Slot() {
  // @@protoc_insertion_point(destructor:google.actions.sdk.v2.conversation.Slot)
  SharedDtor();
}

void Slot::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete prompt_;
}

void Slot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Slot& Slot::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Slot_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto.base);
  return *internal_default_instance();
}


void Slot::Clear() {
// @@protoc_insertion_point(message_clear_start:google.actions.sdk.v2.conversation.Slot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && prompt_ != nullptr) {
    delete prompt_;
  }
  prompt_ = nullptr;
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(updated_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Slot::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Slot*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.actions.sdk.v2.conversation.Slot.SlotMode mode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_mode(static_cast<::google::actions::sdk::v2::conversation::Slot_SlotMode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.actions.sdk.v2.conversation.Slot.SlotStatus status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::google::actions::sdk::v2::conversation::Slot_SlotStatus>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.protobuf.Value value = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Value::_InternalParse;
        object = msg->mutable_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool updated = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_updated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.actions.sdk.v2.conversation.Prompt prompt = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::actions::sdk::v2::conversation::Prompt::_InternalParse;
        object = msg->mutable_prompt();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Slot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.actions.sdk.v2.conversation.Slot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.actions.sdk.v2.conversation.Slot.SlotMode mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::google::actions::sdk::v2::conversation::Slot_SlotMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Slot.SlotStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::actions::sdk::v2::conversation::Slot_SlotStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool updated = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.actions.sdk.v2.conversation.Prompt prompt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prompt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.actions.sdk.v2.conversation.Slot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.actions.sdk.v2.conversation.Slot)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Slot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.actions.sdk.v2.conversation.Slot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.actions.sdk.v2.conversation.Slot.SlotMode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  // .google.actions.sdk.v2.conversation.Slot.SlotStatus status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // .google.protobuf.Value value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::value(this), output);
  }

  // bool updated = 4;
  if (this->updated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->updated(), output);
  }

  // .google.actions.sdk.v2.conversation.Prompt prompt = 5;
  if (this->has_prompt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::prompt(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.actions.sdk.v2.conversation.Slot)
}

::google::protobuf::uint8* Slot::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.actions.sdk.v2.conversation.Slot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.actions.sdk.v2.conversation.Slot.SlotMode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  // .google.actions.sdk.v2.conversation.Slot.SlotStatus status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // .google.protobuf.Value value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::value(this), target);
  }

  // bool updated = 4;
  if (this->updated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->updated(), target);
  }

  // .google.actions.sdk.v2.conversation.Prompt prompt = 5;
  if (this->has_prompt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::prompt(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.actions.sdk.v2.conversation.Slot)
  return target;
}

size_t Slot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.actions.sdk.v2.conversation.Slot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Value value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.actions.sdk.v2.conversation.Prompt prompt = 5;
  if (this->has_prompt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prompt_);
  }

  // .google.actions.sdk.v2.conversation.Slot.SlotMode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // .google.actions.sdk.v2.conversation.Slot.SlotStatus status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // bool updated = 4;
  if (this->updated() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Slot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.actions.sdk.v2.conversation.Slot)
  GOOGLE_DCHECK_NE(&from, this);
  const Slot* source =
      ::google::protobuf::DynamicCastToGenerated<Slot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.actions.sdk.v2.conversation.Slot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.actions.sdk.v2.conversation.Slot)
    MergeFrom(*source);
  }
}

void Slot::MergeFrom(const Slot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.actions.sdk.v2.conversation.Slot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::google::protobuf::Value::MergeFrom(from.value());
  }
  if (from.has_prompt()) {
    mutable_prompt()->::google::actions::sdk::v2::conversation::Prompt::MergeFrom(from.prompt());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.updated() != 0) {
    set_updated(from.updated());
  }
}

void Slot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.actions.sdk.v2.conversation.Slot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Slot::CopyFrom(const Slot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.actions.sdk.v2.conversation.Slot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Slot::IsInitialized() const {
  return true;
}

void Slot::Swap(Slot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Slot::InternalSwap(Slot* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(prompt_, other->prompt_);
  swap(mode_, other->mode_);
  swap(status_, other->status_);
  swap(updated_, other->updated_);
}

::google::protobuf::Metadata Slot::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto);
  return ::file_level_metadata_google_2factions_2fsdk_2fv2_2fconversation_2fscene_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace conversation
}  // namespace v2
}  // namespace sdk
}  // namespace actions
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::actions::sdk::v2::conversation::Slot* Arena::CreateMaybeMessage< ::google::actions::sdk::v2::conversation::Slot >(Arena* arena) {
  return Arena::CreateInternal< ::google::actions::sdk::v2::conversation::Slot >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
