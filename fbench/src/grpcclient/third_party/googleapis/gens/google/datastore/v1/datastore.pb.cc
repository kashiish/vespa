// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1/datastore.proto

#include "google/datastore/v1/datastore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fdatastore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fdatastore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransactionOptions_ReadOnly_google_2fdatastore_2fv1_2fdatastore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fdatastore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransactionOptions_ReadWrite_google_2fdatastore_2fv1_2fdatastore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fdatastore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MutationResult_google_2fdatastore_2fv1_2fdatastore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fdatastore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Mutation_google_2fdatastore_2fv1_2fdatastore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fdatastore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TransactionOptions_google_2fdatastore_2fv1_2fdatastore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fentity_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PartitionId_google_2fdatastore_2fv1_2fentity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fentity_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Key_google_2fdatastore_2fv1_2fentity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fentity_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ArrayValue_google_2fdatastore_2fv1_2fentity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fquery_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EntityResult_google_2fdatastore_2fv1_2fquery_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fquery_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QueryResultBatch_google_2fdatastore_2fv1_2fquery_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fquery_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_GqlQuery_google_2fdatastore_2fv1_2fquery_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fv1_2fquery_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Query_google_2fdatastore_2fv1_2fquery_2eproto;
namespace google {
namespace datastore {
namespace v1 {
class LookupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LookupRequest> _instance;
} _LookupRequest_default_instance_;
class LookupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LookupResponse> _instance;
} _LookupResponse_default_instance_;
class RunQueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunQueryRequest> _instance;
  const ::google::datastore::v1::Query* query_;
  const ::google::datastore::v1::GqlQuery* gql_query_;
} _RunQueryRequest_default_instance_;
class RunQueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunQueryResponse> _instance;
} _RunQueryResponse_default_instance_;
class BeginTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeginTransactionRequest> _instance;
} _BeginTransactionRequest_default_instance_;
class BeginTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeginTransactionResponse> _instance;
} _BeginTransactionResponse_default_instance_;
class RollbackRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollbackRequest> _instance;
} _RollbackRequest_default_instance_;
class RollbackResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollbackResponse> _instance;
} _RollbackResponse_default_instance_;
class CommitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitRequest> _instance;
  ::google::protobuf::internal::ArenaStringPtr transaction_;
} _CommitRequest_default_instance_;
class CommitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitResponse> _instance;
} _CommitResponse_default_instance_;
class AllocateIdsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocateIdsRequest> _instance;
} _AllocateIdsRequest_default_instance_;
class AllocateIdsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocateIdsResponse> _instance;
} _AllocateIdsResponse_default_instance_;
class ReserveIdsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReserveIdsRequest> _instance;
} _ReserveIdsRequest_default_instance_;
class ReserveIdsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReserveIdsResponse> _instance;
} _ReserveIdsResponse_default_instance_;
class MutationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation> _instance;
  const ::google::datastore::v1::Entity* insert_;
  const ::google::datastore::v1::Entity* update_;
  const ::google::datastore::v1::Entity* upsert_;
  const ::google::datastore::v1::Key* delete__;
  ::google::protobuf::int64 base_version_;
} _Mutation_default_instance_;
class MutationResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutationResult> _instance;
} _MutationResult_default_instance_;
class ReadOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadOptions> _instance;
  int read_consistency_;
  ::google::protobuf::internal::ArenaStringPtr transaction_;
} _ReadOptions_default_instance_;
class TransactionOptions_ReadWriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions_ReadWrite> _instance;
} _TransactionOptions_ReadWrite_default_instance_;
class TransactionOptions_ReadOnlyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions_ReadOnly> _instance;
} _TransactionOptions_ReadOnly_default_instance_;
class TransactionOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions> _instance;
  const ::google::datastore::v1::TransactionOptions_ReadWrite* read_write_;
  const ::google::datastore::v1::TransactionOptions_ReadOnly* read_only_;
} _TransactionOptions_default_instance_;
}  // namespace v1
}  // namespace datastore
}  // namespace google
static void InitDefaultsLookupRequest_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_LookupRequest_default_instance_;
    new (ptr) ::google::datastore::v1::LookupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::LookupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LookupRequest_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLookupRequest_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_ReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base,
      &scc_info_Key_google_2fdatastore_2fv1_2fentity_2eproto.base,}};

static void InitDefaultsLookupResponse_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_LookupResponse_default_instance_;
    new (ptr) ::google::datastore::v1::LookupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::LookupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LookupResponse_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLookupResponse_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_EntityResult_google_2fdatastore_2fv1_2fquery_2eproto.base,
      &scc_info_Key_google_2fdatastore_2fv1_2fentity_2eproto.base,}};

static void InitDefaultsRunQueryRequest_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_RunQueryRequest_default_instance_;
    new (ptr) ::google::datastore::v1::RunQueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::RunQueryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_RunQueryRequest_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRunQueryRequest_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_PartitionId_google_2fdatastore_2fv1_2fentity_2eproto.base,
      &scc_info_ReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base,
      &scc_info_Query_google_2fdatastore_2fv1_2fquery_2eproto.base,
      &scc_info_GqlQuery_google_2fdatastore_2fv1_2fquery_2eproto.base,}};

static void InitDefaultsRunQueryResponse_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_RunQueryResponse_default_instance_;
    new (ptr) ::google::datastore::v1::RunQueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::RunQueryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RunQueryResponse_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRunQueryResponse_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_QueryResultBatch_google_2fdatastore_2fv1_2fquery_2eproto.base,
      &scc_info_Query_google_2fdatastore_2fv1_2fquery_2eproto.base,}};

static void InitDefaultsBeginTransactionRequest_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_BeginTransactionRequest_default_instance_;
    new (ptr) ::google::datastore::v1::BeginTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::BeginTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BeginTransactionRequest_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBeginTransactionRequest_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_TransactionOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base,}};

static void InitDefaultsBeginTransactionResponse_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_BeginTransactionResponse_default_instance_;
    new (ptr) ::google::datastore::v1::BeginTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::BeginTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeginTransactionResponse_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeginTransactionResponse_google_2fdatastore_2fv1_2fdatastore_2eproto}, {}};

static void InitDefaultsRollbackRequest_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_RollbackRequest_default_instance_;
    new (ptr) ::google::datastore::v1::RollbackRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::RollbackRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RollbackRequest_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRollbackRequest_google_2fdatastore_2fv1_2fdatastore_2eproto}, {}};

static void InitDefaultsRollbackResponse_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_RollbackResponse_default_instance_;
    new (ptr) ::google::datastore::v1::RollbackResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::RollbackResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RollbackResponse_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRollbackResponse_google_2fdatastore_2fv1_2fdatastore_2eproto}, {}};

static void InitDefaultsCommitRequest_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_CommitRequest_default_instance_;
    new (ptr) ::google::datastore::v1::CommitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::CommitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CommitRequest_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCommitRequest_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_Mutation_google_2fdatastore_2fv1_2fdatastore_2eproto.base,}};

static void InitDefaultsCommitResponse_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_CommitResponse_default_instance_;
    new (ptr) ::google::datastore::v1::CommitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::CommitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CommitResponse_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCommitResponse_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_MutationResult_google_2fdatastore_2fv1_2fdatastore_2eproto.base,}};

static void InitDefaultsAllocateIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_AllocateIdsRequest_default_instance_;
    new (ptr) ::google::datastore::v1::AllocateIdsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::AllocateIdsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllocateIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllocateIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_Key_google_2fdatastore_2fv1_2fentity_2eproto.base,}};

static void InitDefaultsAllocateIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_AllocateIdsResponse_default_instance_;
    new (ptr) ::google::datastore::v1::AllocateIdsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::AllocateIdsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllocateIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllocateIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_Key_google_2fdatastore_2fv1_2fentity_2eproto.base,}};

static void InitDefaultsReserveIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_ReserveIdsRequest_default_instance_;
    new (ptr) ::google::datastore::v1::ReserveIdsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::ReserveIdsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReserveIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReserveIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_Key_google_2fdatastore_2fv1_2fentity_2eproto.base,}};

static void InitDefaultsReserveIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_ReserveIdsResponse_default_instance_;
    new (ptr) ::google::datastore::v1::ReserveIdsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::ReserveIdsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReserveIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReserveIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto}, {}};

static void InitDefaultsMutation_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_Mutation_default_instance_;
    new (ptr) ::google::datastore::v1::Mutation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::Mutation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Mutation_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMutation_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_ArrayValue_google_2fdatastore_2fv1_2fentity_2eproto.base,
      &scc_info_Key_google_2fdatastore_2fv1_2fentity_2eproto.base,}};

static void InitDefaultsMutationResult_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_MutationResult_default_instance_;
    new (ptr) ::google::datastore::v1::MutationResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::MutationResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MutationResult_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMutationResult_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_Key_google_2fdatastore_2fv1_2fentity_2eproto.base,}};

static void InitDefaultsReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_ReadOptions_default_instance_;
    new (ptr) ::google::datastore::v1::ReadOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::ReadOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto}, {}};

static void InitDefaultsTransactionOptions_ReadWrite_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_TransactionOptions_ReadWrite_default_instance_;
    new (ptr) ::google::datastore::v1::TransactionOptions_ReadWrite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::TransactionOptions_ReadWrite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransactionOptions_ReadWrite_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransactionOptions_ReadWrite_google_2fdatastore_2fv1_2fdatastore_2eproto}, {}};

static void InitDefaultsTransactionOptions_ReadOnly_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_TransactionOptions_ReadOnly_default_instance_;
    new (ptr) ::google::datastore::v1::TransactionOptions_ReadOnly();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::TransactionOptions_ReadOnly::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransactionOptions_ReadOnly_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransactionOptions_ReadOnly_google_2fdatastore_2fv1_2fdatastore_2eproto}, {}};

static void InitDefaultsTransactionOptions_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::v1::_TransactionOptions_default_instance_;
    new (ptr) ::google::datastore::v1::TransactionOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::TransactionOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TransactionOptions_google_2fdatastore_2fv1_2fdatastore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransactionOptions_google_2fdatastore_2fv1_2fdatastore_2eproto}, {
      &scc_info_TransactionOptions_ReadWrite_google_2fdatastore_2fv1_2fdatastore_2eproto.base,
      &scc_info_TransactionOptions_ReadOnly_google_2fdatastore_2fv1_2fdatastore_2eproto.base,}};

void InitDefaults_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LookupRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LookupResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunQueryRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunQueryResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeginTransactionRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeginTransactionResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RollbackRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RollbackResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommitRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommitResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllocateIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllocateIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReserveIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReserveIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mutation_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MutationResult_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionOptions_ReadWrite_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionOptions_ReadOnly_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fdatastore_2fv1_2fdatastore_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fdatastore_2fv1_2fdatastore_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fdatastore_2fv1_2fdatastore_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::LookupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::LookupRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::LookupRequest, read_options_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::LookupRequest, keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::LookupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::LookupResponse, found_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::LookupResponse, missing_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::LookupResponse, deferred_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, partition_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, read_options_),
  offsetof(::google::datastore::v1::RunQueryRequestDefaultTypeInternal, query_),
  offsetof(::google::datastore::v1::RunQueryRequestDefaultTypeInternal, gql_query_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, query_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryResponse, batch_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RunQueryResponse, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::BeginTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::BeginTransactionRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::BeginTransactionRequest, transaction_options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::BeginTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::BeginTransactionResponse, transaction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RollbackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RollbackRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RollbackRequest, transaction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::RollbackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitRequest, mode_),
  offsetof(::google::datastore::v1::CommitRequestDefaultTypeInternal, transaction_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitRequest, mutations_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitRequest, transaction_selector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitResponse, mutation_results_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::CommitResponse, index_updates_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::AllocateIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::AllocateIdsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::AllocateIdsRequest, keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::AllocateIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::AllocateIdsResponse, keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::ReserveIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::ReserveIdsRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::ReserveIdsRequest, database_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::ReserveIdsRequest, keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::ReserveIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::Mutation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, insert_),
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, update_),
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, upsert_),
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, delete__),
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, base_version_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::Mutation, operation_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::Mutation, conflict_detection_strategy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::MutationResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::MutationResult, key_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::MutationResult, version_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::MutationResult, conflict_detected_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::ReadOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::ReadOptions, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::datastore::v1::ReadOptionsDefaultTypeInternal, read_consistency_),
  offsetof(::google::datastore::v1::ReadOptionsDefaultTypeInternal, transaction_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::ReadOptions, consistency_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::TransactionOptions_ReadWrite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::TransactionOptions_ReadWrite, previous_transaction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::TransactionOptions_ReadOnly, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::TransactionOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::TransactionOptions, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::datastore::v1::TransactionOptionsDefaultTypeInternal, read_write_),
  offsetof(::google::datastore::v1::TransactionOptionsDefaultTypeInternal, read_only_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::v1::TransactionOptions, mode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::datastore::v1::LookupRequest)},
  { 8, -1, sizeof(::google::datastore::v1::LookupResponse)},
  { 16, -1, sizeof(::google::datastore::v1::RunQueryRequest)},
  { 27, -1, sizeof(::google::datastore::v1::RunQueryResponse)},
  { 34, -1, sizeof(::google::datastore::v1::BeginTransactionRequest)},
  { 41, -1, sizeof(::google::datastore::v1::BeginTransactionResponse)},
  { 47, -1, sizeof(::google::datastore::v1::RollbackRequest)},
  { 54, -1, sizeof(::google::datastore::v1::RollbackResponse)},
  { 59, -1, sizeof(::google::datastore::v1::CommitRequest)},
  { 69, -1, sizeof(::google::datastore::v1::CommitResponse)},
  { 76, -1, sizeof(::google::datastore::v1::AllocateIdsRequest)},
  { 83, -1, sizeof(::google::datastore::v1::AllocateIdsResponse)},
  { 89, -1, sizeof(::google::datastore::v1::ReserveIdsRequest)},
  { 97, -1, sizeof(::google::datastore::v1::ReserveIdsResponse)},
  { 102, -1, sizeof(::google::datastore::v1::Mutation)},
  { 114, -1, sizeof(::google::datastore::v1::MutationResult)},
  { 122, -1, sizeof(::google::datastore::v1::ReadOptions)},
  { 130, -1, sizeof(::google::datastore::v1::TransactionOptions_ReadWrite)},
  { 136, -1, sizeof(::google::datastore::v1::TransactionOptions_ReadOnly)},
  { 141, -1, sizeof(::google::datastore::v1::TransactionOptions)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_LookupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_LookupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_RunQueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_RunQueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_BeginTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_BeginTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_RollbackRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_RollbackResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_CommitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_CommitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_AllocateIdsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_AllocateIdsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_ReserveIdsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_ReserveIdsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_Mutation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_MutationResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_ReadOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_TransactionOptions_ReadWrite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_TransactionOptions_ReadOnly_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_TransactionOptions_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto = {
  {}, AddDescriptors_google_2fdatastore_2fv1_2fdatastore_2eproto, "google/datastore/v1/datastore.proto", schemas,
  file_default_instances, TableStruct_google_2fdatastore_2fv1_2fdatastore_2eproto::offsets,
  file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto, 20, file_level_enum_descriptors_google_2fdatastore_2fv1_2fdatastore_2eproto, file_level_service_descriptors_google_2fdatastore_2fv1_2fdatastore_2eproto,
};

const char descriptor_table_protodef_google_2fdatastore_2fv1_2fdatastore_2eproto[] =
  "\n#google/datastore/v1/datastore.proto\022\023g"
  "oogle.datastore.v1\032\034google/api/annotatio"
  "ns.proto\032\027google/api/client.proto\032\037googl"
  "e/api/field_behavior.proto\032 google/datas"
  "tore/v1/entity.proto\032\037google/datastore/v"
  "1/query.proto\"\215\001\n\rLookupRequest\022\027\n\nproje"
  "ct_id\030\010 \001(\tB\003\340A\002\0226\n\014read_options\030\001 \001(\0132 "
  ".google.datastore.v1.ReadOptions\022+\n\004keys"
  "\030\003 \003(\0132\030.google.datastore.v1.KeyB\003\340A\002\"\242\001"
  "\n\016LookupResponse\0220\n\005found\030\001 \003(\0132!.google"
  ".datastore.v1.EntityResult\0222\n\007missing\030\002 "
  "\003(\0132!.google.datastore.v1.EntityResult\022*"
  "\n\010deferred\030\003 \003(\0132\030.google.datastore.v1.K"
  "ey\"\211\002\n\017RunQueryRequest\022\027\n\nproject_id\030\010 \001"
  "(\tB\003\340A\002\0226\n\014partition_id\030\002 \001(\0132 .google.d"
  "atastore.v1.PartitionId\0226\n\014read_options\030"
  "\001 \001(\0132 .google.datastore.v1.ReadOptions\022"
  "+\n\005query\030\003 \001(\0132\032.google.datastore.v1.Que"
  "ryH\000\0222\n\tgql_query\030\007 \001(\0132\035.google.datasto"
  "re.v1.GqlQueryH\000B\014\n\nquery_type\"s\n\020RunQue"
  "ryResponse\0224\n\005batch\030\001 \001(\0132%.google.datas"
  "tore.v1.QueryResultBatch\022)\n\005query\030\002 \001(\0132"
  "\032.google.datastore.v1.Query\"x\n\027BeginTran"
  "sactionRequest\022\027\n\nproject_id\030\010 \001(\tB\003\340A\002\022"
  "D\n\023transaction_options\030\n \001(\0132\'.google.da"
  "tastore.v1.TransactionOptions\"/\n\030BeginTr"
  "ansactionResponse\022\023\n\013transaction\030\001 \001(\014\"D"
  "\n\017RollbackRequest\022\027\n\nproject_id\030\010 \001(\tB\003\340"
  "A\002\022\030\n\013transaction\030\001 \001(\014B\003\340A\002\"\022\n\020Rollback"
  "Response\"\210\002\n\rCommitRequest\022\027\n\nproject_id"
  "\030\010 \001(\tB\003\340A\002\0225\n\004mode\030\005 \001(\0162\'.google.datas"
  "tore.v1.CommitRequest.Mode\022\025\n\013transactio"
  "n\030\001 \001(\014H\000\0220\n\tmutations\030\006 \003(\0132\035.google.da"
  "tastore.v1.Mutation\"F\n\004Mode\022\024\n\020MODE_UNSP"
  "ECIFIED\020\000\022\021\n\rTRANSACTIONAL\020\001\022\025\n\021NON_TRAN"
  "SACTIONAL\020\002B\026\n\024transaction_selector\"f\n\016C"
  "ommitResponse\022=\n\020mutation_results\030\003 \003(\0132"
  "#.google.datastore.v1.MutationResult\022\025\n\r"
  "index_updates\030\004 \001(\005\"Z\n\022AllocateIdsReques"
  "t\022\027\n\nproject_id\030\010 \001(\tB\003\340A\002\022+\n\004keys\030\001 \003(\013"
  "2\030.google.datastore.v1.KeyB\003\340A\002\"=\n\023Alloc"
  "ateIdsResponse\022&\n\004keys\030\001 \003(\0132\030.google.da"
  "tastore.v1.Key\"n\n\021ReserveIdsRequest\022\027\n\np"
  "roject_id\030\010 \001(\tB\003\340A\002\022\023\n\013database_id\030\t \001("
  "\t\022+\n\004keys\030\001 \003(\0132\030.google.datastore.v1.Ke"
  "yB\003\340A\002\"\024\n\022ReserveIdsResponse\"\207\002\n\010Mutatio"
  "n\022-\n\006insert\030\004 \001(\0132\033.google.datastore.v1."
  "EntityH\000\022-\n\006update\030\005 \001(\0132\033.google.datast"
  "ore.v1.EntityH\000\022-\n\006upsert\030\006 \001(\0132\033.google"
  ".datastore.v1.EntityH\000\022*\n\006delete\030\007 \001(\0132\030"
  ".google.datastore.v1.KeyH\000\022\026\n\014base_versi"
  "on\030\010 \001(\003H\001B\013\n\toperationB\035\n\033conflict_dete"
  "ction_strategy\"c\n\016MutationResult\022%\n\003key\030"
  "\003 \001(\0132\030.google.datastore.v1.Key\022\017\n\007versi"
  "on\030\004 \001(\003\022\031\n\021conflict_detected\030\005 \001(\010\"\325\001\n\013"
  "ReadOptions\022L\n\020read_consistency\030\001 \001(\01620."
  "google.datastore.v1.ReadOptions.ReadCons"
  "istencyH\000\022\025\n\013transaction\030\002 \001(\014H\000\"M\n\017Read"
  "Consistency\022 \n\034READ_CONSISTENCY_UNSPECIF"
  "IED\020\000\022\n\n\006STRONG\020\001\022\014\n\010EVENTUAL\020\002B\022\n\020consi"
  "stency_type\"\343\001\n\022TransactionOptions\022G\n\nre"
  "ad_write\030\001 \001(\01321.google.datastore.v1.Tra"
  "nsactionOptions.ReadWriteH\000\022E\n\tread_only"
  "\030\002 \001(\01320.google.datastore.v1.Transaction"
  "Options.ReadOnlyH\000\032)\n\tReadWrite\022\034\n\024previ"
  "ous_transaction\030\001 \001(\014\032\n\n\010ReadOnlyB\006\n\004mod"
  "e2\223\n\n\tDatastore\022\235\001\n\006Lookup\022\".google.data"
  "store.v1.LookupRequest\032#.google.datastor"
  "e.v1.LookupResponse\"J\202\323\344\223\002%\" /v1/project"
  "s/{project_id}:lookup:\001*\332A\034project_id,re"
  "ad_options,keys\022\206\001\n\010RunQuery\022$.google.da"
  "tastore.v1.RunQueryRequest\032%.google.data"
  "store.v1.RunQueryResponse\"-\202\323\344\223\002\'\"\"/v1/p"
  "rojects/{project_id}:runQuery:\001*\022\263\001\n\020Beg"
  "inTransaction\022,.google.datastore.v1.Begi"
  "nTransactionRequest\032-.google.datastore.v"
  "1.BeginTransactionResponse\"B\202\323\344\223\002/\"*/v1/"
  "projects/{project_id}:beginTransaction:\001"
  "*\332A\nproject_id\022\302\001\n\006Commit\022\".google.datas"
  "tore.v1.CommitRequest\032#.google.datastore"
  ".v1.CommitResponse\"o\202\323\344\223\002%\" /v1/projects"
  "/{project_id}:commit:\001*\332A%project_id,mod"
  "e,transaction,mutations\332A\031project_id,mod"
  "e,mutations\022\237\001\n\010Rollback\022$.google.datast"
  "ore.v1.RollbackRequest\032%.google.datastor"
  "e.v1.RollbackResponse\"F\202\323\344\223\002\'\"\"/v1/proje"
  "cts/{project_id}:rollback:\001*\332A\026project_i"
  "d,transaction\022\244\001\n\013AllocateIds\022\'.google.d"
  "atastore.v1.AllocateIdsRequest\032(.google."
  "datastore.v1.AllocateIdsResponse\"B\202\323\344\223\002*"
  "\"%/v1/projects/{project_id}:allocateIds:"
  "\001*\332A\017project_id,keys\022\240\001\n\nReserveIds\022&.go"
  "ogle.datastore.v1.ReserveIdsRequest\032\'.go"
  "ogle.datastore.v1.ReserveIdsResponse\"A\202\323"
  "\344\223\002)\"$/v1/projects/{project_id}:reserveI"
  "ds:\001*\332A\017project_id,keys\032v\312A\030datastore.go"
  "ogleapis.com\322AXhttps://www.googleapis.co"
  "m/auth/cloud-platform,https://www.google"
  "apis.com/auth/datastoreB\300\001\n\027com.google.d"
  "atastore.v1B\016DatastoreProtoP\001Z<google.go"
  "lang.org/genproto/googleapis/datastore/v"
  "1;datastore\252\002\031Google.Cloud.Datastore.V1\312"
  "\002\031Google\\Cloud\\Datastore\\V1\352\002\034Google::Cl"
  "oud::Datastore::V1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fdatastore_2fv1_2fdatastore_2eproto = {
  false, InitDefaults_google_2fdatastore_2fv1_2fdatastore_2eproto, 
  descriptor_table_protodef_google_2fdatastore_2fv1_2fdatastore_2eproto,
  "google/datastore/v1/datastore.proto", &assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto, 4146,
};

void AddDescriptors_google_2fdatastore_2fv1_2fdatastore_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_google_2fapi_2fclient_2eproto,
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fdatastore_2fv1_2fentity_2eproto,
    ::AddDescriptors_google_2fdatastore_2fv1_2fquery_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fdatastore_2fv1_2fdatastore_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fdatastore_2fv1_2fdatastore_2eproto = []() { AddDescriptors_google_2fdatastore_2fv1_2fdatastore_2eproto(); return true; }();
namespace google {
namespace datastore {
namespace v1 {
const ::google::protobuf::EnumDescriptor* CommitRequest_Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return file_level_enum_descriptors_google_2fdatastore_2fv1_2fdatastore_2eproto[0];
}
bool CommitRequest_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CommitRequest_Mode CommitRequest::MODE_UNSPECIFIED;
const CommitRequest_Mode CommitRequest::TRANSACTIONAL;
const CommitRequest_Mode CommitRequest::NON_TRANSACTIONAL;
const CommitRequest_Mode CommitRequest::Mode_MIN;
const CommitRequest_Mode CommitRequest::Mode_MAX;
const int CommitRequest::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ReadOptions_ReadConsistency_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return file_level_enum_descriptors_google_2fdatastore_2fv1_2fdatastore_2eproto[1];
}
bool ReadOptions_ReadConsistency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReadOptions_ReadConsistency ReadOptions::READ_CONSISTENCY_UNSPECIFIED;
const ReadOptions_ReadConsistency ReadOptions::STRONG;
const ReadOptions_ReadConsistency ReadOptions::EVENTUAL;
const ReadOptions_ReadConsistency ReadOptions::ReadConsistency_MIN;
const ReadOptions_ReadConsistency ReadOptions::ReadConsistency_MAX;
const int ReadOptions::ReadConsistency_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LookupRequest::InitAsDefaultInstance() {
  ::google::datastore::v1::_LookupRequest_default_instance_._instance.get_mutable()->read_options_ = const_cast< ::google::datastore::v1::ReadOptions*>(
      ::google::datastore::v1::ReadOptions::internal_default_instance());
}
class LookupRequest::HasBitSetters {
 public:
  static const ::google::datastore::v1::ReadOptions& read_options(const LookupRequest* msg);
};

const ::google::datastore::v1::ReadOptions&
LookupRequest::HasBitSetters::read_options(const LookupRequest* msg) {
  return *msg->read_options_;
}
void LookupRequest::clear_keys() {
  keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupRequest::kProjectIdFieldNumber;
const int LookupRequest::kReadOptionsFieldNumber;
const int LookupRequest::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupRequest::LookupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.LookupRequest)
}
LookupRequest::LookupRequest(const LookupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_read_options()) {
    read_options_ = new ::google::datastore::v1::ReadOptions(*from.read_options_);
  } else {
    read_options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.LookupRequest)
}

void LookupRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LookupRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  read_options_ = nullptr;
}

LookupRequest::~LookupRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.LookupRequest)
  SharedDtor();
}

void LookupRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete read_options_;
}

void LookupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LookupRequest& LookupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LookupRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void LookupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.LookupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && read_options_ != nullptr) {
    delete read_options_;
  }
  read_options_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LookupRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LookupRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.v1.ReadOptions read_options = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::ReadOptions::_InternalParse;
        object = msg->mutable_read_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .google.datastore.v1.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::Key::_InternalParse;
          object = msg->add_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.v1.LookupRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LookupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.LookupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.ReadOptions read_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.LookupRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.LookupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.LookupRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LookupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.LookupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::read_options(this), output);
  }

  // repeated .google.datastore.v1.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->keys(static_cast<int>(i)),
      output);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.LookupRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.LookupRequest)
}

::google::protobuf::uint8* LookupRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.LookupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::read_options(this), target);
  }

  // repeated .google.datastore.v1.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->keys(static_cast<int>(i)), target);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.LookupRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.LookupRequest)
  return target;
}

size_t LookupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.LookupRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *read_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LookupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.LookupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LookupRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LookupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.LookupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.LookupRequest)
    MergeFrom(*source);
  }
}

void LookupRequest::MergeFrom(const LookupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.LookupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_read_options()) {
    mutable_read_options()->::google::datastore::v1::ReadOptions::MergeFrom(from.read_options());
  }
}

void LookupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.LookupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupRequest::CopyFrom(const LookupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.LookupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupRequest::IsInitialized() const {
  return true;
}

void LookupRequest::Swap(LookupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupRequest::InternalSwap(LookupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(read_options_, other->read_options_);
}

::google::protobuf::Metadata LookupRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LookupResponse::InitAsDefaultInstance() {
}
class LookupResponse::HasBitSetters {
 public:
};

void LookupResponse::clear_found() {
  found_.Clear();
}
void LookupResponse::clear_missing() {
  missing_.Clear();
}
void LookupResponse::clear_deferred() {
  deferred_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupResponse::kFoundFieldNumber;
const int LookupResponse::kMissingFieldNumber;
const int LookupResponse::kDeferredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupResponse::LookupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.LookupResponse)
}
LookupResponse::LookupResponse(const LookupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      found_(from.found_),
      missing_(from.missing_),
      deferred_(from.deferred_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.LookupResponse)
}

void LookupResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LookupResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
}

LookupResponse::~LookupResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.LookupResponse)
  SharedDtor();
}

void LookupResponse::SharedDtor() {
}

void LookupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LookupResponse& LookupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LookupResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void LookupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.LookupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  found_.Clear();
  missing_.Clear();
  deferred_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LookupResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LookupResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.datastore.v1.EntityResult found = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::EntityResult::_InternalParse;
          object = msg->add_found();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .google.datastore.v1.EntityResult missing = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::EntityResult::_InternalParse;
          object = msg->add_missing();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .google.datastore.v1.Key deferred = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::Key::_InternalParse;
          object = msg->add_deferred();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LookupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.LookupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.EntityResult found = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_found()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.EntityResult missing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.Key deferred = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_deferred()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.LookupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.LookupResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LookupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.LookupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.EntityResult found = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->found_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->found(static_cast<int>(i)),
      output);
  }

  // repeated .google.datastore.v1.EntityResult missing = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->missing_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->missing(static_cast<int>(i)),
      output);
  }

  // repeated .google.datastore.v1.Key deferred = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deferred_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->deferred(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.LookupResponse)
}

::google::protobuf::uint8* LookupResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.LookupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.EntityResult found = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->found_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->found(static_cast<int>(i)), target);
  }

  // repeated .google.datastore.v1.EntityResult missing = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->missing_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->missing(static_cast<int>(i)), target);
  }

  // repeated .google.datastore.v1.Key deferred = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deferred_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->deferred(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.LookupResponse)
  return target;
}

size_t LookupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.LookupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.datastore.v1.EntityResult found = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->found_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->found(static_cast<int>(i)));
    }
  }

  // repeated .google.datastore.v1.EntityResult missing = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->missing_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->missing(static_cast<int>(i)));
    }
  }

  // repeated .google.datastore.v1.Key deferred = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->deferred_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deferred(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LookupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.LookupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LookupResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LookupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.LookupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.LookupResponse)
    MergeFrom(*source);
  }
}

void LookupResponse::MergeFrom(const LookupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.LookupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  found_.MergeFrom(from.found_);
  missing_.MergeFrom(from.missing_);
  deferred_.MergeFrom(from.deferred_);
}

void LookupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.LookupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupResponse::CopyFrom(const LookupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.LookupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupResponse::IsInitialized() const {
  return true;
}

void LookupResponse::Swap(LookupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupResponse::InternalSwap(LookupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&found_)->InternalSwap(CastToBase(&other->found_));
  CastToBase(&missing_)->InternalSwap(CastToBase(&other->missing_));
  CastToBase(&deferred_)->InternalSwap(CastToBase(&other->deferred_));
}

::google::protobuf::Metadata LookupResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RunQueryRequest::InitAsDefaultInstance() {
  ::google::datastore::v1::_RunQueryRequest_default_instance_._instance.get_mutable()->partition_id_ = const_cast< ::google::datastore::v1::PartitionId*>(
      ::google::datastore::v1::PartitionId::internal_default_instance());
  ::google::datastore::v1::_RunQueryRequest_default_instance_._instance.get_mutable()->read_options_ = const_cast< ::google::datastore::v1::ReadOptions*>(
      ::google::datastore::v1::ReadOptions::internal_default_instance());
  ::google::datastore::v1::_RunQueryRequest_default_instance_.query_ = const_cast< ::google::datastore::v1::Query*>(
      ::google::datastore::v1::Query::internal_default_instance());
  ::google::datastore::v1::_RunQueryRequest_default_instance_.gql_query_ = const_cast< ::google::datastore::v1::GqlQuery*>(
      ::google::datastore::v1::GqlQuery::internal_default_instance());
}
class RunQueryRequest::HasBitSetters {
 public:
  static const ::google::datastore::v1::PartitionId& partition_id(const RunQueryRequest* msg);
  static const ::google::datastore::v1::ReadOptions& read_options(const RunQueryRequest* msg);
  static const ::google::datastore::v1::Query& query(const RunQueryRequest* msg);
  static const ::google::datastore::v1::GqlQuery& gql_query(const RunQueryRequest* msg);
};

const ::google::datastore::v1::PartitionId&
RunQueryRequest::HasBitSetters::partition_id(const RunQueryRequest* msg) {
  return *msg->partition_id_;
}
const ::google::datastore::v1::ReadOptions&
RunQueryRequest::HasBitSetters::read_options(const RunQueryRequest* msg) {
  return *msg->read_options_;
}
const ::google::datastore::v1::Query&
RunQueryRequest::HasBitSetters::query(const RunQueryRequest* msg) {
  return *msg->query_type_.query_;
}
const ::google::datastore::v1::GqlQuery&
RunQueryRequest::HasBitSetters::gql_query(const RunQueryRequest* msg) {
  return *msg->query_type_.gql_query_;
}
void RunQueryRequest::clear_partition_id() {
  if (GetArenaNoVirtual() == nullptr && partition_id_ != nullptr) {
    delete partition_id_;
  }
  partition_id_ = nullptr;
}
void RunQueryRequest::set_allocated_query(::google::datastore::v1::Query* query) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_query_type();
  if (query) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      query = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query, submessage_arena);
    }
    set_has_query();
    query_type_.query_ = query;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.RunQueryRequest.query)
}
void RunQueryRequest::clear_query() {
  if (has_query()) {
    delete query_type_.query_;
    clear_has_query_type();
  }
}
void RunQueryRequest::set_allocated_gql_query(::google::datastore::v1::GqlQuery* gql_query) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_query_type();
  if (gql_query) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      gql_query = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gql_query, submessage_arena);
    }
    set_has_gql_query();
    query_type_.gql_query_ = gql_query;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.RunQueryRequest.gql_query)
}
void RunQueryRequest::clear_gql_query() {
  if (has_gql_query()) {
    delete query_type_.gql_query_;
    clear_has_query_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunQueryRequest::kProjectIdFieldNumber;
const int RunQueryRequest::kPartitionIdFieldNumber;
const int RunQueryRequest::kReadOptionsFieldNumber;
const int RunQueryRequest::kQueryFieldNumber;
const int RunQueryRequest::kGqlQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunQueryRequest::RunQueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.RunQueryRequest)
}
RunQueryRequest::RunQueryRequest(const RunQueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_read_options()) {
    read_options_ = new ::google::datastore::v1::ReadOptions(*from.read_options_);
  } else {
    read_options_ = nullptr;
  }
  if (from.has_partition_id()) {
    partition_id_ = new ::google::datastore::v1::PartitionId(*from.partition_id_);
  } else {
    partition_id_ = nullptr;
  }
  clear_has_query_type();
  switch (from.query_type_case()) {
    case kQuery: {
      mutable_query()->::google::datastore::v1::Query::MergeFrom(from.query());
      break;
    }
    case kGqlQuery: {
      mutable_gql_query()->::google::datastore::v1::GqlQuery::MergeFrom(from.gql_query());
      break;
    }
    case QUERY_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.RunQueryRequest)
}

void RunQueryRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RunQueryRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partition_id_) -
      reinterpret_cast<char*>(&read_options_)) + sizeof(partition_id_));
  clear_has_query_type();
}

RunQueryRequest::~RunQueryRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.RunQueryRequest)
  SharedDtor();
}

void RunQueryRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete read_options_;
  if (this != internal_default_instance()) delete partition_id_;
  if (has_query_type()) {
    clear_query_type();
  }
}

void RunQueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RunQueryRequest& RunQueryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RunQueryRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void RunQueryRequest::clear_query_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.RunQueryRequest)
  switch (query_type_case()) {
    case kQuery: {
      delete query_type_.query_;
      break;
    }
    case kGqlQuery: {
      delete query_type_.gql_query_;
      break;
    }
    case QUERY_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = QUERY_TYPE_NOT_SET;
}


void RunQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.RunQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && read_options_ != nullptr) {
    delete read_options_;
  }
  read_options_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && partition_id_ != nullptr) {
    delete partition_id_;
  }
  partition_id_ = nullptr;
  clear_query_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RunQueryRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RunQueryRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.v1.ReadOptions read_options = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::ReadOptions::_InternalParse;
        object = msg->mutable_read_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.v1.PartitionId partition_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::PartitionId::_InternalParse;
        object = msg->mutable_partition_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.v1.Query query = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::Query::_InternalParse;
        object = msg->mutable_query();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.v1.GqlQuery gql_query = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::GqlQuery::_InternalParse;
        object = msg->mutable_gql_query();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.v1.RunQueryRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RunQueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.RunQueryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.ReadOptions read_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.PartitionId partition_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Query query = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.GqlQuery gql_query = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gql_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.RunQueryRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.RunQueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.RunQueryRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RunQueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.RunQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::read_options(this), output);
  }

  // .google.datastore.v1.PartitionId partition_id = 2;
  if (this->has_partition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::partition_id(this), output);
  }

  // .google.datastore.v1.Query query = 3;
  if (has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::query(this), output);
  }

  // .google.datastore.v1.GqlQuery gql_query = 7;
  if (has_gql_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::gql_query(this), output);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.RunQueryRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.RunQueryRequest)
}

::google::protobuf::uint8* RunQueryRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.RunQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::read_options(this), target);
  }

  // .google.datastore.v1.PartitionId partition_id = 2;
  if (this->has_partition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::partition_id(this), target);
  }

  // .google.datastore.v1.Query query = 3;
  if (has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::query(this), target);
  }

  // .google.datastore.v1.GqlQuery gql_query = 7;
  if (has_gql_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::gql_query(this), target);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.RunQueryRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.RunQueryRequest)
  return target;
}

size_t RunQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.RunQueryRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *read_options_);
  }

  // .google.datastore.v1.PartitionId partition_id = 2;
  if (this->has_partition_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *partition_id_);
  }

  switch (query_type_case()) {
    // .google.datastore.v1.Query query = 3;
    case kQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *query_type_.query_);
      break;
    }
    // .google.datastore.v1.GqlQuery gql_query = 7;
    case kGqlQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *query_type_.gql_query_);
      break;
    }
    case QUERY_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunQueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.RunQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunQueryRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RunQueryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.RunQueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.RunQueryRequest)
    MergeFrom(*source);
  }
}

void RunQueryRequest::MergeFrom(const RunQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.RunQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_read_options()) {
    mutable_read_options()->::google::datastore::v1::ReadOptions::MergeFrom(from.read_options());
  }
  if (from.has_partition_id()) {
    mutable_partition_id()->::google::datastore::v1::PartitionId::MergeFrom(from.partition_id());
  }
  switch (from.query_type_case()) {
    case kQuery: {
      mutable_query()->::google::datastore::v1::Query::MergeFrom(from.query());
      break;
    }
    case kGqlQuery: {
      mutable_gql_query()->::google::datastore::v1::GqlQuery::MergeFrom(from.gql_query());
      break;
    }
    case QUERY_TYPE_NOT_SET: {
      break;
    }
  }
}

void RunQueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.RunQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunQueryRequest::CopyFrom(const RunQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.RunQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunQueryRequest::IsInitialized() const {
  return true;
}

void RunQueryRequest::Swap(RunQueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunQueryRequest::InternalSwap(RunQueryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(read_options_, other->read_options_);
  swap(partition_id_, other->partition_id_);
  swap(query_type_, other->query_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata RunQueryRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RunQueryResponse::InitAsDefaultInstance() {
  ::google::datastore::v1::_RunQueryResponse_default_instance_._instance.get_mutable()->batch_ = const_cast< ::google::datastore::v1::QueryResultBatch*>(
      ::google::datastore::v1::QueryResultBatch::internal_default_instance());
  ::google::datastore::v1::_RunQueryResponse_default_instance_._instance.get_mutable()->query_ = const_cast< ::google::datastore::v1::Query*>(
      ::google::datastore::v1::Query::internal_default_instance());
}
class RunQueryResponse::HasBitSetters {
 public:
  static const ::google::datastore::v1::QueryResultBatch& batch(const RunQueryResponse* msg);
  static const ::google::datastore::v1::Query& query(const RunQueryResponse* msg);
};

const ::google::datastore::v1::QueryResultBatch&
RunQueryResponse::HasBitSetters::batch(const RunQueryResponse* msg) {
  return *msg->batch_;
}
const ::google::datastore::v1::Query&
RunQueryResponse::HasBitSetters::query(const RunQueryResponse* msg) {
  return *msg->query_;
}
void RunQueryResponse::clear_batch() {
  if (GetArenaNoVirtual() == nullptr && batch_ != nullptr) {
    delete batch_;
  }
  batch_ = nullptr;
}
void RunQueryResponse::clear_query() {
  if (GetArenaNoVirtual() == nullptr && query_ != nullptr) {
    delete query_;
  }
  query_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunQueryResponse::kBatchFieldNumber;
const int RunQueryResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunQueryResponse::RunQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.RunQueryResponse)
}
RunQueryResponse::RunQueryResponse(const RunQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_batch()) {
    batch_ = new ::google::datastore::v1::QueryResultBatch(*from.batch_);
  } else {
    batch_ = nullptr;
  }
  if (from.has_query()) {
    query_ = new ::google::datastore::v1::Query(*from.query_);
  } else {
    query_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.RunQueryResponse)
}

void RunQueryResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RunQueryResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::memset(&batch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_) -
      reinterpret_cast<char*>(&batch_)) + sizeof(query_));
}

RunQueryResponse::~RunQueryResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.RunQueryResponse)
  SharedDtor();
}

void RunQueryResponse::SharedDtor() {
  if (this != internal_default_instance()) delete batch_;
  if (this != internal_default_instance()) delete query_;
}

void RunQueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RunQueryResponse& RunQueryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RunQueryResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void RunQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.RunQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && batch_ != nullptr) {
    delete batch_;
  }
  batch_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && query_ != nullptr) {
    delete query_;
  }
  query_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RunQueryResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RunQueryResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.v1.QueryResultBatch batch = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::QueryResultBatch::_InternalParse;
        object = msg->mutable_batch();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.v1.Query query = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::Query::_InternalParse;
        object = msg->mutable_query();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RunQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.RunQueryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.QueryResultBatch batch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_batch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Query query = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.RunQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.RunQueryResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RunQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.RunQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.QueryResultBatch batch = 1;
  if (this->has_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::batch(this), output);
  }

  // .google.datastore.v1.Query query = 2;
  if (this->has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::query(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.RunQueryResponse)
}

::google::protobuf::uint8* RunQueryResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.RunQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.QueryResultBatch batch = 1;
  if (this->has_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::batch(this), target);
  }

  // .google.datastore.v1.Query query = 2;
  if (this->has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::query(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.RunQueryResponse)
  return target;
}

size_t RunQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.RunQueryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.datastore.v1.QueryResultBatch batch = 1;
  if (this->has_batch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *batch_);
  }

  // .google.datastore.v1.Query query = 2;
  if (this->has_query()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *query_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.RunQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunQueryResponse* source =
      ::google::protobuf::DynamicCastToGenerated<RunQueryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.RunQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.RunQueryResponse)
    MergeFrom(*source);
  }
}

void RunQueryResponse::MergeFrom(const RunQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.RunQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_batch()) {
    mutable_batch()->::google::datastore::v1::QueryResultBatch::MergeFrom(from.batch());
  }
  if (from.has_query()) {
    mutable_query()->::google::datastore::v1::Query::MergeFrom(from.query());
  }
}

void RunQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.RunQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunQueryResponse::CopyFrom(const RunQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.RunQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunQueryResponse::IsInitialized() const {
  return true;
}

void RunQueryResponse::Swap(RunQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunQueryResponse::InternalSwap(RunQueryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(batch_, other->batch_);
  swap(query_, other->query_);
}

::google::protobuf::Metadata RunQueryResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BeginTransactionRequest::InitAsDefaultInstance() {
  ::google::datastore::v1::_BeginTransactionRequest_default_instance_._instance.get_mutable()->transaction_options_ = const_cast< ::google::datastore::v1::TransactionOptions*>(
      ::google::datastore::v1::TransactionOptions::internal_default_instance());
}
class BeginTransactionRequest::HasBitSetters {
 public:
  static const ::google::datastore::v1::TransactionOptions& transaction_options(const BeginTransactionRequest* msg);
};

const ::google::datastore::v1::TransactionOptions&
BeginTransactionRequest::HasBitSetters::transaction_options(const BeginTransactionRequest* msg) {
  return *msg->transaction_options_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeginTransactionRequest::kProjectIdFieldNumber;
const int BeginTransactionRequest::kTransactionOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginTransactionRequest::BeginTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.BeginTransactionRequest)
}
BeginTransactionRequest::BeginTransactionRequest(const BeginTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_transaction_options()) {
    transaction_options_ = new ::google::datastore::v1::TransactionOptions(*from.transaction_options_);
  } else {
    transaction_options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.BeginTransactionRequest)
}

void BeginTransactionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BeginTransactionRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_options_ = nullptr;
}

BeginTransactionRequest::~BeginTransactionRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.BeginTransactionRequest)
  SharedDtor();
}

void BeginTransactionRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transaction_options_;
}

void BeginTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BeginTransactionRequest& BeginTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BeginTransactionRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void BeginTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.BeginTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && transaction_options_ != nullptr) {
    delete transaction_options_;
  }
  transaction_options_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BeginTransactionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BeginTransactionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.v1.BeginTransactionRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.datastore.v1.TransactionOptions transaction_options = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::TransactionOptions::_InternalParse;
        object = msg->mutable_transaction_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BeginTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.BeginTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.BeginTransactionRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.TransactionOptions transaction_options = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.BeginTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.BeginTransactionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BeginTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.BeginTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.BeginTransactionRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  // .google.datastore.v1.TransactionOptions transaction_options = 10;
  if (this->has_transaction_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::transaction_options(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.BeginTransactionRequest)
}

::google::protobuf::uint8* BeginTransactionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.BeginTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.BeginTransactionRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  // .google.datastore.v1.TransactionOptions transaction_options = 10;
  if (this->has_transaction_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::transaction_options(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.BeginTransactionRequest)
  return target;
}

size_t BeginTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.BeginTransactionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.v1.TransactionOptions transaction_options = 10;
  if (this->has_transaction_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transaction_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeginTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.BeginTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BeginTransactionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<BeginTransactionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.BeginTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.BeginTransactionRequest)
    MergeFrom(*source);
  }
}

void BeginTransactionRequest::MergeFrom(const BeginTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.BeginTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_transaction_options()) {
    mutable_transaction_options()->::google::datastore::v1::TransactionOptions::MergeFrom(from.transaction_options());
  }
}

void BeginTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.BeginTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginTransactionRequest::CopyFrom(const BeginTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.BeginTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginTransactionRequest::IsInitialized() const {
  return true;
}

void BeginTransactionRequest::Swap(BeginTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginTransactionRequest::InternalSwap(BeginTransactionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transaction_options_, other->transaction_options_);
}

::google::protobuf::Metadata BeginTransactionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BeginTransactionResponse::InitAsDefaultInstance() {
}
class BeginTransactionResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeginTransactionResponse::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginTransactionResponse::BeginTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.BeginTransactionResponse)
}
BeginTransactionResponse::BeginTransactionResponse(const BeginTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transaction().size() > 0) {
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.BeginTransactionResponse)
}

void BeginTransactionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BeginTransactionResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BeginTransactionResponse::~BeginTransactionResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.BeginTransactionResponse)
  SharedDtor();
}

void BeginTransactionResponse::SharedDtor() {
  transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeginTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BeginTransactionResponse& BeginTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BeginTransactionResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void BeginTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.BeginTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BeginTransactionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BeginTransactionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes transaction = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_transaction();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BeginTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.BeginTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.BeginTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.BeginTransactionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BeginTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.BeginTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->transaction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.BeginTransactionResponse)
}

::google::protobuf::uint8* BeginTransactionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.BeginTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->transaction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.BeginTransactionResponse)
  return target;
}

size_t BeginTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.BeginTransactionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->transaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeginTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.BeginTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BeginTransactionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<BeginTransactionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.BeginTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.BeginTransactionResponse)
    MergeFrom(*source);
  }
}

void BeginTransactionResponse::MergeFrom(const BeginTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.BeginTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction().size() > 0) {

    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
}

void BeginTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.BeginTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginTransactionResponse::CopyFrom(const BeginTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.BeginTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginTransactionResponse::IsInitialized() const {
  return true;
}

void BeginTransactionResponse::Swap(BeginTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginTransactionResponse::InternalSwap(BeginTransactionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  transaction_.Swap(&other->transaction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata BeginTransactionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RollbackRequest::InitAsDefaultInstance() {
}
class RollbackRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollbackRequest::kProjectIdFieldNumber;
const int RollbackRequest::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackRequest::RollbackRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.RollbackRequest)
}
RollbackRequest::RollbackRequest(const RollbackRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transaction().size() > 0) {
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.RollbackRequest)
}

void RollbackRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RollbackRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RollbackRequest::~RollbackRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.RollbackRequest)
  SharedDtor();
}

void RollbackRequest::SharedDtor() {
  transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RollbackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RollbackRequest& RollbackRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RollbackRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void RollbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.RollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RollbackRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RollbackRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes transaction = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_transaction();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.v1.RollbackRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RollbackRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.RollbackRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes transaction = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.RollbackRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.RollbackRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.RollbackRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RollbackRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.RollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->transaction(), output);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.RollbackRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.RollbackRequest)
}

::google::protobuf::uint8* RollbackRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.RollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->transaction().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->transaction(), target);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.RollbackRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.RollbackRequest)
  return target;
}

size_t RollbackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.RollbackRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes transaction = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->transaction());
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RollbackRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.RollbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RollbackRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RollbackRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.RollbackRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.RollbackRequest)
    MergeFrom(*source);
  }
}

void RollbackRequest::MergeFrom(const RollbackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.RollbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction().size() > 0) {

    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
}

void RollbackRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.RollbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackRequest::CopyFrom(const RollbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.RollbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackRequest::IsInitialized() const {
  return true;
}

void RollbackRequest::Swap(RollbackRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackRequest::InternalSwap(RollbackRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  transaction_.Swap(&other->transaction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RollbackRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RollbackResponse::InitAsDefaultInstance() {
}
class RollbackResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackResponse::RollbackResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.RollbackResponse)
}
RollbackResponse::RollbackResponse(const RollbackResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.RollbackResponse)
}

void RollbackResponse::SharedCtor() {
}

RollbackResponse::~RollbackResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.RollbackResponse)
  SharedDtor();
}

void RollbackResponse::SharedDtor() {
}

void RollbackResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RollbackResponse& RollbackResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RollbackResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void RollbackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.RollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RollbackResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RollbackResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RollbackResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.RollbackResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.RollbackResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.RollbackResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RollbackResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.RollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.RollbackResponse)
}

::google::protobuf::uint8* RollbackResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.RollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.RollbackResponse)
  return target;
}

size_t RollbackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.RollbackResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RollbackResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.RollbackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RollbackResponse* source =
      ::google::protobuf::DynamicCastToGenerated<RollbackResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.RollbackResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.RollbackResponse)
    MergeFrom(*source);
  }
}

void RollbackResponse::MergeFrom(const RollbackResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.RollbackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RollbackResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.RollbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackResponse::CopyFrom(const RollbackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.RollbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackResponse::IsInitialized() const {
  return true;
}

void RollbackResponse::Swap(RollbackResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackResponse::InternalSwap(RollbackResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RollbackResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CommitRequest::InitAsDefaultInstance() {
  ::google::datastore::v1::_CommitRequest_default_instance_.transaction_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class CommitRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitRequest::kProjectIdFieldNumber;
const int CommitRequest::kModeFieldNumber;
const int CommitRequest::kTransactionFieldNumber;
const int CommitRequest::kMutationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitRequest::CommitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.CommitRequest)
}
CommitRequest::CommitRequest(const CommitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      mutations_(from.mutations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  mode_ = from.mode_;
  clear_has_transaction_selector();
  switch (from.transaction_selector_case()) {
    case kTransaction: {
      set_transaction(from.transaction());
      break;
    }
    case TRANSACTION_SELECTOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.CommitRequest)
}

void CommitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CommitRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  clear_has_transaction_selector();
}

CommitRequest::~CommitRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.CommitRequest)
  SharedDtor();
}

void CommitRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_transaction_selector()) {
    clear_transaction_selector();
  }
}

void CommitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommitRequest& CommitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CommitRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void CommitRequest::clear_transaction_selector() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.CommitRequest)
  switch (transaction_selector_case()) {
    case kTransaction: {
      transaction_selector_.transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case TRANSACTION_SELECTOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TRANSACTION_SELECTOR_NOT_SET;
}


void CommitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  clear_transaction_selector();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CommitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CommitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes transaction = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_transaction();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.datastore.v1.CommitRequest.Mode mode = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_mode(static_cast<::google::datastore::v1::CommitRequest_Mode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.datastore.v1.Mutation mutations = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::Mutation::_InternalParse;
          object = msg->add_mutations();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.v1.CommitRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.CommitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.CommitRequest.Mode mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::google::datastore::v1::CommitRequest_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.Mutation mutations = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.CommitRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.CommitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.CommitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CommitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->transaction(), output);
  }

  // .google.datastore.v1.CommitRequest.Mode mode = 5;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->mode(), output);
  }

  // repeated .google.datastore.v1.Mutation mutations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->mutations(static_cast<int>(i)),
      output);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.CommitRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.CommitRequest)
}

::google::protobuf::uint8* CommitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (has_transaction()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->transaction(), target);
  }

  // .google.datastore.v1.CommitRequest.Mode mode = 5;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->mode(), target);
  }

  // repeated .google.datastore.v1.Mutation mutations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->mutations(static_cast<int>(i)), target);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.CommitRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.CommitRequest)
  return target;
}

size_t CommitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.CommitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Mutation mutations = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutations(static_cast<int>(i)));
    }
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.v1.CommitRequest.Mode mode = 5;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  switch (transaction_selector_case()) {
    // bytes transaction = 1;
    case kTransaction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->transaction());
      break;
    }
    case TRANSACTION_SELECTOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.CommitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CommitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.CommitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.CommitRequest)
    MergeFrom(*source);
  }
}

void CommitRequest::MergeFrom(const CommitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.CommitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  switch (from.transaction_selector_case()) {
    case kTransaction: {
      set_transaction(from.transaction());
      break;
    }
    case TRANSACTION_SELECTOR_NOT_SET: {
      break;
    }
  }
}

void CommitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.CommitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitRequest::CopyFrom(const CommitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.CommitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitRequest::IsInitialized() const {
  return true;
}

void CommitRequest::Swap(CommitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitRequest::InternalSwap(CommitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&mutations_)->InternalSwap(CastToBase(&other->mutations_));
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
  swap(transaction_selector_, other->transaction_selector_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata CommitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CommitResponse::InitAsDefaultInstance() {
}
class CommitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitResponse::kMutationResultsFieldNumber;
const int CommitResponse::kIndexUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitResponse::CommitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.CommitResponse)
}
CommitResponse::CommitResponse(const CommitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      mutation_results_(from.mutation_results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_updates_ = from.index_updates_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.CommitResponse)
}

void CommitResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CommitResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  index_updates_ = 0;
}

CommitResponse::~CommitResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.CommitResponse)
  SharedDtor();
}

void CommitResponse::SharedDtor() {
}

void CommitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommitResponse& CommitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CommitResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void CommitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutation_results_.Clear();
  index_updates_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CommitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CommitResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.datastore.v1.MutationResult mutation_results = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::MutationResult::_InternalParse;
          object = msg->add_mutation_results();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // int32 index_updates = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_index_updates(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.CommitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.MutationResult mutation_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mutation_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 index_updates = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_updates_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.CommitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.CommitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CommitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.MutationResult mutation_results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutation_results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->mutation_results(static_cast<int>(i)),
      output);
  }

  // int32 index_updates = 4;
  if (this->index_updates() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index_updates(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.CommitResponse)
}

::google::protobuf::uint8* CommitResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.MutationResult mutation_results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutation_results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->mutation_results(static_cast<int>(i)), target);
  }

  // int32 index_updates = 4;
  if (this->index_updates() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index_updates(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.CommitResponse)
  return target;
}

size_t CommitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.CommitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.datastore.v1.MutationResult mutation_results = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mutation_results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutation_results(static_cast<int>(i)));
    }
  }

  // int32 index_updates = 4;
  if (this->index_updates() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index_updates());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.CommitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CommitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.CommitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.CommitResponse)
    MergeFrom(*source);
  }
}

void CommitResponse::MergeFrom(const CommitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.CommitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutation_results_.MergeFrom(from.mutation_results_);
  if (from.index_updates() != 0) {
    set_index_updates(from.index_updates());
  }
}

void CommitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.CommitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitResponse::CopyFrom(const CommitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.CommitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitResponse::IsInitialized() const {
  return true;
}

void CommitResponse::Swap(CommitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitResponse::InternalSwap(CommitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&mutation_results_)->InternalSwap(CastToBase(&other->mutation_results_));
  swap(index_updates_, other->index_updates_);
}

::google::protobuf::Metadata CommitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AllocateIdsRequest::InitAsDefaultInstance() {
}
class AllocateIdsRequest::HasBitSetters {
 public:
};

void AllocateIdsRequest::clear_keys() {
  keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocateIdsRequest::kProjectIdFieldNumber;
const int AllocateIdsRequest::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocateIdsRequest::AllocateIdsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.AllocateIdsRequest)
}
AllocateIdsRequest::AllocateIdsRequest(const AllocateIdsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.AllocateIdsRequest)
}

void AllocateIdsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AllocateIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AllocateIdsRequest::~AllocateIdsRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.AllocateIdsRequest)
  SharedDtor();
}

void AllocateIdsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllocateIdsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllocateIdsRequest& AllocateIdsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AllocateIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void AllocateIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.AllocateIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AllocateIdsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AllocateIdsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::Key::_InternalParse;
          object = msg->add_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.v1.AllocateIdsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AllocateIdsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.AllocateIdsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.AllocateIdsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.AllocateIdsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.AllocateIdsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AllocateIdsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.AllocateIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.AllocateIdsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.AllocateIdsRequest)
}

::google::protobuf::uint8* AllocateIdsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.AllocateIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), target);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.AllocateIdsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.AllocateIdsRequest)
  return target;
}

size_t AllocateIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.AllocateIdsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllocateIdsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.AllocateIdsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocateIdsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<AllocateIdsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.AllocateIdsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.AllocateIdsRequest)
    MergeFrom(*source);
  }
}

void AllocateIdsRequest::MergeFrom(const AllocateIdsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.AllocateIdsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
}

void AllocateIdsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.AllocateIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateIdsRequest::CopyFrom(const AllocateIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.AllocateIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateIdsRequest::IsInitialized() const {
  return true;
}

void AllocateIdsRequest::Swap(AllocateIdsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocateIdsRequest::InternalSwap(AllocateIdsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AllocateIdsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AllocateIdsResponse::InitAsDefaultInstance() {
}
class AllocateIdsResponse::HasBitSetters {
 public:
};

void AllocateIdsResponse::clear_keys() {
  keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocateIdsResponse::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocateIdsResponse::AllocateIdsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.AllocateIdsResponse)
}
AllocateIdsResponse::AllocateIdsResponse(const AllocateIdsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.AllocateIdsResponse)
}

void AllocateIdsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AllocateIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
}

AllocateIdsResponse::~AllocateIdsResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.AllocateIdsResponse)
  SharedDtor();
}

void AllocateIdsResponse::SharedDtor() {
}

void AllocateIdsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllocateIdsResponse& AllocateIdsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AllocateIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void AllocateIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.AllocateIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AllocateIdsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AllocateIdsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.datastore.v1.Key keys = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::Key::_InternalParse;
          object = msg->add_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AllocateIdsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.AllocateIdsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.Key keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.AllocateIdsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.AllocateIdsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AllocateIdsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.AllocateIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.AllocateIdsResponse)
}

::google::protobuf::uint8* AllocateIdsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.AllocateIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.AllocateIdsResponse)
  return target;
}

size_t AllocateIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.AllocateIdsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllocateIdsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.AllocateIdsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocateIdsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<AllocateIdsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.AllocateIdsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.AllocateIdsResponse)
    MergeFrom(*source);
  }
}

void AllocateIdsResponse::MergeFrom(const AllocateIdsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.AllocateIdsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void AllocateIdsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.AllocateIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateIdsResponse::CopyFrom(const AllocateIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.AllocateIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateIdsResponse::IsInitialized() const {
  return true;
}

void AllocateIdsResponse::Swap(AllocateIdsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocateIdsResponse::InternalSwap(AllocateIdsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
}

::google::protobuf::Metadata AllocateIdsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReserveIdsRequest::InitAsDefaultInstance() {
}
class ReserveIdsRequest::HasBitSetters {
 public:
};

void ReserveIdsRequest::clear_keys() {
  keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReserveIdsRequest::kProjectIdFieldNumber;
const int ReserveIdsRequest::kDatabaseIdFieldNumber;
const int ReserveIdsRequest::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReserveIdsRequest::ReserveIdsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.ReserveIdsRequest)
}
ReserveIdsRequest::ReserveIdsRequest(const ReserveIdsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  database_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.database_id().size() > 0) {
    database_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.ReserveIdsRequest)
}

void ReserveIdsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReserveIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReserveIdsRequest::~ReserveIdsRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.ReserveIdsRequest)
  SharedDtor();
}

void ReserveIdsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReserveIdsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReserveIdsRequest& ReserveIdsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReserveIdsRequest_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void ReserveIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.ReserveIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReserveIdsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReserveIdsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::v1::Key::_InternalParse;
          object = msg->add_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.v1.ReserveIdsRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string database_id = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.v1.ReserveIdsRequest.database_id");
        object = msg->mutable_database_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReserveIdsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.ReserveIdsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.ReserveIdsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string database_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_database_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->database_id().data(), static_cast<int>(this->database_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.ReserveIdsRequest.database_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.ReserveIdsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.ReserveIdsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReserveIdsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.ReserveIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.ReserveIdsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  // string database_id = 9;
  if (this->database_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_id().data(), static_cast<int>(this->database_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.ReserveIdsRequest.database_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->database_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.ReserveIdsRequest)
}

::google::protobuf::uint8* ReserveIdsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.ReserveIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), target);
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.ReserveIdsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  // string database_id = 9;
  if (this->database_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_id().data(), static_cast<int>(this->database_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.ReserveIdsRequest.database_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->database_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.ReserveIdsRequest)
  return target;
}

size_t ReserveIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.ReserveIdsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1 [(.google.api.field_behavior) = REQUIRED];
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  // string project_id = 8 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string database_id = 9;
  if (this->database_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->database_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReserveIdsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.ReserveIdsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReserveIdsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ReserveIdsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.ReserveIdsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.ReserveIdsRequest)
    MergeFrom(*source);
  }
}

void ReserveIdsRequest::MergeFrom(const ReserveIdsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.ReserveIdsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.database_id().size() > 0) {

    database_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_id_);
  }
}

void ReserveIdsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.ReserveIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReserveIdsRequest::CopyFrom(const ReserveIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.ReserveIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReserveIdsRequest::IsInitialized() const {
  return true;
}

void ReserveIdsRequest::Swap(ReserveIdsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReserveIdsRequest::InternalSwap(ReserveIdsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  database_id_.Swap(&other->database_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReserveIdsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReserveIdsResponse::InitAsDefaultInstance() {
}
class ReserveIdsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReserveIdsResponse::ReserveIdsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.ReserveIdsResponse)
}
ReserveIdsResponse::ReserveIdsResponse(const ReserveIdsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.ReserveIdsResponse)
}

void ReserveIdsResponse::SharedCtor() {
}

ReserveIdsResponse::~ReserveIdsResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.ReserveIdsResponse)
  SharedDtor();
}

void ReserveIdsResponse::SharedDtor() {
}

void ReserveIdsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReserveIdsResponse& ReserveIdsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReserveIdsResponse_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void ReserveIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.ReserveIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReserveIdsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReserveIdsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReserveIdsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.ReserveIdsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.ReserveIdsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.ReserveIdsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReserveIdsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.ReserveIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.ReserveIdsResponse)
}

::google::protobuf::uint8* ReserveIdsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.ReserveIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.ReserveIdsResponse)
  return target;
}

size_t ReserveIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.ReserveIdsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReserveIdsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.ReserveIdsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReserveIdsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ReserveIdsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.ReserveIdsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.ReserveIdsResponse)
    MergeFrom(*source);
  }
}

void ReserveIdsResponse::MergeFrom(const ReserveIdsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.ReserveIdsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReserveIdsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.ReserveIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReserveIdsResponse::CopyFrom(const ReserveIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.ReserveIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReserveIdsResponse::IsInitialized() const {
  return true;
}

void ReserveIdsResponse::Swap(ReserveIdsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReserveIdsResponse::InternalSwap(ReserveIdsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReserveIdsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Mutation::InitAsDefaultInstance() {
  ::google::datastore::v1::_Mutation_default_instance_.insert_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  ::google::datastore::v1::_Mutation_default_instance_.update_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  ::google::datastore::v1::_Mutation_default_instance_.upsert_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  ::google::datastore::v1::_Mutation_default_instance_.delete__ = const_cast< ::google::datastore::v1::Key*>(
      ::google::datastore::v1::Key::internal_default_instance());
  ::google::datastore::v1::_Mutation_default_instance_.base_version_ = PROTOBUF_LONGLONG(0);
}
class Mutation::HasBitSetters {
 public:
  static const ::google::datastore::v1::Entity& insert(const Mutation* msg);
  static const ::google::datastore::v1::Entity& update(const Mutation* msg);
  static const ::google::datastore::v1::Entity& upsert(const Mutation* msg);
  static const ::google::datastore::v1::Key& delete_(const Mutation* msg);
};

const ::google::datastore::v1::Entity&
Mutation::HasBitSetters::insert(const Mutation* msg) {
  return *msg->operation_.insert_;
}
const ::google::datastore::v1::Entity&
Mutation::HasBitSetters::update(const Mutation* msg) {
  return *msg->operation_.update_;
}
const ::google::datastore::v1::Entity&
Mutation::HasBitSetters::upsert(const Mutation* msg) {
  return *msg->operation_.upsert_;
}
const ::google::datastore::v1::Key&
Mutation::HasBitSetters::delete_(const Mutation* msg) {
  return *msg->operation_.delete__;
}
void Mutation::set_allocated_insert(::google::datastore::v1::Entity* insert) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (insert) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      insert = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, insert, submessage_arena);
    }
    set_has_insert();
    operation_.insert_ = insert;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Mutation.insert)
}
void Mutation::clear_insert() {
  if (has_insert()) {
    delete operation_.insert_;
    clear_has_operation();
  }
}
void Mutation::set_allocated_update(::google::datastore::v1::Entity* update) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (update) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    set_has_update();
    operation_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Mutation.update)
}
void Mutation::clear_update() {
  if (has_update()) {
    delete operation_.update_;
    clear_has_operation();
  }
}
void Mutation::set_allocated_upsert(::google::datastore::v1::Entity* upsert) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (upsert) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      upsert = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upsert, submessage_arena);
    }
    set_has_upsert();
    operation_.upsert_ = upsert;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Mutation.upsert)
}
void Mutation::clear_upsert() {
  if (has_upsert()) {
    delete operation_.upsert_;
    clear_has_operation();
  }
}
void Mutation::set_allocated_delete_(::google::datastore::v1::Key* delete_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (delete_) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      delete_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_, submessage_arena);
    }
    set_has_delete_();
    operation_.delete__ = delete_;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Mutation.delete)
}
void Mutation::clear_delete_() {
  if (has_delete_()) {
    delete operation_.delete__;
    clear_has_operation();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation::kInsertFieldNumber;
const int Mutation::kUpdateFieldNumber;
const int Mutation::kUpsertFieldNumber;
const int Mutation::kDeleteFieldNumber;
const int Mutation::kBaseVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation::Mutation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Mutation)
}
Mutation::Mutation(const Mutation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_operation();
  switch (from.operation_case()) {
    case kInsert: {
      mutable_insert()->::google::datastore::v1::Entity::MergeFrom(from.insert());
      break;
    }
    case kUpdate: {
      mutable_update()->::google::datastore::v1::Entity::MergeFrom(from.update());
      break;
    }
    case kUpsert: {
      mutable_upsert()->::google::datastore::v1::Entity::MergeFrom(from.upsert());
      break;
    }
    case kDelete: {
      mutable_delete_()->::google::datastore::v1::Key::MergeFrom(from.delete_());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  clear_has_conflict_detection_strategy();
  switch (from.conflict_detection_strategy_case()) {
    case kBaseVersion: {
      set_base_version(from.base_version());
      break;
    }
    case CONFLICT_DETECTION_STRATEGY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Mutation)
}

void Mutation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Mutation_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  clear_has_operation();
  clear_has_conflict_detection_strategy();
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Mutation)
  SharedDtor();
}

void Mutation::SharedDtor() {
  if (has_operation()) {
    clear_operation();
  }
  if (has_conflict_detection_strategy()) {
    clear_conflict_detection_strategy();
  }
}

void Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Mutation& Mutation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Mutation_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void Mutation::clear_operation() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Mutation)
  switch (operation_case()) {
    case kInsert: {
      delete operation_.insert_;
      break;
    }
    case kUpdate: {
      delete operation_.update_;
      break;
    }
    case kUpsert: {
      delete operation_.upsert_;
      break;
    }
    case kDelete: {
      delete operation_.delete__;
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_NOT_SET;
}

void Mutation::clear_conflict_detection_strategy() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Mutation)
  switch (conflict_detection_strategy_case()) {
    case kBaseVersion: {
      // No need to clear
      break;
    }
    case CONFLICT_DETECTION_STRATEGY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = CONFLICT_DETECTION_STRATEGY_NOT_SET;
}


void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_operation();
  clear_conflict_detection_strategy();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Mutation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Mutation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.v1.Entity insert = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::Entity::_InternalParse;
        object = msg->mutable_insert();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.v1.Entity update = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::Entity::_InternalParse;
        object = msg->mutable_update();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.v1.Entity upsert = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::Entity::_InternalParse;
        object = msg->mutable_upsert();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.v1.Key delete = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::Key::_InternalParse;
        object = msg->mutable_delete_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 base_version = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_base_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Mutation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Mutation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.Entity insert = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_insert()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Entity update = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Entity upsert = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upsert()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Key delete = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 base_version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          clear_conflict_detection_strategy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &conflict_detection_strategy_.base_version_)));
          set_has_base_version();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Mutation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Mutation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Mutation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Entity insert = 4;
  if (has_insert()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::insert(this), output);
  }

  // .google.datastore.v1.Entity update = 5;
  if (has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::update(this), output);
  }

  // .google.datastore.v1.Entity upsert = 6;
  if (has_upsert()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::upsert(this), output);
  }

  // .google.datastore.v1.Key delete = 7;
  if (has_delete_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::delete_(this), output);
  }

  // int64 base_version = 8;
  if (has_base_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->base_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Mutation)
}

::google::protobuf::uint8* Mutation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Entity insert = 4;
  if (has_insert()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::insert(this), target);
  }

  // .google.datastore.v1.Entity update = 5;
  if (has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::update(this), target);
  }

  // .google.datastore.v1.Entity upsert = 6;
  if (has_upsert()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::upsert(this), target);
  }

  // .google.datastore.v1.Key delete = 7;
  if (has_delete_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::delete_(this), target);
  }

  // int64 base_version = 8;
  if (has_base_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->base_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Mutation)
  return target;
}

size_t Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Mutation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (operation_case()) {
    // .google.datastore.v1.Entity insert = 4;
    case kInsert: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.insert_);
      break;
    }
    // .google.datastore.v1.Entity update = 5;
    case kUpdate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.update_);
      break;
    }
    // .google.datastore.v1.Entity upsert = 6;
    case kUpsert: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.upsert_);
      break;
    }
    // .google.datastore.v1.Key delete = 7;
    case kDelete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.delete__);
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  switch (conflict_detection_strategy_case()) {
    // int64 base_version = 8;
    case kBaseVersion: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->base_version());
      break;
    }
    case CONFLICT_DETECTION_STRATEGY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mutation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation* source =
      ::google::protobuf::DynamicCastToGenerated<Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Mutation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Mutation)
    MergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.operation_case()) {
    case kInsert: {
      mutable_insert()->::google::datastore::v1::Entity::MergeFrom(from.insert());
      break;
    }
    case kUpdate: {
      mutable_update()->::google::datastore::v1::Entity::MergeFrom(from.update());
      break;
    }
    case kUpsert: {
      mutable_upsert()->::google::datastore::v1::Entity::MergeFrom(from.upsert());
      break;
    }
    case kDelete: {
      mutable_delete_()->::google::datastore::v1::Key::MergeFrom(from.delete_());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  switch (from.conflict_detection_strategy_case()) {
    case kBaseVersion: {
      set_base_version(from.base_version());
      break;
    }
    case CONFLICT_DETECTION_STRATEGY_NOT_SET: {
      break;
    }
  }
}

void Mutation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation::IsInitialized() const {
  return true;
}

void Mutation::Swap(Mutation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation::InternalSwap(Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(operation_, other->operation_);
  swap(conflict_detection_strategy_, other->conflict_detection_strategy_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
}

::google::protobuf::Metadata Mutation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MutationResult::InitAsDefaultInstance() {
  ::google::datastore::v1::_MutationResult_default_instance_._instance.get_mutable()->key_ = const_cast< ::google::datastore::v1::Key*>(
      ::google::datastore::v1::Key::internal_default_instance());
}
class MutationResult::HasBitSetters {
 public:
  static const ::google::datastore::v1::Key& key(const MutationResult* msg);
};

const ::google::datastore::v1::Key&
MutationResult::HasBitSetters::key(const MutationResult* msg) {
  return *msg->key_;
}
void MutationResult::clear_key() {
  if (GetArenaNoVirtual() == nullptr && key_ != nullptr) {
    delete key_;
  }
  key_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutationResult::kKeyFieldNumber;
const int MutationResult::kVersionFieldNumber;
const int MutationResult::kConflictDetectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutationResult::MutationResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.MutationResult)
}
MutationResult::MutationResult(const MutationResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::google::datastore::v1::Key(*from.key_);
  } else {
    key_ = nullptr;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&conflict_detected_) -
    reinterpret_cast<char*>(&version_)) + sizeof(conflict_detected_));
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.MutationResult)
}

void MutationResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MutationResult_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conflict_detected_) -
      reinterpret_cast<char*>(&key_)) + sizeof(conflict_detected_));
}

MutationResult::~MutationResult() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.MutationResult)
  SharedDtor();
}

void MutationResult::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void MutationResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MutationResult& MutationResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MutationResult_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void MutationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.MutationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && key_ != nullptr) {
    delete key_;
  }
  key_ = nullptr;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conflict_detected_) -
      reinterpret_cast<char*>(&version_)) + sizeof(conflict_detected_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MutationResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MutationResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.v1.Key key = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::Key::_InternalParse;
        object = msg->mutable_key();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool conflict_detected = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_conflict_detected(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MutationResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.MutationResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.Key key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool conflict_detected = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &conflict_detected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.MutationResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.MutationResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MutationResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.MutationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Key key = 3;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::key(this), output);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->version(), output);
  }

  // bool conflict_detected = 5;
  if (this->conflict_detected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->conflict_detected(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.MutationResult)
}

::google::protobuf::uint8* MutationResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.MutationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Key key = 3;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::key(this), target);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->version(), target);
  }

  // bool conflict_detected = 5;
  if (this->conflict_detected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->conflict_detected(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.MutationResult)
  return target;
}

size_t MutationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.MutationResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.datastore.v1.Key key = 3;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // bool conflict_detected = 5;
  if (this->conflict_detected() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MutationResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.MutationResult)
  GOOGLE_DCHECK_NE(&from, this);
  const MutationResult* source =
      ::google::protobuf::DynamicCastToGenerated<MutationResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.MutationResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.MutationResult)
    MergeFrom(*source);
  }
}

void MutationResult::MergeFrom(const MutationResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.MutationResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::google::datastore::v1::Key::MergeFrom(from.key());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.conflict_detected() != 0) {
    set_conflict_detected(from.conflict_detected());
  }
}

void MutationResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.MutationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutationResult::CopyFrom(const MutationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.MutationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutationResult::IsInitialized() const {
  return true;
}

void MutationResult::Swap(MutationResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutationResult::InternalSwap(MutationResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(key_, other->key_);
  swap(version_, other->version_);
  swap(conflict_detected_, other->conflict_detected_);
}

::google::protobuf::Metadata MutationResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadOptions::InitAsDefaultInstance() {
  ::google::datastore::v1::_ReadOptions_default_instance_.read_consistency_ = 0;
  ::google::datastore::v1::_ReadOptions_default_instance_.transaction_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class ReadOptions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOptions::kReadConsistencyFieldNumber;
const int ReadOptions::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOptions::ReadOptions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.ReadOptions)
}
ReadOptions::ReadOptions(const ReadOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_consistency_type();
  switch (from.consistency_type_case()) {
    case kReadConsistency: {
      set_read_consistency(from.read_consistency());
      break;
    }
    case kTransaction: {
      set_transaction(from.transaction());
      break;
    }
    case CONSISTENCY_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.ReadOptions)
}

void ReadOptions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  clear_has_consistency_type();
}

ReadOptions::~ReadOptions() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.ReadOptions)
  SharedDtor();
}

void ReadOptions::SharedDtor() {
  if (has_consistency_type()) {
    clear_consistency_type();
  }
}

void ReadOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadOptions& ReadOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void ReadOptions::clear_consistency_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.ReadOptions)
  switch (consistency_type_case()) {
    case kReadConsistency: {
      // No need to clear
      break;
    }
    case kTransaction: {
      consistency_type_.transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CONSISTENCY_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONSISTENCY_TYPE_NOT_SET;
}


void ReadOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.ReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_consistency_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadOptions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadOptions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_read_consistency(static_cast<::google::datastore::v1::ReadOptions_ReadConsistency>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes transaction = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_transaction();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.ReadOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_read_consistency(static_cast< ::google::datastore::v1::ReadOptions_ReadConsistency >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes transaction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.ReadOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.ReadOptions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.ReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
  if (has_read_consistency()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->read_consistency(), output);
  }

  // bytes transaction = 2;
  if (has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->transaction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.ReadOptions)
}

::google::protobuf::uint8* ReadOptions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.ReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
  if (has_read_consistency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->read_consistency(), target);
  }

  // bytes transaction = 2;
  if (has_transaction()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->transaction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.ReadOptions)
  return target;
}

size_t ReadOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.ReadOptions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (consistency_type_case()) {
    // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
    case kReadConsistency: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->read_consistency());
      break;
    }
    // bytes transaction = 2;
    case kTransaction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->transaction());
      break;
    }
    case CONSISTENCY_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.ReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadOptions* source =
      ::google::protobuf::DynamicCastToGenerated<ReadOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.ReadOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.ReadOptions)
    MergeFrom(*source);
  }
}

void ReadOptions::MergeFrom(const ReadOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.ReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.consistency_type_case()) {
    case kReadConsistency: {
      set_read_consistency(from.read_consistency());
      break;
    }
    case kTransaction: {
      set_transaction(from.transaction());
      break;
    }
    case CONSISTENCY_TYPE_NOT_SET: {
      break;
    }
  }
}

void ReadOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.ReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOptions::CopyFrom(const ReadOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.ReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOptions::IsInitialized() const {
  return true;
}

void ReadOptions::Swap(ReadOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOptions::InternalSwap(ReadOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(consistency_type_, other->consistency_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata ReadOptions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions_ReadWrite::InitAsDefaultInstance() {
}
class TransactionOptions_ReadWrite::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionOptions_ReadWrite::kPreviousTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions_ReadWrite::TransactionOptions_ReadWrite()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.TransactionOptions.ReadWrite)
}
TransactionOptions_ReadWrite::TransactionOptions_ReadWrite(const TransactionOptions_ReadWrite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  previous_transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.previous_transaction().size() > 0) {
    previous_transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_transaction_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.TransactionOptions.ReadWrite)
}

void TransactionOptions_ReadWrite::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TransactionOptions_ReadWrite_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  previous_transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TransactionOptions_ReadWrite::~TransactionOptions_ReadWrite() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.TransactionOptions.ReadWrite)
  SharedDtor();
}

void TransactionOptions_ReadWrite::SharedDtor() {
  previous_transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransactionOptions_ReadWrite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionOptions_ReadWrite& TransactionOptions_ReadWrite::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransactionOptions_ReadWrite_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void TransactionOptions_ReadWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  previous_transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransactionOptions_ReadWrite::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransactionOptions_ReadWrite*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes previous_transaction = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_previous_transaction();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransactionOptions_ReadWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.TransactionOptions.ReadWrite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes previous_transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_previous_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.TransactionOptions.ReadWrite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.TransactionOptions.ReadWrite)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransactionOptions_ReadWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes previous_transaction = 1;
  if (this->previous_transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->previous_transaction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.TransactionOptions.ReadWrite)
}

::google::protobuf::uint8* TransactionOptions_ReadWrite::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes previous_transaction = 1;
  if (this->previous_transaction().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->previous_transaction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.TransactionOptions.ReadWrite)
  return target;
}

size_t TransactionOptions_ReadWrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.TransactionOptions.ReadWrite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes previous_transaction = 1;
  if (this->previous_transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->previous_transaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionOptions_ReadWrite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.TransactionOptions.ReadWrite)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions_ReadWrite* source =
      ::google::protobuf::DynamicCastToGenerated<TransactionOptions_ReadWrite>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.TransactionOptions.ReadWrite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.TransactionOptions.ReadWrite)
    MergeFrom(*source);
  }
}

void TransactionOptions_ReadWrite::MergeFrom(const TransactionOptions_ReadWrite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.TransactionOptions.ReadWrite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.previous_transaction().size() > 0) {

    previous_transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_transaction_);
  }
}

void TransactionOptions_ReadWrite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.TransactionOptions.ReadWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions_ReadWrite::CopyFrom(const TransactionOptions_ReadWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.TransactionOptions.ReadWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions_ReadWrite::IsInitialized() const {
  return true;
}

void TransactionOptions_ReadWrite::Swap(TransactionOptions_ReadWrite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions_ReadWrite::InternalSwap(TransactionOptions_ReadWrite* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  previous_transaction_.Swap(&other->previous_transaction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TransactionOptions_ReadWrite::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions_ReadOnly::InitAsDefaultInstance() {
}
class TransactionOptions_ReadOnly::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions_ReadOnly::TransactionOptions_ReadOnly()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.TransactionOptions.ReadOnly)
}
TransactionOptions_ReadOnly::TransactionOptions_ReadOnly(const TransactionOptions_ReadOnly& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.TransactionOptions.ReadOnly)
}

void TransactionOptions_ReadOnly::SharedCtor() {
}

TransactionOptions_ReadOnly::~TransactionOptions_ReadOnly() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.TransactionOptions.ReadOnly)
  SharedDtor();
}

void TransactionOptions_ReadOnly::SharedDtor() {
}

void TransactionOptions_ReadOnly::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionOptions_ReadOnly& TransactionOptions_ReadOnly::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransactionOptions_ReadOnly_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void TransactionOptions_ReadOnly::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransactionOptions_ReadOnly::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransactionOptions_ReadOnly*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransactionOptions_ReadOnly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.TransactionOptions.ReadOnly)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.TransactionOptions.ReadOnly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.TransactionOptions.ReadOnly)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransactionOptions_ReadOnly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.TransactionOptions.ReadOnly)
}

::google::protobuf::uint8* TransactionOptions_ReadOnly::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.TransactionOptions.ReadOnly)
  return target;
}

size_t TransactionOptions_ReadOnly::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.TransactionOptions.ReadOnly)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionOptions_ReadOnly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.TransactionOptions.ReadOnly)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions_ReadOnly* source =
      ::google::protobuf::DynamicCastToGenerated<TransactionOptions_ReadOnly>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.TransactionOptions.ReadOnly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.TransactionOptions.ReadOnly)
    MergeFrom(*source);
  }
}

void TransactionOptions_ReadOnly::MergeFrom(const TransactionOptions_ReadOnly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.TransactionOptions.ReadOnly)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TransactionOptions_ReadOnly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.TransactionOptions.ReadOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions_ReadOnly::CopyFrom(const TransactionOptions_ReadOnly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.TransactionOptions.ReadOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions_ReadOnly::IsInitialized() const {
  return true;
}

void TransactionOptions_ReadOnly::Swap(TransactionOptions_ReadOnly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions_ReadOnly::InternalSwap(TransactionOptions_ReadOnly* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionOptions_ReadOnly::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions::InitAsDefaultInstance() {
  ::google::datastore::v1::_TransactionOptions_default_instance_.read_write_ = const_cast< ::google::datastore::v1::TransactionOptions_ReadWrite*>(
      ::google::datastore::v1::TransactionOptions_ReadWrite::internal_default_instance());
  ::google::datastore::v1::_TransactionOptions_default_instance_.read_only_ = const_cast< ::google::datastore::v1::TransactionOptions_ReadOnly*>(
      ::google::datastore::v1::TransactionOptions_ReadOnly::internal_default_instance());
}
class TransactionOptions::HasBitSetters {
 public:
  static const ::google::datastore::v1::TransactionOptions_ReadWrite& read_write(const TransactionOptions* msg);
  static const ::google::datastore::v1::TransactionOptions_ReadOnly& read_only(const TransactionOptions* msg);
};

const ::google::datastore::v1::TransactionOptions_ReadWrite&
TransactionOptions::HasBitSetters::read_write(const TransactionOptions* msg) {
  return *msg->mode_.read_write_;
}
const ::google::datastore::v1::TransactionOptions_ReadOnly&
TransactionOptions::HasBitSetters::read_only(const TransactionOptions* msg) {
  return *msg->mode_.read_only_;
}
void TransactionOptions::set_allocated_read_write(::google::datastore::v1::TransactionOptions_ReadWrite* read_write) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (read_write) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      read_write = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read_write, submessage_arena);
    }
    set_has_read_write();
    mode_.read_write_ = read_write;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.TransactionOptions.read_write)
}
void TransactionOptions::set_allocated_read_only(::google::datastore::v1::TransactionOptions_ReadOnly* read_only) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (read_only) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      read_only = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read_only, submessage_arena);
    }
    set_has_read_only();
    mode_.read_only_ = read_only;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.TransactionOptions.read_only)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionOptions::kReadWriteFieldNumber;
const int TransactionOptions::kReadOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions::TransactionOptions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.TransactionOptions)
}
TransactionOptions::TransactionOptions(const TransactionOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_mode();
  switch (from.mode_case()) {
    case kReadWrite: {
      mutable_read_write()->::google::datastore::v1::TransactionOptions_ReadWrite::MergeFrom(from.read_write());
      break;
    }
    case kReadOnly: {
      mutable_read_only()->::google::datastore::v1::TransactionOptions_ReadOnly::MergeFrom(from.read_only());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.TransactionOptions)
}

void TransactionOptions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TransactionOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  clear_has_mode();
}

TransactionOptions::~TransactionOptions() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.TransactionOptions)
  SharedDtor();
}

void TransactionOptions::SharedDtor() {
  if (has_mode()) {
    clear_mode();
  }
}

void TransactionOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionOptions& TransactionOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransactionOptions_google_2fdatastore_2fv1_2fdatastore_2eproto.base);
  return *internal_default_instance();
}


void TransactionOptions::clear_mode() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.TransactionOptions)
  switch (mode_case()) {
    case kReadWrite: {
      delete mode_.read_write_;
      break;
    }
    case kReadOnly: {
      delete mode_.read_only_;
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODE_NOT_SET;
}


void TransactionOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mode();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransactionOptions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransactionOptions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::TransactionOptions_ReadWrite::_InternalParse;
        object = msg->mutable_read_write();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::v1::TransactionOptions_ReadOnly::_InternalParse;
        object = msg->mutable_read_only();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransactionOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.TransactionOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_write()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_only()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.TransactionOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.TransactionOptions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransactionOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
  if (has_read_write()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::read_write(this), output);
  }

  // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
  if (has_read_only()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::read_only(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.TransactionOptions)
}

::google::protobuf::uint8* TransactionOptions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
  if (has_read_write()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::read_write(this), target);
  }

  // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
  if (has_read_only()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::read_only(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.TransactionOptions)
  return target;
}

size_t TransactionOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.TransactionOptions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (mode_case()) {
    // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
    case kReadWrite: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mode_.read_write_);
      break;
    }
    // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
    case kReadOnly: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mode_.read_only_);
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.TransactionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions* source =
      ::google::protobuf::DynamicCastToGenerated<TransactionOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.TransactionOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.TransactionOptions)
    MergeFrom(*source);
  }
}

void TransactionOptions::MergeFrom(const TransactionOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.TransactionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mode_case()) {
    case kReadWrite: {
      mutable_read_write()->::google::datastore::v1::TransactionOptions_ReadWrite::MergeFrom(from.read_write());
      break;
    }
    case kReadOnly: {
      mutable_read_only()->::google::datastore::v1::TransactionOptions_ReadOnly::MergeFrom(from.read_only());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
}

void TransactionOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.TransactionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions::CopyFrom(const TransactionOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.TransactionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions::IsInitialized() const {
  return true;
}

void TransactionOptions::Swap(TransactionOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions::InternalSwap(TransactionOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mode_, other->mode_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata TransactionOptions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fv1_2fdatastore_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fv1_2fdatastore_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace datastore
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::datastore::v1::LookupRequest* Arena::CreateMaybeMessage< ::google::datastore::v1::LookupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::LookupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::LookupResponse* Arena::CreateMaybeMessage< ::google::datastore::v1::LookupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::LookupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::RunQueryRequest* Arena::CreateMaybeMessage< ::google::datastore::v1::RunQueryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::RunQueryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::RunQueryResponse* Arena::CreateMaybeMessage< ::google::datastore::v1::RunQueryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::RunQueryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::BeginTransactionRequest* Arena::CreateMaybeMessage< ::google::datastore::v1::BeginTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::BeginTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::BeginTransactionResponse* Arena::CreateMaybeMessage< ::google::datastore::v1::BeginTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::BeginTransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::RollbackRequest* Arena::CreateMaybeMessage< ::google::datastore::v1::RollbackRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::RollbackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::RollbackResponse* Arena::CreateMaybeMessage< ::google::datastore::v1::RollbackResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::RollbackResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::CommitRequest* Arena::CreateMaybeMessage< ::google::datastore::v1::CommitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::CommitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::CommitResponse* Arena::CreateMaybeMessage< ::google::datastore::v1::CommitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::CommitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::AllocateIdsRequest* Arena::CreateMaybeMessage< ::google::datastore::v1::AllocateIdsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::AllocateIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::AllocateIdsResponse* Arena::CreateMaybeMessage< ::google::datastore::v1::AllocateIdsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::AllocateIdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::ReserveIdsRequest* Arena::CreateMaybeMessage< ::google::datastore::v1::ReserveIdsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::ReserveIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::ReserveIdsResponse* Arena::CreateMaybeMessage< ::google::datastore::v1::ReserveIdsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::ReserveIdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::Mutation* Arena::CreateMaybeMessage< ::google::datastore::v1::Mutation >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::MutationResult* Arena::CreateMaybeMessage< ::google::datastore::v1::MutationResult >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::MutationResult >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::ReadOptions* Arena::CreateMaybeMessage< ::google::datastore::v1::ReadOptions >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::ReadOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::TransactionOptions_ReadWrite* Arena::CreateMaybeMessage< ::google::datastore::v1::TransactionOptions_ReadWrite >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::TransactionOptions_ReadWrite >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::TransactionOptions_ReadOnly* Arena::CreateMaybeMessage< ::google::datastore::v1::TransactionOptions_ReadOnly >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::TransactionOptions_ReadOnly >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::v1::TransactionOptions* Arena::CreateMaybeMessage< ::google::datastore::v1::TransactionOptions >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::v1::TransactionOptions >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
