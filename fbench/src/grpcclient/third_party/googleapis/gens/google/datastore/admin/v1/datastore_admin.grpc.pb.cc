// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/datastore/admin/v1/datastore_admin.proto

#include "google/datastore/admin/v1/datastore_admin.pb.h"
#include "google/datastore/admin/v1/datastore_admin.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace datastore {
namespace admin {
namespace v1 {

static const char* DatastoreAdmin_method_names[] = {
  "/google.datastore.admin.v1.DatastoreAdmin/ExportEntities",
  "/google.datastore.admin.v1.DatastoreAdmin/ImportEntities",
  "/google.datastore.admin.v1.DatastoreAdmin/CreateIndex",
  "/google.datastore.admin.v1.DatastoreAdmin/DeleteIndex",
  "/google.datastore.admin.v1.DatastoreAdmin/GetIndex",
  "/google.datastore.admin.v1.DatastoreAdmin/ListIndexes",
};

std::unique_ptr< DatastoreAdmin::Stub> DatastoreAdmin::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< DatastoreAdmin::Stub> stub(new DatastoreAdmin::Stub(channel, options));
  return stub;
}

DatastoreAdmin::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_ExportEntities_(DatastoreAdmin_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ImportEntities_(DatastoreAdmin_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateIndex_(DatastoreAdmin_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteIndex_(DatastoreAdmin_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIndex_(DatastoreAdmin_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListIndexes_(DatastoreAdmin_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status DatastoreAdmin::Stub::ExportEntities(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ExportEntitiesRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::datastore::admin::v1::ExportEntitiesRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ExportEntities_, context, request, response);
}

void DatastoreAdmin::Stub::async::ExportEntities(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ExportEntitiesRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::datastore::admin::v1::ExportEntitiesRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ExportEntities_, context, request, response, std::move(f));
}

void DatastoreAdmin::Stub::async::ExportEntities(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ExportEntitiesRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ExportEntities_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DatastoreAdmin::Stub::PrepareAsyncExportEntitiesRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ExportEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::longrunning::Operation, ::google::datastore::admin::v1::ExportEntitiesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ExportEntities_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DatastoreAdmin::Stub::AsyncExportEntitiesRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ExportEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncExportEntitiesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DatastoreAdmin::Stub::ImportEntities(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ImportEntitiesRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::datastore::admin::v1::ImportEntitiesRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ImportEntities_, context, request, response);
}

void DatastoreAdmin::Stub::async::ImportEntities(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ImportEntitiesRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::datastore::admin::v1::ImportEntitiesRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ImportEntities_, context, request, response, std::move(f));
}

void DatastoreAdmin::Stub::async::ImportEntities(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ImportEntitiesRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ImportEntities_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DatastoreAdmin::Stub::PrepareAsyncImportEntitiesRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ImportEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::longrunning::Operation, ::google::datastore::admin::v1::ImportEntitiesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ImportEntities_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DatastoreAdmin::Stub::AsyncImportEntitiesRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ImportEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncImportEntitiesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DatastoreAdmin::Stub::CreateIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::CreateIndexRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::datastore::admin::v1::CreateIndexRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateIndex_, context, request, response);
}

void DatastoreAdmin::Stub::async::CreateIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::CreateIndexRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::datastore::admin::v1::CreateIndexRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateIndex_, context, request, response, std::move(f));
}

void DatastoreAdmin::Stub::async::CreateIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::CreateIndexRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateIndex_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DatastoreAdmin::Stub::PrepareAsyncCreateIndexRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::longrunning::Operation, ::google::datastore::admin::v1::CreateIndexRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateIndex_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DatastoreAdmin::Stub::AsyncCreateIndexRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::CreateIndexRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateIndexRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DatastoreAdmin::Stub::DeleteIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::DeleteIndexRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::datastore::admin::v1::DeleteIndexRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteIndex_, context, request, response);
}

void DatastoreAdmin::Stub::async::DeleteIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::DeleteIndexRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::datastore::admin::v1::DeleteIndexRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIndex_, context, request, response, std::move(f));
}

void DatastoreAdmin::Stub::async::DeleteIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::DeleteIndexRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIndex_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DatastoreAdmin::Stub::PrepareAsyncDeleteIndexRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::DeleteIndexRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::longrunning::Operation, ::google::datastore::admin::v1::DeleteIndexRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteIndex_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DatastoreAdmin::Stub::AsyncDeleteIndexRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::DeleteIndexRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteIndexRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DatastoreAdmin::Stub::GetIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::GetIndexRequest& request, ::google::datastore::admin::v1::Index* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::datastore::admin::v1::GetIndexRequest, ::google::datastore::admin::v1::Index, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIndex_, context, request, response);
}

void DatastoreAdmin::Stub::async::GetIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::GetIndexRequest* request, ::google::datastore::admin::v1::Index* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::datastore::admin::v1::GetIndexRequest, ::google::datastore::admin::v1::Index, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIndex_, context, request, response, std::move(f));
}

void DatastoreAdmin::Stub::async::GetIndex(::grpc::ClientContext* context, const ::google::datastore::admin::v1::GetIndexRequest* request, ::google::datastore::admin::v1::Index* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIndex_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::datastore::admin::v1::Index>* DatastoreAdmin::Stub::PrepareAsyncGetIndexRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::GetIndexRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::datastore::admin::v1::Index, ::google::datastore::admin::v1::GetIndexRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIndex_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::datastore::admin::v1::Index>* DatastoreAdmin::Stub::AsyncGetIndexRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::GetIndexRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIndexRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DatastoreAdmin::Stub::ListIndexes(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ListIndexesRequest& request, ::google::datastore::admin::v1::ListIndexesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::datastore::admin::v1::ListIndexesRequest, ::google::datastore::admin::v1::ListIndexesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListIndexes_, context, request, response);
}

void DatastoreAdmin::Stub::async::ListIndexes(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ListIndexesRequest* request, ::google::datastore::admin::v1::ListIndexesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::datastore::admin::v1::ListIndexesRequest, ::google::datastore::admin::v1::ListIndexesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListIndexes_, context, request, response, std::move(f));
}

void DatastoreAdmin::Stub::async::ListIndexes(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ListIndexesRequest* request, ::google::datastore::admin::v1::ListIndexesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListIndexes_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::datastore::admin::v1::ListIndexesResponse>* DatastoreAdmin::Stub::PrepareAsyncListIndexesRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ListIndexesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::datastore::admin::v1::ListIndexesResponse, ::google::datastore::admin::v1::ListIndexesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListIndexes_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::datastore::admin::v1::ListIndexesResponse>* DatastoreAdmin::Stub::AsyncListIndexesRaw(::grpc::ClientContext* context, const ::google::datastore::admin::v1::ListIndexesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListIndexesRaw(context, request, cq);
  result->StartCall();
  return result;
}

DatastoreAdmin::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DatastoreAdmin_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DatastoreAdmin::Service, ::google::datastore::admin::v1::ExportEntitiesRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DatastoreAdmin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::datastore::admin::v1::ExportEntitiesRequest* req,
             ::google::longrunning::Operation* resp) {
               return service->ExportEntities(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DatastoreAdmin_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DatastoreAdmin::Service, ::google::datastore::admin::v1::ImportEntitiesRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DatastoreAdmin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::datastore::admin::v1::ImportEntitiesRequest* req,
             ::google::longrunning::Operation* resp) {
               return service->ImportEntities(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DatastoreAdmin_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DatastoreAdmin::Service, ::google::datastore::admin::v1::CreateIndexRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DatastoreAdmin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::datastore::admin::v1::CreateIndexRequest* req,
             ::google::longrunning::Operation* resp) {
               return service->CreateIndex(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DatastoreAdmin_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DatastoreAdmin::Service, ::google::datastore::admin::v1::DeleteIndexRequest, ::google::longrunning::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DatastoreAdmin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::datastore::admin::v1::DeleteIndexRequest* req,
             ::google::longrunning::Operation* resp) {
               return service->DeleteIndex(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DatastoreAdmin_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DatastoreAdmin::Service, ::google::datastore::admin::v1::GetIndexRequest, ::google::datastore::admin::v1::Index, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DatastoreAdmin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::datastore::admin::v1::GetIndexRequest* req,
             ::google::datastore::admin::v1::Index* resp) {
               return service->GetIndex(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DatastoreAdmin_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DatastoreAdmin::Service, ::google::datastore::admin::v1::ListIndexesRequest, ::google::datastore::admin::v1::ListIndexesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DatastoreAdmin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::datastore::admin::v1::ListIndexesRequest* req,
             ::google::datastore::admin::v1::ListIndexesResponse* resp) {
               return service->ListIndexes(ctx, req, resp);
             }, this)));
}

DatastoreAdmin::Service::~Service() {
}

::grpc::Status DatastoreAdmin::Service::ExportEntities(::grpc::ServerContext* context, const ::google::datastore::admin::v1::ExportEntitiesRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DatastoreAdmin::Service::ImportEntities(::grpc::ServerContext* context, const ::google::datastore::admin::v1::ImportEntitiesRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DatastoreAdmin::Service::CreateIndex(::grpc::ServerContext* context, const ::google::datastore::admin::v1::CreateIndexRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DatastoreAdmin::Service::DeleteIndex(::grpc::ServerContext* context, const ::google::datastore::admin::v1::DeleteIndexRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DatastoreAdmin::Service::GetIndex(::grpc::ServerContext* context, const ::google::datastore::admin::v1::GetIndexRequest* request, ::google::datastore::admin::v1::Index* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DatastoreAdmin::Service::ListIndexes(::grpc::ServerContext* context, const ::google::datastore::admin::v1::ListIndexesRequest* request, ::google::datastore::admin::v1::ListIndexesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace datastore
}  // namespace admin
}  // namespace v1

