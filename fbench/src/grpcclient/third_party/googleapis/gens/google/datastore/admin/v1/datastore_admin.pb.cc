// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/admin/v1/datastore_admin.proto

#include "google/datastore/admin/v1/datastore_admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CommonMetadata_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Progress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fdatastore_2fadmin_2fv1_2findex_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Index_google_2fdatastore_2fadmin_2fv1_2findex_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace datastore {
namespace admin {
namespace v1 {
class CommonMetadata_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonMetadata_LabelsEntry_DoNotUse> _instance;
} _CommonMetadata_LabelsEntry_DoNotUse_default_instance_;
class CommonMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonMetadata> _instance;
} _CommonMetadata_default_instance_;
class ProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Progress> _instance;
} _Progress_default_instance_;
class ExportEntitiesRequest_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportEntitiesRequest_LabelsEntry_DoNotUse> _instance;
} _ExportEntitiesRequest_LabelsEntry_DoNotUse_default_instance_;
class ExportEntitiesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportEntitiesRequest> _instance;
} _ExportEntitiesRequest_default_instance_;
class ImportEntitiesRequest_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportEntitiesRequest_LabelsEntry_DoNotUse> _instance;
} _ImportEntitiesRequest_LabelsEntry_DoNotUse_default_instance_;
class ImportEntitiesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportEntitiesRequest> _instance;
} _ImportEntitiesRequest_default_instance_;
class ExportEntitiesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportEntitiesResponse> _instance;
} _ExportEntitiesResponse_default_instance_;
class ExportEntitiesMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportEntitiesMetadata> _instance;
} _ExportEntitiesMetadata_default_instance_;
class ImportEntitiesMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportEntitiesMetadata> _instance;
} _ImportEntitiesMetadata_default_instance_;
class EntityFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityFilter> _instance;
} _EntityFilter_default_instance_;
class CreateIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateIndexRequest> _instance;
} _CreateIndexRequest_default_instance_;
class DeleteIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexRequest> _instance;
} _DeleteIndexRequest_default_instance_;
class GetIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIndexRequest> _instance;
} _GetIndexRequest_default_instance_;
class ListIndexesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListIndexesRequest> _instance;
} _ListIndexesRequest_default_instance_;
class ListIndexesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListIndexesResponse> _instance;
} _ListIndexesResponse_default_instance_;
class IndexOperationMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IndexOperationMetadata> _instance;
} _IndexOperationMetadata_default_instance_;
}  // namespace v1
}  // namespace admin
}  // namespace datastore
}  // namespace google
static void InitDefaultsCommonMetadata_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_CommonMetadata_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse();
  }
  ::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommonMetadata_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommonMetadata_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsCommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_CommonMetadata_default_instance_;
    new (ptr) ::google::datastore::admin::v1::CommonMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::CommonMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_CommonMetadata_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,}};

static void InitDefaultsProgress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_Progress_default_instance_;
    new (ptr) ::google::datastore::admin::v1::Progress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::Progress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Progress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProgress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsExportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ExportEntitiesRequest_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse();
  }
  ::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsExportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ExportEntitiesRequest_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ExportEntitiesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::ExportEntitiesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {
      &scc_info_ExportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,
      &scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,}};

static void InitDefaultsImportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ImportEntitiesRequest_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse();
  }
  ::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsImportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ImportEntitiesRequest_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ImportEntitiesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::ImportEntitiesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ImportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsImportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {
      &scc_info_ImportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,
      &scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,}};

static void InitDefaultsExportEntitiesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ExportEntitiesResponse_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ExportEntitiesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::ExportEntitiesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExportEntitiesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExportEntitiesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsExportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ExportEntitiesMetadata_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ExportEntitiesMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::ExportEntitiesMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ExportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsExportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {
      &scc_info_CommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,
      &scc_info_Progress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,
      &scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,}};

static void InitDefaultsImportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ImportEntitiesMetadata_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ImportEntitiesMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::ImportEntitiesMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ImportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsImportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {
      &scc_info_CommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,
      &scc_info_Progress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,
      &scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,}};

static void InitDefaultsEntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_EntityFilter_default_instance_;
    new (ptr) ::google::datastore::admin::v1::EntityFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::EntityFilter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsCreateIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_CreateIndexRequest_default_instance_;
    new (ptr) ::google::datastore::admin::v1::CreateIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::CreateIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {
      &scc_info_Index_google_2fdatastore_2fadmin_2fv1_2findex_2eproto.base,}};

static void InitDefaultsDeleteIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_DeleteIndexRequest_default_instance_;
    new (ptr) ::google::datastore::admin::v1::DeleteIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::DeleteIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsGetIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_GetIndexRequest_default_instance_;
    new (ptr) ::google::datastore::admin::v1::GetIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::GetIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsListIndexesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ListIndexesRequest_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ListIndexesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::ListIndexesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListIndexesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListIndexesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {}};

static void InitDefaultsListIndexesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_ListIndexesResponse_default_instance_;
    new (ptr) ::google::datastore::admin::v1::ListIndexesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::ListIndexesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListIndexesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListIndexesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {
      &scc_info_Index_google_2fdatastore_2fadmin_2fv1_2findex_2eproto.base,}};

static void InitDefaultsIndexOperationMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::datastore::admin::v1::_IndexOperationMetadata_default_instance_;
    new (ptr) ::google::datastore::admin::v1::IndexOperationMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::admin::v1::IndexOperationMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_IndexOperationMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsIndexOperationMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto}, {
      &scc_info_CommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,
      &scc_info_Progress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base,}};

void InitDefaults_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CommonMetadata_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Progress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportEntitiesRequest_LabelsEntry_DoNotUse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExportEntitiesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListIndexesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListIndexesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IndexOperationMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata, start_time_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata, end_time_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata, operation_type_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata, labels_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CommonMetadata, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::Progress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::Progress, work_completed_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::Progress, work_estimated_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest, labels_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest, entity_filter_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesRequest, output_url_prefix_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest, labels_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest, input_url_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesRequest, entity_filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesResponse, output_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesMetadata, common_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesMetadata, progress_entities_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesMetadata, progress_bytes_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesMetadata, entity_filter_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ExportEntitiesMetadata, output_url_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesMetadata, common_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesMetadata, progress_entities_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesMetadata, progress_bytes_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesMetadata, entity_filter_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ImportEntitiesMetadata, input_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::EntityFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::EntityFilter, kinds_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::EntityFilter, namespace_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CreateIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CreateIndexRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::CreateIndexRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::DeleteIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::DeleteIndexRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::DeleteIndexRequest, index_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::GetIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::GetIndexRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::GetIndexRequest, index_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ListIndexesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ListIndexesRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ListIndexesRequest, filter_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ListIndexesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ListIndexesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ListIndexesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ListIndexesResponse, indexes_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::ListIndexesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::IndexOperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::IndexOperationMetadata, common_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::IndexOperationMetadata, progress_entities_),
  PROTOBUF_FIELD_OFFSET(::google::datastore::admin::v1::IndexOperationMetadata, index_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::datastore::admin::v1::CommonMetadata)},
  { 19, -1, sizeof(::google::datastore::admin::v1::Progress)},
  { 26, 33, sizeof(::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse)},
  { 35, -1, sizeof(::google::datastore::admin::v1::ExportEntitiesRequest)},
  { 44, 51, sizeof(::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse)},
  { 53, -1, sizeof(::google::datastore::admin::v1::ImportEntitiesRequest)},
  { 62, -1, sizeof(::google::datastore::admin::v1::ExportEntitiesResponse)},
  { 68, -1, sizeof(::google::datastore::admin::v1::ExportEntitiesMetadata)},
  { 78, -1, sizeof(::google::datastore::admin::v1::ImportEntitiesMetadata)},
  { 88, -1, sizeof(::google::datastore::admin::v1::EntityFilter)},
  { 95, -1, sizeof(::google::datastore::admin::v1::CreateIndexRequest)},
  { 102, -1, sizeof(::google::datastore::admin::v1::DeleteIndexRequest)},
  { 109, -1, sizeof(::google::datastore::admin::v1::GetIndexRequest)},
  { 116, -1, sizeof(::google::datastore::admin::v1::ListIndexesRequest)},
  { 125, -1, sizeof(::google::datastore::admin::v1::ListIndexesResponse)},
  { 132, -1, sizeof(::google::datastore::admin::v1::IndexOperationMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_CommonMetadata_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_CommonMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_Progress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ExportEntitiesRequest_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ExportEntitiesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ImportEntitiesRequest_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ImportEntitiesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ExportEntitiesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ExportEntitiesMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ImportEntitiesMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_EntityFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_CreateIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_DeleteIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_GetIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ListIndexesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_ListIndexesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::admin::v1::_IndexOperationMetadata_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto = {
  {}, AddDescriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto, "google/datastore/admin/v1/datastore_admin.proto", schemas,
  file_default_instances, TableStruct_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto::offsets,
  file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto, 17, file_level_enum_descriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto, file_level_service_descriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto,
};

const char descriptor_table_protodef_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[] =
  "\n/google/datastore/admin/v1/datastore_ad"
  "min.proto\022\031google.datastore.admin.v1\032\034go"
  "ogle/api/annotations.proto\032\027google/api/c"
  "lient.proto\032\037google/api/field_behavior.p"
  "roto\032%google/datastore/admin/v1/index.pr"
  "oto\032#google/longrunning/operations.proto"
  "\032\037google/protobuf/timestamp.proto\"\364\003\n\016Co"
  "mmonMetadata\022.\n\nstart_time\030\001 \001(\0132\032.googl"
  "e.protobuf.Timestamp\022,\n\010end_time\030\002 \001(\0132\032"
  ".google.protobuf.Timestamp\022@\n\016operation_"
  "type\030\003 \001(\0162(.google.datastore.admin.v1.O"
  "perationType\022E\n\006labels\030\004 \003(\01325.google.da"
  "tastore.admin.v1.CommonMetadata.LabelsEn"
  "try\022>\n\005state\030\005 \001(\0162/.google.datastore.ad"
  "min.v1.CommonMetadata.State\032-\n\013LabelsEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\213\001\n\005S"
  "tate\022\025\n\021STATE_UNSPECIFIED\020\000\022\020\n\014INITIALIZ"
  "ING\020\001\022\016\n\nPROCESSING\020\002\022\016\n\nCANCELLING\020\003\022\016\n"
  "\nFINALIZING\020\004\022\016\n\nSUCCESSFUL\020\005\022\n\n\006FAILED\020"
  "\006\022\r\n\tCANCELLED\020\007\":\n\010Progress\022\026\n\016work_com"
  "pleted\030\001 \001(\003\022\026\n\016work_estimated\030\002 \001(\003\"\215\002\n"
  "\025ExportEntitiesRequest\022\027\n\nproject_id\030\001 \001"
  "(\tB\003\340A\002\022L\n\006labels\030\002 \003(\0132<.google.datasto"
  "re.admin.v1.ExportEntitiesRequest.Labels"
  "Entry\022>\n\rentity_filter\030\003 \001(\0132\'.google.da"
  "tastore.admin.v1.EntityFilter\022\036\n\021output_"
  "url_prefix\030\004 \001(\tB\003\340A\002\032-\n\013LabelsEntry\022\013\n\003"
  "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\205\002\n\025ImportE"
  "ntitiesRequest\022\027\n\nproject_id\030\001 \001(\tB\003\340A\002\022"
  "L\n\006labels\030\002 \003(\0132<.google.datastore.admin"
  ".v1.ImportEntitiesRequest.LabelsEntry\022\026\n"
  "\tinput_url\030\003 \001(\tB\003\340A\002\022>\n\rentity_filter\030\004"
  " \001(\0132\'.google.datastore.admin.v1.EntityF"
  "ilter\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
  "ue\030\002 \001(\t:\0028\001\",\n\026ExportEntitiesResponse\022\022"
  "\n\noutput_url\030\001 \001(\t\"\253\002\n\026ExportEntitiesMet"
  "adata\0229\n\006common\030\001 \001(\0132).google.datastore"
  ".admin.v1.CommonMetadata\022>\n\021progress_ent"
  "ities\030\002 \001(\0132#.google.datastore.admin.v1."
  "Progress\022;\n\016progress_bytes\030\003 \001(\0132#.googl"
  "e.datastore.admin.v1.Progress\022>\n\rentity_"
  "filter\030\004 \001(\0132\'.google.datastore.admin.v1"
  ".EntityFilter\022\031\n\021output_url_prefix\030\005 \001(\t"
  "\"\243\002\n\026ImportEntitiesMetadata\0229\n\006common\030\001 "
  "\001(\0132).google.datastore.admin.v1.CommonMe"
  "tadata\022>\n\021progress_entities\030\002 \001(\0132#.goog"
  "le.datastore.admin.v1.Progress\022;\n\016progre"
  "ss_bytes\030\003 \001(\0132#.google.datastore.admin."
  "v1.Progress\022>\n\rentity_filter\030\004 \001(\0132\'.goo"
  "gle.datastore.admin.v1.EntityFilter\022\021\n\ti"
  "nput_url\030\005 \001(\t\"4\n\014EntityFilter\022\r\n\005kinds\030"
  "\001 \003(\t\022\025\n\rnamespace_ids\030\002 \003(\t\"Y\n\022CreateIn"
  "dexRequest\022\022\n\nproject_id\030\001 \001(\t\022/\n\005index\030"
  "\003 \001(\0132 .google.datastore.admin.v1.Index\""
  ":\n\022DeleteIndexRequest\022\022\n\nproject_id\030\001 \001("
  "\t\022\020\n\010index_id\030\003 \001(\t\"7\n\017GetIndexRequest\022\022"
  "\n\nproject_id\030\001 \001(\t\022\020\n\010index_id\030\003 \001(\t\"_\n\022"
  "ListIndexesRequest\022\022\n\nproject_id\030\001 \001(\t\022\016"
  "\n\006filter\030\003 \001(\t\022\021\n\tpage_size\030\004 \001(\005\022\022\n\npag"
  "e_token\030\005 \001(\t\"a\n\023ListIndexesResponse\0221\n\007"
  "indexes\030\001 \003(\0132 .google.datastore.admin.v"
  "1.Index\022\027\n\017next_page_token\030\002 \001(\t\"\245\001\n\026Ind"
  "exOperationMetadata\0229\n\006common\030\001 \001(\0132).go"
  "ogle.datastore.admin.v1.CommonMetadata\022>"
  "\n\021progress_entities\030\002 \001(\0132#.google.datas"
  "tore.admin.v1.Progress\022\020\n\010index_id\030\003 \001(\t"
  "*}\n\rOperationType\022\036\n\032OPERATION_TYPE_UNSP"
  "ECIFIED\020\000\022\023\n\017EXPORT_ENTITIES\020\001\022\023\n\017IMPORT"
  "_ENTITIES\020\002\022\020\n\014CREATE_INDEX\020\003\022\020\n\014DELETE_"
  "INDEX\020\0042\204\n\n\016DatastoreAdmin\022\366\001\n\016ExportEnt"
  "ities\0220.google.datastore.admin.v1.Export"
  "EntitiesRequest\032\035.google.longrunning.Ope"
  "ration\"\222\001\202\323\344\223\002%\" /v1/projects/{project_i"
  "d}:export:\001*\332A1project_id,labels,entity_"
  "filter,output_url_prefix\312A0\n\026ExportEntit"
  "iesResponse\022\026ExportEntitiesMetadata\022\355\001\n\016"
  "ImportEntities\0220.google.datastore.admin."
  "v1.ImportEntitiesRequest\032\035.google.longru"
  "nning.Operation\"\211\001\202\323\344\223\002%\" /v1/projects/{"
  "project_id}:import:\001*\332A)project_id,label"
  "s,input_url,entity_filter\312A/\n\025google.pro"
  "tobuf.Empty\022\026ImportEntitiesMetadata\022\257\001\n\013"
  "CreateIndex\022-.google.datastore.admin.v1."
  "CreateIndexRequest\032\035.google.longrunning."
  "Operation\"R\202\323\344\223\002*\"!/v1/projects/{project"
  "_id}/indexes:\005index\312A\037\n\005Index\022\026IndexOper"
  "ationMetadata\022\263\001\n\013DeleteIndex\022-.google.d"
  "atastore.admin.v1.DeleteIndexRequest\032\035.g"
  "oogle.longrunning.Operation\"V\202\323\344\223\002.*,/v1"
  "/projects/{project_id}/indexes/{index_id"
  "}\312A\037\n\005Index\022\026IndexOperationMetadata\022\216\001\n\010"
  "GetIndex\022*.google.datastore.admin.v1.Get"
  "IndexRequest\032 .google.datastore.admin.v1"
  ".Index\"4\202\323\344\223\002.\022,/v1/projects/{project_id"
  "}/indexes/{index_id}\022\227\001\n\013ListIndexes\022-.g"
  "oogle.datastore.admin.v1.ListIndexesRequ"
  "est\032..google.datastore.admin.v1.ListInde"
  "xesResponse\")\202\323\344\223\002#\022!/v1/projects/{proje"
  "ct_id}/indexes\032v\312A\030datastore.googleapis."
  "com\322AXhttps://www.googleapis.com/auth/cl"
  "oud-platform,https://www.googleapis.com/"
  "auth/datastoreB\340\001\n\035com.google.datastore."
  "admin.v1B\023DatastoreAdminProtoP\001Z>google."
  "golang.org/genproto/googleapis/datastore"
  "/admin/v1;admin\252\002\037Google.Cloud.Datastore"
  ".Admin.V1\312\002\037Google\\Cloud\\Datastore\\Admin"
  "\\V1\352\002#Google::Cloud::Datastore::Admin::V"
  "1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto = {
  false, InitDefaults_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto, 
  descriptor_table_protodef_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto,
  "google/datastore/admin/v1/datastore_admin.proto", &assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto, 4289,
};

void AddDescriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[6] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_google_2fapi_2fclient_2eproto,
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fdatastore_2fadmin_2fv1_2findex_2eproto,
    ::AddDescriptors_google_2flongrunning_2foperations_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto, deps, 6);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto = []() { AddDescriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto(); return true; }();
namespace google {
namespace datastore {
namespace admin {
namespace v1 {
const ::google::protobuf::EnumDescriptor* CommonMetadata_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return file_level_enum_descriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[0];
}
bool CommonMetadata_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CommonMetadata_State CommonMetadata::STATE_UNSPECIFIED;
const CommonMetadata_State CommonMetadata::INITIALIZING;
const CommonMetadata_State CommonMetadata::PROCESSING;
const CommonMetadata_State CommonMetadata::CANCELLING;
const CommonMetadata_State CommonMetadata::FINALIZING;
const CommonMetadata_State CommonMetadata::SUCCESSFUL;
const CommonMetadata_State CommonMetadata::FAILED;
const CommonMetadata_State CommonMetadata::CANCELLED;
const CommonMetadata_State CommonMetadata::State_MIN;
const CommonMetadata_State CommonMetadata::State_MAX;
const int CommonMetadata::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OperationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return file_level_enum_descriptors_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[1];
}
bool OperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

CommonMetadata_LabelsEntry_DoNotUse::CommonMetadata_LabelsEntry_DoNotUse() {}
CommonMetadata_LabelsEntry_DoNotUse::CommonMetadata_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void CommonMetadata_LabelsEntry_DoNotUse::MergeFrom(const CommonMetadata_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CommonMetadata_LabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[0];
}
void CommonMetadata_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommonMetadata_LabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      CommonMetadata_LabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.datastore.admin.v1.CommonMetadata.LabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.datastore.admin.v1.CommonMetadata.LabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void CommonMetadata::InitAsDefaultInstance() {
  ::google::datastore::admin::v1::_CommonMetadata_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::datastore::admin::v1::_CommonMetadata_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class CommonMetadata::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& start_time(const CommonMetadata* msg);
  static const ::google::protobuf::Timestamp& end_time(const CommonMetadata* msg);
};

const ::google::protobuf::Timestamp&
CommonMetadata::HasBitSetters::start_time(const CommonMetadata* msg) {
  return *msg->start_time_;
}
const ::google::protobuf::Timestamp&
CommonMetadata::HasBitSetters::end_time(const CommonMetadata* msg) {
  return *msg->end_time_;
}
void CommonMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void CommonMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonMetadata::kStartTimeFieldNumber;
const int CommonMetadata::kEndTimeFieldNumber;
const int CommonMetadata::kOperationTypeFieldNumber;
const int CommonMetadata::kLabelsFieldNumber;
const int CommonMetadata::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonMetadata::CommonMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.CommonMetadata)
}
CommonMetadata::CommonMetadata(const CommonMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  ::memcpy(&operation_type_, &from.operation_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&operation_type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.CommonMetadata)
}

void CommonMetadata::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(state_));
}

CommonMetadata::~CommonMetadata() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.CommonMetadata)
  SharedDtor();
}

void CommonMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void CommonMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommonMetadata& CommonMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CommonMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void CommonMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.CommonMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  ::memset(&operation_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&operation_type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CommonMetadata::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CommonMetadata*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_start_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_end_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.admin.v1.OperationType operation_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_operation_type(static_cast<::google::datastore::admin::v1::OperationType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, string> labels = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // .google.datastore.admin.v1.CommonMetadata.State state = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_state(static_cast<::google::datastore::admin::v1::CommonMetadata_State>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommonMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.CommonMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.OperationType operation_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::google::datastore::admin::v1::OperationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          CommonMetadata_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CommonMetadata_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.CommonMetadata.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.CommonMetadata.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.CommonMetadata.State state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::datastore::admin::v1::CommonMetadata_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.CommonMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.CommonMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CommonMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.CommonMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::start_time(this), output);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::end_time(this), output);
  }

  // .google.datastore.admin.v1.OperationType operation_type = 3;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->operation_type(), output);
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.CommonMetadata.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.CommonMetadata.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CommonMetadata_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<CommonMetadata_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.datastore.admin.v1.CommonMetadata.State state = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.CommonMetadata)
}

::google::protobuf::uint8* CommonMetadata::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.CommonMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::start_time(this), target);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::end_time(this), target);
  }

  // .google.datastore.admin.v1.OperationType operation_type = 3;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->operation_type(), target);
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.CommonMetadata.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.CommonMetadata.LabelsEntry.value");
      }
    };

    if (false &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CommonMetadata_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<CommonMetadata_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.datastore.admin.v1.CommonMetadata.State state = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.CommonMetadata)
  return target;
}

size_t CommonMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.CommonMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<CommonMetadata_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // .google.datastore.admin.v1.OperationType operation_type = 3;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  // .google.datastore.admin.v1.CommonMetadata.State state = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.CommonMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonMetadata* source =
      ::google::protobuf::DynamicCastToGenerated<CommonMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.CommonMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.CommonMetadata)
    MergeFrom(*source);
  }
}

void CommonMetadata::MergeFrom(const CommonMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.CommonMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CommonMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.CommonMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonMetadata::CopyFrom(const CommonMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.CommonMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonMetadata::IsInitialized() const {
  return true;
}

void CommonMetadata::Swap(CommonMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonMetadata::InternalSwap(CommonMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(operation_type_, other->operation_type_);
  swap(state_, other->state_);
}

::google::protobuf::Metadata CommonMetadata::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Progress::InitAsDefaultInstance() {
}
class Progress::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Progress::kWorkCompletedFieldNumber;
const int Progress::kWorkEstimatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Progress::Progress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.Progress)
}
Progress::Progress(const Progress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&work_completed_, &from.work_completed_,
    static_cast<size_t>(reinterpret_cast<char*>(&work_estimated_) -
    reinterpret_cast<char*>(&work_completed_)) + sizeof(work_estimated_));
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.Progress)
}

void Progress::SharedCtor() {
  ::memset(&work_completed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&work_estimated_) -
      reinterpret_cast<char*>(&work_completed_)) + sizeof(work_estimated_));
}

Progress::~Progress() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.Progress)
  SharedDtor();
}

void Progress::SharedDtor() {
}

void Progress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Progress& Progress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Progress_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void Progress::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&work_completed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&work_estimated_) -
      reinterpret_cast<char*>(&work_completed_)) + sizeof(work_estimated_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Progress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Progress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 work_completed = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_work_completed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 work_estimated = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_work_estimated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Progress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.Progress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 work_completed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &work_completed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 work_estimated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &work_estimated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.Progress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.Progress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Progress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 work_completed = 1;
  if (this->work_completed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->work_completed(), output);
  }

  // int64 work_estimated = 2;
  if (this->work_estimated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->work_estimated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.Progress)
}

::google::protobuf::uint8* Progress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 work_completed = 1;
  if (this->work_completed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->work_completed(), target);
  }

  // int64 work_estimated = 2;
  if (this->work_estimated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->work_estimated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.Progress)
  return target;
}

size_t Progress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.Progress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 work_completed = 1;
  if (this->work_completed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->work_completed());
  }

  // int64 work_estimated = 2;
  if (this->work_estimated() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->work_estimated());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Progress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.Progress)
  GOOGLE_DCHECK_NE(&from, this);
  const Progress* source =
      ::google::protobuf::DynamicCastToGenerated<Progress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.Progress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.Progress)
    MergeFrom(*source);
  }
}

void Progress::MergeFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.Progress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.work_completed() != 0) {
    set_work_completed(from.work_completed());
  }
  if (from.work_estimated() != 0) {
    set_work_estimated(from.work_estimated());
  }
}

void Progress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Progress::CopyFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Progress::IsInitialized() const {
  return true;
}

void Progress::Swap(Progress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Progress::InternalSwap(Progress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(work_completed_, other->work_completed_);
  swap(work_estimated_, other->work_estimated_);
}

::google::protobuf::Metadata Progress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

ExportEntitiesRequest_LabelsEntry_DoNotUse::ExportEntitiesRequest_LabelsEntry_DoNotUse() {}
ExportEntitiesRequest_LabelsEntry_DoNotUse::ExportEntitiesRequest_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ExportEntitiesRequest_LabelsEntry_DoNotUse::MergeFrom(const ExportEntitiesRequest_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ExportEntitiesRequest_LabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[3];
}
void ExportEntitiesRequest_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ExportEntitiesRequest_LabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ExportEntitiesRequest_LabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.datastore.admin.v1.ExportEntitiesRequest.LabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.datastore.admin.v1.ExportEntitiesRequest.LabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ExportEntitiesRequest::InitAsDefaultInstance() {
  ::google::datastore::admin::v1::_ExportEntitiesRequest_default_instance_._instance.get_mutable()->entity_filter_ = const_cast< ::google::datastore::admin::v1::EntityFilter*>(
      ::google::datastore::admin::v1::EntityFilter::internal_default_instance());
}
class ExportEntitiesRequest::HasBitSetters {
 public:
  static const ::google::datastore::admin::v1::EntityFilter& entity_filter(const ExportEntitiesRequest* msg);
};

const ::google::datastore::admin::v1::EntityFilter&
ExportEntitiesRequest::HasBitSetters::entity_filter(const ExportEntitiesRequest* msg) {
  return *msg->entity_filter_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExportEntitiesRequest::kProjectIdFieldNumber;
const int ExportEntitiesRequest::kLabelsFieldNumber;
const int ExportEntitiesRequest::kEntityFilterFieldNumber;
const int ExportEntitiesRequest::kOutputUrlPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExportEntitiesRequest::ExportEntitiesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.ExportEntitiesRequest)
}
ExportEntitiesRequest::ExportEntitiesRequest(const ExportEntitiesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  output_url_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_url_prefix().size() > 0) {
    output_url_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_url_prefix_);
  }
  if (from.has_entity_filter()) {
    entity_filter_ = new ::google::datastore::admin::v1::EntityFilter(*from.entity_filter_);
  } else {
    entity_filter_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.ExportEntitiesRequest)
}

void ExportEntitiesRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ExportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_url_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_filter_ = nullptr;
}

ExportEntitiesRequest::~ExportEntitiesRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.ExportEntitiesRequest)
  SharedDtor();
}

void ExportEntitiesRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_url_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entity_filter_;
}

void ExportEntitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExportEntitiesRequest& ExportEntitiesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ExportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void ExportEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.ExportEntitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_url_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && entity_filter_ != nullptr) {
    delete entity_filter_;
  }
  entity_filter_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ExportEntitiesRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ExportEntitiesRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ExportEntitiesRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> labels = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .google.datastore.admin.v1.EntityFilter entity_filter = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::EntityFilter::_InternalParse;
        object = msg->mutable_entity_filter();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string output_url_prefix = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix");
        object = msg->mutable_output_url_prefix();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ExportEntitiesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.ExportEntitiesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ExportEntitiesRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          ExportEntitiesRequest_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ExportEntitiesRequest_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ExportEntitiesRequest.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ExportEntitiesRequest.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.EntityFilter entity_filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_url_prefix = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_url_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_url_prefix().data(), static_cast<int>(this->output_url_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.ExportEntitiesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.ExportEntitiesRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ExportEntitiesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.ExportEntitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ExportEntitiesRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.ExportEntitiesRequest.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.ExportEntitiesRequest.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ExportEntitiesRequest_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ExportEntitiesRequest_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 3;
  if (this->has_entity_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::entity_filter(this), output);
  }

  // string output_url_prefix = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->output_url_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_url_prefix().data(), static_cast<int>(this->output_url_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->output_url_prefix(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.ExportEntitiesRequest)
}

::google::protobuf::uint8* ExportEntitiesRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.ExportEntitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ExportEntitiesRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.ExportEntitiesRequest.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.ExportEntitiesRequest.LabelsEntry.value");
      }
    };

    if (false &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ExportEntitiesRequest_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ExportEntitiesRequest_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 3;
  if (this->has_entity_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::entity_filter(this), target);
  }

  // string output_url_prefix = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->output_url_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_url_prefix().data(), static_cast<int>(this->output_url_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->output_url_prefix(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.ExportEntitiesRequest)
  return target;
}

size_t ExportEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.ExportEntitiesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<ExportEntitiesRequest_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string output_url_prefix = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->output_url_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_url_prefix());
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 3;
  if (this->has_entity_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entity_filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportEntitiesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.ExportEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportEntitiesRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ExportEntitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.ExportEntitiesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.ExportEntitiesRequest)
    MergeFrom(*source);
  }
}

void ExportEntitiesRequest::MergeFrom(const ExportEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.ExportEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.output_url_prefix().size() > 0) {

    output_url_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_url_prefix_);
  }
  if (from.has_entity_filter()) {
    mutable_entity_filter()->::google::datastore::admin::v1::EntityFilter::MergeFrom(from.entity_filter());
  }
}

void ExportEntitiesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.ExportEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportEntitiesRequest::CopyFrom(const ExportEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.ExportEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportEntitiesRequest::IsInitialized() const {
  return true;
}

void ExportEntitiesRequest::Swap(ExportEntitiesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExportEntitiesRequest::InternalSwap(ExportEntitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_url_prefix_.Swap(&other->output_url_prefix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entity_filter_, other->entity_filter_);
}

::google::protobuf::Metadata ExportEntitiesRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

ImportEntitiesRequest_LabelsEntry_DoNotUse::ImportEntitiesRequest_LabelsEntry_DoNotUse() {}
ImportEntitiesRequest_LabelsEntry_DoNotUse::ImportEntitiesRequest_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ImportEntitiesRequest_LabelsEntry_DoNotUse::MergeFrom(const ImportEntitiesRequest_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ImportEntitiesRequest_LabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[5];
}
void ImportEntitiesRequest_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ImportEntitiesRequest_LabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ImportEntitiesRequest_LabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.datastore.admin.v1.ImportEntitiesRequest.LabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.datastore.admin.v1.ImportEntitiesRequest.LabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ImportEntitiesRequest::InitAsDefaultInstance() {
  ::google::datastore::admin::v1::_ImportEntitiesRequest_default_instance_._instance.get_mutable()->entity_filter_ = const_cast< ::google::datastore::admin::v1::EntityFilter*>(
      ::google::datastore::admin::v1::EntityFilter::internal_default_instance());
}
class ImportEntitiesRequest::HasBitSetters {
 public:
  static const ::google::datastore::admin::v1::EntityFilter& entity_filter(const ImportEntitiesRequest* msg);
};

const ::google::datastore::admin::v1::EntityFilter&
ImportEntitiesRequest::HasBitSetters::entity_filter(const ImportEntitiesRequest* msg) {
  return *msg->entity_filter_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportEntitiesRequest::kProjectIdFieldNumber;
const int ImportEntitiesRequest::kLabelsFieldNumber;
const int ImportEntitiesRequest::kInputUrlFieldNumber;
const int ImportEntitiesRequest::kEntityFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportEntitiesRequest::ImportEntitiesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.ImportEntitiesRequest)
}
ImportEntitiesRequest::ImportEntitiesRequest(const ImportEntitiesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  input_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_url().size() > 0) {
    input_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
  if (from.has_entity_filter()) {
    entity_filter_ = new ::google::datastore::admin::v1::EntityFilter(*from.entity_filter_);
  } else {
    entity_filter_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.ImportEntitiesRequest)
}

void ImportEntitiesRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ImportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_filter_ = nullptr;
}

ImportEntitiesRequest::~ImportEntitiesRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.ImportEntitiesRequest)
  SharedDtor();
}

void ImportEntitiesRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entity_filter_;
}

void ImportEntitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImportEntitiesRequest& ImportEntitiesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ImportEntitiesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void ImportEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.ImportEntitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && entity_filter_ != nullptr) {
    delete entity_filter_;
  }
  entity_filter_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ImportEntitiesRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ImportEntitiesRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ImportEntitiesRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> labels = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // string input_url = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ImportEntitiesRequest.input_url");
        object = msg->mutable_input_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::EntityFilter::_InternalParse;
        object = msg->mutable_entity_filter();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ImportEntitiesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.ImportEntitiesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ImportEntitiesRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          ImportEntitiesRequest_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ImportEntitiesRequest_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ImportEntitiesRequest.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ImportEntitiesRequest.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input_url = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_url().data(), static_cast<int>(this->input_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ImportEntitiesRequest.input_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.ImportEntitiesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.ImportEntitiesRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ImportEntitiesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.ImportEntitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ImportEntitiesRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.ImportEntitiesRequest.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.ImportEntitiesRequest.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportEntitiesRequest_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ImportEntitiesRequest_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string input_url = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->input_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_url().data(), static_cast<int>(this->input_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ImportEntitiesRequest.input_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->input_url(), output);
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::entity_filter(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.ImportEntitiesRequest)
}

::google::protobuf::uint8* ImportEntitiesRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.ImportEntitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ImportEntitiesRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.ImportEntitiesRequest.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.admin.v1.ImportEntitiesRequest.LabelsEntry.value");
      }
    };

    if (false &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportEntitiesRequest_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ImportEntitiesRequest_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string input_url = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->input_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_url().data(), static_cast<int>(this->input_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ImportEntitiesRequest.input_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->input_url(), target);
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::entity_filter(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.ImportEntitiesRequest)
  return target;
}

size_t ImportEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.ImportEntitiesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<ImportEntitiesRequest_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string input_url = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->input_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_url());
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entity_filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportEntitiesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.ImportEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportEntitiesRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ImportEntitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.ImportEntitiesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.ImportEntitiesRequest)
    MergeFrom(*source);
  }
}

void ImportEntitiesRequest::MergeFrom(const ImportEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.ImportEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.input_url().size() > 0) {

    input_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
  if (from.has_entity_filter()) {
    mutable_entity_filter()->::google::datastore::admin::v1::EntityFilter::MergeFrom(from.entity_filter());
  }
}

void ImportEntitiesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.ImportEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportEntitiesRequest::CopyFrom(const ImportEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.ImportEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportEntitiesRequest::IsInitialized() const {
  return true;
}

void ImportEntitiesRequest::Swap(ImportEntitiesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportEntitiesRequest::InternalSwap(ImportEntitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_url_.Swap(&other->input_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entity_filter_, other->entity_filter_);
}

::google::protobuf::Metadata ImportEntitiesRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ExportEntitiesResponse::InitAsDefaultInstance() {
}
class ExportEntitiesResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExportEntitiesResponse::kOutputUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExportEntitiesResponse::ExportEntitiesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.ExportEntitiesResponse)
}
ExportEntitiesResponse::ExportEntitiesResponse(const ExportEntitiesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_url().size() > 0) {
    output_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_url_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.ExportEntitiesResponse)
}

void ExportEntitiesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ExportEntitiesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  output_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExportEntitiesResponse::~ExportEntitiesResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.ExportEntitiesResponse)
  SharedDtor();
}

void ExportEntitiesResponse::SharedDtor() {
  output_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExportEntitiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExportEntitiesResponse& ExportEntitiesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ExportEntitiesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void ExportEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.ExportEntitiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ExportEntitiesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ExportEntitiesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string output_url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ExportEntitiesResponse.output_url");
        object = msg->mutable_output_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ExportEntitiesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.ExportEntitiesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string output_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_url().data(), static_cast<int>(this->output_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ExportEntitiesResponse.output_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.ExportEntitiesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.ExportEntitiesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ExportEntitiesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.ExportEntitiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_url = 1;
  if (this->output_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_url().data(), static_cast<int>(this->output_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ExportEntitiesResponse.output_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->output_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.ExportEntitiesResponse)
}

::google::protobuf::uint8* ExportEntitiesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.ExportEntitiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_url = 1;
  if (this->output_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_url().data(), static_cast<int>(this->output_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ExportEntitiesResponse.output_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->output_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.ExportEntitiesResponse)
  return target;
}

size_t ExportEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.ExportEntitiesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string output_url = 1;
  if (this->output_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportEntitiesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.ExportEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportEntitiesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ExportEntitiesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.ExportEntitiesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.ExportEntitiesResponse)
    MergeFrom(*source);
  }
}

void ExportEntitiesResponse::MergeFrom(const ExportEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.ExportEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_url().size() > 0) {

    output_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_url_);
  }
}

void ExportEntitiesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.ExportEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportEntitiesResponse::CopyFrom(const ExportEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.ExportEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportEntitiesResponse::IsInitialized() const {
  return true;
}

void ExportEntitiesResponse::Swap(ExportEntitiesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExportEntitiesResponse::InternalSwap(ExportEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  output_url_.Swap(&other->output_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ExportEntitiesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ExportEntitiesMetadata::InitAsDefaultInstance() {
  ::google::datastore::admin::v1::_ExportEntitiesMetadata_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::datastore::admin::v1::CommonMetadata*>(
      ::google::datastore::admin::v1::CommonMetadata::internal_default_instance());
  ::google::datastore::admin::v1::_ExportEntitiesMetadata_default_instance_._instance.get_mutable()->progress_entities_ = const_cast< ::google::datastore::admin::v1::Progress*>(
      ::google::datastore::admin::v1::Progress::internal_default_instance());
  ::google::datastore::admin::v1::_ExportEntitiesMetadata_default_instance_._instance.get_mutable()->progress_bytes_ = const_cast< ::google::datastore::admin::v1::Progress*>(
      ::google::datastore::admin::v1::Progress::internal_default_instance());
  ::google::datastore::admin::v1::_ExportEntitiesMetadata_default_instance_._instance.get_mutable()->entity_filter_ = const_cast< ::google::datastore::admin::v1::EntityFilter*>(
      ::google::datastore::admin::v1::EntityFilter::internal_default_instance());
}
class ExportEntitiesMetadata::HasBitSetters {
 public:
  static const ::google::datastore::admin::v1::CommonMetadata& common(const ExportEntitiesMetadata* msg);
  static const ::google::datastore::admin::v1::Progress& progress_entities(const ExportEntitiesMetadata* msg);
  static const ::google::datastore::admin::v1::Progress& progress_bytes(const ExportEntitiesMetadata* msg);
  static const ::google::datastore::admin::v1::EntityFilter& entity_filter(const ExportEntitiesMetadata* msg);
};

const ::google::datastore::admin::v1::CommonMetadata&
ExportEntitiesMetadata::HasBitSetters::common(const ExportEntitiesMetadata* msg) {
  return *msg->common_;
}
const ::google::datastore::admin::v1::Progress&
ExportEntitiesMetadata::HasBitSetters::progress_entities(const ExportEntitiesMetadata* msg) {
  return *msg->progress_entities_;
}
const ::google::datastore::admin::v1::Progress&
ExportEntitiesMetadata::HasBitSetters::progress_bytes(const ExportEntitiesMetadata* msg) {
  return *msg->progress_bytes_;
}
const ::google::datastore::admin::v1::EntityFilter&
ExportEntitiesMetadata::HasBitSetters::entity_filter(const ExportEntitiesMetadata* msg) {
  return *msg->entity_filter_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExportEntitiesMetadata::kCommonFieldNumber;
const int ExportEntitiesMetadata::kProgressEntitiesFieldNumber;
const int ExportEntitiesMetadata::kProgressBytesFieldNumber;
const int ExportEntitiesMetadata::kEntityFilterFieldNumber;
const int ExportEntitiesMetadata::kOutputUrlPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExportEntitiesMetadata::ExportEntitiesMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.ExportEntitiesMetadata)
}
ExportEntitiesMetadata::ExportEntitiesMetadata(const ExportEntitiesMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_url_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_url_prefix().size() > 0) {
    output_url_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_url_prefix_);
  }
  if (from.has_common()) {
    common_ = new ::google::datastore::admin::v1::CommonMetadata(*from.common_);
  } else {
    common_ = nullptr;
  }
  if (from.has_progress_entities()) {
    progress_entities_ = new ::google::datastore::admin::v1::Progress(*from.progress_entities_);
  } else {
    progress_entities_ = nullptr;
  }
  if (from.has_progress_bytes()) {
    progress_bytes_ = new ::google::datastore::admin::v1::Progress(*from.progress_bytes_);
  } else {
    progress_bytes_ = nullptr;
  }
  if (from.has_entity_filter()) {
    entity_filter_ = new ::google::datastore::admin::v1::EntityFilter(*from.entity_filter_);
  } else {
    entity_filter_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.ExportEntitiesMetadata)
}

void ExportEntitiesMetadata::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ExportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  output_url_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_filter_) -
      reinterpret_cast<char*>(&common_)) + sizeof(entity_filter_));
}

ExportEntitiesMetadata::~ExportEntitiesMetadata() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.ExportEntitiesMetadata)
  SharedDtor();
}

void ExportEntitiesMetadata::SharedDtor() {
  output_url_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete progress_entities_;
  if (this != internal_default_instance()) delete progress_bytes_;
  if (this != internal_default_instance()) delete entity_filter_;
}

void ExportEntitiesMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExportEntitiesMetadata& ExportEntitiesMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ExportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void ExportEntitiesMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_url_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && progress_entities_ != nullptr) {
    delete progress_entities_;
  }
  progress_entities_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && progress_bytes_ != nullptr) {
    delete progress_bytes_;
  }
  progress_bytes_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && entity_filter_ != nullptr) {
    delete entity_filter_;
  }
  entity_filter_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ExportEntitiesMetadata::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ExportEntitiesMetadata*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.admin.v1.CommonMetadata common = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::CommonMetadata::_InternalParse;
        object = msg->mutable_common();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.admin.v1.Progress progress_entities = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::Progress::_InternalParse;
        object = msg->mutable_progress_entities();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.admin.v1.Progress progress_bytes = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::Progress::_InternalParse;
        object = msg->mutable_progress_bytes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::EntityFilter::_InternalParse;
        object = msg->mutable_entity_filter();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string output_url_prefix = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ExportEntitiesMetadata.output_url_prefix");
        object = msg->mutable_output_url_prefix();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ExportEntitiesMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.admin.v1.CommonMetadata common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.Progress progress_entities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.Progress progress_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_url_prefix = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_url_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_url_prefix().data(), static_cast<int>(this->output_url_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ExportEntitiesMetadata.output_url_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.ExportEntitiesMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.ExportEntitiesMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ExportEntitiesMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::common(this), output);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::progress_entities(this), output);
  }

  // .google.datastore.admin.v1.Progress progress_bytes = 3;
  if (this->has_progress_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::progress_bytes(this), output);
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::entity_filter(this), output);
  }

  // string output_url_prefix = 5;
  if (this->output_url_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_url_prefix().data(), static_cast<int>(this->output_url_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ExportEntitiesMetadata.output_url_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->output_url_prefix(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.ExportEntitiesMetadata)
}

::google::protobuf::uint8* ExportEntitiesMetadata::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::common(this), target);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::progress_entities(this), target);
  }

  // .google.datastore.admin.v1.Progress progress_bytes = 3;
  if (this->has_progress_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::progress_bytes(this), target);
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::entity_filter(this), target);
  }

  // string output_url_prefix = 5;
  if (this->output_url_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_url_prefix().data(), static_cast<int>(this->output_url_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ExportEntitiesMetadata.output_url_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->output_url_prefix(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.ExportEntitiesMetadata)
  return target;
}

size_t ExportEntitiesMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string output_url_prefix = 5;
  if (this->output_url_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_url_prefix());
  }

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *progress_entities_);
  }

  // .google.datastore.admin.v1.Progress progress_bytes = 3;
  if (this->has_progress_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *progress_bytes_);
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entity_filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportEntitiesMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportEntitiesMetadata* source =
      ::google::protobuf::DynamicCastToGenerated<ExportEntitiesMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.ExportEntitiesMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.ExportEntitiesMetadata)
    MergeFrom(*source);
  }
}

void ExportEntitiesMetadata::MergeFrom(const ExportEntitiesMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_url_prefix().size() > 0) {

    output_url_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_url_prefix_);
  }
  if (from.has_common()) {
    mutable_common()->::google::datastore::admin::v1::CommonMetadata::MergeFrom(from.common());
  }
  if (from.has_progress_entities()) {
    mutable_progress_entities()->::google::datastore::admin::v1::Progress::MergeFrom(from.progress_entities());
  }
  if (from.has_progress_bytes()) {
    mutable_progress_bytes()->::google::datastore::admin::v1::Progress::MergeFrom(from.progress_bytes());
  }
  if (from.has_entity_filter()) {
    mutable_entity_filter()->::google::datastore::admin::v1::EntityFilter::MergeFrom(from.entity_filter());
  }
}

void ExportEntitiesMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportEntitiesMetadata::CopyFrom(const ExportEntitiesMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.ExportEntitiesMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportEntitiesMetadata::IsInitialized() const {
  return true;
}

void ExportEntitiesMetadata::Swap(ExportEntitiesMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExportEntitiesMetadata::InternalSwap(ExportEntitiesMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  output_url_prefix_.Swap(&other->output_url_prefix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(common_, other->common_);
  swap(progress_entities_, other->progress_entities_);
  swap(progress_bytes_, other->progress_bytes_);
  swap(entity_filter_, other->entity_filter_);
}

::google::protobuf::Metadata ExportEntitiesMetadata::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ImportEntitiesMetadata::InitAsDefaultInstance() {
  ::google::datastore::admin::v1::_ImportEntitiesMetadata_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::datastore::admin::v1::CommonMetadata*>(
      ::google::datastore::admin::v1::CommonMetadata::internal_default_instance());
  ::google::datastore::admin::v1::_ImportEntitiesMetadata_default_instance_._instance.get_mutable()->progress_entities_ = const_cast< ::google::datastore::admin::v1::Progress*>(
      ::google::datastore::admin::v1::Progress::internal_default_instance());
  ::google::datastore::admin::v1::_ImportEntitiesMetadata_default_instance_._instance.get_mutable()->progress_bytes_ = const_cast< ::google::datastore::admin::v1::Progress*>(
      ::google::datastore::admin::v1::Progress::internal_default_instance());
  ::google::datastore::admin::v1::_ImportEntitiesMetadata_default_instance_._instance.get_mutable()->entity_filter_ = const_cast< ::google::datastore::admin::v1::EntityFilter*>(
      ::google::datastore::admin::v1::EntityFilter::internal_default_instance());
}
class ImportEntitiesMetadata::HasBitSetters {
 public:
  static const ::google::datastore::admin::v1::CommonMetadata& common(const ImportEntitiesMetadata* msg);
  static const ::google::datastore::admin::v1::Progress& progress_entities(const ImportEntitiesMetadata* msg);
  static const ::google::datastore::admin::v1::Progress& progress_bytes(const ImportEntitiesMetadata* msg);
  static const ::google::datastore::admin::v1::EntityFilter& entity_filter(const ImportEntitiesMetadata* msg);
};

const ::google::datastore::admin::v1::CommonMetadata&
ImportEntitiesMetadata::HasBitSetters::common(const ImportEntitiesMetadata* msg) {
  return *msg->common_;
}
const ::google::datastore::admin::v1::Progress&
ImportEntitiesMetadata::HasBitSetters::progress_entities(const ImportEntitiesMetadata* msg) {
  return *msg->progress_entities_;
}
const ::google::datastore::admin::v1::Progress&
ImportEntitiesMetadata::HasBitSetters::progress_bytes(const ImportEntitiesMetadata* msg) {
  return *msg->progress_bytes_;
}
const ::google::datastore::admin::v1::EntityFilter&
ImportEntitiesMetadata::HasBitSetters::entity_filter(const ImportEntitiesMetadata* msg) {
  return *msg->entity_filter_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportEntitiesMetadata::kCommonFieldNumber;
const int ImportEntitiesMetadata::kProgressEntitiesFieldNumber;
const int ImportEntitiesMetadata::kProgressBytesFieldNumber;
const int ImportEntitiesMetadata::kEntityFilterFieldNumber;
const int ImportEntitiesMetadata::kInputUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportEntitiesMetadata::ImportEntitiesMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.ImportEntitiesMetadata)
}
ImportEntitiesMetadata::ImportEntitiesMetadata(const ImportEntitiesMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_url().size() > 0) {
    input_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
  if (from.has_common()) {
    common_ = new ::google::datastore::admin::v1::CommonMetadata(*from.common_);
  } else {
    common_ = nullptr;
  }
  if (from.has_progress_entities()) {
    progress_entities_ = new ::google::datastore::admin::v1::Progress(*from.progress_entities_);
  } else {
    progress_entities_ = nullptr;
  }
  if (from.has_progress_bytes()) {
    progress_bytes_ = new ::google::datastore::admin::v1::Progress(*from.progress_bytes_);
  } else {
    progress_bytes_ = nullptr;
  }
  if (from.has_entity_filter()) {
    entity_filter_ = new ::google::datastore::admin::v1::EntityFilter(*from.entity_filter_);
  } else {
    entity_filter_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.ImportEntitiesMetadata)
}

void ImportEntitiesMetadata::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ImportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  input_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_filter_) -
      reinterpret_cast<char*>(&common_)) + sizeof(entity_filter_));
}

ImportEntitiesMetadata::~ImportEntitiesMetadata() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.ImportEntitiesMetadata)
  SharedDtor();
}

void ImportEntitiesMetadata::SharedDtor() {
  input_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete progress_entities_;
  if (this != internal_default_instance()) delete progress_bytes_;
  if (this != internal_default_instance()) delete entity_filter_;
}

void ImportEntitiesMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImportEntitiesMetadata& ImportEntitiesMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ImportEntitiesMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void ImportEntitiesMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && progress_entities_ != nullptr) {
    delete progress_entities_;
  }
  progress_entities_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && progress_bytes_ != nullptr) {
    delete progress_bytes_;
  }
  progress_bytes_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && entity_filter_ != nullptr) {
    delete entity_filter_;
  }
  entity_filter_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ImportEntitiesMetadata::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ImportEntitiesMetadata*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.admin.v1.CommonMetadata common = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::CommonMetadata::_InternalParse;
        object = msg->mutable_common();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.admin.v1.Progress progress_entities = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::Progress::_InternalParse;
        object = msg->mutable_progress_entities();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.admin.v1.Progress progress_bytes = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::Progress::_InternalParse;
        object = msg->mutable_progress_bytes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::EntityFilter::_InternalParse;
        object = msg->mutable_entity_filter();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string input_url = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ImportEntitiesMetadata.input_url");
        object = msg->mutable_input_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ImportEntitiesMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.admin.v1.CommonMetadata common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.Progress progress_entities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.Progress progress_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_url().data(), static_cast<int>(this->input_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ImportEntitiesMetadata.input_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.ImportEntitiesMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.ImportEntitiesMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ImportEntitiesMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::common(this), output);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::progress_entities(this), output);
  }

  // .google.datastore.admin.v1.Progress progress_bytes = 3;
  if (this->has_progress_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::progress_bytes(this), output);
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::entity_filter(this), output);
  }

  // string input_url = 5;
  if (this->input_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_url().data(), static_cast<int>(this->input_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ImportEntitiesMetadata.input_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->input_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.ImportEntitiesMetadata)
}

::google::protobuf::uint8* ImportEntitiesMetadata::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::common(this), target);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::progress_entities(this), target);
  }

  // .google.datastore.admin.v1.Progress progress_bytes = 3;
  if (this->has_progress_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::progress_bytes(this), target);
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::entity_filter(this), target);
  }

  // string input_url = 5;
  if (this->input_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_url().data(), static_cast<int>(this->input_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ImportEntitiesMetadata.input_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->input_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.ImportEntitiesMetadata)
  return target;
}

size_t ImportEntitiesMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string input_url = 5;
  if (this->input_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_url());
  }

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *progress_entities_);
  }

  // .google.datastore.admin.v1.Progress progress_bytes = 3;
  if (this->has_progress_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *progress_bytes_);
  }

  // .google.datastore.admin.v1.EntityFilter entity_filter = 4;
  if (this->has_entity_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entity_filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportEntitiesMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportEntitiesMetadata* source =
      ::google::protobuf::DynamicCastToGenerated<ImportEntitiesMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.ImportEntitiesMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.ImportEntitiesMetadata)
    MergeFrom(*source);
  }
}

void ImportEntitiesMetadata::MergeFrom(const ImportEntitiesMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input_url().size() > 0) {

    input_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_url_);
  }
  if (from.has_common()) {
    mutable_common()->::google::datastore::admin::v1::CommonMetadata::MergeFrom(from.common());
  }
  if (from.has_progress_entities()) {
    mutable_progress_entities()->::google::datastore::admin::v1::Progress::MergeFrom(from.progress_entities());
  }
  if (from.has_progress_bytes()) {
    mutable_progress_bytes()->::google::datastore::admin::v1::Progress::MergeFrom(from.progress_bytes());
  }
  if (from.has_entity_filter()) {
    mutable_entity_filter()->::google::datastore::admin::v1::EntityFilter::MergeFrom(from.entity_filter());
  }
}

void ImportEntitiesMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportEntitiesMetadata::CopyFrom(const ImportEntitiesMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.ImportEntitiesMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportEntitiesMetadata::IsInitialized() const {
  return true;
}

void ImportEntitiesMetadata::Swap(ImportEntitiesMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportEntitiesMetadata::InternalSwap(ImportEntitiesMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_url_.Swap(&other->input_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(common_, other->common_);
  swap(progress_entities_, other->progress_entities_);
  swap(progress_bytes_, other->progress_bytes_);
  swap(entity_filter_, other->entity_filter_);
}

::google::protobuf::Metadata ImportEntitiesMetadata::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EntityFilter::InitAsDefaultInstance() {
}
class EntityFilter::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityFilter::kKindsFieldNumber;
const int EntityFilter::kNamespaceIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityFilter::EntityFilter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.EntityFilter)
}
EntityFilter::EntityFilter(const EntityFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      kinds_(from.kinds_),
      namespace_ids_(from.namespace_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.EntityFilter)
}

void EntityFilter::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
}

EntityFilter::~EntityFilter() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.EntityFilter)
  SharedDtor();
}

void EntityFilter::SharedDtor() {
}

void EntityFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityFilter& EntityFilter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EntityFilter_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void EntityFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.EntityFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kinds_.Clear();
  namespace_ids_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EntityFilter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EntityFilter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string kinds = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.EntityFilter.kinds");
          object = msg->add_kinds();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string namespace_ids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.EntityFilter.namespace_ids");
          object = msg->add_namespace_ids();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EntityFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.EntityFilter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string kinds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_kinds()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kinds(this->kinds_size() - 1).data(),
            static_cast<int>(this->kinds(this->kinds_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.EntityFilter.kinds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string namespace_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_namespace_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_ids(this->namespace_ids_size() - 1).data(),
            static_cast<int>(this->namespace_ids(this->namespace_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.EntityFilter.namespace_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.EntityFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.EntityFilter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EntityFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.EntityFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string kinds = 1;
  for (int i = 0, n = this->kinds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kinds(i).data(), static_cast<int>(this->kinds(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.EntityFilter.kinds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->kinds(i), output);
  }

  // repeated string namespace_ids = 2;
  for (int i = 0, n = this->namespace_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_ids(i).data(), static_cast<int>(this->namespace_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.EntityFilter.namespace_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->namespace_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.EntityFilter)
}

::google::protobuf::uint8* EntityFilter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.EntityFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string kinds = 1;
  for (int i = 0, n = this->kinds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kinds(i).data(), static_cast<int>(this->kinds(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.EntityFilter.kinds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->kinds(i), target);
  }

  // repeated string namespace_ids = 2;
  for (int i = 0, n = this->namespace_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_ids(i).data(), static_cast<int>(this->namespace_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.EntityFilter.namespace_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->namespace_ids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.EntityFilter)
  return target;
}

size_t EntityFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.EntityFilter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string kinds = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->kinds_size());
  for (int i = 0, n = this->kinds_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->kinds(i));
  }

  // repeated string namespace_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->namespace_ids_size());
  for (int i = 0, n = this->namespace_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->namespace_ids(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.EntityFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityFilter* source =
      ::google::protobuf::DynamicCastToGenerated<EntityFilter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.EntityFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.EntityFilter)
    MergeFrom(*source);
  }
}

void EntityFilter::MergeFrom(const EntityFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.EntityFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kinds_.MergeFrom(from.kinds_);
  namespace_ids_.MergeFrom(from.namespace_ids_);
}

void EntityFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.EntityFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityFilter::CopyFrom(const EntityFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.EntityFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityFilter::IsInitialized() const {
  return true;
}

void EntityFilter::Swap(EntityFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityFilter::InternalSwap(EntityFilter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  kinds_.InternalSwap(CastToBase(&other->kinds_));
  namespace_ids_.InternalSwap(CastToBase(&other->namespace_ids_));
}

::google::protobuf::Metadata EntityFilter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateIndexRequest::InitAsDefaultInstance() {
  ::google::datastore::admin::v1::_CreateIndexRequest_default_instance_._instance.get_mutable()->index_ = const_cast< ::google::datastore::admin::v1::Index*>(
      ::google::datastore::admin::v1::Index::internal_default_instance());
}
class CreateIndexRequest::HasBitSetters {
 public:
  static const ::google::datastore::admin::v1::Index& index(const CreateIndexRequest* msg);
};

const ::google::datastore::admin::v1::Index&
CreateIndexRequest::HasBitSetters::index(const CreateIndexRequest* msg) {
  return *msg->index_;
}
void CreateIndexRequest::clear_index() {
  if (GetArenaNoVirtual() == nullptr && index_ != nullptr) {
    delete index_;
  }
  index_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateIndexRequest::kProjectIdFieldNumber;
const int CreateIndexRequest::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIndexRequest::CreateIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.CreateIndexRequest)
}
CreateIndexRequest::CreateIndexRequest(const CreateIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_index()) {
    index_ = new ::google::datastore::admin::v1::Index(*from.index_);
  } else {
    index_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.CreateIndexRequest)
}

void CreateIndexRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = nullptr;
}

CreateIndexRequest::~CreateIndexRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.CreateIndexRequest)
  SharedDtor();
}

void CreateIndexRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete index_;
}

void CreateIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateIndexRequest& CreateIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && index_ != nullptr) {
    delete index_;
  }
  index_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateIndexRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateIndexRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.CreateIndexRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.datastore.admin.v1.Index index = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::Index::_InternalParse;
        object = msg->mutable_index();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.CreateIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.CreateIndexRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.Index index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.CreateIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.CreateIndexRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.CreateIndexRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // .google.datastore.admin.v1.Index index = 3;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::index(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.CreateIndexRequest)
}

::google::protobuf::uint8* CreateIndexRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.CreateIndexRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // .google.datastore.admin.v1.Index index = 3;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::index(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.CreateIndexRequest)
  return target;
}

size_t CreateIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.CreateIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.admin.v1.Index index = 3;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIndexRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateIndexRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.CreateIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.CreateIndexRequest)
    MergeFrom(*source);
  }
}

void CreateIndexRequest::MergeFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_index()) {
    mutable_index()->::google::datastore::admin::v1::Index::MergeFrom(from.index());
  }
}

void CreateIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIndexRequest::CopyFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexRequest::IsInitialized() const {
  return true;
}

void CreateIndexRequest::Swap(CreateIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateIndexRequest::InternalSwap(CreateIndexRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
}

::google::protobuf::Metadata CreateIndexRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteIndexRequest::InitAsDefaultInstance() {
}
class DeleteIndexRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexRequest::kProjectIdFieldNumber;
const int DeleteIndexRequest::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexRequest::DeleteIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.DeleteIndexRequest)
}
DeleteIndexRequest::DeleteIndexRequest(const DeleteIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  index_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_id().size() > 0) {
    index_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.DeleteIndexRequest)
}

void DeleteIndexRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteIndexRequest::~DeleteIndexRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.DeleteIndexRequest)
  SharedDtor();
}

void DeleteIndexRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteIndexRequest& DeleteIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteIndexRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteIndexRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.DeleteIndexRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string index_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.DeleteIndexRequest.index_id");
        object = msg->mutable_index_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.DeleteIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.DeleteIndexRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string index_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_id().data(), static_cast<int>(this->index_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.DeleteIndexRequest.index_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.DeleteIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.DeleteIndexRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.DeleteIndexRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_id().data(), static_cast<int>(this->index_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.DeleteIndexRequest.index_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->index_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.DeleteIndexRequest)
}

::google::protobuf::uint8* DeleteIndexRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.DeleteIndexRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_id().data(), static_cast<int>(this->index_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.DeleteIndexRequest.index_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->index_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.DeleteIndexRequest)
  return target;
}

size_t DeleteIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.DeleteIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteIndexRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.DeleteIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.DeleteIndexRequest)
    MergeFrom(*source);
  }
}

void DeleteIndexRequest::MergeFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.index_id().size() > 0) {

    index_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_id_);
  }
}

void DeleteIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexRequest::CopyFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexRequest::IsInitialized() const {
  return true;
}

void DeleteIndexRequest::Swap(DeleteIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexRequest::InternalSwap(DeleteIndexRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  index_id_.Swap(&other->index_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteIndexRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetIndexRequest::InitAsDefaultInstance() {
}
class GetIndexRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIndexRequest::kProjectIdFieldNumber;
const int GetIndexRequest::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIndexRequest::GetIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.GetIndexRequest)
}
GetIndexRequest::GetIndexRequest(const GetIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  index_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_id().size() > 0) {
    index_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.GetIndexRequest)
}

void GetIndexRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetIndexRequest::~GetIndexRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.GetIndexRequest)
  SharedDtor();
}

void GetIndexRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIndexRequest& GetIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetIndexRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetIndexRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetIndexRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.GetIndexRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string index_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.GetIndexRequest.index_id");
        object = msg->mutable_index_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.GetIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.GetIndexRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string index_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_id().data(), static_cast<int>(this->index_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.GetIndexRequest.index_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.GetIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.GetIndexRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.GetIndexRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_id().data(), static_cast<int>(this->index_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.GetIndexRequest.index_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->index_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.GetIndexRequest)
}

::google::protobuf::uint8* GetIndexRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.GetIndexRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_id().data(), static_cast<int>(this->index_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.GetIndexRequest.index_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->index_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.GetIndexRequest)
  return target;
}

size_t GetIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.GetIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.GetIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIndexRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetIndexRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.GetIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.GetIndexRequest)
    MergeFrom(*source);
  }
}

void GetIndexRequest::MergeFrom(const GetIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.GetIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.index_id().size() > 0) {

    index_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_id_);
  }
}

void GetIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.GetIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIndexRequest::CopyFrom(const GetIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.GetIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIndexRequest::IsInitialized() const {
  return true;
}

void GetIndexRequest::Swap(GetIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIndexRequest::InternalSwap(GetIndexRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  index_id_.Swap(&other->index_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetIndexRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListIndexesRequest::InitAsDefaultInstance() {
}
class ListIndexesRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListIndexesRequest::kProjectIdFieldNumber;
const int ListIndexesRequest::kFilterFieldNumber;
const int ListIndexesRequest::kPageSizeFieldNumber;
const int ListIndexesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListIndexesRequest::ListIndexesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.ListIndexesRequest)
}
ListIndexesRequest::ListIndexesRequest(const ListIndexesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.ListIndexesRequest)
}

void ListIndexesRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListIndexesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListIndexesRequest::~ListIndexesRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.ListIndexesRequest)
  SharedDtor();
}

void ListIndexesRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListIndexesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListIndexesRequest& ListIndexesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListIndexesRequest_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void ListIndexesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.ListIndexesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListIndexesRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListIndexesRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ListIndexesRequest.project_id");
        object = msg->mutable_project_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filter = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ListIndexesRequest.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 page_size = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string page_token = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ListIndexesRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListIndexesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.ListIndexesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ListIndexesRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ListIndexesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ListIndexesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.ListIndexesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.ListIndexesRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListIndexesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.ListIndexesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ListIndexesRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ListIndexesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filter(), output);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ListIndexesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.ListIndexesRequest)
}

::google::protobuf::uint8* ListIndexesRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.ListIndexesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ListIndexesRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ListIndexesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filter(), target);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ListIndexesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.ListIndexesRequest)
  return target;
}

size_t ListIndexesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.ListIndexesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListIndexesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.ListIndexesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListIndexesRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListIndexesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.ListIndexesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.ListIndexesRequest)
    MergeFrom(*source);
  }
}

void ListIndexesRequest::MergeFrom(const ListIndexesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.ListIndexesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListIndexesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.ListIndexesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListIndexesRequest::CopyFrom(const ListIndexesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.ListIndexesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListIndexesRequest::IsInitialized() const {
  return true;
}

void ListIndexesRequest::Swap(ListIndexesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListIndexesRequest::InternalSwap(ListIndexesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListIndexesRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListIndexesResponse::InitAsDefaultInstance() {
}
class ListIndexesResponse::HasBitSetters {
 public:
};

void ListIndexesResponse::clear_indexes() {
  indexes_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListIndexesResponse::kIndexesFieldNumber;
const int ListIndexesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListIndexesResponse::ListIndexesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.ListIndexesResponse)
}
ListIndexesResponse::ListIndexesResponse(const ListIndexesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      indexes_(from.indexes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.ListIndexesResponse)
}

void ListIndexesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListIndexesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListIndexesResponse::~ListIndexesResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.ListIndexesResponse)
  SharedDtor();
}

void ListIndexesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListIndexesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListIndexesResponse& ListIndexesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListIndexesResponse_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void ListIndexesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.ListIndexesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indexes_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListIndexesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListIndexesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.datastore.admin.v1.Index indexes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::datastore::admin::v1::Index::_InternalParse;
          object = msg->add_indexes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.ListIndexesResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListIndexesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.ListIndexesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.admin.v1.Index indexes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_indexes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.ListIndexesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.ListIndexesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.ListIndexesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListIndexesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.ListIndexesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.admin.v1.Index indexes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indexes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->indexes(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ListIndexesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.ListIndexesResponse)
}

::google::protobuf::uint8* ListIndexesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.ListIndexesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.admin.v1.Index indexes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indexes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->indexes(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.ListIndexesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.ListIndexesResponse)
  return target;
}

size_t ListIndexesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.ListIndexesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.datastore.admin.v1.Index indexes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->indexes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->indexes(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListIndexesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.ListIndexesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListIndexesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListIndexesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.ListIndexesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.ListIndexesResponse)
    MergeFrom(*source);
  }
}

void ListIndexesResponse::MergeFrom(const ListIndexesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.ListIndexesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indexes_.MergeFrom(from.indexes_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListIndexesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.ListIndexesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListIndexesResponse::CopyFrom(const ListIndexesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.ListIndexesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListIndexesResponse::IsInitialized() const {
  return true;
}

void ListIndexesResponse::Swap(ListIndexesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListIndexesResponse::InternalSwap(ListIndexesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&indexes_)->InternalSwap(CastToBase(&other->indexes_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListIndexesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IndexOperationMetadata::InitAsDefaultInstance() {
  ::google::datastore::admin::v1::_IndexOperationMetadata_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::datastore::admin::v1::CommonMetadata*>(
      ::google::datastore::admin::v1::CommonMetadata::internal_default_instance());
  ::google::datastore::admin::v1::_IndexOperationMetadata_default_instance_._instance.get_mutable()->progress_entities_ = const_cast< ::google::datastore::admin::v1::Progress*>(
      ::google::datastore::admin::v1::Progress::internal_default_instance());
}
class IndexOperationMetadata::HasBitSetters {
 public:
  static const ::google::datastore::admin::v1::CommonMetadata& common(const IndexOperationMetadata* msg);
  static const ::google::datastore::admin::v1::Progress& progress_entities(const IndexOperationMetadata* msg);
};

const ::google::datastore::admin::v1::CommonMetadata&
IndexOperationMetadata::HasBitSetters::common(const IndexOperationMetadata* msg) {
  return *msg->common_;
}
const ::google::datastore::admin::v1::Progress&
IndexOperationMetadata::HasBitSetters::progress_entities(const IndexOperationMetadata* msg) {
  return *msg->progress_entities_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexOperationMetadata::kCommonFieldNumber;
const int IndexOperationMetadata::kProgressEntitiesFieldNumber;
const int IndexOperationMetadata::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexOperationMetadata::IndexOperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.admin.v1.IndexOperationMetadata)
}
IndexOperationMetadata::IndexOperationMetadata(const IndexOperationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_id().size() > 0) {
    index_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_id_);
  }
  if (from.has_common()) {
    common_ = new ::google::datastore::admin::v1::CommonMetadata(*from.common_);
  } else {
    common_ = nullptr;
  }
  if (from.has_progress_entities()) {
    progress_entities_ = new ::google::datastore::admin::v1::Progress(*from.progress_entities_);
  } else {
    progress_entities_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.admin.v1.IndexOperationMetadata)
}

void IndexOperationMetadata::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IndexOperationMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  index_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_entities_) -
      reinterpret_cast<char*>(&common_)) + sizeof(progress_entities_));
}

IndexOperationMetadata::~IndexOperationMetadata() {
  // @@protoc_insertion_point(destructor:google.datastore.admin.v1.IndexOperationMetadata)
  SharedDtor();
}

void IndexOperationMetadata::SharedDtor() {
  index_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete progress_entities_;
}

void IndexOperationMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexOperationMetadata& IndexOperationMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IndexOperationMetadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto.base);
  return *internal_default_instance();
}


void IndexOperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.admin.v1.IndexOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && progress_entities_ != nullptr) {
    delete progress_entities_;
  }
  progress_entities_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IndexOperationMetadata::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IndexOperationMetadata*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.datastore.admin.v1.CommonMetadata common = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::CommonMetadata::_InternalParse;
        object = msg->mutable_common();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.datastore.admin.v1.Progress progress_entities = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::datastore::admin::v1::Progress::_InternalParse;
        object = msg->mutable_progress_entities();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string index_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.datastore.admin.v1.IndexOperationMetadata.index_id");
        object = msg->mutable_index_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IndexOperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.admin.v1.IndexOperationMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.admin.v1.CommonMetadata common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.admin.v1.Progress progress_entities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string index_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_id().data(), static_cast<int>(this->index_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.admin.v1.IndexOperationMetadata.index_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.admin.v1.IndexOperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.admin.v1.IndexOperationMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IndexOperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.admin.v1.IndexOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::common(this), output);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::progress_entities(this), output);
  }

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_id().data(), static_cast<int>(this->index_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.IndexOperationMetadata.index_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->index_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.admin.v1.IndexOperationMetadata)
}

::google::protobuf::uint8* IndexOperationMetadata::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.admin.v1.IndexOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::common(this), target);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::progress_entities(this), target);
  }

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_id().data(), static_cast<int>(this->index_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.admin.v1.IndexOperationMetadata.index_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->index_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.admin.v1.IndexOperationMetadata)
  return target;
}

size_t IndexOperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.admin.v1.IndexOperationMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string index_id = 3;
  if (this->index_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_id());
  }

  // .google.datastore.admin.v1.CommonMetadata common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .google.datastore.admin.v1.Progress progress_entities = 2;
  if (this->has_progress_entities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *progress_entities_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexOperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.admin.v1.IndexOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexOperationMetadata* source =
      ::google::protobuf::DynamicCastToGenerated<IndexOperationMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.admin.v1.IndexOperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.admin.v1.IndexOperationMetadata)
    MergeFrom(*source);
  }
}

void IndexOperationMetadata::MergeFrom(const IndexOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.admin.v1.IndexOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_id().size() > 0) {

    index_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_id_);
  }
  if (from.has_common()) {
    mutable_common()->::google::datastore::admin::v1::CommonMetadata::MergeFrom(from.common());
  }
  if (from.has_progress_entities()) {
    mutable_progress_entities()->::google::datastore::admin::v1::Progress::MergeFrom(from.progress_entities());
  }
}

void IndexOperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.admin.v1.IndexOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexOperationMetadata::CopyFrom(const IndexOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.admin.v1.IndexOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexOperationMetadata::IsInitialized() const {
  return true;
}

void IndexOperationMetadata::Swap(IndexOperationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexOperationMetadata::InternalSwap(IndexOperationMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  index_id_.Swap(&other->index_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(common_, other->common_);
  swap(progress_entities_, other->progress_entities_);
}

::google::protobuf::Metadata IndexOperationMetadata::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto);
  return ::file_level_metadata_google_2fdatastore_2fadmin_2fv1_2fdatastore_5fadmin_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace admin
}  // namespace datastore
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::CommonMetadata_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::CommonMetadata* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::CommonMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::CommonMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::Progress* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::Progress >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::Progress >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ExportEntitiesRequest_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ExportEntitiesRequest* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ExportEntitiesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ExportEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ImportEntitiesRequest_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ImportEntitiesRequest* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ImportEntitiesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ImportEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ExportEntitiesResponse* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ExportEntitiesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ExportEntitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ExportEntitiesMetadata* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ExportEntitiesMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ExportEntitiesMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ImportEntitiesMetadata* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ImportEntitiesMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ImportEntitiesMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::EntityFilter* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::EntityFilter >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::EntityFilter >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::CreateIndexRequest* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::CreateIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::CreateIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::DeleteIndexRequest* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::DeleteIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::DeleteIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::GetIndexRequest* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::GetIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::GetIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ListIndexesRequest* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ListIndexesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ListIndexesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::ListIndexesResponse* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::ListIndexesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::ListIndexesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::datastore::admin::v1::IndexOperationMetadata* Arena::CreateMaybeMessage< ::google::datastore::admin::v1::IndexOperationMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::datastore::admin::v1::IndexOperationMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
