// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/script/type/script_manifest.proto

#ifndef PROTOBUF_INCLUDED_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto
#define PROTOBUF_INCLUDED_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/apps/script/type/addon_widget_set.pb.h"
#include "google/apps/script/type/extension_point.pb.h"
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto();
namespace google {
namespace apps {
namespace script {
namespace type {
class CommonAddOnManifest;
class CommonAddOnManifestDefaultTypeInternal;
extern CommonAddOnManifestDefaultTypeInternal _CommonAddOnManifest_default_instance_;
class HttpOptions;
class HttpOptionsDefaultTypeInternal;
extern HttpOptionsDefaultTypeInternal _HttpOptions_default_instance_;
class LayoutProperties;
class LayoutPropertiesDefaultTypeInternal;
extern LayoutPropertiesDefaultTypeInternal _LayoutProperties_default_instance_;
}  // namespace type
}  // namespace script
}  // namespace apps
namespace protobuf {
template<> ::google::apps::script::type::CommonAddOnManifest* Arena::CreateMaybeMessage<::google::apps::script::type::CommonAddOnManifest>(Arena*);
template<> ::google::apps::script::type::HttpOptions* Arena::CreateMaybeMessage<::google::apps::script::type::HttpOptions>(Arena*);
template<> ::google::apps::script::type::LayoutProperties* Arena::CreateMaybeMessage<::google::apps::script::type::LayoutProperties>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace apps {
namespace script {
namespace type {

enum HttpAuthorizationHeader {
  HTTP_AUTHORIZATION_HEADER_UNSPECIFIED = 0,
  SYSTEM_ID_TOKEN = 1,
  USER_ID_TOKEN = 2,
  NONE = 3,
  HttpAuthorizationHeader_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HttpAuthorizationHeader_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HttpAuthorizationHeader_IsValid(int value);
const HttpAuthorizationHeader HttpAuthorizationHeader_MIN = HTTP_AUTHORIZATION_HEADER_UNSPECIFIED;
const HttpAuthorizationHeader HttpAuthorizationHeader_MAX = NONE;
const int HttpAuthorizationHeader_ARRAYSIZE = HttpAuthorizationHeader_MAX + 1;

const ::google::protobuf::EnumDescriptor* HttpAuthorizationHeader_descriptor();
inline const ::std::string& HttpAuthorizationHeader_Name(HttpAuthorizationHeader value) {
  return ::google::protobuf::internal::NameOfEnum(
    HttpAuthorizationHeader_descriptor(), value);
}
inline bool HttpAuthorizationHeader_Parse(
    const ::std::string& name, HttpAuthorizationHeader* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HttpAuthorizationHeader>(
    HttpAuthorizationHeader_descriptor(), name, value);
}
// ===================================================================

class CommonAddOnManifest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.script.type.CommonAddOnManifest) */ {
 public:
  CommonAddOnManifest();
  virtual ~CommonAddOnManifest();

  CommonAddOnManifest(const CommonAddOnManifest& from);

  inline CommonAddOnManifest& operator=(const CommonAddOnManifest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommonAddOnManifest(CommonAddOnManifest&& from) noexcept
    : CommonAddOnManifest() {
    *this = ::std::move(from);
  }

  inline CommonAddOnManifest& operator=(CommonAddOnManifest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CommonAddOnManifest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonAddOnManifest* internal_default_instance() {
    return reinterpret_cast<const CommonAddOnManifest*>(
               &_CommonAddOnManifest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CommonAddOnManifest* other);
  friend void swap(CommonAddOnManifest& a, CommonAddOnManifest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommonAddOnManifest* New() const final {
    return CreateMaybeMessage<CommonAddOnManifest>(nullptr);
  }

  CommonAddOnManifest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommonAddOnManifest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommonAddOnManifest& from);
  void MergeFrom(const CommonAddOnManifest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonAddOnManifest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.apps.script.type.UniversalActionExtensionPoint universal_actions = 7;
  int universal_actions_size() const;
  void clear_universal_actions();
  static const int kUniversalActionsFieldNumber = 7;
  ::google::apps::script::type::UniversalActionExtensionPoint* mutable_universal_actions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::apps::script::type::UniversalActionExtensionPoint >*
      mutable_universal_actions();
  const ::google::apps::script::type::UniversalActionExtensionPoint& universal_actions(int index) const;
  ::google::apps::script::type::UniversalActionExtensionPoint* add_universal_actions();
  const ::google::protobuf::RepeatedPtrField< ::google::apps::script::type::UniversalActionExtensionPoint >&
      universal_actions() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string logo_url = 2;
  void clear_logo_url();
  static const int kLogoUrlFieldNumber = 2;
  const ::std::string& logo_url() const;
  void set_logo_url(const ::std::string& value);
  #if LANG_CXX11
  void set_logo_url(::std::string&& value);
  #endif
  void set_logo_url(const char* value);
  void set_logo_url(const char* value, size_t size);
  ::std::string* mutable_logo_url();
  ::std::string* release_logo_url();
  void set_allocated_logo_url(::std::string* logo_url);

  // .google.apps.script.type.LayoutProperties layout_properties = 3;
  bool has_layout_properties() const;
  void clear_layout_properties();
  static const int kLayoutPropertiesFieldNumber = 3;
  const ::google::apps::script::type::LayoutProperties& layout_properties() const;
  ::google::apps::script::type::LayoutProperties* release_layout_properties();
  ::google::apps::script::type::LayoutProperties* mutable_layout_properties();
  void set_allocated_layout_properties(::google::apps::script::type::LayoutProperties* layout_properties);

  // .google.apps.script.type.AddOnWidgetSet add_on_widget_set = 4;
  bool has_add_on_widget_set() const;
  void clear_add_on_widget_set();
  static const int kAddOnWidgetSetFieldNumber = 4;
  const ::google::apps::script::type::AddOnWidgetSet& add_on_widget_set() const;
  ::google::apps::script::type::AddOnWidgetSet* release_add_on_widget_set();
  ::google::apps::script::type::AddOnWidgetSet* mutable_add_on_widget_set();
  void set_allocated_add_on_widget_set(::google::apps::script::type::AddOnWidgetSet* add_on_widget_set);

  // .google.apps.script.type.HomepageExtensionPoint homepage_trigger = 6;
  bool has_homepage_trigger() const;
  void clear_homepage_trigger();
  static const int kHomepageTriggerFieldNumber = 6;
  const ::google::apps::script::type::HomepageExtensionPoint& homepage_trigger() const;
  ::google::apps::script::type::HomepageExtensionPoint* release_homepage_trigger();
  ::google::apps::script::type::HomepageExtensionPoint* mutable_homepage_trigger();
  void set_allocated_homepage_trigger(::google::apps::script::type::HomepageExtensionPoint* homepage_trigger);

  // .google.protobuf.ListValue open_link_url_prefixes = 8;
  bool has_open_link_url_prefixes() const;
  void clear_open_link_url_prefixes();
  static const int kOpenLinkUrlPrefixesFieldNumber = 8;
  const ::google::protobuf::ListValue& open_link_url_prefixes() const;
  ::google::protobuf::ListValue* release_open_link_url_prefixes();
  ::google::protobuf::ListValue* mutable_open_link_url_prefixes();
  void set_allocated_open_link_url_prefixes(::google::protobuf::ListValue* open_link_url_prefixes);

  // bool use_locale_from_app = 5;
  void clear_use_locale_from_app();
  static const int kUseLocaleFromAppFieldNumber = 5;
  bool use_locale_from_app() const;
  void set_use_locale_from_app(bool value);

  // @@protoc_insertion_point(class_scope:google.apps.script.type.CommonAddOnManifest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::apps::script::type::UniversalActionExtensionPoint > universal_actions_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr logo_url_;
  ::google::apps::script::type::LayoutProperties* layout_properties_;
  ::google::apps::script::type::AddOnWidgetSet* add_on_widget_set_;
  ::google::apps::script::type::HomepageExtensionPoint* homepage_trigger_;
  ::google::protobuf::ListValue* open_link_url_prefixes_;
  bool use_locale_from_app_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto;
};
// -------------------------------------------------------------------

class LayoutProperties final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.script.type.LayoutProperties) */ {
 public:
  LayoutProperties();
  virtual ~LayoutProperties();

  LayoutProperties(const LayoutProperties& from);

  inline LayoutProperties& operator=(const LayoutProperties& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LayoutProperties(LayoutProperties&& from) noexcept
    : LayoutProperties() {
    *this = ::std::move(from);
  }

  inline LayoutProperties& operator=(LayoutProperties&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LayoutProperties& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LayoutProperties* internal_default_instance() {
    return reinterpret_cast<const LayoutProperties*>(
               &_LayoutProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LayoutProperties* other);
  friend void swap(LayoutProperties& a, LayoutProperties& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LayoutProperties* New() const final {
    return CreateMaybeMessage<LayoutProperties>(nullptr);
  }

  LayoutProperties* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LayoutProperties>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LayoutProperties& from);
  void MergeFrom(const LayoutProperties& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LayoutProperties* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string primary_color = 1;
  void clear_primary_color();
  static const int kPrimaryColorFieldNumber = 1;
  const ::std::string& primary_color() const;
  void set_primary_color(const ::std::string& value);
  #if LANG_CXX11
  void set_primary_color(::std::string&& value);
  #endif
  void set_primary_color(const char* value);
  void set_primary_color(const char* value, size_t size);
  ::std::string* mutable_primary_color();
  ::std::string* release_primary_color();
  void set_allocated_primary_color(::std::string* primary_color);

  // string secondary_color = 2;
  void clear_secondary_color();
  static const int kSecondaryColorFieldNumber = 2;
  const ::std::string& secondary_color() const;
  void set_secondary_color(const ::std::string& value);
  #if LANG_CXX11
  void set_secondary_color(::std::string&& value);
  #endif
  void set_secondary_color(const char* value);
  void set_secondary_color(const char* value, size_t size);
  ::std::string* mutable_secondary_color();
  ::std::string* release_secondary_color();
  void set_allocated_secondary_color(::std::string* secondary_color);

  // @@protoc_insertion_point(class_scope:google.apps.script.type.LayoutProperties)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr primary_color_;
  ::google::protobuf::internal::ArenaStringPtr secondary_color_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto;
};
// -------------------------------------------------------------------

class HttpOptions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.script.type.HttpOptions) */ {
 public:
  HttpOptions();
  virtual ~HttpOptions();

  HttpOptions(const HttpOptions& from);

  inline HttpOptions& operator=(const HttpOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HttpOptions(HttpOptions&& from) noexcept
    : HttpOptions() {
    *this = ::std::move(from);
  }

  inline HttpOptions& operator=(HttpOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HttpOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HttpOptions* internal_default_instance() {
    return reinterpret_cast<const HttpOptions*>(
               &_HttpOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HttpOptions* other);
  friend void swap(HttpOptions& a, HttpOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HttpOptions* New() const final {
    return CreateMaybeMessage<HttpOptions>(nullptr);
  }

  HttpOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HttpOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HttpOptions& from);
  void MergeFrom(const HttpOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HttpOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.apps.script.type.HttpAuthorizationHeader authorization_header = 1;
  void clear_authorization_header();
  static const int kAuthorizationHeaderFieldNumber = 1;
  ::google::apps::script::type::HttpAuthorizationHeader authorization_header() const;
  void set_authorization_header(::google::apps::script::type::HttpAuthorizationHeader value);

  // @@protoc_insertion_point(class_scope:google.apps.script.type.HttpOptions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int authorization_header_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommonAddOnManifest

// string name = 1;
inline void CommonAddOnManifest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonAddOnManifest::name() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.CommonAddOnManifest.name)
  return name_.GetNoArena();
}
inline void CommonAddOnManifest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.CommonAddOnManifest.name)
}
#if LANG_CXX11
inline void CommonAddOnManifest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.CommonAddOnManifest.name)
}
#endif
inline void CommonAddOnManifest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.CommonAddOnManifest.name)
}
inline void CommonAddOnManifest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.CommonAddOnManifest.name)
}
inline ::std::string* CommonAddOnManifest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.CommonAddOnManifest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonAddOnManifest::release_name() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.CommonAddOnManifest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonAddOnManifest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.CommonAddOnManifest.name)
}

// string logo_url = 2;
inline void CommonAddOnManifest::clear_logo_url() {
  logo_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonAddOnManifest::logo_url() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.CommonAddOnManifest.logo_url)
  return logo_url_.GetNoArena();
}
inline void CommonAddOnManifest::set_logo_url(const ::std::string& value) {
  
  logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.CommonAddOnManifest.logo_url)
}
#if LANG_CXX11
inline void CommonAddOnManifest::set_logo_url(::std::string&& value) {
  
  logo_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.CommonAddOnManifest.logo_url)
}
#endif
inline void CommonAddOnManifest::set_logo_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.CommonAddOnManifest.logo_url)
}
inline void CommonAddOnManifest::set_logo_url(const char* value, size_t size) {
  
  logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.CommonAddOnManifest.logo_url)
}
inline ::std::string* CommonAddOnManifest::mutable_logo_url() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.CommonAddOnManifest.logo_url)
  return logo_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonAddOnManifest::release_logo_url() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.CommonAddOnManifest.logo_url)
  
  return logo_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonAddOnManifest::set_allocated_logo_url(::std::string* logo_url) {
  if (logo_url != nullptr) {
    
  } else {
    
  }
  logo_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_url);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.CommonAddOnManifest.logo_url)
}

// .google.apps.script.type.LayoutProperties layout_properties = 3;
inline bool CommonAddOnManifest::has_layout_properties() const {
  return this != internal_default_instance() && layout_properties_ != nullptr;
}
inline void CommonAddOnManifest::clear_layout_properties() {
  if (GetArenaNoVirtual() == nullptr && layout_properties_ != nullptr) {
    delete layout_properties_;
  }
  layout_properties_ = nullptr;
}
inline const ::google::apps::script::type::LayoutProperties& CommonAddOnManifest::layout_properties() const {
  const ::google::apps::script::type::LayoutProperties* p = layout_properties_;
  // @@protoc_insertion_point(field_get:google.apps.script.type.CommonAddOnManifest.layout_properties)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::apps::script::type::LayoutProperties*>(
      &::google::apps::script::type::_LayoutProperties_default_instance_);
}
inline ::google::apps::script::type::LayoutProperties* CommonAddOnManifest::release_layout_properties() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.CommonAddOnManifest.layout_properties)
  
  ::google::apps::script::type::LayoutProperties* temp = layout_properties_;
  layout_properties_ = nullptr;
  return temp;
}
inline ::google::apps::script::type::LayoutProperties* CommonAddOnManifest::mutable_layout_properties() {
  
  if (layout_properties_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::apps::script::type::LayoutProperties>(GetArenaNoVirtual());
    layout_properties_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.CommonAddOnManifest.layout_properties)
  return layout_properties_;
}
inline void CommonAddOnManifest::set_allocated_layout_properties(::google::apps::script::type::LayoutProperties* layout_properties) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete layout_properties_;
  }
  if (layout_properties) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      layout_properties = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, layout_properties, submessage_arena);
    }
    
  } else {
    
  }
  layout_properties_ = layout_properties;
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.CommonAddOnManifest.layout_properties)
}

// .google.apps.script.type.AddOnWidgetSet add_on_widget_set = 4;
inline bool CommonAddOnManifest::has_add_on_widget_set() const {
  return this != internal_default_instance() && add_on_widget_set_ != nullptr;
}
inline const ::google::apps::script::type::AddOnWidgetSet& CommonAddOnManifest::add_on_widget_set() const {
  const ::google::apps::script::type::AddOnWidgetSet* p = add_on_widget_set_;
  // @@protoc_insertion_point(field_get:google.apps.script.type.CommonAddOnManifest.add_on_widget_set)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::apps::script::type::AddOnWidgetSet*>(
      &::google::apps::script::type::_AddOnWidgetSet_default_instance_);
}
inline ::google::apps::script::type::AddOnWidgetSet* CommonAddOnManifest::release_add_on_widget_set() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.CommonAddOnManifest.add_on_widget_set)
  
  ::google::apps::script::type::AddOnWidgetSet* temp = add_on_widget_set_;
  add_on_widget_set_ = nullptr;
  return temp;
}
inline ::google::apps::script::type::AddOnWidgetSet* CommonAddOnManifest::mutable_add_on_widget_set() {
  
  if (add_on_widget_set_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::apps::script::type::AddOnWidgetSet>(GetArenaNoVirtual());
    add_on_widget_set_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.CommonAddOnManifest.add_on_widget_set)
  return add_on_widget_set_;
}
inline void CommonAddOnManifest::set_allocated_add_on_widget_set(::google::apps::script::type::AddOnWidgetSet* add_on_widget_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(add_on_widget_set_);
  }
  if (add_on_widget_set) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      add_on_widget_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, add_on_widget_set, submessage_arena);
    }
    
  } else {
    
  }
  add_on_widget_set_ = add_on_widget_set;
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.CommonAddOnManifest.add_on_widget_set)
}

// bool use_locale_from_app = 5;
inline void CommonAddOnManifest::clear_use_locale_from_app() {
  use_locale_from_app_ = false;
}
inline bool CommonAddOnManifest::use_locale_from_app() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.CommonAddOnManifest.use_locale_from_app)
  return use_locale_from_app_;
}
inline void CommonAddOnManifest::set_use_locale_from_app(bool value) {
  
  use_locale_from_app_ = value;
  // @@protoc_insertion_point(field_set:google.apps.script.type.CommonAddOnManifest.use_locale_from_app)
}

// .google.apps.script.type.HomepageExtensionPoint homepage_trigger = 6;
inline bool CommonAddOnManifest::has_homepage_trigger() const {
  return this != internal_default_instance() && homepage_trigger_ != nullptr;
}
inline const ::google::apps::script::type::HomepageExtensionPoint& CommonAddOnManifest::homepage_trigger() const {
  const ::google::apps::script::type::HomepageExtensionPoint* p = homepage_trigger_;
  // @@protoc_insertion_point(field_get:google.apps.script.type.CommonAddOnManifest.homepage_trigger)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::apps::script::type::HomepageExtensionPoint*>(
      &::google::apps::script::type::_HomepageExtensionPoint_default_instance_);
}
inline ::google::apps::script::type::HomepageExtensionPoint* CommonAddOnManifest::release_homepage_trigger() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.CommonAddOnManifest.homepage_trigger)
  
  ::google::apps::script::type::HomepageExtensionPoint* temp = homepage_trigger_;
  homepage_trigger_ = nullptr;
  return temp;
}
inline ::google::apps::script::type::HomepageExtensionPoint* CommonAddOnManifest::mutable_homepage_trigger() {
  
  if (homepage_trigger_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::apps::script::type::HomepageExtensionPoint>(GetArenaNoVirtual());
    homepage_trigger_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.CommonAddOnManifest.homepage_trigger)
  return homepage_trigger_;
}
inline void CommonAddOnManifest::set_allocated_homepage_trigger(::google::apps::script::type::HomepageExtensionPoint* homepage_trigger) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(homepage_trigger_);
  }
  if (homepage_trigger) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      homepage_trigger = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, homepage_trigger, submessage_arena);
    }
    
  } else {
    
  }
  homepage_trigger_ = homepage_trigger;
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.CommonAddOnManifest.homepage_trigger)
}

// repeated .google.apps.script.type.UniversalActionExtensionPoint universal_actions = 7;
inline int CommonAddOnManifest::universal_actions_size() const {
  return universal_actions_.size();
}
inline ::google::apps::script::type::UniversalActionExtensionPoint* CommonAddOnManifest::mutable_universal_actions(int index) {
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.CommonAddOnManifest.universal_actions)
  return universal_actions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::apps::script::type::UniversalActionExtensionPoint >*
CommonAddOnManifest::mutable_universal_actions() {
  // @@protoc_insertion_point(field_mutable_list:google.apps.script.type.CommonAddOnManifest.universal_actions)
  return &universal_actions_;
}
inline const ::google::apps::script::type::UniversalActionExtensionPoint& CommonAddOnManifest::universal_actions(int index) const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.CommonAddOnManifest.universal_actions)
  return universal_actions_.Get(index);
}
inline ::google::apps::script::type::UniversalActionExtensionPoint* CommonAddOnManifest::add_universal_actions() {
  // @@protoc_insertion_point(field_add:google.apps.script.type.CommonAddOnManifest.universal_actions)
  return universal_actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::apps::script::type::UniversalActionExtensionPoint >&
CommonAddOnManifest::universal_actions() const {
  // @@protoc_insertion_point(field_list:google.apps.script.type.CommonAddOnManifest.universal_actions)
  return universal_actions_;
}

// .google.protobuf.ListValue open_link_url_prefixes = 8;
inline bool CommonAddOnManifest::has_open_link_url_prefixes() const {
  return this != internal_default_instance() && open_link_url_prefixes_ != nullptr;
}
inline const ::google::protobuf::ListValue& CommonAddOnManifest::open_link_url_prefixes() const {
  const ::google::protobuf::ListValue* p = open_link_url_prefixes_;
  // @@protoc_insertion_point(field_get:google.apps.script.type.CommonAddOnManifest.open_link_url_prefixes)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::ListValue*>(
      &::google::protobuf::_ListValue_default_instance_);
}
inline ::google::protobuf::ListValue* CommonAddOnManifest::release_open_link_url_prefixes() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.CommonAddOnManifest.open_link_url_prefixes)
  
  ::google::protobuf::ListValue* temp = open_link_url_prefixes_;
  open_link_url_prefixes_ = nullptr;
  return temp;
}
inline ::google::protobuf::ListValue* CommonAddOnManifest::mutable_open_link_url_prefixes() {
  
  if (open_link_url_prefixes_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::ListValue>(GetArenaNoVirtual());
    open_link_url_prefixes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.CommonAddOnManifest.open_link_url_prefixes)
  return open_link_url_prefixes_;
}
inline void CommonAddOnManifest::set_allocated_open_link_url_prefixes(::google::protobuf::ListValue* open_link_url_prefixes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(open_link_url_prefixes_);
  }
  if (open_link_url_prefixes) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(open_link_url_prefixes)->GetArena();
    if (message_arena != submessage_arena) {
      open_link_url_prefixes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, open_link_url_prefixes, submessage_arena);
    }
    
  } else {
    
  }
  open_link_url_prefixes_ = open_link_url_prefixes;
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.CommonAddOnManifest.open_link_url_prefixes)
}

// -------------------------------------------------------------------

// LayoutProperties

// string primary_color = 1;
inline void LayoutProperties::clear_primary_color() {
  primary_color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LayoutProperties::primary_color() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.LayoutProperties.primary_color)
  return primary_color_.GetNoArena();
}
inline void LayoutProperties::set_primary_color(const ::std::string& value) {
  
  primary_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.LayoutProperties.primary_color)
}
#if LANG_CXX11
inline void LayoutProperties::set_primary_color(::std::string&& value) {
  
  primary_color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.LayoutProperties.primary_color)
}
#endif
inline void LayoutProperties::set_primary_color(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  primary_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.LayoutProperties.primary_color)
}
inline void LayoutProperties::set_primary_color(const char* value, size_t size) {
  
  primary_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.LayoutProperties.primary_color)
}
inline ::std::string* LayoutProperties::mutable_primary_color() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.LayoutProperties.primary_color)
  return primary_color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LayoutProperties::release_primary_color() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.LayoutProperties.primary_color)
  
  return primary_color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LayoutProperties::set_allocated_primary_color(::std::string* primary_color) {
  if (primary_color != nullptr) {
    
  } else {
    
  }
  primary_color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primary_color);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.LayoutProperties.primary_color)
}

// string secondary_color = 2;
inline void LayoutProperties::clear_secondary_color() {
  secondary_color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LayoutProperties::secondary_color() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.LayoutProperties.secondary_color)
  return secondary_color_.GetNoArena();
}
inline void LayoutProperties::set_secondary_color(const ::std::string& value) {
  
  secondary_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.LayoutProperties.secondary_color)
}
#if LANG_CXX11
inline void LayoutProperties::set_secondary_color(::std::string&& value) {
  
  secondary_color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.LayoutProperties.secondary_color)
}
#endif
inline void LayoutProperties::set_secondary_color(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondary_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.LayoutProperties.secondary_color)
}
inline void LayoutProperties::set_secondary_color(const char* value, size_t size) {
  
  secondary_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.LayoutProperties.secondary_color)
}
inline ::std::string* LayoutProperties::mutable_secondary_color() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.LayoutProperties.secondary_color)
  return secondary_color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LayoutProperties::release_secondary_color() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.LayoutProperties.secondary_color)
  
  return secondary_color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LayoutProperties::set_allocated_secondary_color(::std::string* secondary_color) {
  if (secondary_color != nullptr) {
    
  } else {
    
  }
  secondary_color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondary_color);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.LayoutProperties.secondary_color)
}

// -------------------------------------------------------------------

// HttpOptions

// .google.apps.script.type.HttpAuthorizationHeader authorization_header = 1;
inline void HttpOptions::clear_authorization_header() {
  authorization_header_ = 0;
}
inline ::google::apps::script::type::HttpAuthorizationHeader HttpOptions::authorization_header() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.HttpOptions.authorization_header)
  return static_cast< ::google::apps::script::type::HttpAuthorizationHeader >(authorization_header_);
}
inline void HttpOptions::set_authorization_header(::google::apps::script::type::HttpAuthorizationHeader value) {
  
  authorization_header_ = value;
  // @@protoc_insertion_point(field_set:google.apps.script.type.HttpOptions.authorization_header)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace script
}  // namespace apps
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::apps::script::type::HttpAuthorizationHeader> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::apps::script::type::HttpAuthorizationHeader>() {
  return ::google::apps::script::type::HttpAuthorizationHeader_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fapps_2fscript_2ftype_2fscript_5fmanifest_2eproto
