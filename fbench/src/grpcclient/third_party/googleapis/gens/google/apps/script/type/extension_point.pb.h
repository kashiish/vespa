// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/script/type/extension_point.proto

#ifndef PROTOBUF_INCLUDED_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto
#define PROTOBUF_INCLUDED_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto();
namespace google {
namespace apps {
namespace script {
namespace type {
class HomepageExtensionPoint;
class HomepageExtensionPointDefaultTypeInternal;
extern HomepageExtensionPointDefaultTypeInternal _HomepageExtensionPoint_default_instance_;
class MenuItemExtensionPoint;
class MenuItemExtensionPointDefaultTypeInternal;
extern MenuItemExtensionPointDefaultTypeInternal _MenuItemExtensionPoint_default_instance_;
class UniversalActionExtensionPoint;
class UniversalActionExtensionPointDefaultTypeInternal;
extern UniversalActionExtensionPointDefaultTypeInternal _UniversalActionExtensionPoint_default_instance_;
}  // namespace type
}  // namespace script
}  // namespace apps
namespace protobuf {
template<> ::google::apps::script::type::HomepageExtensionPoint* Arena::CreateMaybeMessage<::google::apps::script::type::HomepageExtensionPoint>(Arena*);
template<> ::google::apps::script::type::MenuItemExtensionPoint* Arena::CreateMaybeMessage<::google::apps::script::type::MenuItemExtensionPoint>(Arena*);
template<> ::google::apps::script::type::UniversalActionExtensionPoint* Arena::CreateMaybeMessage<::google::apps::script::type::UniversalActionExtensionPoint>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace apps {
namespace script {
namespace type {

// ===================================================================

class MenuItemExtensionPoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.script.type.MenuItemExtensionPoint) */ {
 public:
  MenuItemExtensionPoint();
  virtual ~MenuItemExtensionPoint();

  MenuItemExtensionPoint(const MenuItemExtensionPoint& from);

  inline MenuItemExtensionPoint& operator=(const MenuItemExtensionPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MenuItemExtensionPoint(MenuItemExtensionPoint&& from) noexcept
    : MenuItemExtensionPoint() {
    *this = ::std::move(from);
  }

  inline MenuItemExtensionPoint& operator=(MenuItemExtensionPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MenuItemExtensionPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MenuItemExtensionPoint* internal_default_instance() {
    return reinterpret_cast<const MenuItemExtensionPoint*>(
               &_MenuItemExtensionPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MenuItemExtensionPoint* other);
  friend void swap(MenuItemExtensionPoint& a, MenuItemExtensionPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MenuItemExtensionPoint* New() const final {
    return CreateMaybeMessage<MenuItemExtensionPoint>(nullptr);
  }

  MenuItemExtensionPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MenuItemExtensionPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MenuItemExtensionPoint& from);
  void MergeFrom(const MenuItemExtensionPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MenuItemExtensionPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string run_function = 1;
  void clear_run_function();
  static const int kRunFunctionFieldNumber = 1;
  const ::std::string& run_function() const;
  void set_run_function(const ::std::string& value);
  #if LANG_CXX11
  void set_run_function(::std::string&& value);
  #endif
  void set_run_function(const char* value);
  void set_run_function(const char* value, size_t size);
  ::std::string* mutable_run_function();
  ::std::string* release_run_function();
  void set_allocated_run_function(::std::string* run_function);

  // string label = 2;
  void clear_label();
  static const int kLabelFieldNumber = 2;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // string logo_url = 3;
  void clear_logo_url();
  static const int kLogoUrlFieldNumber = 3;
  const ::std::string& logo_url() const;
  void set_logo_url(const ::std::string& value);
  #if LANG_CXX11
  void set_logo_url(::std::string&& value);
  #endif
  void set_logo_url(const char* value);
  void set_logo_url(const char* value, size_t size);
  ::std::string* mutable_logo_url();
  ::std::string* release_logo_url();
  void set_allocated_logo_url(::std::string* logo_url);

  // @@protoc_insertion_point(class_scope:google.apps.script.type.MenuItemExtensionPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr run_function_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::internal::ArenaStringPtr logo_url_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto;
};
// -------------------------------------------------------------------

class HomepageExtensionPoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.script.type.HomepageExtensionPoint) */ {
 public:
  HomepageExtensionPoint();
  virtual ~HomepageExtensionPoint();

  HomepageExtensionPoint(const HomepageExtensionPoint& from);

  inline HomepageExtensionPoint& operator=(const HomepageExtensionPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomepageExtensionPoint(HomepageExtensionPoint&& from) noexcept
    : HomepageExtensionPoint() {
    *this = ::std::move(from);
  }

  inline HomepageExtensionPoint& operator=(HomepageExtensionPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HomepageExtensionPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HomepageExtensionPoint* internal_default_instance() {
    return reinterpret_cast<const HomepageExtensionPoint*>(
               &_HomepageExtensionPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HomepageExtensionPoint* other);
  friend void swap(HomepageExtensionPoint& a, HomepageExtensionPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomepageExtensionPoint* New() const final {
    return CreateMaybeMessage<HomepageExtensionPoint>(nullptr);
  }

  HomepageExtensionPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HomepageExtensionPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HomepageExtensionPoint& from);
  void MergeFrom(const HomepageExtensionPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HomepageExtensionPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string run_function = 1;
  void clear_run_function();
  static const int kRunFunctionFieldNumber = 1;
  const ::std::string& run_function() const;
  void set_run_function(const ::std::string& value);
  #if LANG_CXX11
  void set_run_function(::std::string&& value);
  #endif
  void set_run_function(const char* value);
  void set_run_function(const char* value, size_t size);
  ::std::string* mutable_run_function();
  ::std::string* release_run_function();
  void set_allocated_run_function(::std::string* run_function);

  // .google.protobuf.BoolValue enabled = 2;
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  const ::google::protobuf::BoolValue& enabled() const;
  ::google::protobuf::BoolValue* release_enabled();
  ::google::protobuf::BoolValue* mutable_enabled();
  void set_allocated_enabled(::google::protobuf::BoolValue* enabled);

  // @@protoc_insertion_point(class_scope:google.apps.script.type.HomepageExtensionPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr run_function_;
  ::google::protobuf::BoolValue* enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto;
};
// -------------------------------------------------------------------

class UniversalActionExtensionPoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.script.type.UniversalActionExtensionPoint) */ {
 public:
  UniversalActionExtensionPoint();
  virtual ~UniversalActionExtensionPoint();

  UniversalActionExtensionPoint(const UniversalActionExtensionPoint& from);

  inline UniversalActionExtensionPoint& operator=(const UniversalActionExtensionPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UniversalActionExtensionPoint(UniversalActionExtensionPoint&& from) noexcept
    : UniversalActionExtensionPoint() {
    *this = ::std::move(from);
  }

  inline UniversalActionExtensionPoint& operator=(UniversalActionExtensionPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UniversalActionExtensionPoint& default_instance();

  enum ActionTypeCase {
    kOpenLink = 2,
    kRunFunction = 3,
    ACTION_TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UniversalActionExtensionPoint* internal_default_instance() {
    return reinterpret_cast<const UniversalActionExtensionPoint*>(
               &_UniversalActionExtensionPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UniversalActionExtensionPoint* other);
  friend void swap(UniversalActionExtensionPoint& a, UniversalActionExtensionPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UniversalActionExtensionPoint* New() const final {
    return CreateMaybeMessage<UniversalActionExtensionPoint>(nullptr);
  }

  UniversalActionExtensionPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UniversalActionExtensionPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UniversalActionExtensionPoint& from);
  void MergeFrom(const UniversalActionExtensionPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UniversalActionExtensionPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // string open_link = 2;
  private:
  bool has_open_link() const;
  public:
  void clear_open_link();
  static const int kOpenLinkFieldNumber = 2;
  const ::std::string& open_link() const;
  void set_open_link(const ::std::string& value);
  #if LANG_CXX11
  void set_open_link(::std::string&& value);
  #endif
  void set_open_link(const char* value);
  void set_open_link(const char* value, size_t size);
  ::std::string* mutable_open_link();
  ::std::string* release_open_link();
  void set_allocated_open_link(::std::string* open_link);

  // string run_function = 3;
  private:
  bool has_run_function() const;
  public:
  void clear_run_function();
  static const int kRunFunctionFieldNumber = 3;
  const ::std::string& run_function() const;
  void set_run_function(const ::std::string& value);
  #if LANG_CXX11
  void set_run_function(::std::string&& value);
  #endif
  void set_run_function(const char* value);
  void set_run_function(const char* value, size_t size);
  ::std::string* mutable_run_function();
  ::std::string* release_run_function();
  void set_allocated_run_function(::std::string* run_function);

  void clear_action_type();
  ActionTypeCase action_type_case() const;
  // @@protoc_insertion_point(class_scope:google.apps.script.type.UniversalActionExtensionPoint)
 private:
  class HasBitSetters;
  void set_has_open_link();
  void set_has_run_function();

  inline bool has_action_type() const;
  inline void clear_has_action_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  union ActionTypeUnion {
    ActionTypeUnion() {}
    ::google::protobuf::internal::ArenaStringPtr open_link_;
    ::google::protobuf::internal::ArenaStringPtr run_function_;
  } action_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MenuItemExtensionPoint

// string run_function = 1;
inline void MenuItemExtensionPoint::clear_run_function() {
  run_function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MenuItemExtensionPoint::run_function() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.MenuItemExtensionPoint.run_function)
  return run_function_.GetNoArena();
}
inline void MenuItemExtensionPoint::set_run_function(const ::std::string& value) {
  
  run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.MenuItemExtensionPoint.run_function)
}
#if LANG_CXX11
inline void MenuItemExtensionPoint::set_run_function(::std::string&& value) {
  
  run_function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.MenuItemExtensionPoint.run_function)
}
#endif
inline void MenuItemExtensionPoint::set_run_function(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.MenuItemExtensionPoint.run_function)
}
inline void MenuItemExtensionPoint::set_run_function(const char* value, size_t size) {
  
  run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.MenuItemExtensionPoint.run_function)
}
inline ::std::string* MenuItemExtensionPoint::mutable_run_function() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.MenuItemExtensionPoint.run_function)
  return run_function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MenuItemExtensionPoint::release_run_function() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.MenuItemExtensionPoint.run_function)
  
  return run_function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MenuItemExtensionPoint::set_allocated_run_function(::std::string* run_function) {
  if (run_function != nullptr) {
    
  } else {
    
  }
  run_function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_function);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.MenuItemExtensionPoint.run_function)
}

// string label = 2;
inline void MenuItemExtensionPoint::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MenuItemExtensionPoint::label() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.MenuItemExtensionPoint.label)
  return label_.GetNoArena();
}
inline void MenuItemExtensionPoint::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.MenuItemExtensionPoint.label)
}
#if LANG_CXX11
inline void MenuItemExtensionPoint::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.MenuItemExtensionPoint.label)
}
#endif
inline void MenuItemExtensionPoint::set_label(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.MenuItemExtensionPoint.label)
}
inline void MenuItemExtensionPoint::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.MenuItemExtensionPoint.label)
}
inline ::std::string* MenuItemExtensionPoint::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.MenuItemExtensionPoint.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MenuItemExtensionPoint::release_label() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.MenuItemExtensionPoint.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MenuItemExtensionPoint::set_allocated_label(::std::string* label) {
  if (label != nullptr) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.MenuItemExtensionPoint.label)
}

// string logo_url = 3;
inline void MenuItemExtensionPoint::clear_logo_url() {
  logo_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MenuItemExtensionPoint::logo_url() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.MenuItemExtensionPoint.logo_url)
  return logo_url_.GetNoArena();
}
inline void MenuItemExtensionPoint::set_logo_url(const ::std::string& value) {
  
  logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.MenuItemExtensionPoint.logo_url)
}
#if LANG_CXX11
inline void MenuItemExtensionPoint::set_logo_url(::std::string&& value) {
  
  logo_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.MenuItemExtensionPoint.logo_url)
}
#endif
inline void MenuItemExtensionPoint::set_logo_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.MenuItemExtensionPoint.logo_url)
}
inline void MenuItemExtensionPoint::set_logo_url(const char* value, size_t size) {
  
  logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.MenuItemExtensionPoint.logo_url)
}
inline ::std::string* MenuItemExtensionPoint::mutable_logo_url() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.MenuItemExtensionPoint.logo_url)
  return logo_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MenuItemExtensionPoint::release_logo_url() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.MenuItemExtensionPoint.logo_url)
  
  return logo_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MenuItemExtensionPoint::set_allocated_logo_url(::std::string* logo_url) {
  if (logo_url != nullptr) {
    
  } else {
    
  }
  logo_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_url);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.MenuItemExtensionPoint.logo_url)
}

// -------------------------------------------------------------------

// HomepageExtensionPoint

// string run_function = 1;
inline void HomepageExtensionPoint::clear_run_function() {
  run_function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomepageExtensionPoint::run_function() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.HomepageExtensionPoint.run_function)
  return run_function_.GetNoArena();
}
inline void HomepageExtensionPoint::set_run_function(const ::std::string& value) {
  
  run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.HomepageExtensionPoint.run_function)
}
#if LANG_CXX11
inline void HomepageExtensionPoint::set_run_function(::std::string&& value) {
  
  run_function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.HomepageExtensionPoint.run_function)
}
#endif
inline void HomepageExtensionPoint::set_run_function(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.HomepageExtensionPoint.run_function)
}
inline void HomepageExtensionPoint::set_run_function(const char* value, size_t size) {
  
  run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.HomepageExtensionPoint.run_function)
}
inline ::std::string* HomepageExtensionPoint::mutable_run_function() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.HomepageExtensionPoint.run_function)
  return run_function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomepageExtensionPoint::release_run_function() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.HomepageExtensionPoint.run_function)
  
  return run_function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomepageExtensionPoint::set_allocated_run_function(::std::string* run_function) {
  if (run_function != nullptr) {
    
  } else {
    
  }
  run_function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_function);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.HomepageExtensionPoint.run_function)
}

// .google.protobuf.BoolValue enabled = 2;
inline bool HomepageExtensionPoint::has_enabled() const {
  return this != internal_default_instance() && enabled_ != nullptr;
}
inline const ::google::protobuf::BoolValue& HomepageExtensionPoint::enabled() const {
  const ::google::protobuf::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:google.apps.script.type.HomepageExtensionPoint.enabled)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* HomepageExtensionPoint::release_enabled() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.HomepageExtensionPoint.enabled)
  
  ::google::protobuf::BoolValue* temp = enabled_;
  enabled_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* HomepageExtensionPoint::mutable_enabled() {
  
  if (enabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    enabled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.HomepageExtensionPoint.enabled)
  return enabled_;
}
inline void HomepageExtensionPoint::set_allocated_enabled(::google::protobuf::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(enabled)->GetArena();
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.HomepageExtensionPoint.enabled)
}

// -------------------------------------------------------------------

// UniversalActionExtensionPoint

// string label = 1;
inline void UniversalActionExtensionPoint::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UniversalActionExtensionPoint::label() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.UniversalActionExtensionPoint.label)
  return label_.GetNoArena();
}
inline void UniversalActionExtensionPoint::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.UniversalActionExtensionPoint.label)
}
#if LANG_CXX11
inline void UniversalActionExtensionPoint::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.UniversalActionExtensionPoint.label)
}
#endif
inline void UniversalActionExtensionPoint::set_label(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.UniversalActionExtensionPoint.label)
}
inline void UniversalActionExtensionPoint::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.UniversalActionExtensionPoint.label)
}
inline ::std::string* UniversalActionExtensionPoint::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.UniversalActionExtensionPoint.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UniversalActionExtensionPoint::release_label() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.UniversalActionExtensionPoint.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UniversalActionExtensionPoint::set_allocated_label(::std::string* label) {
  if (label != nullptr) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.UniversalActionExtensionPoint.label)
}

// string open_link = 2;
inline bool UniversalActionExtensionPoint::has_open_link() const {
  return action_type_case() == kOpenLink;
}
inline void UniversalActionExtensionPoint::set_has_open_link() {
  _oneof_case_[0] = kOpenLink;
}
inline void UniversalActionExtensionPoint::clear_open_link() {
  if (has_open_link()) {
    action_type_.open_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_action_type();
  }
}
inline const ::std::string& UniversalActionExtensionPoint::open_link() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.UniversalActionExtensionPoint.open_link)
  if (has_open_link()) {
    return action_type_.open_link_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void UniversalActionExtensionPoint::set_open_link(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.apps.script.type.UniversalActionExtensionPoint.open_link)
  if (!has_open_link()) {
    clear_action_type();
    set_has_open_link();
    action_type_.open_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  action_type_.open_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.UniversalActionExtensionPoint.open_link)
}
#if LANG_CXX11
inline void UniversalActionExtensionPoint::set_open_link(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.apps.script.type.UniversalActionExtensionPoint.open_link)
  if (!has_open_link()) {
    clear_action_type();
    set_has_open_link();
    action_type_.open_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  action_type_.open_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.UniversalActionExtensionPoint.open_link)
}
#endif
inline void UniversalActionExtensionPoint::set_open_link(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_open_link()) {
    clear_action_type();
    set_has_open_link();
    action_type_.open_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  action_type_.open_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.UniversalActionExtensionPoint.open_link)
}
inline void UniversalActionExtensionPoint::set_open_link(const char* value, size_t size) {
  if (!has_open_link()) {
    clear_action_type();
    set_has_open_link();
    action_type_.open_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  action_type_.open_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.UniversalActionExtensionPoint.open_link)
}
inline ::std::string* UniversalActionExtensionPoint::mutable_open_link() {
  if (!has_open_link()) {
    clear_action_type();
    set_has_open_link();
    action_type_.open_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.UniversalActionExtensionPoint.open_link)
  return action_type_.open_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UniversalActionExtensionPoint::release_open_link() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.UniversalActionExtensionPoint.open_link)
  if (has_open_link()) {
    clear_has_action_type();
    return action_type_.open_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void UniversalActionExtensionPoint::set_allocated_open_link(::std::string* open_link) {
  if (has_action_type()) {
    clear_action_type();
  }
  if (open_link != nullptr) {
    set_has_open_link();
    action_type_.open_link_.UnsafeSetDefault(open_link);
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.UniversalActionExtensionPoint.open_link)
}

// string run_function = 3;
inline bool UniversalActionExtensionPoint::has_run_function() const {
  return action_type_case() == kRunFunction;
}
inline void UniversalActionExtensionPoint::set_has_run_function() {
  _oneof_case_[0] = kRunFunction;
}
inline void UniversalActionExtensionPoint::clear_run_function() {
  if (has_run_function()) {
    action_type_.run_function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_action_type();
  }
}
inline const ::std::string& UniversalActionExtensionPoint::run_function() const {
  // @@protoc_insertion_point(field_get:google.apps.script.type.UniversalActionExtensionPoint.run_function)
  if (has_run_function()) {
    return action_type_.run_function_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void UniversalActionExtensionPoint::set_run_function(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.apps.script.type.UniversalActionExtensionPoint.run_function)
  if (!has_run_function()) {
    clear_action_type();
    set_has_run_function();
    action_type_.run_function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  action_type_.run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.script.type.UniversalActionExtensionPoint.run_function)
}
#if LANG_CXX11
inline void UniversalActionExtensionPoint::set_run_function(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.apps.script.type.UniversalActionExtensionPoint.run_function)
  if (!has_run_function()) {
    clear_action_type();
    set_has_run_function();
    action_type_.run_function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  action_type_.run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.script.type.UniversalActionExtensionPoint.run_function)
}
#endif
inline void UniversalActionExtensionPoint::set_run_function(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_run_function()) {
    clear_action_type();
    set_has_run_function();
    action_type_.run_function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  action_type_.run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.script.type.UniversalActionExtensionPoint.run_function)
}
inline void UniversalActionExtensionPoint::set_run_function(const char* value, size_t size) {
  if (!has_run_function()) {
    clear_action_type();
    set_has_run_function();
    action_type_.run_function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  action_type_.run_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.script.type.UniversalActionExtensionPoint.run_function)
}
inline ::std::string* UniversalActionExtensionPoint::mutable_run_function() {
  if (!has_run_function()) {
    clear_action_type();
    set_has_run_function();
    action_type_.run_function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.script.type.UniversalActionExtensionPoint.run_function)
  return action_type_.run_function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UniversalActionExtensionPoint::release_run_function() {
  // @@protoc_insertion_point(field_release:google.apps.script.type.UniversalActionExtensionPoint.run_function)
  if (has_run_function()) {
    clear_has_action_type();
    return action_type_.run_function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void UniversalActionExtensionPoint::set_allocated_run_function(::std::string* run_function) {
  if (has_action_type()) {
    clear_action_type();
  }
  if (run_function != nullptr) {
    set_has_run_function();
    action_type_.run_function_.UnsafeSetDefault(run_function);
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.script.type.UniversalActionExtensionPoint.run_function)
}

inline bool UniversalActionExtensionPoint::has_action_type() const {
  return action_type_case() != ACTION_TYPE_NOT_SET;
}
inline void UniversalActionExtensionPoint::clear_has_action_type() {
  _oneof_case_[0] = ACTION_TYPE_NOT_SET;
}
inline UniversalActionExtensionPoint::ActionTypeCase UniversalActionExtensionPoint::action_type_case() const {
  return UniversalActionExtensionPoint::ActionTypeCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace script
}  // namespace apps
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fapps_2fscript_2ftype_2fextension_5fpoint_2eproto
