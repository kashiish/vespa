// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/drive/activity/v2/target.proto

#include "google/apps/drive/activity/v2/target.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_User_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Domain_google_2fapps_2fdrive_2factivity_2fv2_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DriveItem_DriveFile_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DriveItem_DriveFolder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DriveItem_File_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DriveItem_Folder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Drive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FileComment_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TeamDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_DriveItemReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Owner_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto;
namespace google {
namespace apps {
namespace drive {
namespace activity {
namespace v2 {
class TargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Target> _instance;
  const ::google::apps::drive::activity::v2::DriveItem* drive_item_;
  const ::google::apps::drive::activity::v2::Drive* drive_;
  const ::google::apps::drive::activity::v2::FileComment* file_comment_;
} _Target_default_instance_;
class TargetReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetReference> _instance;
  const ::google::apps::drive::activity::v2::DriveItemReference* drive_item_;
  const ::google::apps::drive::activity::v2::DriveReference* drive_;
} _TargetReference_default_instance_;
class FileCommentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileComment> _instance;
} _FileComment_default_instance_;
class DriveItem_FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveItem_File> _instance;
} _DriveItem_File_default_instance_;
class DriveItem_FolderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveItem_Folder> _instance;
} _DriveItem_Folder_default_instance_;
class DriveItem_DriveFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveItem_DriveFile> _instance;
} _DriveItem_DriveFile_default_instance_;
class DriveItem_DriveFolderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveItem_DriveFolder> _instance;
} _DriveItem_DriveFolder_default_instance_;
class DriveItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveItem> _instance;
  const ::google::apps::drive::activity::v2::DriveItem_DriveFile* drive_file_;
  const ::google::apps::drive::activity::v2::DriveItem_DriveFolder* drive_folder_;
} _DriveItem_default_instance_;
class OwnerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Owner> _instance;
  const ::google::apps::drive::activity::v2::User* user_;
  const ::google::apps::drive::activity::v2::DriveReference* drive_;
} _Owner_default_instance_;
class TeamDriveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TeamDrive> _instance;
} _TeamDrive_default_instance_;
class DriveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Drive> _instance;
} _Drive_default_instance_;
class DriveItemReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveItemReference> _instance;
  const ::google::apps::drive::activity::v2::DriveItem_DriveFile* drive_file_;
  const ::google::apps::drive::activity::v2::DriveItem_DriveFolder* drive_folder_;
} _DriveItemReference_default_instance_;
class TeamDriveReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TeamDriveReference> _instance;
} _TeamDriveReference_default_instance_;
class DriveReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveReference> _instance;
} _DriveReference_default_instance_;
}  // namespace v2
}  // namespace activity
}  // namespace drive
}  // namespace apps
}  // namespace google
static void InitDefaultsTarget_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_Target_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::Target();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::Target::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Target_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsTarget_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {
      &scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_Drive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_FileComment_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_TeamDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,}};

static void InitDefaultsTargetReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_TargetReference_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::TargetReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::TargetReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TargetReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTargetReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {
      &scc_info_DriveItemReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_DriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_TeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,}};

static void InitDefaultsFileComment_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_FileComment_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::FileComment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::FileComment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileComment_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileComment_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {
      &scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,}};

static void InitDefaultsDriveItem_File_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_DriveItem_File_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::DriveItem_File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::DriveItem_File::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DriveItem_File_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDriveItem_File_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {}};

static void InitDefaultsDriveItem_Folder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_DriveItem_Folder_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::DriveItem_Folder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::DriveItem_Folder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DriveItem_Folder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDriveItem_Folder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {}};

static void InitDefaultsDriveItem_DriveFile_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_DriveItem_DriveFile_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::DriveItem_DriveFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::DriveItem_DriveFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DriveItem_DriveFile_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDriveItem_DriveFile_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {}};

static void InitDefaultsDriveItem_DriveFolder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_DriveItem_DriveFolder_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::DriveItem_DriveFolder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::DriveItem_DriveFolder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DriveItem_DriveFolder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDriveItem_DriveFolder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {}};

static void InitDefaultsDriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_DriveItem_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::DriveItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::DriveItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsDriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {
      &scc_info_DriveItem_File_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_DriveItem_Folder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_DriveItem_DriveFile_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_DriveItem_DriveFolder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_Owner_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,}};

static void InitDefaultsOwner_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_Owner_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::Owner();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::Owner::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Owner_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsOwner_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {
      &scc_info_User_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto.base,
      &scc_info_DriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_TeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_Domain_google_2fapps_2fdrive_2factivity_2fv2_2fcommon_2eproto.base,}};

static void InitDefaultsTeamDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_TeamDrive_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::TeamDrive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::TeamDrive::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TeamDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTeamDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {
      &scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,}};

static void InitDefaultsDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_Drive_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::Drive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::Drive::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Drive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {
      &scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,}};

static void InitDefaultsDriveItemReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_DriveItemReference_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::DriveItemReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::DriveItemReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_DriveItemReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDriveItemReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {
      &scc_info_DriveItem_File_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_DriveItem_Folder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_DriveItem_DriveFile_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,
      &scc_info_DriveItem_DriveFolder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base,}};

static void InitDefaultsTeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_TeamDriveReference_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::TeamDriveReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::TeamDriveReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {}};

static void InitDefaultsDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::apps::drive::activity::v2::_DriveReference_default_instance_;
    new (ptr) ::google::apps::drive::activity::v2::DriveReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::apps::drive::activity::v2::DriveReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto}, {}};

void InitDefaults_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Target_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileComment_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DriveItem_File_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DriveItem_Folder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DriveItem_DriveFile_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DriveItem_DriveFolder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Owner_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TeamDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Drive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DriveItemReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Target, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Target, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::apps::drive::activity::v2::TargetDefaultTypeInternal, drive_item_),
  offsetof(::google::apps::drive::activity::v2::TargetDefaultTypeInternal, drive_),
  offsetof(::google::apps::drive::activity::v2::TargetDefaultTypeInternal, file_comment_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Target, team_drive_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Target, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TargetReference, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TargetReference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::apps::drive::activity::v2::TargetReferenceDefaultTypeInternal, drive_item_),
  offsetof(::google::apps::drive::activity::v2::TargetReferenceDefaultTypeInternal, drive_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TargetReference, team_drive_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TargetReference, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::FileComment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::FileComment, legacy_comment_id_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::FileComment, legacy_discussion_id_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::FileComment, link_to_discussion_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::FileComment, parent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem_File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem_Folder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem_Folder, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem_DriveFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem_DriveFolder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem_DriveFolder, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, name_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, title_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, file_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, folder_),
  offsetof(::google::apps::drive::activity::v2::DriveItemDefaultTypeInternal, drive_file_),
  offsetof(::google::apps::drive::activity::v2::DriveItemDefaultTypeInternal, drive_folder_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, mime_type_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, owner_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItem, item_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Owner, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Owner, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::apps::drive::activity::v2::OwnerDefaultTypeInternal, user_),
  offsetof(::google::apps::drive::activity::v2::OwnerDefaultTypeInternal, drive_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Owner, team_drive_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Owner, domain_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Owner, owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TeamDrive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TeamDrive, name_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TeamDrive, title_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TeamDrive, root_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Drive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Drive, name_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Drive, title_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::Drive, root_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItemReference, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItemReference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItemReference, name_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItemReference, title_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItemReference, file_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItemReference, folder_),
  offsetof(::google::apps::drive::activity::v2::DriveItemReferenceDefaultTypeInternal, drive_file_),
  offsetof(::google::apps::drive::activity::v2::DriveItemReferenceDefaultTypeInternal, drive_folder_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveItemReference, item_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TeamDriveReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TeamDriveReference, name_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::TeamDriveReference, title_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveReference, name_),
  PROTOBUF_FIELD_OFFSET(::google::apps::drive::activity::v2::DriveReference, title_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::apps::drive::activity::v2::Target)},
  { 10, -1, sizeof(::google::apps::drive::activity::v2::TargetReference)},
  { 19, -1, sizeof(::google::apps::drive::activity::v2::FileComment)},
  { 28, -1, sizeof(::google::apps::drive::activity::v2::DriveItem_File)},
  { 33, -1, sizeof(::google::apps::drive::activity::v2::DriveItem_Folder)},
  { 39, -1, sizeof(::google::apps::drive::activity::v2::DriveItem_DriveFile)},
  { 44, -1, sizeof(::google::apps::drive::activity::v2::DriveItem_DriveFolder)},
  { 50, -1, sizeof(::google::apps::drive::activity::v2::DriveItem)},
  { 64, -1, sizeof(::google::apps::drive::activity::v2::Owner)},
  { 74, -1, sizeof(::google::apps::drive::activity::v2::TeamDrive)},
  { 82, -1, sizeof(::google::apps::drive::activity::v2::Drive)},
  { 90, -1, sizeof(::google::apps::drive::activity::v2::DriveItemReference)},
  { 102, -1, sizeof(::google::apps::drive::activity::v2::TeamDriveReference)},
  { 109, -1, sizeof(::google::apps::drive::activity::v2::DriveReference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_Target_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_TargetReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_FileComment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_DriveItem_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_DriveItem_Folder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_DriveItem_DriveFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_DriveItem_DriveFolder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_DriveItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_Owner_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_TeamDrive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_Drive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_DriveItemReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_TeamDriveReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::apps::drive::activity::v2::_DriveReference_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto = {
  {}, AddDescriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto, "google/apps/drive/activity/v2/target.proto", schemas,
  file_default_instances, TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto::offsets,
  file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto, 14, file_level_enum_descriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto, file_level_service_descriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto,
};

const char descriptor_table_protodef_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[] =
  "\n*google/apps/drive/activity/v2/target.p"
  "roto\022\035google.apps.drive.activity.v2\032)goo"
  "gle/apps/drive/activity/v2/actor.proto\032*"
  "google/apps/drive/activity/v2/common.pro"
  "to\"\217\002\n\006Target\022>\n\ndrive_item\030\001 \001(\0132(.goog"
  "le.apps.drive.activity.v2.DriveItemH\000\0225\n"
  "\005drive\030\005 \001(\0132$.google.apps.drive.activit"
  "y.v2.DriveH\000\022B\n\014file_comment\030\003 \001(\0132*.goo"
  "gle.apps.drive.activity.v2.FileCommentH\000"
  "\022@\n\nteam_drive\030\002 \001(\0132(.google.apps.drive"
  ".activity.v2.TeamDriveB\002\030\001B\010\n\006object\"\357\001\n"
  "\017TargetReference\022G\n\ndrive_item\030\001 \001(\01321.g"
  "oogle.apps.drive.activity.v2.DriveItemRe"
  "ferenceH\000\022>\n\005drive\030\003 \001(\0132-.google.apps.d"
  "rive.activity.v2.DriveReferenceH\000\022I\n\ntea"
  "m_drive\030\002 \001(\01321.google.apps.drive.activi"
  "ty.v2.TeamDriveReferenceB\002\030\001B\010\n\006object\"\234"
  "\001\n\013FileComment\022\031\n\021legacy_comment_id\030\001 \001("
  "\t\022\034\n\024legacy_discussion_id\030\002 \001(\t\022\032\n\022link_"
  "to_discussion\030\003 \001(\t\0228\n\006parent\030\004 \001(\0132(.go"
  "ogle.apps.drive.activity.v2.DriveItem\"\234\006"
  "\n\tDriveItem\022\014\n\004name\030\001 \001(\t\022\r\n\005title\030\002 \001(\t"
  "\022\?\n\004file\030\003 \001(\0132-.google.apps.drive.activ"
  "ity.v2.DriveItem.FileB\002\030\001\022C\n\006folder\030\004 \001("
  "\0132/.google.apps.drive.activity.v2.DriveI"
  "tem.FolderB\002\030\001\022H\n\ndrive_file\030\010 \001(\01322.goo"
  "gle.apps.drive.activity.v2.DriveItem.Dri"
  "veFileH\000\022L\n\014drive_folder\030\t \001(\01324.google."
  "apps.drive.activity.v2.DriveItem.DriveFo"
  "lderH\000\022\021\n\tmime_type\030\006 \001(\t\0223\n\005owner\030\007 \001(\013"
  "2$.google.apps.drive.activity.v2.Owner\032\n"
  "\n\004File:\002\030\001\032\257\001\n\006Folder\022B\n\004type\030\006 \001(\01624.go"
  "ogle.apps.drive.activity.v2.DriveItem.Fo"
  "lder.Type\"]\n\004Type\022\024\n\020TYPE_UNSPECIFIED\020\000\022"
  "\021\n\rMY_DRIVE_ROOT\020\001\022\023\n\017TEAM_DRIVE_ROOT\020\002\022"
  "\023\n\017STANDARD_FOLDER\020\003\032\002\030\001:\002\030\001\032\013\n\tDriveFil"
  "e\032\263\001\n\013DriveFolder\022G\n\004type\030\006 \001(\01629.google"
  ".apps.drive.activity.v2.DriveItem.DriveF"
  "older.Type\"[\n\004Type\022\024\n\020TYPE_UNSPECIFIED\020\000"
  "\022\021\n\rMY_DRIVE_ROOT\020\001\022\025\n\021SHARED_DRIVE_ROOT"
  "\020\002\022\023\n\017STANDARD_FOLDER\020\003B\013\n\titem_type\"\207\002\n"
  "\005Owner\0223\n\004user\030\001 \001(\0132#.google.apps.drive"
  ".activity.v2.UserH\000\022>\n\005drive\030\004 \001(\0132-.goo"
  "gle.apps.drive.activity.v2.DriveReferenc"
  "eH\000\022I\n\nteam_drive\030\002 \001(\01321.google.apps.dr"
  "ive.activity.v2.TeamDriveReferenceB\002\030\001\0225"
  "\n\006domain\030\003 \001(\0132%.google.apps.drive.activ"
  "ity.v2.DomainB\007\n\005owner\"d\n\tTeamDrive\022\014\n\004n"
  "ame\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\0226\n\004root\030\003 \001(\0132("
  ".google.apps.drive.activity.v2.DriveItem"
  ":\002\030\001\"\\\n\005Drive\022\014\n\004name\030\001 \001(\t\022\r\n\005title\030\002 \001"
  "(\t\0226\n\004root\030\003 \001(\0132(.google.apps.drive.act"
  "ivity.v2.DriveItem\"\334\002\n\022DriveItemReferenc"
  "e\022\014\n\004name\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\?\n\004file\030\003"
  " \001(\0132-.google.apps.drive.activity.v2.Dri"
  "veItem.FileB\002\030\001\022C\n\006folder\030\004 \001(\0132/.google"
  ".apps.drive.activity.v2.DriveItem.Folder"
  "B\002\030\001\022H\n\ndrive_file\030\010 \001(\01322.google.apps.d"
  "rive.activity.v2.DriveItem.DriveFileH\000\022L"
  "\n\014drive_folder\030\t \001(\01324.google.apps.drive"
  ".activity.v2.DriveItem.DriveFolderH\000B\013\n\t"
  "item_type\"5\n\022TeamDriveReference\022\014\n\004name\030"
  "\001 \001(\t\022\r\n\005title\030\002 \001(\t:\002\030\001\"-\n\016DriveReferen"
  "ce\022\014\n\004name\030\001 \001(\t\022\r\n\005title\030\002 \001(\tB\300\001\n!com."
  "google.apps.drive.activity.v2B\013TargetPro"
  "toP\001ZEgoogle.golang.org/genproto/googlea"
  "pis/apps/drive/activity/v2;activity\242\002\004GA"
  "DA\252\002\035Google.Apps.Drive.Activity.V2\312\002\035Goo"
  "gle\\Apps\\Drive\\Activity\\V2b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto = {
  false, InitDefaults_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto, 
  descriptor_table_protodef_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto,
  "google/apps/drive/activity/v2/target.proto", &assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto, 2754,
};

void AddDescriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto,
    ::AddDescriptors_google_2fapps_2fdrive_2factivity_2fv2_2fcommon_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto = []() { AddDescriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto(); return true; }();
namespace google {
namespace apps {
namespace drive {
namespace activity {
namespace v2 {
const ::google::protobuf::EnumDescriptor* DriveItem_Folder_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return file_level_enum_descriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[0];
}
bool DriveItem_Folder_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DriveItem_Folder_Type DriveItem_Folder::TYPE_UNSPECIFIED;
const DriveItem_Folder_Type DriveItem_Folder::MY_DRIVE_ROOT;
const DriveItem_Folder_Type DriveItem_Folder::TEAM_DRIVE_ROOT;
const DriveItem_Folder_Type DriveItem_Folder::STANDARD_FOLDER;
const DriveItem_Folder_Type DriveItem_Folder::Type_MIN;
const DriveItem_Folder_Type DriveItem_Folder::Type_MAX;
const int DriveItem_Folder::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DriveItem_DriveFolder_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return file_level_enum_descriptors_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[1];
}
bool DriveItem_DriveFolder_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DriveItem_DriveFolder_Type DriveItem_DriveFolder::TYPE_UNSPECIFIED;
const DriveItem_DriveFolder_Type DriveItem_DriveFolder::MY_DRIVE_ROOT;
const DriveItem_DriveFolder_Type DriveItem_DriveFolder::SHARED_DRIVE_ROOT;
const DriveItem_DriveFolder_Type DriveItem_DriveFolder::STANDARD_FOLDER;
const DriveItem_DriveFolder_Type DriveItem_DriveFolder::Type_MIN;
const DriveItem_DriveFolder_Type DriveItem_DriveFolder::Type_MAX;
const int DriveItem_DriveFolder::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Target::InitAsDefaultInstance() {
  ::google::apps::drive::activity::v2::_Target_default_instance_.drive_item_ = const_cast< ::google::apps::drive::activity::v2::DriveItem*>(
      ::google::apps::drive::activity::v2::DriveItem::internal_default_instance());
  ::google::apps::drive::activity::v2::_Target_default_instance_.drive_ = const_cast< ::google::apps::drive::activity::v2::Drive*>(
      ::google::apps::drive::activity::v2::Drive::internal_default_instance());
  ::google::apps::drive::activity::v2::_Target_default_instance_.file_comment_ = const_cast< ::google::apps::drive::activity::v2::FileComment*>(
      ::google::apps::drive::activity::v2::FileComment::internal_default_instance());
  ::google::apps::drive::activity::v2::_Target_default_instance_._instance.get_mutable()->team_drive_ = const_cast< ::google::apps::drive::activity::v2::TeamDrive*>(
      ::google::apps::drive::activity::v2::TeamDrive::internal_default_instance());
}
class Target::HasBitSetters {
 public:
  static const ::google::apps::drive::activity::v2::DriveItem& drive_item(const Target* msg);
  static const ::google::apps::drive::activity::v2::Drive& drive(const Target* msg);
  static const ::google::apps::drive::activity::v2::FileComment& file_comment(const Target* msg);
  static const ::google::apps::drive::activity::v2::TeamDrive& team_drive(const Target* msg);
};

const ::google::apps::drive::activity::v2::DriveItem&
Target::HasBitSetters::drive_item(const Target* msg) {
  return *msg->object_.drive_item_;
}
const ::google::apps::drive::activity::v2::Drive&
Target::HasBitSetters::drive(const Target* msg) {
  return *msg->object_.drive_;
}
const ::google::apps::drive::activity::v2::FileComment&
Target::HasBitSetters::file_comment(const Target* msg) {
  return *msg->object_.file_comment_;
}
const ::google::apps::drive::activity::v2::TeamDrive&
Target::HasBitSetters::team_drive(const Target* msg) {
  return *msg->team_drive_;
}
void Target::set_allocated_drive_item(::google::apps::drive::activity::v2::DriveItem* drive_item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object();
  if (drive_item) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive_item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive_item, submessage_arena);
    }
    set_has_drive_item();
    object_.drive_item_ = drive_item;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.Target.drive_item)
}
void Target::set_allocated_drive(::google::apps::drive::activity::v2::Drive* drive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object();
  if (drive) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive, submessage_arena);
    }
    set_has_drive();
    object_.drive_ = drive;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.Target.drive)
}
void Target::set_allocated_file_comment(::google::apps::drive::activity::v2::FileComment* file_comment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object();
  if (file_comment) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      file_comment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file_comment, submessage_arena);
    }
    set_has_file_comment();
    object_.file_comment_ = file_comment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.Target.file_comment)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Target::kDriveItemFieldNumber;
const int Target::kDriveFieldNumber;
const int Target::kFileCommentFieldNumber;
const int Target::kTeamDriveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Target::Target()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.Target)
}
Target::Target(const Target& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_team_drive()) {
    team_drive_ = new ::google::apps::drive::activity::v2::TeamDrive(*from.team_drive_);
  } else {
    team_drive_ = nullptr;
  }
  clear_has_object();
  switch (from.object_case()) {
    case kDriveItem: {
      mutable_drive_item()->::google::apps::drive::activity::v2::DriveItem::MergeFrom(from.drive_item());
      break;
    }
    case kDrive: {
      mutable_drive()->::google::apps::drive::activity::v2::Drive::MergeFrom(from.drive());
      break;
    }
    case kFileComment: {
      mutable_file_comment()->::google::apps::drive::activity::v2::FileComment::MergeFrom(from.file_comment());
      break;
    }
    case OBJECT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.Target)
}

void Target::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Target_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  team_drive_ = nullptr;
  clear_has_object();
}

Target::~Target() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.Target)
  SharedDtor();
}

void Target::SharedDtor() {
  if (this != internal_default_instance()) delete team_drive_;
  if (has_object()) {
    clear_object();
  }
}

void Target::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Target& Target::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Target_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void Target::clear_object() {
// @@protoc_insertion_point(one_of_clear_start:google.apps.drive.activity.v2.Target)
  switch (object_case()) {
    case kDriveItem: {
      delete object_.drive_item_;
      break;
    }
    case kDrive: {
      delete object_.drive_;
      break;
    }
    case kFileComment: {
      delete object_.file_comment_;
      break;
    }
    case OBJECT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OBJECT_NOT_SET;
}


void Target::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && team_drive_ != nullptr) {
    delete team_drive_;
  }
  team_drive_ = nullptr;
  clear_object();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Target::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Target*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.apps.drive.activity.v2.DriveItem drive_item = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem::_InternalParse;
        object = msg->mutable_drive_item();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.TeamDrive team_drive = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::TeamDrive::_InternalParse;
        object = msg->mutable_team_drive();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.FileComment file_comment = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::FileComment::_InternalParse;
        object = msg->mutable_file_comment();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.Drive drive = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::Drive::_InternalParse;
        object = msg->mutable_drive();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Target::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.Target)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.apps.drive.activity.v2.DriveItem drive_item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.TeamDrive team_drive = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_team_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.FileComment file_comment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.Drive drive = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.Target)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.Target)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Target::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItem drive_item = 1;
  if (has_drive_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::drive_item(this), output);
  }

  // .google.apps.drive.activity.v2.TeamDrive team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::team_drive(this), output);
  }

  // .google.apps.drive.activity.v2.FileComment file_comment = 3;
  if (has_file_comment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::file_comment(this), output);
  }

  // .google.apps.drive.activity.v2.Drive drive = 5;
  if (has_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::drive(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.Target)
}

::google::protobuf::uint8* Target::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItem drive_item = 1;
  if (has_drive_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::drive_item(this), target);
  }

  // .google.apps.drive.activity.v2.TeamDrive team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::team_drive(this), target);
  }

  // .google.apps.drive.activity.v2.FileComment file_comment = 3;
  if (has_file_comment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::file_comment(this), target);
  }

  // .google.apps.drive.activity.v2.Drive drive = 5;
  if (has_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::drive(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.Target)
  return target;
}

size_t Target::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.Target)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.TeamDrive team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *team_drive_);
  }

  switch (object_case()) {
    // .google.apps.drive.activity.v2.DriveItem drive_item = 1;
    case kDriveItem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_.drive_item_);
      break;
    }
    // .google.apps.drive.activity.v2.Drive drive = 5;
    case kDrive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_.drive_);
      break;
    }
    // .google.apps.drive.activity.v2.FileComment file_comment = 3;
    case kFileComment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_.file_comment_);
      break;
    }
    case OBJECT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Target::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.Target)
  GOOGLE_DCHECK_NE(&from, this);
  const Target* source =
      ::google::protobuf::DynamicCastToGenerated<Target>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.Target)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.Target)
    MergeFrom(*source);
  }
}

void Target::MergeFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.Target)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_team_drive()) {
    mutable_team_drive()->::google::apps::drive::activity::v2::TeamDrive::MergeFrom(from.team_drive());
  }
  switch (from.object_case()) {
    case kDriveItem: {
      mutable_drive_item()->::google::apps::drive::activity::v2::DriveItem::MergeFrom(from.drive_item());
      break;
    }
    case kDrive: {
      mutable_drive()->::google::apps::drive::activity::v2::Drive::MergeFrom(from.drive());
      break;
    }
    case kFileComment: {
      mutable_file_comment()->::google::apps::drive::activity::v2::FileComment::MergeFrom(from.file_comment());
      break;
    }
    case OBJECT_NOT_SET: {
      break;
    }
  }
}

void Target::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Target::CopyFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Target::IsInitialized() const {
  return true;
}

void Target::Swap(Target* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Target::InternalSwap(Target* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(team_drive_, other->team_drive_);
  swap(object_, other->object_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Target::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TargetReference::InitAsDefaultInstance() {
  ::google::apps::drive::activity::v2::_TargetReference_default_instance_.drive_item_ = const_cast< ::google::apps::drive::activity::v2::DriveItemReference*>(
      ::google::apps::drive::activity::v2::DriveItemReference::internal_default_instance());
  ::google::apps::drive::activity::v2::_TargetReference_default_instance_.drive_ = const_cast< ::google::apps::drive::activity::v2::DriveReference*>(
      ::google::apps::drive::activity::v2::DriveReference::internal_default_instance());
  ::google::apps::drive::activity::v2::_TargetReference_default_instance_._instance.get_mutable()->team_drive_ = const_cast< ::google::apps::drive::activity::v2::TeamDriveReference*>(
      ::google::apps::drive::activity::v2::TeamDriveReference::internal_default_instance());
}
class TargetReference::HasBitSetters {
 public:
  static const ::google::apps::drive::activity::v2::DriveItemReference& drive_item(const TargetReference* msg);
  static const ::google::apps::drive::activity::v2::DriveReference& drive(const TargetReference* msg);
  static const ::google::apps::drive::activity::v2::TeamDriveReference& team_drive(const TargetReference* msg);
};

const ::google::apps::drive::activity::v2::DriveItemReference&
TargetReference::HasBitSetters::drive_item(const TargetReference* msg) {
  return *msg->object_.drive_item_;
}
const ::google::apps::drive::activity::v2::DriveReference&
TargetReference::HasBitSetters::drive(const TargetReference* msg) {
  return *msg->object_.drive_;
}
const ::google::apps::drive::activity::v2::TeamDriveReference&
TargetReference::HasBitSetters::team_drive(const TargetReference* msg) {
  return *msg->team_drive_;
}
void TargetReference::set_allocated_drive_item(::google::apps::drive::activity::v2::DriveItemReference* drive_item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object();
  if (drive_item) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive_item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive_item, submessage_arena);
    }
    set_has_drive_item();
    object_.drive_item_ = drive_item;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.TargetReference.drive_item)
}
void TargetReference::set_allocated_drive(::google::apps::drive::activity::v2::DriveReference* drive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object();
  if (drive) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive, submessage_arena);
    }
    set_has_drive();
    object_.drive_ = drive;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.TargetReference.drive)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetReference::kDriveItemFieldNumber;
const int TargetReference::kDriveFieldNumber;
const int TargetReference::kTeamDriveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetReference::TargetReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.TargetReference)
}
TargetReference::TargetReference(const TargetReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_team_drive()) {
    team_drive_ = new ::google::apps::drive::activity::v2::TeamDriveReference(*from.team_drive_);
  } else {
    team_drive_ = nullptr;
  }
  clear_has_object();
  switch (from.object_case()) {
    case kDriveItem: {
      mutable_drive_item()->::google::apps::drive::activity::v2::DriveItemReference::MergeFrom(from.drive_item());
      break;
    }
    case kDrive: {
      mutable_drive()->::google::apps::drive::activity::v2::DriveReference::MergeFrom(from.drive());
      break;
    }
    case OBJECT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.TargetReference)
}

void TargetReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TargetReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  team_drive_ = nullptr;
  clear_has_object();
}

TargetReference::~TargetReference() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.TargetReference)
  SharedDtor();
}

void TargetReference::SharedDtor() {
  if (this != internal_default_instance()) delete team_drive_;
  if (has_object()) {
    clear_object();
  }
}

void TargetReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TargetReference& TargetReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TargetReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void TargetReference::clear_object() {
// @@protoc_insertion_point(one_of_clear_start:google.apps.drive.activity.v2.TargetReference)
  switch (object_case()) {
    case kDriveItem: {
      delete object_.drive_item_;
      break;
    }
    case kDrive: {
      delete object_.drive_;
      break;
    }
    case OBJECT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OBJECT_NOT_SET;
}


void TargetReference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.TargetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && team_drive_ != nullptr) {
    delete team_drive_;
  }
  team_drive_ = nullptr;
  clear_object();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TargetReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TargetReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.apps.drive.activity.v2.DriveItemReference drive_item = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItemReference::_InternalParse;
        object = msg->mutable_drive_item();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::TeamDriveReference::_InternalParse;
        object = msg->mutable_team_drive();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.DriveReference drive = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveReference::_InternalParse;
        object = msg->mutable_drive();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TargetReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.TargetReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.apps.drive.activity.v2.DriveItemReference drive_item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_team_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveReference drive = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.TargetReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.TargetReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TargetReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.TargetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItemReference drive_item = 1;
  if (has_drive_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::drive_item(this), output);
  }

  // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::team_drive(this), output);
  }

  // .google.apps.drive.activity.v2.DriveReference drive = 3;
  if (has_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::drive(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.TargetReference)
}

::google::protobuf::uint8* TargetReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.TargetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItemReference drive_item = 1;
  if (has_drive_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::drive_item(this), target);
  }

  // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::team_drive(this), target);
  }

  // .google.apps.drive.activity.v2.DriveReference drive = 3;
  if (has_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::drive(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.TargetReference)
  return target;
}

size_t TargetReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.TargetReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *team_drive_);
  }

  switch (object_case()) {
    // .google.apps.drive.activity.v2.DriveItemReference drive_item = 1;
    case kDriveItem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_.drive_item_);
      break;
    }
    // .google.apps.drive.activity.v2.DriveReference drive = 3;
    case kDrive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_.drive_);
      break;
    }
    case OBJECT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.TargetReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetReference* source =
      ::google::protobuf::DynamicCastToGenerated<TargetReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.TargetReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.TargetReference)
    MergeFrom(*source);
  }
}

void TargetReference::MergeFrom(const TargetReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.TargetReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_team_drive()) {
    mutable_team_drive()->::google::apps::drive::activity::v2::TeamDriveReference::MergeFrom(from.team_drive());
  }
  switch (from.object_case()) {
    case kDriveItem: {
      mutable_drive_item()->::google::apps::drive::activity::v2::DriveItemReference::MergeFrom(from.drive_item());
      break;
    }
    case kDrive: {
      mutable_drive()->::google::apps::drive::activity::v2::DriveReference::MergeFrom(from.drive());
      break;
    }
    case OBJECT_NOT_SET: {
      break;
    }
  }
}

void TargetReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.TargetReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetReference::CopyFrom(const TargetReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.TargetReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetReference::IsInitialized() const {
  return true;
}

void TargetReference::Swap(TargetReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetReference::InternalSwap(TargetReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(team_drive_, other->team_drive_);
  swap(object_, other->object_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata TargetReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FileComment::InitAsDefaultInstance() {
  ::google::apps::drive::activity::v2::_FileComment_default_instance_._instance.get_mutable()->parent_ = const_cast< ::google::apps::drive::activity::v2::DriveItem*>(
      ::google::apps::drive::activity::v2::DriveItem::internal_default_instance());
}
class FileComment::HasBitSetters {
 public:
  static const ::google::apps::drive::activity::v2::DriveItem& parent(const FileComment* msg);
};

const ::google::apps::drive::activity::v2::DriveItem&
FileComment::HasBitSetters::parent(const FileComment* msg) {
  return *msg->parent_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileComment::kLegacyCommentIdFieldNumber;
const int FileComment::kLegacyDiscussionIdFieldNumber;
const int FileComment::kLinkToDiscussionFieldNumber;
const int FileComment::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileComment::FileComment()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.FileComment)
}
FileComment::FileComment(const FileComment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  legacy_comment_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.legacy_comment_id().size() > 0) {
    legacy_comment_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.legacy_comment_id_);
  }
  legacy_discussion_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.legacy_discussion_id().size() > 0) {
    legacy_discussion_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.legacy_discussion_id_);
  }
  link_to_discussion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_to_discussion().size() > 0) {
    link_to_discussion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_to_discussion_);
  }
  if (from.has_parent()) {
    parent_ = new ::google::apps::drive::activity::v2::DriveItem(*from.parent_);
  } else {
    parent_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.FileComment)
}

void FileComment::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FileComment_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  legacy_comment_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  legacy_discussion_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_to_discussion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_ = nullptr;
}

FileComment::~FileComment() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.FileComment)
  SharedDtor();
}

void FileComment::SharedDtor() {
  legacy_comment_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  legacy_discussion_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_to_discussion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parent_;
}

void FileComment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileComment& FileComment::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FileComment_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void FileComment::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.FileComment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  legacy_comment_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  legacy_discussion_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_to_discussion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && parent_ != nullptr) {
    delete parent_;
  }
  parent_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FileComment::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FileComment*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string legacy_comment_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.FileComment.legacy_comment_id");
        object = msg->mutable_legacy_comment_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string legacy_discussion_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.FileComment.legacy_discussion_id");
        object = msg->mutable_legacy_discussion_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string link_to_discussion = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.FileComment.link_to_discussion");
        object = msg->mutable_link_to_discussion();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem parent = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem::_InternalParse;
        object = msg->mutable_parent();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FileComment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.FileComment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string legacy_comment_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_legacy_comment_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->legacy_comment_id().data(), static_cast<int>(this->legacy_comment_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.FileComment.legacy_comment_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string legacy_discussion_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_legacy_discussion_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->legacy_discussion_id().data(), static_cast<int>(this->legacy_discussion_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.FileComment.legacy_discussion_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_to_discussion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_to_discussion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_to_discussion().data(), static_cast<int>(this->link_to_discussion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.FileComment.link_to_discussion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem parent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.FileComment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.FileComment)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FileComment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.FileComment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string legacy_comment_id = 1;
  if (this->legacy_comment_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->legacy_comment_id().data(), static_cast<int>(this->legacy_comment_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.FileComment.legacy_comment_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->legacy_comment_id(), output);
  }

  // string legacy_discussion_id = 2;
  if (this->legacy_discussion_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->legacy_discussion_id().data(), static_cast<int>(this->legacy_discussion_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.FileComment.legacy_discussion_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->legacy_discussion_id(), output);
  }

  // string link_to_discussion = 3;
  if (this->link_to_discussion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_to_discussion().data(), static_cast<int>(this->link_to_discussion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.FileComment.link_to_discussion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->link_to_discussion(), output);
  }

  // .google.apps.drive.activity.v2.DriveItem parent = 4;
  if (this->has_parent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::parent(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.FileComment)
}

::google::protobuf::uint8* FileComment::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.FileComment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string legacy_comment_id = 1;
  if (this->legacy_comment_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->legacy_comment_id().data(), static_cast<int>(this->legacy_comment_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.FileComment.legacy_comment_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->legacy_comment_id(), target);
  }

  // string legacy_discussion_id = 2;
  if (this->legacy_discussion_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->legacy_discussion_id().data(), static_cast<int>(this->legacy_discussion_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.FileComment.legacy_discussion_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->legacy_discussion_id(), target);
  }

  // string link_to_discussion = 3;
  if (this->link_to_discussion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_to_discussion().data(), static_cast<int>(this->link_to_discussion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.FileComment.link_to_discussion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->link_to_discussion(), target);
  }

  // .google.apps.drive.activity.v2.DriveItem parent = 4;
  if (this->has_parent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::parent(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.FileComment)
  return target;
}

size_t FileComment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.FileComment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string legacy_comment_id = 1;
  if (this->legacy_comment_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->legacy_comment_id());
  }

  // string legacy_discussion_id = 2;
  if (this->legacy_discussion_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->legacy_discussion_id());
  }

  // string link_to_discussion = 3;
  if (this->link_to_discussion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_to_discussion());
  }

  // .google.apps.drive.activity.v2.DriveItem parent = 4;
  if (this->has_parent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parent_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileComment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.FileComment)
  GOOGLE_DCHECK_NE(&from, this);
  const FileComment* source =
      ::google::protobuf::DynamicCastToGenerated<FileComment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.FileComment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.FileComment)
    MergeFrom(*source);
  }
}

void FileComment::MergeFrom(const FileComment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.FileComment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.legacy_comment_id().size() > 0) {

    legacy_comment_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.legacy_comment_id_);
  }
  if (from.legacy_discussion_id().size() > 0) {

    legacy_discussion_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.legacy_discussion_id_);
  }
  if (from.link_to_discussion().size() > 0) {

    link_to_discussion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_to_discussion_);
  }
  if (from.has_parent()) {
    mutable_parent()->::google::apps::drive::activity::v2::DriveItem::MergeFrom(from.parent());
  }
}

void FileComment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.FileComment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileComment::CopyFrom(const FileComment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.FileComment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileComment::IsInitialized() const {
  return true;
}

void FileComment::Swap(FileComment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileComment::InternalSwap(FileComment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  legacy_comment_id_.Swap(&other->legacy_comment_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  legacy_discussion_id_.Swap(&other->legacy_discussion_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  link_to_discussion_.Swap(&other->link_to_discussion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parent_, other->parent_);
}

::google::protobuf::Metadata FileComment::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DriveItem_File::InitAsDefaultInstance() {
}
class DriveItem_File::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveItem_File::DriveItem_File()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.DriveItem.File)
}
DriveItem_File::DriveItem_File(const DriveItem_File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.DriveItem.File)
}

void DriveItem_File::SharedCtor() {
}

DriveItem_File::~DriveItem_File() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.DriveItem.File)
  SharedDtor();
}

void DriveItem_File::SharedDtor() {
}

void DriveItem_File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DriveItem_File& DriveItem_File::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DriveItem_File_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void DriveItem_File::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.DriveItem.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DriveItem_File::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DriveItem_File*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DriveItem_File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.DriveItem.File)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.DriveItem.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.DriveItem.File)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DriveItem_File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.DriveItem.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.DriveItem.File)
}

::google::protobuf::uint8* DriveItem_File::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.DriveItem.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.DriveItem.File)
  return target;
}

size_t DriveItem_File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.DriveItem.File)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveItem_File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.DriveItem.File)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveItem_File* source =
      ::google::protobuf::DynamicCastToGenerated<DriveItem_File>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.DriveItem.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.DriveItem.File)
    MergeFrom(*source);
  }
}

void DriveItem_File::MergeFrom(const DriveItem_File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.DriveItem.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DriveItem_File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.DriveItem.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveItem_File::CopyFrom(const DriveItem_File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.DriveItem.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveItem_File::IsInitialized() const {
  return true;
}

void DriveItem_File::Swap(DriveItem_File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveItem_File::InternalSwap(DriveItem_File* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DriveItem_File::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DriveItem_Folder::InitAsDefaultInstance() {
}
class DriveItem_Folder::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DriveItem_Folder::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveItem_Folder::DriveItem_Folder()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.DriveItem.Folder)
}
DriveItem_Folder::DriveItem_Folder(const DriveItem_Folder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.DriveItem.Folder)
}

void DriveItem_Folder::SharedCtor() {
  type_ = 0;
}

DriveItem_Folder::~DriveItem_Folder() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.DriveItem.Folder)
  SharedDtor();
}

void DriveItem_Folder::SharedDtor() {
}

void DriveItem_Folder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DriveItem_Folder& DriveItem_Folder::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DriveItem_Folder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void DriveItem_Folder::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.DriveItem.Folder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DriveItem_Folder::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DriveItem_Folder*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.apps.drive.activity.v2.DriveItem.Folder.Type type = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::google::apps::drive::activity::v2::DriveItem_Folder_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DriveItem_Folder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.DriveItem.Folder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.apps.drive.activity.v2.DriveItem.Folder.Type type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::apps::drive::activity::v2::DriveItem_Folder_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.DriveItem.Folder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.DriveItem.Folder)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DriveItem_Folder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.DriveItem.Folder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItem.Folder.Type type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.DriveItem.Folder)
}

::google::protobuf::uint8* DriveItem_Folder::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.DriveItem.Folder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItem.Folder.Type type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.DriveItem.Folder)
  return target;
}

size_t DriveItem_Folder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.DriveItem.Folder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItem.Folder.Type type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveItem_Folder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.DriveItem.Folder)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveItem_Folder* source =
      ::google::protobuf::DynamicCastToGenerated<DriveItem_Folder>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.DriveItem.Folder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.DriveItem.Folder)
    MergeFrom(*source);
  }
}

void DriveItem_Folder::MergeFrom(const DriveItem_Folder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.DriveItem.Folder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void DriveItem_Folder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.DriveItem.Folder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveItem_Folder::CopyFrom(const DriveItem_Folder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.DriveItem.Folder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveItem_Folder::IsInitialized() const {
  return true;
}

void DriveItem_Folder::Swap(DriveItem_Folder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveItem_Folder::InternalSwap(DriveItem_Folder* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata DriveItem_Folder::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DriveItem_DriveFile::InitAsDefaultInstance() {
}
class DriveItem_DriveFile::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveItem_DriveFile::DriveItem_DriveFile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.DriveItem.DriveFile)
}
DriveItem_DriveFile::DriveItem_DriveFile(const DriveItem_DriveFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.DriveItem.DriveFile)
}

void DriveItem_DriveFile::SharedCtor() {
}

DriveItem_DriveFile::~DriveItem_DriveFile() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.DriveItem.DriveFile)
  SharedDtor();
}

void DriveItem_DriveFile::SharedDtor() {
}

void DriveItem_DriveFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DriveItem_DriveFile& DriveItem_DriveFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DriveItem_DriveFile_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void DriveItem_DriveFile::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DriveItem_DriveFile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DriveItem_DriveFile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DriveItem_DriveFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.DriveItem.DriveFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.DriveItem.DriveFile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DriveItem_DriveFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.DriveItem.DriveFile)
}

::google::protobuf::uint8* DriveItem_DriveFile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.DriveItem.DriveFile)
  return target;
}

size_t DriveItem_DriveFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveItem_DriveFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveItem_DriveFile* source =
      ::google::protobuf::DynamicCastToGenerated<DriveItem_DriveFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.DriveItem.DriveFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.DriveItem.DriveFile)
    MergeFrom(*source);
  }
}

void DriveItem_DriveFile::MergeFrom(const DriveItem_DriveFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DriveItem_DriveFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveItem_DriveFile::CopyFrom(const DriveItem_DriveFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.DriveItem.DriveFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveItem_DriveFile::IsInitialized() const {
  return true;
}

void DriveItem_DriveFile::Swap(DriveItem_DriveFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveItem_DriveFile::InternalSwap(DriveItem_DriveFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DriveItem_DriveFile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DriveItem_DriveFolder::InitAsDefaultInstance() {
}
class DriveItem_DriveFolder::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DriveItem_DriveFolder::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveItem_DriveFolder::DriveItem_DriveFolder()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.DriveItem.DriveFolder)
}
DriveItem_DriveFolder::DriveItem_DriveFolder(const DriveItem_DriveFolder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.DriveItem.DriveFolder)
}

void DriveItem_DriveFolder::SharedCtor() {
  type_ = 0;
}

DriveItem_DriveFolder::~DriveItem_DriveFolder() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  SharedDtor();
}

void DriveItem_DriveFolder::SharedDtor() {
}

void DriveItem_DriveFolder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DriveItem_DriveFolder& DriveItem_DriveFolder::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DriveItem_DriveFolder_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void DriveItem_DriveFolder::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DriveItem_DriveFolder::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DriveItem_DriveFolder*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.apps.drive.activity.v2.DriveItem.DriveFolder.Type type = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::google::apps::drive::activity::v2::DriveItem_DriveFolder_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DriveItem_DriveFolder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.apps.drive.activity.v2.DriveItem.DriveFolder.Type type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::apps::drive::activity::v2::DriveItem_DriveFolder_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DriveItem_DriveFolder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItem.DriveFolder.Type type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.DriveItem.DriveFolder)
}

::google::protobuf::uint8* DriveItem_DriveFolder::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItem.DriveFolder.Type type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  return target;
}

size_t DriveItem_DriveFolder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.DriveItem.DriveFolder.Type type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveItem_DriveFolder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveItem_DriveFolder* source =
      ::google::protobuf::DynamicCastToGenerated<DriveItem_DriveFolder>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.DriveItem.DriveFolder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.DriveItem.DriveFolder)
    MergeFrom(*source);
  }
}

void DriveItem_DriveFolder::MergeFrom(const DriveItem_DriveFolder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void DriveItem_DriveFolder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveItem_DriveFolder::CopyFrom(const DriveItem_DriveFolder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.DriveItem.DriveFolder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveItem_DriveFolder::IsInitialized() const {
  return true;
}

void DriveItem_DriveFolder::Swap(DriveItem_DriveFolder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveItem_DriveFolder::InternalSwap(DriveItem_DriveFolder* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata DriveItem_DriveFolder::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DriveItem::InitAsDefaultInstance() {
  ::google::apps::drive::activity::v2::_DriveItem_default_instance_._instance.get_mutable()->file_ = const_cast< ::google::apps::drive::activity::v2::DriveItem_File*>(
      ::google::apps::drive::activity::v2::DriveItem_File::internal_default_instance());
  ::google::apps::drive::activity::v2::_DriveItem_default_instance_._instance.get_mutable()->folder_ = const_cast< ::google::apps::drive::activity::v2::DriveItem_Folder*>(
      ::google::apps::drive::activity::v2::DriveItem_Folder::internal_default_instance());
  ::google::apps::drive::activity::v2::_DriveItem_default_instance_.drive_file_ = const_cast< ::google::apps::drive::activity::v2::DriveItem_DriveFile*>(
      ::google::apps::drive::activity::v2::DriveItem_DriveFile::internal_default_instance());
  ::google::apps::drive::activity::v2::_DriveItem_default_instance_.drive_folder_ = const_cast< ::google::apps::drive::activity::v2::DriveItem_DriveFolder*>(
      ::google::apps::drive::activity::v2::DriveItem_DriveFolder::internal_default_instance());
  ::google::apps::drive::activity::v2::_DriveItem_default_instance_._instance.get_mutable()->owner_ = const_cast< ::google::apps::drive::activity::v2::Owner*>(
      ::google::apps::drive::activity::v2::Owner::internal_default_instance());
}
class DriveItem::HasBitSetters {
 public:
  static const ::google::apps::drive::activity::v2::DriveItem_File& file(const DriveItem* msg);
  static const ::google::apps::drive::activity::v2::DriveItem_Folder& folder(const DriveItem* msg);
  static const ::google::apps::drive::activity::v2::DriveItem_DriveFile& drive_file(const DriveItem* msg);
  static const ::google::apps::drive::activity::v2::DriveItem_DriveFolder& drive_folder(const DriveItem* msg);
  static const ::google::apps::drive::activity::v2::Owner& owner(const DriveItem* msg);
};

const ::google::apps::drive::activity::v2::DriveItem_File&
DriveItem::HasBitSetters::file(const DriveItem* msg) {
  return *msg->file_;
}
const ::google::apps::drive::activity::v2::DriveItem_Folder&
DriveItem::HasBitSetters::folder(const DriveItem* msg) {
  return *msg->folder_;
}
const ::google::apps::drive::activity::v2::DriveItem_DriveFile&
DriveItem::HasBitSetters::drive_file(const DriveItem* msg) {
  return *msg->item_type_.drive_file_;
}
const ::google::apps::drive::activity::v2::DriveItem_DriveFolder&
DriveItem::HasBitSetters::drive_folder(const DriveItem* msg) {
  return *msg->item_type_.drive_folder_;
}
const ::google::apps::drive::activity::v2::Owner&
DriveItem::HasBitSetters::owner(const DriveItem* msg) {
  return *msg->owner_;
}
void DriveItem::set_allocated_drive_file(::google::apps::drive::activity::v2::DriveItem_DriveFile* drive_file) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item_type();
  if (drive_file) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive_file = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive_file, submessage_arena);
    }
    set_has_drive_file();
    item_type_.drive_file_ = drive_file;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.DriveItem.drive_file)
}
void DriveItem::set_allocated_drive_folder(::google::apps::drive::activity::v2::DriveItem_DriveFolder* drive_folder) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item_type();
  if (drive_folder) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive_folder = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive_folder, submessage_arena);
    }
    set_has_drive_folder();
    item_type_.drive_folder_ = drive_folder;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.DriveItem.drive_folder)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DriveItem::kNameFieldNumber;
const int DriveItem::kTitleFieldNumber;
const int DriveItem::kFileFieldNumber;
const int DriveItem::kFolderFieldNumber;
const int DriveItem::kDriveFileFieldNumber;
const int DriveItem::kDriveFolderFieldNumber;
const int DriveItem::kMimeTypeFieldNumber;
const int DriveItem::kOwnerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveItem::DriveItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.DriveItem)
}
DriveItem::DriveItem(const DriveItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_file()) {
    file_ = new ::google::apps::drive::activity::v2::DriveItem_File(*from.file_);
  } else {
    file_ = nullptr;
  }
  if (from.has_folder()) {
    folder_ = new ::google::apps::drive::activity::v2::DriveItem_Folder(*from.folder_);
  } else {
    folder_ = nullptr;
  }
  if (from.has_owner()) {
    owner_ = new ::google::apps::drive::activity::v2::Owner(*from.owner_);
  } else {
    owner_ = nullptr;
  }
  clear_has_item_type();
  switch (from.item_type_case()) {
    case kDriveFile: {
      mutable_drive_file()->::google::apps::drive::activity::v2::DriveItem_DriveFile::MergeFrom(from.drive_file());
      break;
    }
    case kDriveFolder: {
      mutable_drive_folder()->::google::apps::drive::activity::v2::DriveItem_DriveFolder::MergeFrom(from.drive_folder());
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.DriveItem)
}

void DriveItem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_) -
      reinterpret_cast<char*>(&file_)) + sizeof(owner_));
  clear_has_item_type();
}

DriveItem::~DriveItem() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.DriveItem)
  SharedDtor();
}

void DriveItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete file_;
  if (this != internal_default_instance()) delete folder_;
  if (this != internal_default_instance()) delete owner_;
  if (has_item_type()) {
    clear_item_type();
  }
}

void DriveItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DriveItem& DriveItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DriveItem_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void DriveItem::clear_item_type() {
// @@protoc_insertion_point(one_of_clear_start:google.apps.drive.activity.v2.DriveItem)
  switch (item_type_case()) {
    case kDriveFile: {
      delete item_type_.drive_file_;
      break;
    }
    case kDriveFolder: {
      delete item_type_.drive_folder_;
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_TYPE_NOT_SET;
}


void DriveItem::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.DriveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && file_ != nullptr) {
    delete file_;
  }
  file_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && folder_ != nullptr) {
    delete folder_;
  }
  folder_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && owner_ != nullptr) {
    delete owner_;
  }
  owner_ = nullptr;
  clear_item_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DriveItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DriveItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.DriveItem.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.DriveItem.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem_File::_InternalParse;
        object = msg->mutable_file();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem_Folder::_InternalParse;
        object = msg->mutable_folder();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string mime_type = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.DriveItem.mime_type");
        object = msg->mutable_mime_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.apps.drive.activity.v2.Owner owner = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::Owner::_InternalParse;
        object = msg->mutable_owner();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem_DriveFile::_InternalParse;
        object = msg->mutable_drive_file();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem_DriveFolder::_InternalParse;
        object = msg->mutable_drive_folder();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DriveItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.DriveItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.DriveItem.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.DriveItem.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_folder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.DriveItem.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.Owner owner = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive_folder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.DriveItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.DriveItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DriveItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.DriveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItem.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
  if (this->has_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::file(this), output);
  }

  // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
  if (this->has_folder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::folder(this), output);
  }

  // string mime_type = 6;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItem.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mime_type(), output);
  }

  // .google.apps.drive.activity.v2.Owner owner = 7;
  if (this->has_owner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::owner(this), output);
  }

  // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
  if (has_drive_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::drive_file(this), output);
  }

  // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
  if (has_drive_folder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::drive_folder(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.DriveItem)
}

::google::protobuf::uint8* DriveItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.DriveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItem.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
  if (this->has_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::file(this), target);
  }

  // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
  if (this->has_folder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::folder(this), target);
  }

  // string mime_type = 6;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItem.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mime_type(), target);
  }

  // .google.apps.drive.activity.v2.Owner owner = 7;
  if (this->has_owner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::owner(this), target);
  }

  // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
  if (has_drive_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::drive_file(this), target);
  }

  // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
  if (has_drive_folder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::drive_folder(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.DriveItem)
  return target;
}

size_t DriveItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.DriveItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string mime_type = 6;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
  if (this->has_file()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_);
  }

  // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
  if (this->has_folder()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *folder_);
  }

  // .google.apps.drive.activity.v2.Owner owner = 7;
  if (this->has_owner()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *owner_);
  }

  switch (item_type_case()) {
    // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
    case kDriveFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_type_.drive_file_);
      break;
    }
    // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
    case kDriveFolder: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_type_.drive_folder_);
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.DriveItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveItem* source =
      ::google::protobuf::DynamicCastToGenerated<DriveItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.DriveItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.DriveItem)
    MergeFrom(*source);
  }
}

void DriveItem::MergeFrom(const DriveItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.DriveItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_file()) {
    mutable_file()->::google::apps::drive::activity::v2::DriveItem_File::MergeFrom(from.file());
  }
  if (from.has_folder()) {
    mutable_folder()->::google::apps::drive::activity::v2::DriveItem_Folder::MergeFrom(from.folder());
  }
  if (from.has_owner()) {
    mutable_owner()->::google::apps::drive::activity::v2::Owner::MergeFrom(from.owner());
  }
  switch (from.item_type_case()) {
    case kDriveFile: {
      mutable_drive_file()->::google::apps::drive::activity::v2::DriveItem_DriveFile::MergeFrom(from.drive_file());
      break;
    }
    case kDriveFolder: {
      mutable_drive_folder()->::google::apps::drive::activity::v2::DriveItem_DriveFolder::MergeFrom(from.drive_folder());
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
}

void DriveItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.DriveItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveItem::CopyFrom(const DriveItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.DriveItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveItem::IsInitialized() const {
  return true;
}

void DriveItem::Swap(DriveItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveItem::InternalSwap(DriveItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_, other->file_);
  swap(folder_, other->folder_);
  swap(owner_, other->owner_);
  swap(item_type_, other->item_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata DriveItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Owner::InitAsDefaultInstance() {
  ::google::apps::drive::activity::v2::_Owner_default_instance_.user_ = const_cast< ::google::apps::drive::activity::v2::User*>(
      ::google::apps::drive::activity::v2::User::internal_default_instance());
  ::google::apps::drive::activity::v2::_Owner_default_instance_.drive_ = const_cast< ::google::apps::drive::activity::v2::DriveReference*>(
      ::google::apps::drive::activity::v2::DriveReference::internal_default_instance());
  ::google::apps::drive::activity::v2::_Owner_default_instance_._instance.get_mutable()->team_drive_ = const_cast< ::google::apps::drive::activity::v2::TeamDriveReference*>(
      ::google::apps::drive::activity::v2::TeamDriveReference::internal_default_instance());
  ::google::apps::drive::activity::v2::_Owner_default_instance_._instance.get_mutable()->domain_ = const_cast< ::google::apps::drive::activity::v2::Domain*>(
      ::google::apps::drive::activity::v2::Domain::internal_default_instance());
}
class Owner::HasBitSetters {
 public:
  static const ::google::apps::drive::activity::v2::User& user(const Owner* msg);
  static const ::google::apps::drive::activity::v2::DriveReference& drive(const Owner* msg);
  static const ::google::apps::drive::activity::v2::TeamDriveReference& team_drive(const Owner* msg);
  static const ::google::apps::drive::activity::v2::Domain& domain(const Owner* msg);
};

const ::google::apps::drive::activity::v2::User&
Owner::HasBitSetters::user(const Owner* msg) {
  return *msg->owner_.user_;
}
const ::google::apps::drive::activity::v2::DriveReference&
Owner::HasBitSetters::drive(const Owner* msg) {
  return *msg->owner_.drive_;
}
const ::google::apps::drive::activity::v2::TeamDriveReference&
Owner::HasBitSetters::team_drive(const Owner* msg) {
  return *msg->team_drive_;
}
const ::google::apps::drive::activity::v2::Domain&
Owner::HasBitSetters::domain(const Owner* msg) {
  return *msg->domain_;
}
void Owner::set_allocated_user(::google::apps::drive::activity::v2::User* user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_owner();
  if (user) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    set_has_user();
    owner_.user_ = user;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.Owner.user)
}
void Owner::clear_user() {
  if (has_user()) {
    delete owner_.user_;
    clear_has_owner();
  }
}
void Owner::set_allocated_drive(::google::apps::drive::activity::v2::DriveReference* drive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_owner();
  if (drive) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive, submessage_arena);
    }
    set_has_drive();
    owner_.drive_ = drive;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.Owner.drive)
}
void Owner::clear_domain() {
  if (GetArenaNoVirtual() == nullptr && domain_ != nullptr) {
    delete domain_;
  }
  domain_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Owner::kUserFieldNumber;
const int Owner::kDriveFieldNumber;
const int Owner::kTeamDriveFieldNumber;
const int Owner::kDomainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Owner::Owner()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.Owner)
}
Owner::Owner(const Owner& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_team_drive()) {
    team_drive_ = new ::google::apps::drive::activity::v2::TeamDriveReference(*from.team_drive_);
  } else {
    team_drive_ = nullptr;
  }
  if (from.has_domain()) {
    domain_ = new ::google::apps::drive::activity::v2::Domain(*from.domain_);
  } else {
    domain_ = nullptr;
  }
  clear_has_owner();
  switch (from.owner_case()) {
    case kUser: {
      mutable_user()->::google::apps::drive::activity::v2::User::MergeFrom(from.user());
      break;
    }
    case kDrive: {
      mutable_drive()->::google::apps::drive::activity::v2::DriveReference::MergeFrom(from.drive());
      break;
    }
    case OWNER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.Owner)
}

void Owner::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Owner_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  ::memset(&team_drive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&domain_) -
      reinterpret_cast<char*>(&team_drive_)) + sizeof(domain_));
  clear_has_owner();
}

Owner::~Owner() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.Owner)
  SharedDtor();
}

void Owner::SharedDtor() {
  if (this != internal_default_instance()) delete team_drive_;
  if (this != internal_default_instance()) delete domain_;
  if (has_owner()) {
    clear_owner();
  }
}

void Owner::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Owner& Owner::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Owner_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void Owner::clear_owner() {
// @@protoc_insertion_point(one_of_clear_start:google.apps.drive.activity.v2.Owner)
  switch (owner_case()) {
    case kUser: {
      delete owner_.user_;
      break;
    }
    case kDrive: {
      delete owner_.drive_;
      break;
    }
    case OWNER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OWNER_NOT_SET;
}


void Owner::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.Owner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && team_drive_ != nullptr) {
    delete team_drive_;
  }
  team_drive_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && domain_ != nullptr) {
    delete domain_;
  }
  domain_ = nullptr;
  clear_owner();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Owner::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Owner*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.apps.drive.activity.v2.User user = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::User::_InternalParse;
        object = msg->mutable_user();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::TeamDriveReference::_InternalParse;
        object = msg->mutable_team_drive();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.Domain domain = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::Domain::_InternalParse;
        object = msg->mutable_domain();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.DriveReference drive = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveReference::_InternalParse;
        object = msg->mutable_drive();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Owner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.Owner)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.apps.drive.activity.v2.User user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_team_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.Domain domain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveReference drive = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.Owner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.Owner)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Owner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.Owner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.User user = 1;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::user(this), output);
  }

  // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::team_drive(this), output);
  }

  // .google.apps.drive.activity.v2.Domain domain = 3;
  if (this->has_domain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::domain(this), output);
  }

  // .google.apps.drive.activity.v2.DriveReference drive = 4;
  if (has_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::drive(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.Owner)
}

::google::protobuf::uint8* Owner::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.Owner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.User user = 1;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::user(this), target);
  }

  // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::team_drive(this), target);
  }

  // .google.apps.drive.activity.v2.Domain domain = 3;
  if (this->has_domain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::domain(this), target);
  }

  // .google.apps.drive.activity.v2.DriveReference drive = 4;
  if (has_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::drive(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.Owner)
  return target;
}

size_t Owner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.Owner)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];
  if (this->has_team_drive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *team_drive_);
  }

  // .google.apps.drive.activity.v2.Domain domain = 3;
  if (this->has_domain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *domain_);
  }

  switch (owner_case()) {
    // .google.apps.drive.activity.v2.User user = 1;
    case kUser: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *owner_.user_);
      break;
    }
    // .google.apps.drive.activity.v2.DriveReference drive = 4;
    case kDrive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *owner_.drive_);
      break;
    }
    case OWNER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Owner::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.Owner)
  GOOGLE_DCHECK_NE(&from, this);
  const Owner* source =
      ::google::protobuf::DynamicCastToGenerated<Owner>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.Owner)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.Owner)
    MergeFrom(*source);
  }
}

void Owner::MergeFrom(const Owner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.Owner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_team_drive()) {
    mutable_team_drive()->::google::apps::drive::activity::v2::TeamDriveReference::MergeFrom(from.team_drive());
  }
  if (from.has_domain()) {
    mutable_domain()->::google::apps::drive::activity::v2::Domain::MergeFrom(from.domain());
  }
  switch (from.owner_case()) {
    case kUser: {
      mutable_user()->::google::apps::drive::activity::v2::User::MergeFrom(from.user());
      break;
    }
    case kDrive: {
      mutable_drive()->::google::apps::drive::activity::v2::DriveReference::MergeFrom(from.drive());
      break;
    }
    case OWNER_NOT_SET: {
      break;
    }
  }
}

void Owner::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.Owner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Owner::CopyFrom(const Owner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.Owner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Owner::IsInitialized() const {
  return true;
}

void Owner::Swap(Owner* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Owner::InternalSwap(Owner* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(team_drive_, other->team_drive_);
  swap(domain_, other->domain_);
  swap(owner_, other->owner_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Owner::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TeamDrive::InitAsDefaultInstance() {
  ::google::apps::drive::activity::v2::_TeamDrive_default_instance_._instance.get_mutable()->root_ = const_cast< ::google::apps::drive::activity::v2::DriveItem*>(
      ::google::apps::drive::activity::v2::DriveItem::internal_default_instance());
}
class TeamDrive::HasBitSetters {
 public:
  static const ::google::apps::drive::activity::v2::DriveItem& root(const TeamDrive* msg);
};

const ::google::apps::drive::activity::v2::DriveItem&
TeamDrive::HasBitSetters::root(const TeamDrive* msg) {
  return *msg->root_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamDrive::kNameFieldNumber;
const int TeamDrive::kTitleFieldNumber;
const int TeamDrive::kRootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamDrive::TeamDrive()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.TeamDrive)
}
TeamDrive::TeamDrive(const TeamDrive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_root()) {
    root_ = new ::google::apps::drive::activity::v2::DriveItem(*from.root_);
  } else {
    root_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.TeamDrive)
}

void TeamDrive::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TeamDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_ = nullptr;
}

TeamDrive::~TeamDrive() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.TeamDrive)
  SharedDtor();
}

void TeamDrive::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete root_;
}

void TeamDrive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TeamDrive& TeamDrive::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TeamDrive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void TeamDrive::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.TeamDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && root_ != nullptr) {
    delete root_;
  }
  root_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TeamDrive::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TeamDrive*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.TeamDrive.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.TeamDrive.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem root = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem::_InternalParse;
        object = msg->mutable_root();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TeamDrive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.TeamDrive)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.TeamDrive.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.TeamDrive.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem root = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.TeamDrive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.TeamDrive)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TeamDrive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.TeamDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.TeamDrive.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.TeamDrive.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // .google.apps.drive.activity.v2.DriveItem root = 3;
  if (this->has_root()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::root(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.TeamDrive)
}

::google::protobuf::uint8* TeamDrive::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.TeamDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.TeamDrive.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.TeamDrive.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // .google.apps.drive.activity.v2.DriveItem root = 3;
  if (this->has_root()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::root(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.TeamDrive)
  return target;
}

size_t TeamDrive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.TeamDrive)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // .google.apps.drive.activity.v2.DriveItem root = 3;
  if (this->has_root()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *root_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TeamDrive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.TeamDrive)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamDrive* source =
      ::google::protobuf::DynamicCastToGenerated<TeamDrive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.TeamDrive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.TeamDrive)
    MergeFrom(*source);
  }
}

void TeamDrive::MergeFrom(const TeamDrive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.TeamDrive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_root()) {
    mutable_root()->::google::apps::drive::activity::v2::DriveItem::MergeFrom(from.root());
  }
}

void TeamDrive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.TeamDrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamDrive::CopyFrom(const TeamDrive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.TeamDrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamDrive::IsInitialized() const {
  return true;
}

void TeamDrive::Swap(TeamDrive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamDrive::InternalSwap(TeamDrive* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(root_, other->root_);
}

::google::protobuf::Metadata TeamDrive::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Drive::InitAsDefaultInstance() {
  ::google::apps::drive::activity::v2::_Drive_default_instance_._instance.get_mutable()->root_ = const_cast< ::google::apps::drive::activity::v2::DriveItem*>(
      ::google::apps::drive::activity::v2::DriveItem::internal_default_instance());
}
class Drive::HasBitSetters {
 public:
  static const ::google::apps::drive::activity::v2::DriveItem& root(const Drive* msg);
};

const ::google::apps::drive::activity::v2::DriveItem&
Drive::HasBitSetters::root(const Drive* msg) {
  return *msg->root_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Drive::kNameFieldNumber;
const int Drive::kTitleFieldNumber;
const int Drive::kRootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Drive::Drive()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.Drive)
}
Drive::Drive(const Drive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_root()) {
    root_ = new ::google::apps::drive::activity::v2::DriveItem(*from.root_);
  } else {
    root_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.Drive)
}

void Drive::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Drive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_ = nullptr;
}

Drive::~Drive() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.Drive)
  SharedDtor();
}

void Drive::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete root_;
}

void Drive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Drive& Drive::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Drive_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void Drive::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && root_ != nullptr) {
    delete root_;
  }
  root_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Drive::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Drive*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.Drive.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.Drive.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem root = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem::_InternalParse;
        object = msg->mutable_root();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Drive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.Drive)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.Drive.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.Drive.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem root = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.Drive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.Drive)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Drive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.Drive.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.Drive.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // .google.apps.drive.activity.v2.DriveItem root = 3;
  if (this->has_root()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::root(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.Drive)
}

::google::protobuf::uint8* Drive::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.Drive.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.Drive.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // .google.apps.drive.activity.v2.DriveItem root = 3;
  if (this->has_root()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::root(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.Drive)
  return target;
}

size_t Drive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.Drive)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // .google.apps.drive.activity.v2.DriveItem root = 3;
  if (this->has_root()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *root_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Drive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.Drive)
  GOOGLE_DCHECK_NE(&from, this);
  const Drive* source =
      ::google::protobuf::DynamicCastToGenerated<Drive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.Drive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.Drive)
    MergeFrom(*source);
  }
}

void Drive::MergeFrom(const Drive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.Drive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_root()) {
    mutable_root()->::google::apps::drive::activity::v2::DriveItem::MergeFrom(from.root());
  }
}

void Drive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.Drive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Drive::CopyFrom(const Drive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.Drive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Drive::IsInitialized() const {
  return true;
}

void Drive::Swap(Drive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Drive::InternalSwap(Drive* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(root_, other->root_);
}

::google::protobuf::Metadata Drive::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DriveItemReference::InitAsDefaultInstance() {
  ::google::apps::drive::activity::v2::_DriveItemReference_default_instance_._instance.get_mutable()->file_ = const_cast< ::google::apps::drive::activity::v2::DriveItem_File*>(
      ::google::apps::drive::activity::v2::DriveItem_File::internal_default_instance());
  ::google::apps::drive::activity::v2::_DriveItemReference_default_instance_._instance.get_mutable()->folder_ = const_cast< ::google::apps::drive::activity::v2::DriveItem_Folder*>(
      ::google::apps::drive::activity::v2::DriveItem_Folder::internal_default_instance());
  ::google::apps::drive::activity::v2::_DriveItemReference_default_instance_.drive_file_ = const_cast< ::google::apps::drive::activity::v2::DriveItem_DriveFile*>(
      ::google::apps::drive::activity::v2::DriveItem_DriveFile::internal_default_instance());
  ::google::apps::drive::activity::v2::_DriveItemReference_default_instance_.drive_folder_ = const_cast< ::google::apps::drive::activity::v2::DriveItem_DriveFolder*>(
      ::google::apps::drive::activity::v2::DriveItem_DriveFolder::internal_default_instance());
}
class DriveItemReference::HasBitSetters {
 public:
  static const ::google::apps::drive::activity::v2::DriveItem_File& file(const DriveItemReference* msg);
  static const ::google::apps::drive::activity::v2::DriveItem_Folder& folder(const DriveItemReference* msg);
  static const ::google::apps::drive::activity::v2::DriveItem_DriveFile& drive_file(const DriveItemReference* msg);
  static const ::google::apps::drive::activity::v2::DriveItem_DriveFolder& drive_folder(const DriveItemReference* msg);
};

const ::google::apps::drive::activity::v2::DriveItem_File&
DriveItemReference::HasBitSetters::file(const DriveItemReference* msg) {
  return *msg->file_;
}
const ::google::apps::drive::activity::v2::DriveItem_Folder&
DriveItemReference::HasBitSetters::folder(const DriveItemReference* msg) {
  return *msg->folder_;
}
const ::google::apps::drive::activity::v2::DriveItem_DriveFile&
DriveItemReference::HasBitSetters::drive_file(const DriveItemReference* msg) {
  return *msg->item_type_.drive_file_;
}
const ::google::apps::drive::activity::v2::DriveItem_DriveFolder&
DriveItemReference::HasBitSetters::drive_folder(const DriveItemReference* msg) {
  return *msg->item_type_.drive_folder_;
}
void DriveItemReference::set_allocated_drive_file(::google::apps::drive::activity::v2::DriveItem_DriveFile* drive_file) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item_type();
  if (drive_file) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive_file = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive_file, submessage_arena);
    }
    set_has_drive_file();
    item_type_.drive_file_ = drive_file;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.DriveItemReference.drive_file)
}
void DriveItemReference::set_allocated_drive_folder(::google::apps::drive::activity::v2::DriveItem_DriveFolder* drive_folder) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item_type();
  if (drive_folder) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      drive_folder = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drive_folder, submessage_arena);
    }
    set_has_drive_folder();
    item_type_.drive_folder_ = drive_folder;
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.DriveItemReference.drive_folder)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DriveItemReference::kNameFieldNumber;
const int DriveItemReference::kTitleFieldNumber;
const int DriveItemReference::kFileFieldNumber;
const int DriveItemReference::kFolderFieldNumber;
const int DriveItemReference::kDriveFileFieldNumber;
const int DriveItemReference::kDriveFolderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveItemReference::DriveItemReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.DriveItemReference)
}
DriveItemReference::DriveItemReference(const DriveItemReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_file()) {
    file_ = new ::google::apps::drive::activity::v2::DriveItem_File(*from.file_);
  } else {
    file_ = nullptr;
  }
  if (from.has_folder()) {
    folder_ = new ::google::apps::drive::activity::v2::DriveItem_Folder(*from.folder_);
  } else {
    folder_ = nullptr;
  }
  clear_has_item_type();
  switch (from.item_type_case()) {
    case kDriveFile: {
      mutable_drive_file()->::google::apps::drive::activity::v2::DriveItem_DriveFile::MergeFrom(from.drive_file());
      break;
    }
    case kDriveFolder: {
      mutable_drive_folder()->::google::apps::drive::activity::v2::DriveItem_DriveFolder::MergeFrom(from.drive_folder());
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.DriveItemReference)
}

void DriveItemReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DriveItemReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&folder_) -
      reinterpret_cast<char*>(&file_)) + sizeof(folder_));
  clear_has_item_type();
}

DriveItemReference::~DriveItemReference() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.DriveItemReference)
  SharedDtor();
}

void DriveItemReference::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete file_;
  if (this != internal_default_instance()) delete folder_;
  if (has_item_type()) {
    clear_item_type();
  }
}

void DriveItemReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DriveItemReference& DriveItemReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DriveItemReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void DriveItemReference::clear_item_type() {
// @@protoc_insertion_point(one_of_clear_start:google.apps.drive.activity.v2.DriveItemReference)
  switch (item_type_case()) {
    case kDriveFile: {
      delete item_type_.drive_file_;
      break;
    }
    case kDriveFolder: {
      delete item_type_.drive_folder_;
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_TYPE_NOT_SET;
}


void DriveItemReference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.DriveItemReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && file_ != nullptr) {
    delete file_;
  }
  file_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && folder_ != nullptr) {
    delete folder_;
  }
  folder_ = nullptr;
  clear_item_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DriveItemReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DriveItemReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.DriveItemReference.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.DriveItemReference.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem_File::_InternalParse;
        object = msg->mutable_file();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem_Folder::_InternalParse;
        object = msg->mutable_folder();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem_DriveFile::_InternalParse;
        object = msg->mutable_drive_file();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::apps::drive::activity::v2::DriveItem_DriveFolder::_InternalParse;
        object = msg->mutable_drive_folder();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DriveItemReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.DriveItemReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.DriveItemReference.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.DriveItemReference.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_folder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive_folder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.DriveItemReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.DriveItemReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DriveItemReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.DriveItemReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItemReference.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItemReference.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
  if (this->has_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::file(this), output);
  }

  // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
  if (this->has_folder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::folder(this), output);
  }

  // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
  if (has_drive_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::drive_file(this), output);
  }

  // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
  if (has_drive_folder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::drive_folder(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.DriveItemReference)
}

::google::protobuf::uint8* DriveItemReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.DriveItemReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItemReference.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveItemReference.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
  if (this->has_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::file(this), target);
  }

  // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
  if (this->has_folder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::folder(this), target);
  }

  // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
  if (has_drive_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::drive_file(this), target);
  }

  // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
  if (has_drive_folder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::drive_folder(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.DriveItemReference)
  return target;
}

size_t DriveItemReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.DriveItemReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // .google.apps.drive.activity.v2.DriveItem.File file = 3 [deprecated = true];
  if (this->has_file()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_);
  }

  // .google.apps.drive.activity.v2.DriveItem.Folder folder = 4 [deprecated = true];
  if (this->has_folder()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *folder_);
  }

  switch (item_type_case()) {
    // .google.apps.drive.activity.v2.DriveItem.DriveFile drive_file = 8;
    case kDriveFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_type_.drive_file_);
      break;
    }
    // .google.apps.drive.activity.v2.DriveItem.DriveFolder drive_folder = 9;
    case kDriveFolder: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_type_.drive_folder_);
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveItemReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.DriveItemReference)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveItemReference* source =
      ::google::protobuf::DynamicCastToGenerated<DriveItemReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.DriveItemReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.DriveItemReference)
    MergeFrom(*source);
  }
}

void DriveItemReference::MergeFrom(const DriveItemReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.DriveItemReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_file()) {
    mutable_file()->::google::apps::drive::activity::v2::DriveItem_File::MergeFrom(from.file());
  }
  if (from.has_folder()) {
    mutable_folder()->::google::apps::drive::activity::v2::DriveItem_Folder::MergeFrom(from.folder());
  }
  switch (from.item_type_case()) {
    case kDriveFile: {
      mutable_drive_file()->::google::apps::drive::activity::v2::DriveItem_DriveFile::MergeFrom(from.drive_file());
      break;
    }
    case kDriveFolder: {
      mutable_drive_folder()->::google::apps::drive::activity::v2::DriveItem_DriveFolder::MergeFrom(from.drive_folder());
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
}

void DriveItemReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.DriveItemReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveItemReference::CopyFrom(const DriveItemReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.DriveItemReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveItemReference::IsInitialized() const {
  return true;
}

void DriveItemReference::Swap(DriveItemReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveItemReference::InternalSwap(DriveItemReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_, other->file_);
  swap(folder_, other->folder_);
  swap(item_type_, other->item_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata DriveItemReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TeamDriveReference::InitAsDefaultInstance() {
}
class TeamDriveReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamDriveReference::kNameFieldNumber;
const int TeamDriveReference::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamDriveReference::TeamDriveReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.TeamDriveReference)
}
TeamDriveReference::TeamDriveReference(const TeamDriveReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.TeamDriveReference)
}

void TeamDriveReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TeamDriveReference::~TeamDriveReference() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.TeamDriveReference)
  SharedDtor();
}

void TeamDriveReference::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TeamDriveReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TeamDriveReference& TeamDriveReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TeamDriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void TeamDriveReference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.TeamDriveReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TeamDriveReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TeamDriveReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.TeamDriveReference.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.TeamDriveReference.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TeamDriveReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.TeamDriveReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.TeamDriveReference.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.TeamDriveReference.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.TeamDriveReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.TeamDriveReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TeamDriveReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.TeamDriveReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.TeamDriveReference.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.TeamDriveReference.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.TeamDriveReference)
}

::google::protobuf::uint8* TeamDriveReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.TeamDriveReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.TeamDriveReference.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.TeamDriveReference.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.TeamDriveReference)
  return target;
}

size_t TeamDriveReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.TeamDriveReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TeamDriveReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.TeamDriveReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamDriveReference* source =
      ::google::protobuf::DynamicCastToGenerated<TeamDriveReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.TeamDriveReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.TeamDriveReference)
    MergeFrom(*source);
  }
}

void TeamDriveReference::MergeFrom(const TeamDriveReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.TeamDriveReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
}

void TeamDriveReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.TeamDriveReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamDriveReference::CopyFrom(const TeamDriveReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.TeamDriveReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamDriveReference::IsInitialized() const {
  return true;
}

void TeamDriveReference::Swap(TeamDriveReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamDriveReference::InternalSwap(TeamDriveReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TeamDriveReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DriveReference::InitAsDefaultInstance() {
}
class DriveReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DriveReference::kNameFieldNumber;
const int DriveReference::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveReference::DriveReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.apps.drive.activity.v2.DriveReference)
}
DriveReference::DriveReference(const DriveReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  // @@protoc_insertion_point(copy_constructor:google.apps.drive.activity.v2.DriveReference)
}

void DriveReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DriveReference::~DriveReference() {
  // @@protoc_insertion_point(destructor:google.apps.drive.activity.v2.DriveReference)
  SharedDtor();
}

void DriveReference::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DriveReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DriveReference& DriveReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DriveReference_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto.base);
  return *internal_default_instance();
}


void DriveReference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.apps.drive.activity.v2.DriveReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DriveReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DriveReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.DriveReference.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.apps.drive.activity.v2.DriveReference.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DriveReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.apps.drive.activity.v2.DriveReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.DriveReference.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.apps.drive.activity.v2.DriveReference.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.apps.drive.activity.v2.DriveReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.apps.drive.activity.v2.DriveReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DriveReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.apps.drive.activity.v2.DriveReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveReference.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveReference.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.apps.drive.activity.v2.DriveReference)
}

::google::protobuf::uint8* DriveReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.apps.drive.activity.v2.DriveReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveReference.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.apps.drive.activity.v2.DriveReference.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.apps.drive.activity.v2.DriveReference)
  return target;
}

size_t DriveReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.apps.drive.activity.v2.DriveReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.apps.drive.activity.v2.DriveReference)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveReference* source =
      ::google::protobuf::DynamicCastToGenerated<DriveReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.apps.drive.activity.v2.DriveReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.apps.drive.activity.v2.DriveReference)
    MergeFrom(*source);
  }
}

void DriveReference::MergeFrom(const DriveReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.apps.drive.activity.v2.DriveReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
}

void DriveReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.apps.drive.activity.v2.DriveReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveReference::CopyFrom(const DriveReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.apps.drive.activity.v2.DriveReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveReference::IsInitialized() const {
  return true;
}

void DriveReference::Swap(DriveReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveReference::InternalSwap(DriveReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DriveReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto);
  return ::file_level_metadata_google_2fapps_2fdrive_2factivity_2fv2_2ftarget_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace activity
}  // namespace drive
}  // namespace apps
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::Target* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::Target >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::Target >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::TargetReference* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::TargetReference >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::TargetReference >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::FileComment* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::FileComment >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::FileComment >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::DriveItem_File* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::DriveItem_File >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::DriveItem_File >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::DriveItem_Folder* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::DriveItem_Folder >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::DriveItem_Folder >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::DriveItem_DriveFile* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::DriveItem_DriveFile >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::DriveItem_DriveFile >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::DriveItem_DriveFolder* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::DriveItem_DriveFolder >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::DriveItem_DriveFolder >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::DriveItem* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::DriveItem >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::DriveItem >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::Owner* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::Owner >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::Owner >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::TeamDrive* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::TeamDrive >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::TeamDrive >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::Drive* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::Drive >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::Drive >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::DriveItemReference* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::DriveItemReference >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::DriveItemReference >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::TeamDriveReference* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::TeamDriveReference >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::TeamDriveReference >(arena);
}
template<> PROTOBUF_NOINLINE ::google::apps::drive::activity::v2::DriveReference* Arena::CreateMaybeMessage< ::google::apps::drive::activity::v2::DriveReference >(Arena* arena) {
  return Arena::CreateInternal< ::google::apps::drive::activity::v2::DriveReference >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
