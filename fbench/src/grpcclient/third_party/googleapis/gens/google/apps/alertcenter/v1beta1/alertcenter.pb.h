// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/alertcenter/v1beta1/alertcenter.proto

#ifndef PROTOBUF_INCLUDED_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto
#define PROTOBUF_INCLUDED_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/field_behavior.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/status.pb.h"
#include "google/api/client.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[23]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto();
namespace google {
namespace apps {
namespace alertcenter {
namespace v1beta1 {
class Alert;
class AlertDefaultTypeInternal;
extern AlertDefaultTypeInternal _Alert_default_instance_;
class AlertFeedback;
class AlertFeedbackDefaultTypeInternal;
extern AlertFeedbackDefaultTypeInternal _AlertFeedback_default_instance_;
class AlertMetadata;
class AlertMetadataDefaultTypeInternal;
extern AlertMetadataDefaultTypeInternal _AlertMetadata_default_instance_;
class BatchDeleteAlertsRequest;
class BatchDeleteAlertsRequestDefaultTypeInternal;
extern BatchDeleteAlertsRequestDefaultTypeInternal _BatchDeleteAlertsRequest_default_instance_;
class BatchDeleteAlertsResponse;
class BatchDeleteAlertsResponseDefaultTypeInternal;
extern BatchDeleteAlertsResponseDefaultTypeInternal _BatchDeleteAlertsResponse_default_instance_;
class BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse;
class BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUseDefaultTypeInternal;
extern BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUseDefaultTypeInternal _BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse_default_instance_;
class BatchUndeleteAlertsRequest;
class BatchUndeleteAlertsRequestDefaultTypeInternal;
extern BatchUndeleteAlertsRequestDefaultTypeInternal _BatchUndeleteAlertsRequest_default_instance_;
class BatchUndeleteAlertsResponse;
class BatchUndeleteAlertsResponseDefaultTypeInternal;
extern BatchUndeleteAlertsResponseDefaultTypeInternal _BatchUndeleteAlertsResponse_default_instance_;
class BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse;
class BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUseDefaultTypeInternal;
extern BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUseDefaultTypeInternal _BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse_default_instance_;
class CreateAlertFeedbackRequest;
class CreateAlertFeedbackRequestDefaultTypeInternal;
extern CreateAlertFeedbackRequestDefaultTypeInternal _CreateAlertFeedbackRequest_default_instance_;
class DeleteAlertRequest;
class DeleteAlertRequestDefaultTypeInternal;
extern DeleteAlertRequestDefaultTypeInternal _DeleteAlertRequest_default_instance_;
class GetAlertMetadataRequest;
class GetAlertMetadataRequestDefaultTypeInternal;
extern GetAlertMetadataRequestDefaultTypeInternal _GetAlertMetadataRequest_default_instance_;
class GetAlertRequest;
class GetAlertRequestDefaultTypeInternal;
extern GetAlertRequestDefaultTypeInternal _GetAlertRequest_default_instance_;
class GetSettingsRequest;
class GetSettingsRequestDefaultTypeInternal;
extern GetSettingsRequestDefaultTypeInternal _GetSettingsRequest_default_instance_;
class ListAlertFeedbackRequest;
class ListAlertFeedbackRequestDefaultTypeInternal;
extern ListAlertFeedbackRequestDefaultTypeInternal _ListAlertFeedbackRequest_default_instance_;
class ListAlertFeedbackResponse;
class ListAlertFeedbackResponseDefaultTypeInternal;
extern ListAlertFeedbackResponseDefaultTypeInternal _ListAlertFeedbackResponse_default_instance_;
class ListAlertsRequest;
class ListAlertsRequestDefaultTypeInternal;
extern ListAlertsRequestDefaultTypeInternal _ListAlertsRequest_default_instance_;
class ListAlertsResponse;
class ListAlertsResponseDefaultTypeInternal;
extern ListAlertsResponseDefaultTypeInternal _ListAlertsResponse_default_instance_;
class Settings;
class SettingsDefaultTypeInternal;
extern SettingsDefaultTypeInternal _Settings_default_instance_;
class Settings_Notification;
class Settings_NotificationDefaultTypeInternal;
extern Settings_NotificationDefaultTypeInternal _Settings_Notification_default_instance_;
class Settings_Notification_CloudPubsubTopic;
class Settings_Notification_CloudPubsubTopicDefaultTypeInternal;
extern Settings_Notification_CloudPubsubTopicDefaultTypeInternal _Settings_Notification_CloudPubsubTopic_default_instance_;
class UndeleteAlertRequest;
class UndeleteAlertRequestDefaultTypeInternal;
extern UndeleteAlertRequestDefaultTypeInternal _UndeleteAlertRequest_default_instance_;
class UpdateSettingsRequest;
class UpdateSettingsRequestDefaultTypeInternal;
extern UpdateSettingsRequestDefaultTypeInternal _UpdateSettingsRequest_default_instance_;
}  // namespace v1beta1
}  // namespace alertcenter
}  // namespace apps
namespace protobuf {
template<> ::google::apps::alertcenter::v1beta1::Alert* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::Alert>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::AlertFeedback* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::AlertFeedback>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::AlertMetadata* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::AlertMetadata>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::DeleteAlertRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::GetAlertRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::GetAlertRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::GetSettingsRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::GetSettingsRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::ListAlertsRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::ListAlertsRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::ListAlertsResponse* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::ListAlertsResponse>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::Settings* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::Settings>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::Settings_Notification* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::Settings_Notification>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::UndeleteAlertRequest>(Arena*);
template<> ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* Arena::CreateMaybeMessage<::google::apps::alertcenter::v1beta1::UpdateSettingsRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace apps {
namespace alertcenter {
namespace v1beta1 {

enum Settings_Notification_PayloadFormat {
  Settings_Notification_PayloadFormat_PAYLOAD_FORMAT_UNSPECIFIED = 0,
  Settings_Notification_PayloadFormat_JSON = 1,
  Settings_Notification_PayloadFormat_Settings_Notification_PayloadFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Settings_Notification_PayloadFormat_Settings_Notification_PayloadFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Settings_Notification_PayloadFormat_IsValid(int value);
const Settings_Notification_PayloadFormat Settings_Notification_PayloadFormat_PayloadFormat_MIN = Settings_Notification_PayloadFormat_PAYLOAD_FORMAT_UNSPECIFIED;
const Settings_Notification_PayloadFormat Settings_Notification_PayloadFormat_PayloadFormat_MAX = Settings_Notification_PayloadFormat_JSON;
const int Settings_Notification_PayloadFormat_PayloadFormat_ARRAYSIZE = Settings_Notification_PayloadFormat_PayloadFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* Settings_Notification_PayloadFormat_descriptor();
inline const ::std::string& Settings_Notification_PayloadFormat_Name(Settings_Notification_PayloadFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    Settings_Notification_PayloadFormat_descriptor(), value);
}
inline bool Settings_Notification_PayloadFormat_Parse(
    const ::std::string& name, Settings_Notification_PayloadFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Settings_Notification_PayloadFormat>(
    Settings_Notification_PayloadFormat_descriptor(), name, value);
}
enum AlertFeedbackType {
  ALERT_FEEDBACK_TYPE_UNSPECIFIED = 0,
  NOT_USEFUL = 1,
  SOMEWHAT_USEFUL = 2,
  VERY_USEFUL = 3,
  AlertFeedbackType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AlertFeedbackType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AlertFeedbackType_IsValid(int value);
const AlertFeedbackType AlertFeedbackType_MIN = ALERT_FEEDBACK_TYPE_UNSPECIFIED;
const AlertFeedbackType AlertFeedbackType_MAX = VERY_USEFUL;
const int AlertFeedbackType_ARRAYSIZE = AlertFeedbackType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlertFeedbackType_descriptor();
inline const ::std::string& AlertFeedbackType_Name(AlertFeedbackType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlertFeedbackType_descriptor(), value);
}
inline bool AlertFeedbackType_Parse(
    const ::std::string& name, AlertFeedbackType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlertFeedbackType>(
    AlertFeedbackType_descriptor(), name, value);
}
// ===================================================================

class Alert final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.Alert) */ {
 public:
  Alert();
  virtual ~Alert();

  Alert(const Alert& from);

  inline Alert& operator=(const Alert& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Alert(Alert&& from) noexcept
    : Alert() {
    *this = ::std::move(from);
  }

  inline Alert& operator=(Alert&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Alert& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Alert* internal_default_instance() {
    return reinterpret_cast<const Alert*>(
               &_Alert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Alert* other);
  friend void swap(Alert& a, Alert& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Alert* New() const final {
    return CreateMaybeMessage<Alert>(nullptr);
  }

  Alert* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Alert>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Alert& from);
  void MergeFrom(const Alert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Alert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // string type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string source = 7;
  void clear_source();
  static const int kSourceFieldNumber = 7;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // string security_investigation_tool_link = 9;
  void clear_security_investigation_tool_link();
  static const int kSecurityInvestigationToolLinkFieldNumber = 9;
  const ::std::string& security_investigation_tool_link() const;
  void set_security_investigation_tool_link(const ::std::string& value);
  #if LANG_CXX11
  void set_security_investigation_tool_link(::std::string&& value);
  #endif
  void set_security_investigation_tool_link(const char* value);
  void set_security_investigation_tool_link(const char* value, size_t size);
  ::std::string* mutable_security_investigation_tool_link();
  ::std::string* release_security_investigation_tool_link();
  void set_allocated_security_investigation_tool_link(::std::string* security_investigation_tool_link);

  // string etag = 14;
  void clear_etag();
  static const int kEtagFieldNumber = 14;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // .google.protobuf.Timestamp create_time = 3;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.protobuf.Timestamp start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp end_time = 5;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // .google.protobuf.Any data = 8;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 8;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // .google.apps.alertcenter.v1beta1.AlertMetadata metadata = 12;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 12;
  const ::google::apps::alertcenter::v1beta1::AlertMetadata& metadata() const;
  ::google::apps::alertcenter::v1beta1::AlertMetadata* release_metadata();
  ::google::apps::alertcenter::v1beta1::AlertMetadata* mutable_metadata();
  void set_allocated_metadata(::google::apps::alertcenter::v1beta1::AlertMetadata* metadata);

  // .google.protobuf.Timestamp update_time = 13;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 13;
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);

  // bool deleted = 11;
  void clear_deleted();
  static const int kDeletedFieldNumber = 11;
  bool deleted() const;
  void set_deleted(bool value);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.Alert)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr security_investigation_tool_link_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  ::google::protobuf::Any* data_;
  ::google::apps::alertcenter::v1beta1::AlertMetadata* metadata_;
  ::google::protobuf::Timestamp* update_time_;
  bool deleted_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class AlertFeedback final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.AlertFeedback) */ {
 public:
  AlertFeedback();
  virtual ~AlertFeedback();

  AlertFeedback(const AlertFeedback& from);

  inline AlertFeedback& operator=(const AlertFeedback& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlertFeedback(AlertFeedback&& from) noexcept
    : AlertFeedback() {
    *this = ::std::move(from);
  }

  inline AlertFeedback& operator=(AlertFeedback&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AlertFeedback& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertFeedback* internal_default_instance() {
    return reinterpret_cast<const AlertFeedback*>(
               &_AlertFeedback_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AlertFeedback* other);
  friend void swap(AlertFeedback& a, AlertFeedback& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlertFeedback* New() const final {
    return CreateMaybeMessage<AlertFeedback>(nullptr);
  }

  AlertFeedback* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlertFeedback>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlertFeedback& from);
  void MergeFrom(const AlertFeedback& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlertFeedback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // string feedback_id = 3;
  void clear_feedback_id();
  static const int kFeedbackIdFieldNumber = 3;
  const ::std::string& feedback_id() const;
  void set_feedback_id(const ::std::string& value);
  #if LANG_CXX11
  void set_feedback_id(::std::string&& value);
  #endif
  void set_feedback_id(const char* value);
  void set_feedback_id(const char* value, size_t size);
  ::std::string* mutable_feedback_id();
  ::std::string* release_feedback_id();
  void set_allocated_feedback_id(::std::string* feedback_id);

  // string email = 6;
  void clear_email();
  static const int kEmailFieldNumber = 6;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // .google.protobuf.Timestamp create_time = 4;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.apps.alertcenter.v1beta1.AlertFeedbackType type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::apps::alertcenter::v1beta1::AlertFeedbackType type() const;
  void set_type(::google::apps::alertcenter::v1beta1::AlertFeedbackType value);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.AlertFeedback)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  ::google::protobuf::internal::ArenaStringPtr feedback_id_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::Timestamp* create_time_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class AlertMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.AlertMetadata) */ {
 public:
  AlertMetadata();
  virtual ~AlertMetadata();

  AlertMetadata(const AlertMetadata& from);

  inline AlertMetadata& operator=(const AlertMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlertMetadata(AlertMetadata&& from) noexcept
    : AlertMetadata() {
    *this = ::std::move(from);
  }

  inline AlertMetadata& operator=(AlertMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AlertMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertMetadata* internal_default_instance() {
    return reinterpret_cast<const AlertMetadata*>(
               &_AlertMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AlertMetadata* other);
  friend void swap(AlertMetadata& a, AlertMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlertMetadata* New() const final {
    return CreateMaybeMessage<AlertMetadata>(nullptr);
  }

  AlertMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlertMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlertMetadata& from);
  void MergeFrom(const AlertMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlertMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // string status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // string assignee = 5;
  void clear_assignee();
  static const int kAssigneeFieldNumber = 5;
  const ::std::string& assignee() const;
  void set_assignee(const ::std::string& value);
  #if LANG_CXX11
  void set_assignee(::std::string&& value);
  #endif
  void set_assignee(const char* value);
  void set_assignee(const char* value, size_t size);
  ::std::string* mutable_assignee();
  ::std::string* release_assignee();
  void set_allocated_assignee(::std::string* assignee);

  // string severity = 7;
  void clear_severity();
  static const int kSeverityFieldNumber = 7;
  const ::std::string& severity() const;
  void set_severity(const ::std::string& value);
  #if LANG_CXX11
  void set_severity(::std::string&& value);
  #endif
  void set_severity(const char* value);
  void set_severity(const char* value, size_t size);
  ::std::string* mutable_severity();
  ::std::string* release_severity();
  void set_allocated_severity(::std::string* severity);

  // string etag = 8;
  void clear_etag();
  static const int kEtagFieldNumber = 8;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // .google.protobuf.Timestamp update_time = 6;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 6;
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.AlertMetadata)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::internal::ArenaStringPtr assignee_;
  ::google::protobuf::internal::ArenaStringPtr severity_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::Timestamp* update_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class Settings_Notification_CloudPubsubTopic final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic) */ {
 public:
  Settings_Notification_CloudPubsubTopic();
  virtual ~Settings_Notification_CloudPubsubTopic();

  Settings_Notification_CloudPubsubTopic(const Settings_Notification_CloudPubsubTopic& from);

  inline Settings_Notification_CloudPubsubTopic& operator=(const Settings_Notification_CloudPubsubTopic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Settings_Notification_CloudPubsubTopic(Settings_Notification_CloudPubsubTopic&& from) noexcept
    : Settings_Notification_CloudPubsubTopic() {
    *this = ::std::move(from);
  }

  inline Settings_Notification_CloudPubsubTopic& operator=(Settings_Notification_CloudPubsubTopic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Settings_Notification_CloudPubsubTopic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Settings_Notification_CloudPubsubTopic* internal_default_instance() {
    return reinterpret_cast<const Settings_Notification_CloudPubsubTopic*>(
               &_Settings_Notification_CloudPubsubTopic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Settings_Notification_CloudPubsubTopic* other);
  friend void swap(Settings_Notification_CloudPubsubTopic& a, Settings_Notification_CloudPubsubTopic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Settings_Notification_CloudPubsubTopic* New() const final {
    return CreateMaybeMessage<Settings_Notification_CloudPubsubTopic>(nullptr);
  }

  Settings_Notification_CloudPubsubTopic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Settings_Notification_CloudPubsubTopic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Settings_Notification_CloudPubsubTopic& from);
  void MergeFrom(const Settings_Notification_CloudPubsubTopic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Settings_Notification_CloudPubsubTopic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string topic_name = 1;
  void clear_topic_name();
  static const int kTopicNameFieldNumber = 1;
  const ::std::string& topic_name() const;
  void set_topic_name(const ::std::string& value);
  #if LANG_CXX11
  void set_topic_name(::std::string&& value);
  #endif
  void set_topic_name(const char* value);
  void set_topic_name(const char* value, size_t size);
  ::std::string* mutable_topic_name();
  ::std::string* release_topic_name();
  void set_allocated_topic_name(::std::string* topic_name);

  // .google.apps.alertcenter.v1beta1.Settings.Notification.PayloadFormat payload_format = 2;
  void clear_payload_format();
  static const int kPayloadFormatFieldNumber = 2;
  ::google::apps::alertcenter::v1beta1::Settings_Notification_PayloadFormat payload_format() const;
  void set_payload_format(::google::apps::alertcenter::v1beta1::Settings_Notification_PayloadFormat value);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr topic_name_;
  int payload_format_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class Settings_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.Settings.Notification) */ {
 public:
  Settings_Notification();
  virtual ~Settings_Notification();

  Settings_Notification(const Settings_Notification& from);

  inline Settings_Notification& operator=(const Settings_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Settings_Notification(Settings_Notification&& from) noexcept
    : Settings_Notification() {
    *this = ::std::move(from);
  }

  inline Settings_Notification& operator=(Settings_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Settings_Notification& default_instance();

  enum DestinationCase {
    kCloudPubsubTopic = 1,
    DESTINATION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Settings_Notification* internal_default_instance() {
    return reinterpret_cast<const Settings_Notification*>(
               &_Settings_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Settings_Notification* other);
  friend void swap(Settings_Notification& a, Settings_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Settings_Notification* New() const final {
    return CreateMaybeMessage<Settings_Notification>(nullptr);
  }

  Settings_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Settings_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Settings_Notification& from);
  void MergeFrom(const Settings_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Settings_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Settings_Notification_CloudPubsubTopic CloudPubsubTopic;

  typedef Settings_Notification_PayloadFormat PayloadFormat;
  static const PayloadFormat PAYLOAD_FORMAT_UNSPECIFIED =
    Settings_Notification_PayloadFormat_PAYLOAD_FORMAT_UNSPECIFIED;
  static const PayloadFormat JSON =
    Settings_Notification_PayloadFormat_JSON;
  static inline bool PayloadFormat_IsValid(int value) {
    return Settings_Notification_PayloadFormat_IsValid(value);
  }
  static const PayloadFormat PayloadFormat_MIN =
    Settings_Notification_PayloadFormat_PayloadFormat_MIN;
  static const PayloadFormat PayloadFormat_MAX =
    Settings_Notification_PayloadFormat_PayloadFormat_MAX;
  static const int PayloadFormat_ARRAYSIZE =
    Settings_Notification_PayloadFormat_PayloadFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PayloadFormat_descriptor() {
    return Settings_Notification_PayloadFormat_descriptor();
  }
  static inline const ::std::string& PayloadFormat_Name(PayloadFormat value) {
    return Settings_Notification_PayloadFormat_Name(value);
  }
  static inline bool PayloadFormat_Parse(const ::std::string& name,
      PayloadFormat* value) {
    return Settings_Notification_PayloadFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic cloud_pubsub_topic = 1;
  bool has_cloud_pubsub_topic() const;
  void clear_cloud_pubsub_topic();
  static const int kCloudPubsubTopicFieldNumber = 1;
  const ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic& cloud_pubsub_topic() const;
  ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic* release_cloud_pubsub_topic();
  ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic* mutable_cloud_pubsub_topic();
  void set_allocated_cloud_pubsub_topic(::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic* cloud_pubsub_topic);

  void clear_destination();
  DestinationCase destination_case() const;
  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.Settings.Notification)
 private:
  class HasBitSetters;
  void set_has_cloud_pubsub_topic();

  inline bool has_destination() const;
  inline void clear_has_destination();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DestinationUnion {
    DestinationUnion() {}
    ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic* cloud_pubsub_topic_;
  } destination_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class Settings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.Settings) */ {
 public:
  Settings();
  virtual ~Settings();

  Settings(const Settings& from);

  inline Settings& operator=(const Settings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Settings(Settings&& from) noexcept
    : Settings() {
    *this = ::std::move(from);
  }

  inline Settings& operator=(Settings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Settings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Settings* internal_default_instance() {
    return reinterpret_cast<const Settings*>(
               &_Settings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Settings* other);
  friend void swap(Settings& a, Settings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Settings* New() const final {
    return CreateMaybeMessage<Settings>(nullptr);
  }

  Settings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Settings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Settings& from);
  void MergeFrom(const Settings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Settings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Settings_Notification Notification;

  // accessors -------------------------------------------------------

  // repeated .google.apps.alertcenter.v1beta1.Settings.Notification notifications = 1;
  int notifications_size() const;
  void clear_notifications();
  static const int kNotificationsFieldNumber = 1;
  ::google::apps::alertcenter::v1beta1::Settings_Notification* mutable_notifications(int index);
  ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Settings_Notification >*
      mutable_notifications();
  const ::google::apps::alertcenter::v1beta1::Settings_Notification& notifications(int index) const;
  ::google::apps::alertcenter::v1beta1::Settings_Notification* add_notifications();
  const ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Settings_Notification >&
      notifications() const;

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.Settings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Settings_Notification > notifications_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class BatchDeleteAlertsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest) */ {
 public:
  BatchDeleteAlertsRequest();
  virtual ~BatchDeleteAlertsRequest();

  BatchDeleteAlertsRequest(const BatchDeleteAlertsRequest& from);

  inline BatchDeleteAlertsRequest& operator=(const BatchDeleteAlertsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchDeleteAlertsRequest(BatchDeleteAlertsRequest&& from) noexcept
    : BatchDeleteAlertsRequest() {
    *this = ::std::move(from);
  }

  inline BatchDeleteAlertsRequest& operator=(BatchDeleteAlertsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BatchDeleteAlertsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchDeleteAlertsRequest* internal_default_instance() {
    return reinterpret_cast<const BatchDeleteAlertsRequest*>(
               &_BatchDeleteAlertsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(BatchDeleteAlertsRequest* other);
  friend void swap(BatchDeleteAlertsRequest& a, BatchDeleteAlertsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchDeleteAlertsRequest* New() const final {
    return CreateMaybeMessage<BatchDeleteAlertsRequest>(nullptr);
  }

  BatchDeleteAlertsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchDeleteAlertsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchDeleteAlertsRequest& from);
  void MergeFrom(const BatchDeleteAlertsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchDeleteAlertsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string alert_id = 2;
  int alert_id_size() const;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id(int index) const;
  ::std::string* mutable_alert_id(int index);
  void set_alert_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(int index, ::std::string&& value);
  #endif
  void set_alert_id(int index, const char* value);
  void set_alert_id(int index, const char* value, size_t size);
  ::std::string* add_alert_id();
  void add_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void add_alert_id(::std::string&& value);
  #endif
  void add_alert_id(const char* value);
  void add_alert_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& alert_id() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_alert_id();

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> alert_id_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse, 
    ::std::string, ::google::rpc::Status,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse, 
    ::std::string, ::google::rpc::Status,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse();
  BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse& other);
  static const BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse*>(&_BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class BatchDeleteAlertsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse) */ {
 public:
  BatchDeleteAlertsResponse();
  virtual ~BatchDeleteAlertsResponse();

  BatchDeleteAlertsResponse(const BatchDeleteAlertsResponse& from);

  inline BatchDeleteAlertsResponse& operator=(const BatchDeleteAlertsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchDeleteAlertsResponse(BatchDeleteAlertsResponse&& from) noexcept
    : BatchDeleteAlertsResponse() {
    *this = ::std::move(from);
  }

  inline BatchDeleteAlertsResponse& operator=(BatchDeleteAlertsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BatchDeleteAlertsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchDeleteAlertsResponse* internal_default_instance() {
    return reinterpret_cast<const BatchDeleteAlertsResponse*>(
               &_BatchDeleteAlertsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(BatchDeleteAlertsResponse* other);
  friend void swap(BatchDeleteAlertsResponse& a, BatchDeleteAlertsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchDeleteAlertsResponse* New() const final {
    return CreateMaybeMessage<BatchDeleteAlertsResponse>(nullptr);
  }

  BatchDeleteAlertsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchDeleteAlertsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchDeleteAlertsResponse& from);
  void MergeFrom(const BatchDeleteAlertsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchDeleteAlertsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string success_alert_ids = 1;
  int success_alert_ids_size() const;
  void clear_success_alert_ids();
  static const int kSuccessAlertIdsFieldNumber = 1;
  const ::std::string& success_alert_ids(int index) const;
  ::std::string* mutable_success_alert_ids(int index);
  void set_success_alert_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_success_alert_ids(int index, ::std::string&& value);
  #endif
  void set_success_alert_ids(int index, const char* value);
  void set_success_alert_ids(int index, const char* value, size_t size);
  ::std::string* add_success_alert_ids();
  void add_success_alert_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_success_alert_ids(::std::string&& value);
  #endif
  void add_success_alert_ids(const char* value);
  void add_success_alert_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& success_alert_ids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_success_alert_ids();

  // map<string, .google.rpc.Status> failed_alert_status = 2;
  int failed_alert_status_size() const;
  void clear_failed_alert_status();
  static const int kFailedAlertStatusFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::rpc::Status >&
      failed_alert_status() const;
  ::google::protobuf::Map< ::std::string, ::google::rpc::Status >*
      mutable_failed_alert_status();

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> success_alert_ids_;
  ::google::protobuf::internal::MapField<
      BatchDeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse,
      ::std::string, ::google::rpc::Status,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > failed_alert_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class BatchUndeleteAlertsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest) */ {
 public:
  BatchUndeleteAlertsRequest();
  virtual ~BatchUndeleteAlertsRequest();

  BatchUndeleteAlertsRequest(const BatchUndeleteAlertsRequest& from);

  inline BatchUndeleteAlertsRequest& operator=(const BatchUndeleteAlertsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchUndeleteAlertsRequest(BatchUndeleteAlertsRequest&& from) noexcept
    : BatchUndeleteAlertsRequest() {
    *this = ::std::move(from);
  }

  inline BatchUndeleteAlertsRequest& operator=(BatchUndeleteAlertsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BatchUndeleteAlertsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchUndeleteAlertsRequest* internal_default_instance() {
    return reinterpret_cast<const BatchUndeleteAlertsRequest*>(
               &_BatchUndeleteAlertsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(BatchUndeleteAlertsRequest* other);
  friend void swap(BatchUndeleteAlertsRequest& a, BatchUndeleteAlertsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchUndeleteAlertsRequest* New() const final {
    return CreateMaybeMessage<BatchUndeleteAlertsRequest>(nullptr);
  }

  BatchUndeleteAlertsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchUndeleteAlertsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchUndeleteAlertsRequest& from);
  void MergeFrom(const BatchUndeleteAlertsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchUndeleteAlertsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string alert_id = 2;
  int alert_id_size() const;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id(int index) const;
  ::std::string* mutable_alert_id(int index);
  void set_alert_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(int index, ::std::string&& value);
  #endif
  void set_alert_id(int index, const char* value);
  void set_alert_id(int index, const char* value, size_t size);
  ::std::string* add_alert_id();
  void add_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void add_alert_id(::std::string&& value);
  #endif
  void add_alert_id(const char* value);
  void add_alert_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& alert_id() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_alert_id();

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> alert_id_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse, 
    ::std::string, ::google::rpc::Status,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse, 
    ::std::string, ::google::rpc::Status,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse();
  BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse& other);
  static const BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse*>(&_BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class BatchUndeleteAlertsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse) */ {
 public:
  BatchUndeleteAlertsResponse();
  virtual ~BatchUndeleteAlertsResponse();

  BatchUndeleteAlertsResponse(const BatchUndeleteAlertsResponse& from);

  inline BatchUndeleteAlertsResponse& operator=(const BatchUndeleteAlertsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchUndeleteAlertsResponse(BatchUndeleteAlertsResponse&& from) noexcept
    : BatchUndeleteAlertsResponse() {
    *this = ::std::move(from);
  }

  inline BatchUndeleteAlertsResponse& operator=(BatchUndeleteAlertsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BatchUndeleteAlertsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchUndeleteAlertsResponse* internal_default_instance() {
    return reinterpret_cast<const BatchUndeleteAlertsResponse*>(
               &_BatchUndeleteAlertsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(BatchUndeleteAlertsResponse* other);
  friend void swap(BatchUndeleteAlertsResponse& a, BatchUndeleteAlertsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchUndeleteAlertsResponse* New() const final {
    return CreateMaybeMessage<BatchUndeleteAlertsResponse>(nullptr);
  }

  BatchUndeleteAlertsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchUndeleteAlertsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchUndeleteAlertsResponse& from);
  void MergeFrom(const BatchUndeleteAlertsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchUndeleteAlertsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string success_alert_ids = 1;
  int success_alert_ids_size() const;
  void clear_success_alert_ids();
  static const int kSuccessAlertIdsFieldNumber = 1;
  const ::std::string& success_alert_ids(int index) const;
  ::std::string* mutable_success_alert_ids(int index);
  void set_success_alert_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_success_alert_ids(int index, ::std::string&& value);
  #endif
  void set_success_alert_ids(int index, const char* value);
  void set_success_alert_ids(int index, const char* value, size_t size);
  ::std::string* add_success_alert_ids();
  void add_success_alert_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_success_alert_ids(::std::string&& value);
  #endif
  void add_success_alert_ids(const char* value);
  void add_success_alert_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& success_alert_ids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_success_alert_ids();

  // map<string, .google.rpc.Status> failed_alert_status = 2;
  int failed_alert_status_size() const;
  void clear_failed_alert_status();
  static const int kFailedAlertStatusFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::rpc::Status >&
      failed_alert_status() const;
  ::google::protobuf::Map< ::std::string, ::google::rpc::Status >*
      mutable_failed_alert_status();

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> success_alert_ids_;
  ::google::protobuf::internal::MapField<
      BatchUndeleteAlertsResponse_FailedAlertStatusEntry_DoNotUse,
      ::std::string, ::google::rpc::Status,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > failed_alert_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class ListAlertsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.ListAlertsRequest) */ {
 public:
  ListAlertsRequest();
  virtual ~ListAlertsRequest();

  ListAlertsRequest(const ListAlertsRequest& from);

  inline ListAlertsRequest& operator=(const ListAlertsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListAlertsRequest(ListAlertsRequest&& from) noexcept
    : ListAlertsRequest() {
    *this = ::std::move(from);
  }

  inline ListAlertsRequest& operator=(ListAlertsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListAlertsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListAlertsRequest* internal_default_instance() {
    return reinterpret_cast<const ListAlertsRequest*>(
               &_ListAlertsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ListAlertsRequest* other);
  friend void swap(ListAlertsRequest& a, ListAlertsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListAlertsRequest* New() const final {
    return CreateMaybeMessage<ListAlertsRequest>(nullptr);
  }

  ListAlertsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListAlertsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListAlertsRequest& from);
  void MergeFrom(const ListAlertsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListAlertsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string filter = 4;
  void clear_filter();
  static const int kFilterFieldNumber = 4;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string order_by = 5;
  void clear_order_by();
  static const int kOrderByFieldNumber = 5;
  const ::std::string& order_by() const;
  void set_order_by(const ::std::string& value);
  #if LANG_CXX11
  void set_order_by(::std::string&& value);
  #endif
  void set_order_by(const char* value);
  void set_order_by(const char* value, size_t size);
  ::std::string* mutable_order_by();
  ::std::string* release_order_by();
  void set_allocated_order_by(::std::string* order_by);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.ListAlertsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr order_by_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class ListAlertsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.ListAlertsResponse) */ {
 public:
  ListAlertsResponse();
  virtual ~ListAlertsResponse();

  ListAlertsResponse(const ListAlertsResponse& from);

  inline ListAlertsResponse& operator=(const ListAlertsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListAlertsResponse(ListAlertsResponse&& from) noexcept
    : ListAlertsResponse() {
    *this = ::std::move(from);
  }

  inline ListAlertsResponse& operator=(ListAlertsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListAlertsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListAlertsResponse* internal_default_instance() {
    return reinterpret_cast<const ListAlertsResponse*>(
               &_ListAlertsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ListAlertsResponse* other);
  friend void swap(ListAlertsResponse& a, ListAlertsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListAlertsResponse* New() const final {
    return CreateMaybeMessage<ListAlertsResponse>(nullptr);
  }

  ListAlertsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListAlertsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListAlertsResponse& from);
  void MergeFrom(const ListAlertsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListAlertsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.apps.alertcenter.v1beta1.Alert alerts = 1;
  int alerts_size() const;
  void clear_alerts();
  static const int kAlertsFieldNumber = 1;
  ::google::apps::alertcenter::v1beta1::Alert* mutable_alerts(int index);
  ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Alert >*
      mutable_alerts();
  const ::google::apps::alertcenter::v1beta1::Alert& alerts(int index) const;
  ::google::apps::alertcenter::v1beta1::Alert* add_alerts();
  const ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Alert >&
      alerts() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.ListAlertsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Alert > alerts_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class GetAlertRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.GetAlertRequest) */ {
 public:
  GetAlertRequest();
  virtual ~GetAlertRequest();

  GetAlertRequest(const GetAlertRequest& from);

  inline GetAlertRequest& operator=(const GetAlertRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAlertRequest(GetAlertRequest&& from) noexcept
    : GetAlertRequest() {
    *this = ::std::move(from);
  }

  inline GetAlertRequest& operator=(GetAlertRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetAlertRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAlertRequest* internal_default_instance() {
    return reinterpret_cast<const GetAlertRequest*>(
               &_GetAlertRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(GetAlertRequest* other);
  friend void swap(GetAlertRequest& a, GetAlertRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAlertRequest* New() const final {
    return CreateMaybeMessage<GetAlertRequest>(nullptr);
  }

  GetAlertRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAlertRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAlertRequest& from);
  void MergeFrom(const GetAlertRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAlertRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.GetAlertRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class DeleteAlertRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.DeleteAlertRequest) */ {
 public:
  DeleteAlertRequest();
  virtual ~DeleteAlertRequest();

  DeleteAlertRequest(const DeleteAlertRequest& from);

  inline DeleteAlertRequest& operator=(const DeleteAlertRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteAlertRequest(DeleteAlertRequest&& from) noexcept
    : DeleteAlertRequest() {
    *this = ::std::move(from);
  }

  inline DeleteAlertRequest& operator=(DeleteAlertRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteAlertRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteAlertRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAlertRequest*>(
               &_DeleteAlertRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(DeleteAlertRequest* other);
  friend void swap(DeleteAlertRequest& a, DeleteAlertRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteAlertRequest* New() const final {
    return CreateMaybeMessage<DeleteAlertRequest>(nullptr);
  }

  DeleteAlertRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteAlertRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteAlertRequest& from);
  void MergeFrom(const DeleteAlertRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteAlertRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.DeleteAlertRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class UndeleteAlertRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.UndeleteAlertRequest) */ {
 public:
  UndeleteAlertRequest();
  virtual ~UndeleteAlertRequest();

  UndeleteAlertRequest(const UndeleteAlertRequest& from);

  inline UndeleteAlertRequest& operator=(const UndeleteAlertRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UndeleteAlertRequest(UndeleteAlertRequest&& from) noexcept
    : UndeleteAlertRequest() {
    *this = ::std::move(from);
  }

  inline UndeleteAlertRequest& operator=(UndeleteAlertRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UndeleteAlertRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UndeleteAlertRequest* internal_default_instance() {
    return reinterpret_cast<const UndeleteAlertRequest*>(
               &_UndeleteAlertRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(UndeleteAlertRequest* other);
  friend void swap(UndeleteAlertRequest& a, UndeleteAlertRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UndeleteAlertRequest* New() const final {
    return CreateMaybeMessage<UndeleteAlertRequest>(nullptr);
  }

  UndeleteAlertRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UndeleteAlertRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UndeleteAlertRequest& from);
  void MergeFrom(const UndeleteAlertRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UndeleteAlertRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.UndeleteAlertRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class CreateAlertFeedbackRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest) */ {
 public:
  CreateAlertFeedbackRequest();
  virtual ~CreateAlertFeedbackRequest();

  CreateAlertFeedbackRequest(const CreateAlertFeedbackRequest& from);

  inline CreateAlertFeedbackRequest& operator=(const CreateAlertFeedbackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAlertFeedbackRequest(CreateAlertFeedbackRequest&& from) noexcept
    : CreateAlertFeedbackRequest() {
    *this = ::std::move(from);
  }

  inline CreateAlertFeedbackRequest& operator=(CreateAlertFeedbackRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateAlertFeedbackRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAlertFeedbackRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAlertFeedbackRequest*>(
               &_CreateAlertFeedbackRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CreateAlertFeedbackRequest* other);
  friend void swap(CreateAlertFeedbackRequest& a, CreateAlertFeedbackRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAlertFeedbackRequest* New() const final {
    return CreateMaybeMessage<CreateAlertFeedbackRequest>(nullptr);
  }

  CreateAlertFeedbackRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAlertFeedbackRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAlertFeedbackRequest& from);
  void MergeFrom(const CreateAlertFeedbackRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAlertFeedbackRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // .google.apps.alertcenter.v1beta1.AlertFeedback feedback = 3;
  bool has_feedback() const;
  void clear_feedback();
  static const int kFeedbackFieldNumber = 3;
  const ::google::apps::alertcenter::v1beta1::AlertFeedback& feedback() const;
  ::google::apps::alertcenter::v1beta1::AlertFeedback* release_feedback();
  ::google::apps::alertcenter::v1beta1::AlertFeedback* mutable_feedback();
  void set_allocated_feedback(::google::apps::alertcenter::v1beta1::AlertFeedback* feedback);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  ::google::apps::alertcenter::v1beta1::AlertFeedback* feedback_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class ListAlertFeedbackRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest) */ {
 public:
  ListAlertFeedbackRequest();
  virtual ~ListAlertFeedbackRequest();

  ListAlertFeedbackRequest(const ListAlertFeedbackRequest& from);

  inline ListAlertFeedbackRequest& operator=(const ListAlertFeedbackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListAlertFeedbackRequest(ListAlertFeedbackRequest&& from) noexcept
    : ListAlertFeedbackRequest() {
    *this = ::std::move(from);
  }

  inline ListAlertFeedbackRequest& operator=(ListAlertFeedbackRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListAlertFeedbackRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListAlertFeedbackRequest* internal_default_instance() {
    return reinterpret_cast<const ListAlertFeedbackRequest*>(
               &_ListAlertFeedbackRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ListAlertFeedbackRequest* other);
  friend void swap(ListAlertFeedbackRequest& a, ListAlertFeedbackRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListAlertFeedbackRequest* New() const final {
    return CreateMaybeMessage<ListAlertFeedbackRequest>(nullptr);
  }

  ListAlertFeedbackRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListAlertFeedbackRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListAlertFeedbackRequest& from);
  void MergeFrom(const ListAlertFeedbackRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListAlertFeedbackRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // string filter = 3;
  void clear_filter();
  static const int kFilterFieldNumber = 3;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class ListAlertFeedbackResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.ListAlertFeedbackResponse) */ {
 public:
  ListAlertFeedbackResponse();
  virtual ~ListAlertFeedbackResponse();

  ListAlertFeedbackResponse(const ListAlertFeedbackResponse& from);

  inline ListAlertFeedbackResponse& operator=(const ListAlertFeedbackResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListAlertFeedbackResponse(ListAlertFeedbackResponse&& from) noexcept
    : ListAlertFeedbackResponse() {
    *this = ::std::move(from);
  }

  inline ListAlertFeedbackResponse& operator=(ListAlertFeedbackResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListAlertFeedbackResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListAlertFeedbackResponse* internal_default_instance() {
    return reinterpret_cast<const ListAlertFeedbackResponse*>(
               &_ListAlertFeedbackResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(ListAlertFeedbackResponse* other);
  friend void swap(ListAlertFeedbackResponse& a, ListAlertFeedbackResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListAlertFeedbackResponse* New() const final {
    return CreateMaybeMessage<ListAlertFeedbackResponse>(nullptr);
  }

  ListAlertFeedbackResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListAlertFeedbackResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListAlertFeedbackResponse& from);
  void MergeFrom(const ListAlertFeedbackResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListAlertFeedbackResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.apps.alertcenter.v1beta1.AlertFeedback feedback = 1;
  int feedback_size() const;
  void clear_feedback();
  static const int kFeedbackFieldNumber = 1;
  ::google::apps::alertcenter::v1beta1::AlertFeedback* mutable_feedback(int index);
  ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::AlertFeedback >*
      mutable_feedback();
  const ::google::apps::alertcenter::v1beta1::AlertFeedback& feedback(int index) const;
  ::google::apps::alertcenter::v1beta1::AlertFeedback* add_feedback();
  const ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::AlertFeedback >&
      feedback() const;

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.ListAlertFeedbackResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::AlertFeedback > feedback_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class GetAlertMetadataRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest) */ {
 public:
  GetAlertMetadataRequest();
  virtual ~GetAlertMetadataRequest();

  GetAlertMetadataRequest(const GetAlertMetadataRequest& from);

  inline GetAlertMetadataRequest& operator=(const GetAlertMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAlertMetadataRequest(GetAlertMetadataRequest&& from) noexcept
    : GetAlertMetadataRequest() {
    *this = ::std::move(from);
  }

  inline GetAlertMetadataRequest& operator=(GetAlertMetadataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetAlertMetadataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAlertMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const GetAlertMetadataRequest*>(
               &_GetAlertMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(GetAlertMetadataRequest* other);
  friend void swap(GetAlertMetadataRequest& a, GetAlertMetadataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAlertMetadataRequest* New() const final {
    return CreateMaybeMessage<GetAlertMetadataRequest>(nullptr);
  }

  GetAlertMetadataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAlertMetadataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAlertMetadataRequest& from);
  void MergeFrom(const GetAlertMetadataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAlertMetadataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string alert_id = 2;
  void clear_alert_id();
  static const int kAlertIdFieldNumber = 2;
  const ::std::string& alert_id() const;
  void set_alert_id(const ::std::string& value);
  #if LANG_CXX11
  void set_alert_id(::std::string&& value);
  #endif
  void set_alert_id(const char* value);
  void set_alert_id(const char* value, size_t size);
  ::std::string* mutable_alert_id();
  ::std::string* release_alert_id();
  void set_allocated_alert_id(::std::string* alert_id);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr alert_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class GetSettingsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.GetSettingsRequest) */ {
 public:
  GetSettingsRequest();
  virtual ~GetSettingsRequest();

  GetSettingsRequest(const GetSettingsRequest& from);

  inline GetSettingsRequest& operator=(const GetSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSettingsRequest(GetSettingsRequest&& from) noexcept
    : GetSettingsRequest() {
    *this = ::std::move(from);
  }

  inline GetSettingsRequest& operator=(GetSettingsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetSettingsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSettingsRequest* internal_default_instance() {
    return reinterpret_cast<const GetSettingsRequest*>(
               &_GetSettingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(GetSettingsRequest* other);
  friend void swap(GetSettingsRequest& a, GetSettingsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSettingsRequest* New() const final {
    return CreateMaybeMessage<GetSettingsRequest>(nullptr);
  }

  GetSettingsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSettingsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSettingsRequest& from);
  void MergeFrom(const GetSettingsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSettingsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.GetSettingsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// -------------------------------------------------------------------

class UpdateSettingsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.alertcenter.v1beta1.UpdateSettingsRequest) */ {
 public:
  UpdateSettingsRequest();
  virtual ~UpdateSettingsRequest();

  UpdateSettingsRequest(const UpdateSettingsRequest& from);

  inline UpdateSettingsRequest& operator=(const UpdateSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateSettingsRequest(UpdateSettingsRequest&& from) noexcept
    : UpdateSettingsRequest() {
    *this = ::std::move(from);
  }

  inline UpdateSettingsRequest& operator=(UpdateSettingsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateSettingsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateSettingsRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSettingsRequest*>(
               &_UpdateSettingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(UpdateSettingsRequest* other);
  friend void swap(UpdateSettingsRequest& a, UpdateSettingsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateSettingsRequest* New() const final {
    return CreateMaybeMessage<UpdateSettingsRequest>(nullptr);
  }

  UpdateSettingsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateSettingsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateSettingsRequest& from);
  void MergeFrom(const UpdateSettingsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateSettingsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // .google.apps.alertcenter.v1beta1.Settings settings = 2;
  bool has_settings() const;
  void clear_settings();
  static const int kSettingsFieldNumber = 2;
  const ::google::apps::alertcenter::v1beta1::Settings& settings() const;
  ::google::apps::alertcenter::v1beta1::Settings* release_settings();
  ::google::apps::alertcenter::v1beta1::Settings* mutable_settings();
  void set_allocated_settings(::google::apps::alertcenter::v1beta1::Settings* settings);

  // @@protoc_insertion_point(class_scope:google.apps.alertcenter.v1beta1.UpdateSettingsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::apps::alertcenter::v1beta1::Settings* settings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Alert

// string customer_id = 1;
inline void Alert::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alert::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.customer_id)
  return customer_id_.GetNoArena();
}
inline void Alert::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Alert.customer_id)
}
#if LANG_CXX11
inline void Alert::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.Alert.customer_id)
}
#endif
inline void Alert::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.Alert.customer_id)
}
inline void Alert::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.Alert.customer_id)
}
inline ::std::string* Alert::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alert::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alert::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.customer_id)
}

// string alert_id = 2;
inline void Alert::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alert::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.alert_id)
  return alert_id_.GetNoArena();
}
inline void Alert::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Alert.alert_id)
}
#if LANG_CXX11
inline void Alert::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.Alert.alert_id)
}
#endif
inline void Alert::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.Alert.alert_id)
}
inline void Alert::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.Alert.alert_id)
}
inline ::std::string* Alert::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alert::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alert::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.alert_id)
}

// .google.protobuf.Timestamp create_time = 3;
inline bool Alert::has_create_time() const {
  return this != internal_default_instance() && create_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Alert::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.create_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Alert::release_create_time() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Alert::mutable_create_time() {
  
  if (create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    create_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.create_time)
  return create_time_;
}
inline void Alert::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.create_time)
}

// .google.protobuf.Timestamp start_time = 4;
inline bool Alert::has_start_time() const {
  return this != internal_default_instance() && start_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Alert::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.start_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Alert::release_start_time() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Alert::mutable_start_time() {
  
  if (start_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    start_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.start_time)
  return start_time_;
}
inline void Alert::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.start_time)
}

// .google.protobuf.Timestamp end_time = 5;
inline bool Alert::has_end_time() const {
  return this != internal_default_instance() && end_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Alert::end_time() const {
  const ::google::protobuf::Timestamp* p = end_time_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.end_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Alert::release_end_time() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Alert::mutable_end_time() {
  
  if (end_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    end_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.end_time)
  return end_time_;
}
inline void Alert::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.end_time)
}

// string type = 6;
inline void Alert::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alert::type() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.type)
  return type_.GetNoArena();
}
inline void Alert::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Alert.type)
}
#if LANG_CXX11
inline void Alert::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.Alert.type)
}
#endif
inline void Alert::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.Alert.type)
}
inline void Alert::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.Alert.type)
}
inline ::std::string* Alert::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alert::release_type() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alert::set_allocated_type(::std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.type)
}

// string source = 7;
inline void Alert::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alert::source() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.source)
  return source_.GetNoArena();
}
inline void Alert::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Alert.source)
}
#if LANG_CXX11
inline void Alert::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.Alert.source)
}
#endif
inline void Alert::set_source(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.Alert.source)
}
inline void Alert::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.Alert.source)
}
inline ::std::string* Alert::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alert::release_source() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alert::set_allocated_source(::std::string* source) {
  if (source != nullptr) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.source)
}

// .google.protobuf.Any data = 8;
inline bool Alert::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline const ::google::protobuf::Any& Alert::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Alert::release_data() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Alert::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.data)
  return data_;
}
inline void Alert::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.data)
}

// string security_investigation_tool_link = 9;
inline void Alert::clear_security_investigation_tool_link() {
  security_investigation_tool_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alert::security_investigation_tool_link() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.security_investigation_tool_link)
  return security_investigation_tool_link_.GetNoArena();
}
inline void Alert::set_security_investigation_tool_link(const ::std::string& value) {
  
  security_investigation_tool_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Alert.security_investigation_tool_link)
}
#if LANG_CXX11
inline void Alert::set_security_investigation_tool_link(::std::string&& value) {
  
  security_investigation_tool_link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.Alert.security_investigation_tool_link)
}
#endif
inline void Alert::set_security_investigation_tool_link(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  security_investigation_tool_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.Alert.security_investigation_tool_link)
}
inline void Alert::set_security_investigation_tool_link(const char* value, size_t size) {
  
  security_investigation_tool_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.Alert.security_investigation_tool_link)
}
inline ::std::string* Alert::mutable_security_investigation_tool_link() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.security_investigation_tool_link)
  return security_investigation_tool_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alert::release_security_investigation_tool_link() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.security_investigation_tool_link)
  
  return security_investigation_tool_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alert::set_allocated_security_investigation_tool_link(::std::string* security_investigation_tool_link) {
  if (security_investigation_tool_link != nullptr) {
    
  } else {
    
  }
  security_investigation_tool_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_investigation_tool_link);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.security_investigation_tool_link)
}

// bool deleted = 11;
inline void Alert::clear_deleted() {
  deleted_ = false;
}
inline bool Alert::deleted() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.deleted)
  return deleted_;
}
inline void Alert::set_deleted(bool value) {
  
  deleted_ = value;
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Alert.deleted)
}

// .google.apps.alertcenter.v1beta1.AlertMetadata metadata = 12;
inline bool Alert::has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline void Alert::clear_metadata() {
  if (GetArenaNoVirtual() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
inline const ::google::apps::alertcenter::v1beta1::AlertMetadata& Alert::metadata() const {
  const ::google::apps::alertcenter::v1beta1::AlertMetadata* p = metadata_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::apps::alertcenter::v1beta1::AlertMetadata*>(
      &::google::apps::alertcenter::v1beta1::_AlertMetadata_default_instance_);
}
inline ::google::apps::alertcenter::v1beta1::AlertMetadata* Alert::release_metadata() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.metadata)
  
  ::google::apps::alertcenter::v1beta1::AlertMetadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::google::apps::alertcenter::v1beta1::AlertMetadata* Alert::mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::apps::alertcenter::v1beta1::AlertMetadata>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.metadata)
  return metadata_;
}
inline void Alert::set_allocated_metadata(::google::apps::alertcenter::v1beta1::AlertMetadata* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete metadata_;
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.metadata)
}

// .google.protobuf.Timestamp update_time = 13;
inline bool Alert::has_update_time() const {
  return this != internal_default_instance() && update_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Alert::update_time() const {
  const ::google::protobuf::Timestamp* p = update_time_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.update_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Alert::release_update_time() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Alert::mutable_update_time() {
  
  if (update_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    update_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.update_time)
  return update_time_;
}
inline void Alert::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.update_time)
}

// string etag = 14;
inline void Alert::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alert::etag() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Alert.etag)
  return etag_.GetNoArena();
}
inline void Alert::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Alert.etag)
}
#if LANG_CXX11
inline void Alert::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.Alert.etag)
}
#endif
inline void Alert::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.Alert.etag)
}
inline void Alert::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.Alert.etag)
}
inline ::std::string* Alert::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Alert.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alert::release_etag() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Alert.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alert::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Alert.etag)
}

// -------------------------------------------------------------------

// AlertFeedback

// string customer_id = 1;
inline void AlertFeedback::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertFeedback::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertFeedback.customer_id)
  return customer_id_.GetNoArena();
}
inline void AlertFeedback::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertFeedback.customer_id)
}
#if LANG_CXX11
inline void AlertFeedback::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertFeedback.customer_id)
}
#endif
inline void AlertFeedback::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertFeedback.customer_id)
}
inline void AlertFeedback::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertFeedback.customer_id)
}
inline ::std::string* AlertFeedback::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertFeedback.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertFeedback::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertFeedback.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertFeedback::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertFeedback.customer_id)
}

// string alert_id = 2;
inline void AlertFeedback::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertFeedback::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertFeedback.alert_id)
  return alert_id_.GetNoArena();
}
inline void AlertFeedback::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertFeedback.alert_id)
}
#if LANG_CXX11
inline void AlertFeedback::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertFeedback.alert_id)
}
#endif
inline void AlertFeedback::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertFeedback.alert_id)
}
inline void AlertFeedback::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertFeedback.alert_id)
}
inline ::std::string* AlertFeedback::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertFeedback.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertFeedback::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertFeedback.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertFeedback::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertFeedback.alert_id)
}

// string feedback_id = 3;
inline void AlertFeedback::clear_feedback_id() {
  feedback_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertFeedback::feedback_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertFeedback.feedback_id)
  return feedback_id_.GetNoArena();
}
inline void AlertFeedback::set_feedback_id(const ::std::string& value) {
  
  feedback_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertFeedback.feedback_id)
}
#if LANG_CXX11
inline void AlertFeedback::set_feedback_id(::std::string&& value) {
  
  feedback_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertFeedback.feedback_id)
}
#endif
inline void AlertFeedback::set_feedback_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  feedback_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertFeedback.feedback_id)
}
inline void AlertFeedback::set_feedback_id(const char* value, size_t size) {
  
  feedback_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertFeedback.feedback_id)
}
inline ::std::string* AlertFeedback::mutable_feedback_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertFeedback.feedback_id)
  return feedback_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertFeedback::release_feedback_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertFeedback.feedback_id)
  
  return feedback_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertFeedback::set_allocated_feedback_id(::std::string* feedback_id) {
  if (feedback_id != nullptr) {
    
  } else {
    
  }
  feedback_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feedback_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertFeedback.feedback_id)
}

// .google.protobuf.Timestamp create_time = 4;
inline bool AlertFeedback::has_create_time() const {
  return this != internal_default_instance() && create_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& AlertFeedback::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertFeedback.create_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* AlertFeedback::release_create_time() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertFeedback.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* AlertFeedback::mutable_create_time() {
  
  if (create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    create_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertFeedback.create_time)
  return create_time_;
}
inline void AlertFeedback::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertFeedback.create_time)
}

// .google.apps.alertcenter.v1beta1.AlertFeedbackType type = 5;
inline void AlertFeedback::clear_type() {
  type_ = 0;
}
inline ::google::apps::alertcenter::v1beta1::AlertFeedbackType AlertFeedback::type() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertFeedback.type)
  return static_cast< ::google::apps::alertcenter::v1beta1::AlertFeedbackType >(type_);
}
inline void AlertFeedback::set_type(::google::apps::alertcenter::v1beta1::AlertFeedbackType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertFeedback.type)
}

// string email = 6;
inline void AlertFeedback::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertFeedback::email() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertFeedback.email)
  return email_.GetNoArena();
}
inline void AlertFeedback::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertFeedback.email)
}
#if LANG_CXX11
inline void AlertFeedback::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertFeedback.email)
}
#endif
inline void AlertFeedback::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertFeedback.email)
}
inline void AlertFeedback::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertFeedback.email)
}
inline ::std::string* AlertFeedback::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertFeedback.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertFeedback::release_email() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertFeedback.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertFeedback::set_allocated_email(::std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertFeedback.email)
}

// -------------------------------------------------------------------

// AlertMetadata

// string customer_id = 1;
inline void AlertMetadata::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertMetadata::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertMetadata.customer_id)
  return customer_id_.GetNoArena();
}
inline void AlertMetadata::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertMetadata.customer_id)
}
#if LANG_CXX11
inline void AlertMetadata::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertMetadata.customer_id)
}
#endif
inline void AlertMetadata::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertMetadata.customer_id)
}
inline void AlertMetadata::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertMetadata.customer_id)
}
inline ::std::string* AlertMetadata::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertMetadata.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertMetadata::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertMetadata.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertMetadata::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertMetadata.customer_id)
}

// string alert_id = 2;
inline void AlertMetadata::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertMetadata::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertMetadata.alert_id)
  return alert_id_.GetNoArena();
}
inline void AlertMetadata::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertMetadata.alert_id)
}
#if LANG_CXX11
inline void AlertMetadata::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertMetadata.alert_id)
}
#endif
inline void AlertMetadata::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertMetadata.alert_id)
}
inline void AlertMetadata::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertMetadata.alert_id)
}
inline ::std::string* AlertMetadata::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertMetadata.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertMetadata::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertMetadata.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertMetadata::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertMetadata.alert_id)
}

// string status = 4;
inline void AlertMetadata::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertMetadata::status() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertMetadata.status)
  return status_.GetNoArena();
}
inline void AlertMetadata::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertMetadata.status)
}
#if LANG_CXX11
inline void AlertMetadata::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertMetadata.status)
}
#endif
inline void AlertMetadata::set_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertMetadata.status)
}
inline void AlertMetadata::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertMetadata.status)
}
inline ::std::string* AlertMetadata::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertMetadata.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertMetadata::release_status() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertMetadata.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertMetadata::set_allocated_status(::std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertMetadata.status)
}

// string assignee = 5;
inline void AlertMetadata::clear_assignee() {
  assignee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertMetadata::assignee() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertMetadata.assignee)
  return assignee_.GetNoArena();
}
inline void AlertMetadata::set_assignee(const ::std::string& value) {
  
  assignee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertMetadata.assignee)
}
#if LANG_CXX11
inline void AlertMetadata::set_assignee(::std::string&& value) {
  
  assignee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertMetadata.assignee)
}
#endif
inline void AlertMetadata::set_assignee(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  assignee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertMetadata.assignee)
}
inline void AlertMetadata::set_assignee(const char* value, size_t size) {
  
  assignee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertMetadata.assignee)
}
inline ::std::string* AlertMetadata::mutable_assignee() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertMetadata.assignee)
  return assignee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertMetadata::release_assignee() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertMetadata.assignee)
  
  return assignee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertMetadata::set_allocated_assignee(::std::string* assignee) {
  if (assignee != nullptr) {
    
  } else {
    
  }
  assignee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), assignee);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertMetadata.assignee)
}

// .google.protobuf.Timestamp update_time = 6;
inline bool AlertMetadata::has_update_time() const {
  return this != internal_default_instance() && update_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& AlertMetadata::update_time() const {
  const ::google::protobuf::Timestamp* p = update_time_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertMetadata.update_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* AlertMetadata::release_update_time() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertMetadata.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* AlertMetadata::mutable_update_time() {
  
  if (update_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    update_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertMetadata.update_time)
  return update_time_;
}
inline void AlertMetadata::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertMetadata.update_time)
}

// string severity = 7;
inline void AlertMetadata::clear_severity() {
  severity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertMetadata::severity() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertMetadata.severity)
  return severity_.GetNoArena();
}
inline void AlertMetadata::set_severity(const ::std::string& value) {
  
  severity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertMetadata.severity)
}
#if LANG_CXX11
inline void AlertMetadata::set_severity(::std::string&& value) {
  
  severity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertMetadata.severity)
}
#endif
inline void AlertMetadata::set_severity(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  severity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertMetadata.severity)
}
inline void AlertMetadata::set_severity(const char* value, size_t size) {
  
  severity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertMetadata.severity)
}
inline ::std::string* AlertMetadata::mutable_severity() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertMetadata.severity)
  return severity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertMetadata::release_severity() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertMetadata.severity)
  
  return severity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertMetadata::set_allocated_severity(::std::string* severity) {
  if (severity != nullptr) {
    
  } else {
    
  }
  severity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), severity);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertMetadata.severity)
}

// string etag = 8;
inline void AlertMetadata::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertMetadata::etag() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.AlertMetadata.etag)
  return etag_.GetNoArena();
}
inline void AlertMetadata::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.AlertMetadata.etag)
}
#if LANG_CXX11
inline void AlertMetadata::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.AlertMetadata.etag)
}
#endif
inline void AlertMetadata::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.AlertMetadata.etag)
}
inline void AlertMetadata::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.AlertMetadata.etag)
}
inline ::std::string* AlertMetadata::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.AlertMetadata.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertMetadata::release_etag() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.AlertMetadata.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertMetadata::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.AlertMetadata.etag)
}

// -------------------------------------------------------------------

// Settings_Notification_CloudPubsubTopic

// string topic_name = 1;
inline void Settings_Notification_CloudPubsubTopic::clear_topic_name() {
  topic_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Settings_Notification_CloudPubsubTopic::topic_name() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.topic_name)
  return topic_name_.GetNoArena();
}
inline void Settings_Notification_CloudPubsubTopic::set_topic_name(const ::std::string& value) {
  
  topic_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.topic_name)
}
#if LANG_CXX11
inline void Settings_Notification_CloudPubsubTopic::set_topic_name(::std::string&& value) {
  
  topic_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.topic_name)
}
#endif
inline void Settings_Notification_CloudPubsubTopic::set_topic_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  topic_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.topic_name)
}
inline void Settings_Notification_CloudPubsubTopic::set_topic_name(const char* value, size_t size) {
  
  topic_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.topic_name)
}
inline ::std::string* Settings_Notification_CloudPubsubTopic::mutable_topic_name() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.topic_name)
  return topic_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Settings_Notification_CloudPubsubTopic::release_topic_name() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.topic_name)
  
  return topic_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Settings_Notification_CloudPubsubTopic::set_allocated_topic_name(::std::string* topic_name) {
  if (topic_name != nullptr) {
    
  } else {
    
  }
  topic_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic_name);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.topic_name)
}

// .google.apps.alertcenter.v1beta1.Settings.Notification.PayloadFormat payload_format = 2;
inline void Settings_Notification_CloudPubsubTopic::clear_payload_format() {
  payload_format_ = 0;
}
inline ::google::apps::alertcenter::v1beta1::Settings_Notification_PayloadFormat Settings_Notification_CloudPubsubTopic::payload_format() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.payload_format)
  return static_cast< ::google::apps::alertcenter::v1beta1::Settings_Notification_PayloadFormat >(payload_format_);
}
inline void Settings_Notification_CloudPubsubTopic::set_payload_format(::google::apps::alertcenter::v1beta1::Settings_Notification_PayloadFormat value) {
  
  payload_format_ = value;
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic.payload_format)
}

// -------------------------------------------------------------------

// Settings_Notification

// .google.apps.alertcenter.v1beta1.Settings.Notification.CloudPubsubTopic cloud_pubsub_topic = 1;
inline bool Settings_Notification::has_cloud_pubsub_topic() const {
  return destination_case() == kCloudPubsubTopic;
}
inline void Settings_Notification::set_has_cloud_pubsub_topic() {
  _oneof_case_[0] = kCloudPubsubTopic;
}
inline void Settings_Notification::clear_cloud_pubsub_topic() {
  if (has_cloud_pubsub_topic()) {
    delete destination_.cloud_pubsub_topic_;
    clear_has_destination();
  }
}
inline ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic* Settings_Notification::release_cloud_pubsub_topic() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.Settings.Notification.cloud_pubsub_topic)
  if (has_cloud_pubsub_topic()) {
    clear_has_destination();
      ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic* temp = destination_.cloud_pubsub_topic_;
    destination_.cloud_pubsub_topic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic& Settings_Notification::cloud_pubsub_topic() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Settings.Notification.cloud_pubsub_topic)
  return has_cloud_pubsub_topic()
      ? *destination_.cloud_pubsub_topic_
      : *reinterpret_cast< ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic*>(&::google::apps::alertcenter::v1beta1::_Settings_Notification_CloudPubsubTopic_default_instance_);
}
inline ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic* Settings_Notification::mutable_cloud_pubsub_topic() {
  if (!has_cloud_pubsub_topic()) {
    clear_destination();
    set_has_cloud_pubsub_topic();
    destination_.cloud_pubsub_topic_ = CreateMaybeMessage< ::google::apps::alertcenter::v1beta1::Settings_Notification_CloudPubsubTopic >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Settings.Notification.cloud_pubsub_topic)
  return destination_.cloud_pubsub_topic_;
}

inline bool Settings_Notification::has_destination() const {
  return destination_case() != DESTINATION_NOT_SET;
}
inline void Settings_Notification::clear_has_destination() {
  _oneof_case_[0] = DESTINATION_NOT_SET;
}
inline Settings_Notification::DestinationCase Settings_Notification::destination_case() const {
  return Settings_Notification::DestinationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Settings

// repeated .google.apps.alertcenter.v1beta1.Settings.Notification notifications = 1;
inline int Settings::notifications_size() const {
  return notifications_.size();
}
inline void Settings::clear_notifications() {
  notifications_.Clear();
}
inline ::google::apps::alertcenter::v1beta1::Settings_Notification* Settings::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.Settings.notifications)
  return notifications_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Settings_Notification >*
Settings::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:google.apps.alertcenter.v1beta1.Settings.notifications)
  return &notifications_;
}
inline const ::google::apps::alertcenter::v1beta1::Settings_Notification& Settings::notifications(int index) const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.Settings.notifications)
  return notifications_.Get(index);
}
inline ::google::apps::alertcenter::v1beta1::Settings_Notification* Settings::add_notifications() {
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.Settings.notifications)
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Settings_Notification >&
Settings::notifications() const {
  // @@protoc_insertion_point(field_list:google.apps.alertcenter.v1beta1.Settings.notifications)
  return notifications_;
}

// -------------------------------------------------------------------

// BatchDeleteAlertsRequest

// string customer_id = 1;
inline void BatchDeleteAlertsRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BatchDeleteAlertsRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void BatchDeleteAlertsRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.customer_id)
}
#if LANG_CXX11
inline void BatchDeleteAlertsRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.customer_id)
}
#endif
inline void BatchDeleteAlertsRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.customer_id)
}
inline void BatchDeleteAlertsRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.customer_id)
}
inline ::std::string* BatchDeleteAlertsRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchDeleteAlertsRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchDeleteAlertsRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.customer_id)
}

// repeated string alert_id = 2;
inline int BatchDeleteAlertsRequest::alert_id_size() const {
  return alert_id_.size();
}
inline void BatchDeleteAlertsRequest::clear_alert_id() {
  alert_id_.Clear();
}
inline const ::std::string& BatchDeleteAlertsRequest::alert_id(int index) const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
  return alert_id_.Get(index);
}
inline ::std::string* BatchDeleteAlertsRequest::mutable_alert_id(int index) {
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
  return alert_id_.Mutable(index);
}
inline void BatchDeleteAlertsRequest::set_alert_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
  alert_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchDeleteAlertsRequest::set_alert_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
  alert_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchDeleteAlertsRequest::set_alert_id(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  alert_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
}
inline void BatchDeleteAlertsRequest::set_alert_id(int index, const char* value, size_t size) {
  alert_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
}
inline ::std::string* BatchDeleteAlertsRequest::add_alert_id() {
  // @@protoc_insertion_point(field_add_mutable:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
  return alert_id_.Add();
}
inline void BatchDeleteAlertsRequest::add_alert_id(const ::std::string& value) {
  alert_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
}
#if LANG_CXX11
inline void BatchDeleteAlertsRequest::add_alert_id(::std::string&& value) {
  alert_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
}
#endif
inline void BatchDeleteAlertsRequest::add_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  alert_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
}
inline void BatchDeleteAlertsRequest::add_alert_id(const char* value, size_t size) {
  alert_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
BatchDeleteAlertsRequest::alert_id() const {
  // @@protoc_insertion_point(field_list:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
  return alert_id_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
BatchDeleteAlertsRequest::mutable_alert_id() {
  // @@protoc_insertion_point(field_mutable_list:google.apps.alertcenter.v1beta1.BatchDeleteAlertsRequest.alert_id)
  return &alert_id_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BatchDeleteAlertsResponse

// repeated string success_alert_ids = 1;
inline int BatchDeleteAlertsResponse::success_alert_ids_size() const {
  return success_alert_ids_.size();
}
inline void BatchDeleteAlertsResponse::clear_success_alert_ids() {
  success_alert_ids_.Clear();
}
inline const ::std::string& BatchDeleteAlertsResponse::success_alert_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
  return success_alert_ids_.Get(index);
}
inline ::std::string* BatchDeleteAlertsResponse::mutable_success_alert_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
  return success_alert_ids_.Mutable(index);
}
inline void BatchDeleteAlertsResponse::set_success_alert_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
  success_alert_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchDeleteAlertsResponse::set_success_alert_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
  success_alert_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchDeleteAlertsResponse::set_success_alert_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  success_alert_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
}
inline void BatchDeleteAlertsResponse::set_success_alert_ids(int index, const char* value, size_t size) {
  success_alert_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
}
inline ::std::string* BatchDeleteAlertsResponse::add_success_alert_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
  return success_alert_ids_.Add();
}
inline void BatchDeleteAlertsResponse::add_success_alert_ids(const ::std::string& value) {
  success_alert_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
}
#if LANG_CXX11
inline void BatchDeleteAlertsResponse::add_success_alert_ids(::std::string&& value) {
  success_alert_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
}
#endif
inline void BatchDeleteAlertsResponse::add_success_alert_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  success_alert_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
}
inline void BatchDeleteAlertsResponse::add_success_alert_ids(const char* value, size_t size) {
  success_alert_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
BatchDeleteAlertsResponse::success_alert_ids() const {
  // @@protoc_insertion_point(field_list:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
  return success_alert_ids_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
BatchDeleteAlertsResponse::mutable_success_alert_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.success_alert_ids)
  return &success_alert_ids_;
}

// map<string, .google.rpc.Status> failed_alert_status = 2;
inline int BatchDeleteAlertsResponse::failed_alert_status_size() const {
  return failed_alert_status_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::rpc::Status >&
BatchDeleteAlertsResponse::failed_alert_status() const {
  // @@protoc_insertion_point(field_map:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.failed_alert_status)
  return failed_alert_status_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::rpc::Status >*
BatchDeleteAlertsResponse::mutable_failed_alert_status() {
  // @@protoc_insertion_point(field_mutable_map:google.apps.alertcenter.v1beta1.BatchDeleteAlertsResponse.failed_alert_status)
  return failed_alert_status_.MutableMap();
}

// -------------------------------------------------------------------

// BatchUndeleteAlertsRequest

// string customer_id = 1;
inline void BatchUndeleteAlertsRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BatchUndeleteAlertsRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void BatchUndeleteAlertsRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.customer_id)
}
#if LANG_CXX11
inline void BatchUndeleteAlertsRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.customer_id)
}
#endif
inline void BatchUndeleteAlertsRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.customer_id)
}
inline void BatchUndeleteAlertsRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.customer_id)
}
inline ::std::string* BatchUndeleteAlertsRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchUndeleteAlertsRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchUndeleteAlertsRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.customer_id)
}

// repeated string alert_id = 2;
inline int BatchUndeleteAlertsRequest::alert_id_size() const {
  return alert_id_.size();
}
inline void BatchUndeleteAlertsRequest::clear_alert_id() {
  alert_id_.Clear();
}
inline const ::std::string& BatchUndeleteAlertsRequest::alert_id(int index) const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
  return alert_id_.Get(index);
}
inline ::std::string* BatchUndeleteAlertsRequest::mutable_alert_id(int index) {
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
  return alert_id_.Mutable(index);
}
inline void BatchUndeleteAlertsRequest::set_alert_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
  alert_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchUndeleteAlertsRequest::set_alert_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
  alert_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchUndeleteAlertsRequest::set_alert_id(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  alert_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
}
inline void BatchUndeleteAlertsRequest::set_alert_id(int index, const char* value, size_t size) {
  alert_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
}
inline ::std::string* BatchUndeleteAlertsRequest::add_alert_id() {
  // @@protoc_insertion_point(field_add_mutable:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
  return alert_id_.Add();
}
inline void BatchUndeleteAlertsRequest::add_alert_id(const ::std::string& value) {
  alert_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
}
#if LANG_CXX11
inline void BatchUndeleteAlertsRequest::add_alert_id(::std::string&& value) {
  alert_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
}
#endif
inline void BatchUndeleteAlertsRequest::add_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  alert_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
}
inline void BatchUndeleteAlertsRequest::add_alert_id(const char* value, size_t size) {
  alert_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
BatchUndeleteAlertsRequest::alert_id() const {
  // @@protoc_insertion_point(field_list:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
  return alert_id_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
BatchUndeleteAlertsRequest::mutable_alert_id() {
  // @@protoc_insertion_point(field_mutable_list:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsRequest.alert_id)
  return &alert_id_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BatchUndeleteAlertsResponse

// repeated string success_alert_ids = 1;
inline int BatchUndeleteAlertsResponse::success_alert_ids_size() const {
  return success_alert_ids_.size();
}
inline void BatchUndeleteAlertsResponse::clear_success_alert_ids() {
  success_alert_ids_.Clear();
}
inline const ::std::string& BatchUndeleteAlertsResponse::success_alert_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
  return success_alert_ids_.Get(index);
}
inline ::std::string* BatchUndeleteAlertsResponse::mutable_success_alert_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
  return success_alert_ids_.Mutable(index);
}
inline void BatchUndeleteAlertsResponse::set_success_alert_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
  success_alert_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchUndeleteAlertsResponse::set_success_alert_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
  success_alert_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchUndeleteAlertsResponse::set_success_alert_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  success_alert_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
}
inline void BatchUndeleteAlertsResponse::set_success_alert_ids(int index, const char* value, size_t size) {
  success_alert_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
}
inline ::std::string* BatchUndeleteAlertsResponse::add_success_alert_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
  return success_alert_ids_.Add();
}
inline void BatchUndeleteAlertsResponse::add_success_alert_ids(const ::std::string& value) {
  success_alert_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
}
#if LANG_CXX11
inline void BatchUndeleteAlertsResponse::add_success_alert_ids(::std::string&& value) {
  success_alert_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
}
#endif
inline void BatchUndeleteAlertsResponse::add_success_alert_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  success_alert_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
}
inline void BatchUndeleteAlertsResponse::add_success_alert_ids(const char* value, size_t size) {
  success_alert_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
BatchUndeleteAlertsResponse::success_alert_ids() const {
  // @@protoc_insertion_point(field_list:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
  return success_alert_ids_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
BatchUndeleteAlertsResponse::mutable_success_alert_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.success_alert_ids)
  return &success_alert_ids_;
}

// map<string, .google.rpc.Status> failed_alert_status = 2;
inline int BatchUndeleteAlertsResponse::failed_alert_status_size() const {
  return failed_alert_status_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::rpc::Status >&
BatchUndeleteAlertsResponse::failed_alert_status() const {
  // @@protoc_insertion_point(field_map:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.failed_alert_status)
  return failed_alert_status_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::rpc::Status >*
BatchUndeleteAlertsResponse::mutable_failed_alert_status() {
  // @@protoc_insertion_point(field_mutable_map:google.apps.alertcenter.v1beta1.BatchUndeleteAlertsResponse.failed_alert_status)
  return failed_alert_status_.MutableMap();
}

// -------------------------------------------------------------------

// ListAlertsRequest

// string customer_id = 1;
inline void ListAlertsRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAlertsRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertsRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void ListAlertsRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertsRequest.customer_id)
}
#if LANG_CXX11
inline void ListAlertsRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.ListAlertsRequest.customer_id)
}
#endif
inline void ListAlertsRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.ListAlertsRequest.customer_id)
}
inline void ListAlertsRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.ListAlertsRequest.customer_id)
}
inline ::std::string* ListAlertsRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertsRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAlertsRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.ListAlertsRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAlertsRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.ListAlertsRequest.customer_id)
}

// int32 page_size = 2;
inline void ListAlertsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListAlertsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_size)
  return page_size_;
}
inline void ListAlertsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_size)
}

// string page_token = 3;
inline void ListAlertsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAlertsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListAlertsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_token)
}
#if LANG_CXX11
inline void ListAlertsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_token)
}
#endif
inline void ListAlertsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_token)
}
inline void ListAlertsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_token)
}
inline ::std::string* ListAlertsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAlertsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAlertsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.ListAlertsRequest.page_token)
}

// string filter = 4;
inline void ListAlertsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAlertsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListAlertsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertsRequest.filter)
}
#if LANG_CXX11
inline void ListAlertsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.ListAlertsRequest.filter)
}
#endif
inline void ListAlertsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.ListAlertsRequest.filter)
}
inline void ListAlertsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.ListAlertsRequest.filter)
}
inline ::std::string* ListAlertsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAlertsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.ListAlertsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAlertsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != nullptr) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.ListAlertsRequest.filter)
}

// string order_by = 5;
inline void ListAlertsRequest::clear_order_by() {
  order_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAlertsRequest::order_by() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertsRequest.order_by)
  return order_by_.GetNoArena();
}
inline void ListAlertsRequest::set_order_by(const ::std::string& value) {
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertsRequest.order_by)
}
#if LANG_CXX11
inline void ListAlertsRequest::set_order_by(::std::string&& value) {
  
  order_by_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.ListAlertsRequest.order_by)
}
#endif
inline void ListAlertsRequest::set_order_by(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.ListAlertsRequest.order_by)
}
inline void ListAlertsRequest::set_order_by(const char* value, size_t size) {
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.ListAlertsRequest.order_by)
}
inline ::std::string* ListAlertsRequest::mutable_order_by() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertsRequest.order_by)
  return order_by_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAlertsRequest::release_order_by() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.ListAlertsRequest.order_by)
  
  return order_by_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAlertsRequest::set_allocated_order_by(::std::string* order_by) {
  if (order_by != nullptr) {
    
  } else {
    
  }
  order_by_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_by);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.ListAlertsRequest.order_by)
}

// -------------------------------------------------------------------

// ListAlertsResponse

// repeated .google.apps.alertcenter.v1beta1.Alert alerts = 1;
inline int ListAlertsResponse::alerts_size() const {
  return alerts_.size();
}
inline void ListAlertsResponse::clear_alerts() {
  alerts_.Clear();
}
inline ::google::apps::alertcenter::v1beta1::Alert* ListAlertsResponse::mutable_alerts(int index) {
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertsResponse.alerts)
  return alerts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Alert >*
ListAlertsResponse::mutable_alerts() {
  // @@protoc_insertion_point(field_mutable_list:google.apps.alertcenter.v1beta1.ListAlertsResponse.alerts)
  return &alerts_;
}
inline const ::google::apps::alertcenter::v1beta1::Alert& ListAlertsResponse::alerts(int index) const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertsResponse.alerts)
  return alerts_.Get(index);
}
inline ::google::apps::alertcenter::v1beta1::Alert* ListAlertsResponse::add_alerts() {
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.ListAlertsResponse.alerts)
  return alerts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::Alert >&
ListAlertsResponse::alerts() const {
  // @@protoc_insertion_point(field_list:google.apps.alertcenter.v1beta1.ListAlertsResponse.alerts)
  return alerts_;
}

// string next_page_token = 2;
inline void ListAlertsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAlertsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListAlertsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListAlertsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.ListAlertsResponse.next_page_token)
}
#endif
inline void ListAlertsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.ListAlertsResponse.next_page_token)
}
inline void ListAlertsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.ListAlertsResponse.next_page_token)
}
inline ::std::string* ListAlertsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAlertsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.ListAlertsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAlertsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.ListAlertsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetAlertRequest

// string customer_id = 1;
inline void GetAlertRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAlertRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.GetAlertRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void GetAlertRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.GetAlertRequest.customer_id)
}
#if LANG_CXX11
inline void GetAlertRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.GetAlertRequest.customer_id)
}
#endif
inline void GetAlertRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.GetAlertRequest.customer_id)
}
inline void GetAlertRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.GetAlertRequest.customer_id)
}
inline ::std::string* GetAlertRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.GetAlertRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAlertRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.GetAlertRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAlertRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.GetAlertRequest.customer_id)
}

// string alert_id = 2;
inline void GetAlertRequest::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAlertRequest::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.GetAlertRequest.alert_id)
  return alert_id_.GetNoArena();
}
inline void GetAlertRequest::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.GetAlertRequest.alert_id)
}
#if LANG_CXX11
inline void GetAlertRequest::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.GetAlertRequest.alert_id)
}
#endif
inline void GetAlertRequest::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.GetAlertRequest.alert_id)
}
inline void GetAlertRequest::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.GetAlertRequest.alert_id)
}
inline ::std::string* GetAlertRequest::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.GetAlertRequest.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAlertRequest::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.GetAlertRequest.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAlertRequest::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.GetAlertRequest.alert_id)
}

// -------------------------------------------------------------------

// DeleteAlertRequest

// string customer_id = 1;
inline void DeleteAlertRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAlertRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.DeleteAlertRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void DeleteAlertRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.DeleteAlertRequest.customer_id)
}
#if LANG_CXX11
inline void DeleteAlertRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.DeleteAlertRequest.customer_id)
}
#endif
inline void DeleteAlertRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.DeleteAlertRequest.customer_id)
}
inline void DeleteAlertRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.DeleteAlertRequest.customer_id)
}
inline ::std::string* DeleteAlertRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.DeleteAlertRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAlertRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.DeleteAlertRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAlertRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.DeleteAlertRequest.customer_id)
}

// string alert_id = 2;
inline void DeleteAlertRequest::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAlertRequest::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.DeleteAlertRequest.alert_id)
  return alert_id_.GetNoArena();
}
inline void DeleteAlertRequest::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.DeleteAlertRequest.alert_id)
}
#if LANG_CXX11
inline void DeleteAlertRequest::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.DeleteAlertRequest.alert_id)
}
#endif
inline void DeleteAlertRequest::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.DeleteAlertRequest.alert_id)
}
inline void DeleteAlertRequest::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.DeleteAlertRequest.alert_id)
}
inline ::std::string* DeleteAlertRequest::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.DeleteAlertRequest.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAlertRequest::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.DeleteAlertRequest.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAlertRequest::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.DeleteAlertRequest.alert_id)
}

// -------------------------------------------------------------------

// UndeleteAlertRequest

// string customer_id = 1;
inline void UndeleteAlertRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UndeleteAlertRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void UndeleteAlertRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.customer_id)
}
#if LANG_CXX11
inline void UndeleteAlertRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.customer_id)
}
#endif
inline void UndeleteAlertRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.customer_id)
}
inline void UndeleteAlertRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.customer_id)
}
inline ::std::string* UndeleteAlertRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UndeleteAlertRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UndeleteAlertRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.customer_id)
}

// string alert_id = 2;
inline void UndeleteAlertRequest::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UndeleteAlertRequest::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.alert_id)
  return alert_id_.GetNoArena();
}
inline void UndeleteAlertRequest::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.alert_id)
}
#if LANG_CXX11
inline void UndeleteAlertRequest::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.alert_id)
}
#endif
inline void UndeleteAlertRequest::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.alert_id)
}
inline void UndeleteAlertRequest::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.alert_id)
}
inline ::std::string* UndeleteAlertRequest::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UndeleteAlertRequest::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UndeleteAlertRequest::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.UndeleteAlertRequest.alert_id)
}

// -------------------------------------------------------------------

// CreateAlertFeedbackRequest

// string customer_id = 1;
inline void CreateAlertFeedbackRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateAlertFeedbackRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void CreateAlertFeedbackRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.customer_id)
}
#if LANG_CXX11
inline void CreateAlertFeedbackRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.customer_id)
}
#endif
inline void CreateAlertFeedbackRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.customer_id)
}
inline void CreateAlertFeedbackRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.customer_id)
}
inline ::std::string* CreateAlertFeedbackRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAlertFeedbackRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAlertFeedbackRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.customer_id)
}

// string alert_id = 2;
inline void CreateAlertFeedbackRequest::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateAlertFeedbackRequest::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.alert_id)
  return alert_id_.GetNoArena();
}
inline void CreateAlertFeedbackRequest::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.alert_id)
}
#if LANG_CXX11
inline void CreateAlertFeedbackRequest::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.alert_id)
}
#endif
inline void CreateAlertFeedbackRequest::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.alert_id)
}
inline void CreateAlertFeedbackRequest::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.alert_id)
}
inline ::std::string* CreateAlertFeedbackRequest::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAlertFeedbackRequest::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAlertFeedbackRequest::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.alert_id)
}

// .google.apps.alertcenter.v1beta1.AlertFeedback feedback = 3;
inline bool CreateAlertFeedbackRequest::has_feedback() const {
  return this != internal_default_instance() && feedback_ != nullptr;
}
inline void CreateAlertFeedbackRequest::clear_feedback() {
  if (GetArenaNoVirtual() == nullptr && feedback_ != nullptr) {
    delete feedback_;
  }
  feedback_ = nullptr;
}
inline const ::google::apps::alertcenter::v1beta1::AlertFeedback& CreateAlertFeedbackRequest::feedback() const {
  const ::google::apps::alertcenter::v1beta1::AlertFeedback* p = feedback_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.feedback)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::apps::alertcenter::v1beta1::AlertFeedback*>(
      &::google::apps::alertcenter::v1beta1::_AlertFeedback_default_instance_);
}
inline ::google::apps::alertcenter::v1beta1::AlertFeedback* CreateAlertFeedbackRequest::release_feedback() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.feedback)
  
  ::google::apps::alertcenter::v1beta1::AlertFeedback* temp = feedback_;
  feedback_ = nullptr;
  return temp;
}
inline ::google::apps::alertcenter::v1beta1::AlertFeedback* CreateAlertFeedbackRequest::mutable_feedback() {
  
  if (feedback_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::apps::alertcenter::v1beta1::AlertFeedback>(GetArenaNoVirtual());
    feedback_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.feedback)
  return feedback_;
}
inline void CreateAlertFeedbackRequest::set_allocated_feedback(::google::apps::alertcenter::v1beta1::AlertFeedback* feedback) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete feedback_;
  }
  if (feedback) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      feedback = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, feedback, submessage_arena);
    }
    
  } else {
    
  }
  feedback_ = feedback;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.CreateAlertFeedbackRequest.feedback)
}

// -------------------------------------------------------------------

// ListAlertFeedbackRequest

// string customer_id = 1;
inline void ListAlertFeedbackRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAlertFeedbackRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void ListAlertFeedbackRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.customer_id)
}
#if LANG_CXX11
inline void ListAlertFeedbackRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.customer_id)
}
#endif
inline void ListAlertFeedbackRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.customer_id)
}
inline void ListAlertFeedbackRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.customer_id)
}
inline ::std::string* ListAlertFeedbackRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAlertFeedbackRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAlertFeedbackRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.customer_id)
}

// string alert_id = 2;
inline void ListAlertFeedbackRequest::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAlertFeedbackRequest::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.alert_id)
  return alert_id_.GetNoArena();
}
inline void ListAlertFeedbackRequest::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.alert_id)
}
#if LANG_CXX11
inline void ListAlertFeedbackRequest::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.alert_id)
}
#endif
inline void ListAlertFeedbackRequest::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.alert_id)
}
inline void ListAlertFeedbackRequest::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.alert_id)
}
inline ::std::string* ListAlertFeedbackRequest::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAlertFeedbackRequest::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAlertFeedbackRequest::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.alert_id)
}

// string filter = 3;
inline void ListAlertFeedbackRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAlertFeedbackRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.filter)
  return filter_.GetNoArena();
}
inline void ListAlertFeedbackRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.filter)
}
#if LANG_CXX11
inline void ListAlertFeedbackRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.filter)
}
#endif
inline void ListAlertFeedbackRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.filter)
}
inline void ListAlertFeedbackRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.filter)
}
inline ::std::string* ListAlertFeedbackRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAlertFeedbackRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAlertFeedbackRequest::set_allocated_filter(::std::string* filter) {
  if (filter != nullptr) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.ListAlertFeedbackRequest.filter)
}

// -------------------------------------------------------------------

// ListAlertFeedbackResponse

// repeated .google.apps.alertcenter.v1beta1.AlertFeedback feedback = 1;
inline int ListAlertFeedbackResponse::feedback_size() const {
  return feedback_.size();
}
inline void ListAlertFeedbackResponse::clear_feedback() {
  feedback_.Clear();
}
inline ::google::apps::alertcenter::v1beta1::AlertFeedback* ListAlertFeedbackResponse::mutable_feedback(int index) {
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.ListAlertFeedbackResponse.feedback)
  return feedback_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::AlertFeedback >*
ListAlertFeedbackResponse::mutable_feedback() {
  // @@protoc_insertion_point(field_mutable_list:google.apps.alertcenter.v1beta1.ListAlertFeedbackResponse.feedback)
  return &feedback_;
}
inline const ::google::apps::alertcenter::v1beta1::AlertFeedback& ListAlertFeedbackResponse::feedback(int index) const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.ListAlertFeedbackResponse.feedback)
  return feedback_.Get(index);
}
inline ::google::apps::alertcenter::v1beta1::AlertFeedback* ListAlertFeedbackResponse::add_feedback() {
  // @@protoc_insertion_point(field_add:google.apps.alertcenter.v1beta1.ListAlertFeedbackResponse.feedback)
  return feedback_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::apps::alertcenter::v1beta1::AlertFeedback >&
ListAlertFeedbackResponse::feedback() const {
  // @@protoc_insertion_point(field_list:google.apps.alertcenter.v1beta1.ListAlertFeedbackResponse.feedback)
  return feedback_;
}

// -------------------------------------------------------------------

// GetAlertMetadataRequest

// string customer_id = 1;
inline void GetAlertMetadataRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAlertMetadataRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void GetAlertMetadataRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.customer_id)
}
#if LANG_CXX11
inline void GetAlertMetadataRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.customer_id)
}
#endif
inline void GetAlertMetadataRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.customer_id)
}
inline void GetAlertMetadataRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.customer_id)
}
inline ::std::string* GetAlertMetadataRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAlertMetadataRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAlertMetadataRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.customer_id)
}

// string alert_id = 2;
inline void GetAlertMetadataRequest::clear_alert_id() {
  alert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAlertMetadataRequest::alert_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.alert_id)
  return alert_id_.GetNoArena();
}
inline void GetAlertMetadataRequest::set_alert_id(const ::std::string& value) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.alert_id)
}
#if LANG_CXX11
inline void GetAlertMetadataRequest::set_alert_id(::std::string&& value) {
  
  alert_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.alert_id)
}
#endif
inline void GetAlertMetadataRequest::set_alert_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.alert_id)
}
inline void GetAlertMetadataRequest::set_alert_id(const char* value, size_t size) {
  
  alert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.alert_id)
}
inline ::std::string* GetAlertMetadataRequest::mutable_alert_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.alert_id)
  return alert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAlertMetadataRequest::release_alert_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.alert_id)
  
  return alert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAlertMetadataRequest::set_allocated_alert_id(::std::string* alert_id) {
  if (alert_id != nullptr) {
    
  } else {
    
  }
  alert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.GetAlertMetadataRequest.alert_id)
}

// -------------------------------------------------------------------

// GetSettingsRequest

// string customer_id = 1;
inline void GetSettingsRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSettingsRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.GetSettingsRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void GetSettingsRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.GetSettingsRequest.customer_id)
}
#if LANG_CXX11
inline void GetSettingsRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.GetSettingsRequest.customer_id)
}
#endif
inline void GetSettingsRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.GetSettingsRequest.customer_id)
}
inline void GetSettingsRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.GetSettingsRequest.customer_id)
}
inline ::std::string* GetSettingsRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.GetSettingsRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSettingsRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.GetSettingsRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSettingsRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.GetSettingsRequest.customer_id)
}

// -------------------------------------------------------------------

// UpdateSettingsRequest

// string customer_id = 1;
inline void UpdateSettingsRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateSettingsRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void UpdateSettingsRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.customer_id)
}
#if LANG_CXX11
inline void UpdateSettingsRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.customer_id)
}
#endif
inline void UpdateSettingsRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.customer_id)
}
inline void UpdateSettingsRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.customer_id)
}
inline ::std::string* UpdateSettingsRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateSettingsRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSettingsRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.customer_id)
}

// .google.apps.alertcenter.v1beta1.Settings settings = 2;
inline bool UpdateSettingsRequest::has_settings() const {
  return this != internal_default_instance() && settings_ != nullptr;
}
inline void UpdateSettingsRequest::clear_settings() {
  if (GetArenaNoVirtual() == nullptr && settings_ != nullptr) {
    delete settings_;
  }
  settings_ = nullptr;
}
inline const ::google::apps::alertcenter::v1beta1::Settings& UpdateSettingsRequest::settings() const {
  const ::google::apps::alertcenter::v1beta1::Settings* p = settings_;
  // @@protoc_insertion_point(field_get:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.settings)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::apps::alertcenter::v1beta1::Settings*>(
      &::google::apps::alertcenter::v1beta1::_Settings_default_instance_);
}
inline ::google::apps::alertcenter::v1beta1::Settings* UpdateSettingsRequest::release_settings() {
  // @@protoc_insertion_point(field_release:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.settings)
  
  ::google::apps::alertcenter::v1beta1::Settings* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::google::apps::alertcenter::v1beta1::Settings* UpdateSettingsRequest::mutable_settings() {
  
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::apps::alertcenter::v1beta1::Settings>(GetArenaNoVirtual());
    settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.settings)
  return settings_;
}
inline void UpdateSettingsRequest::set_allocated_settings(::google::apps::alertcenter::v1beta1::Settings* settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete settings_;
  }
  if (settings) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    
  } else {
    
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:google.apps.alertcenter.v1beta1.UpdateSettingsRequest.settings)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace alertcenter
}  // namespace apps
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::apps::alertcenter::v1beta1::Settings_Notification_PayloadFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::apps::alertcenter::v1beta1::Settings_Notification_PayloadFormat>() {
  return ::google::apps::alertcenter::v1beta1::Settings_Notification_PayloadFormat_descriptor();
}
template <> struct is_proto_enum< ::google::apps::alertcenter::v1beta1::AlertFeedbackType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::apps::alertcenter::v1beta1::AlertFeedbackType>() {
  return ::google::apps::alertcenter::v1beta1::AlertFeedbackType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto
