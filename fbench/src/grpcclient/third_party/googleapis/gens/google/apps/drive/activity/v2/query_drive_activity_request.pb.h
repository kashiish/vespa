// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/drive/activity/v2/query_drive_activity_request.proto

#ifndef PROTOBUF_INCLUDED_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto
#define PROTOBUF_INCLUDED_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto();
namespace google {
namespace apps {
namespace drive {
namespace activity {
namespace v2 {
class ConsolidationStrategy;
class ConsolidationStrategyDefaultTypeInternal;
extern ConsolidationStrategyDefaultTypeInternal _ConsolidationStrategy_default_instance_;
class ConsolidationStrategy_Legacy;
class ConsolidationStrategy_LegacyDefaultTypeInternal;
extern ConsolidationStrategy_LegacyDefaultTypeInternal _ConsolidationStrategy_Legacy_default_instance_;
class ConsolidationStrategy_NoConsolidation;
class ConsolidationStrategy_NoConsolidationDefaultTypeInternal;
extern ConsolidationStrategy_NoConsolidationDefaultTypeInternal _ConsolidationStrategy_NoConsolidation_default_instance_;
class QueryDriveActivityRequest;
class QueryDriveActivityRequestDefaultTypeInternal;
extern QueryDriveActivityRequestDefaultTypeInternal _QueryDriveActivityRequest_default_instance_;
}  // namespace v2
}  // namespace activity
}  // namespace drive
}  // namespace apps
namespace protobuf {
template<> ::google::apps::drive::activity::v2::ConsolidationStrategy* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::ConsolidationStrategy>(Arena*);
template<> ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy>(Arena*);
template<> ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation>(Arena*);
template<> ::google::apps::drive::activity::v2::QueryDriveActivityRequest* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::QueryDriveActivityRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace apps {
namespace drive {
namespace activity {
namespace v2 {

// ===================================================================

class QueryDriveActivityRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.QueryDriveActivityRequest) */ {
 public:
  QueryDriveActivityRequest();
  virtual ~QueryDriveActivityRequest();

  QueryDriveActivityRequest(const QueryDriveActivityRequest& from);

  inline QueryDriveActivityRequest& operator=(const QueryDriveActivityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryDriveActivityRequest(QueryDriveActivityRequest&& from) noexcept
    : QueryDriveActivityRequest() {
    *this = ::std::move(from);
  }

  inline QueryDriveActivityRequest& operator=(QueryDriveActivityRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QueryDriveActivityRequest& default_instance();

  enum KeyCase {
    kItemName = 1,
    kAncestorName = 2,
    KEY_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryDriveActivityRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDriveActivityRequest*>(
               &_QueryDriveActivityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(QueryDriveActivityRequest* other);
  friend void swap(QueryDriveActivityRequest& a, QueryDriveActivityRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryDriveActivityRequest* New() const final {
    return CreateMaybeMessage<QueryDriveActivityRequest>(nullptr);
  }

  QueryDriveActivityRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryDriveActivityRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryDriveActivityRequest& from);
  void MergeFrom(const QueryDriveActivityRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDriveActivityRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string page_token = 7;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 7;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string filter = 8;
  void clear_filter();
  static const int kFilterFieldNumber = 8;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // .google.apps.drive.activity.v2.ConsolidationStrategy consolidation_strategy = 5;
  bool has_consolidation_strategy() const;
  void clear_consolidation_strategy();
  static const int kConsolidationStrategyFieldNumber = 5;
  const ::google::apps::drive::activity::v2::ConsolidationStrategy& consolidation_strategy() const;
  ::google::apps::drive::activity::v2::ConsolidationStrategy* release_consolidation_strategy();
  ::google::apps::drive::activity::v2::ConsolidationStrategy* mutable_consolidation_strategy();
  void set_allocated_consolidation_strategy(::google::apps::drive::activity::v2::ConsolidationStrategy* consolidation_strategy);

  // int32 page_size = 6;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 6;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string item_name = 1;
  private:
  bool has_item_name() const;
  public:
  void clear_item_name();
  static const int kItemNameFieldNumber = 1;
  const ::std::string& item_name() const;
  void set_item_name(const ::std::string& value);
  #if LANG_CXX11
  void set_item_name(::std::string&& value);
  #endif
  void set_item_name(const char* value);
  void set_item_name(const char* value, size_t size);
  ::std::string* mutable_item_name();
  ::std::string* release_item_name();
  void set_allocated_item_name(::std::string* item_name);

  // string ancestor_name = 2;
  private:
  bool has_ancestor_name() const;
  public:
  void clear_ancestor_name();
  static const int kAncestorNameFieldNumber = 2;
  const ::std::string& ancestor_name() const;
  void set_ancestor_name(const ::std::string& value);
  #if LANG_CXX11
  void set_ancestor_name(::std::string&& value);
  #endif
  void set_ancestor_name(const char* value);
  void set_ancestor_name(const char* value, size_t size);
  ::std::string* mutable_ancestor_name();
  ::std::string* release_ancestor_name();
  void set_allocated_ancestor_name(::std::string* ancestor_name);

  void clear_key();
  KeyCase key_case() const;
  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.QueryDriveActivityRequest)
 private:
  class HasBitSetters;
  void set_has_item_name();
  void set_has_ancestor_name();

  inline bool has_key() const;
  inline void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::apps::drive::activity::v2::ConsolidationStrategy* consolidation_strategy_;
  ::google::protobuf::int32 page_size_;
  union KeyUnion {
    KeyUnion() {}
    ::google::protobuf::internal::ArenaStringPtr item_name_;
    ::google::protobuf::internal::ArenaStringPtr ancestor_name_;
  } key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ConsolidationStrategy_NoConsolidation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.ConsolidationStrategy.NoConsolidation) */ {
 public:
  ConsolidationStrategy_NoConsolidation();
  virtual ~ConsolidationStrategy_NoConsolidation();

  ConsolidationStrategy_NoConsolidation(const ConsolidationStrategy_NoConsolidation& from);

  inline ConsolidationStrategy_NoConsolidation& operator=(const ConsolidationStrategy_NoConsolidation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConsolidationStrategy_NoConsolidation(ConsolidationStrategy_NoConsolidation&& from) noexcept
    : ConsolidationStrategy_NoConsolidation() {
    *this = ::std::move(from);
  }

  inline ConsolidationStrategy_NoConsolidation& operator=(ConsolidationStrategy_NoConsolidation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConsolidationStrategy_NoConsolidation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConsolidationStrategy_NoConsolidation* internal_default_instance() {
    return reinterpret_cast<const ConsolidationStrategy_NoConsolidation*>(
               &_ConsolidationStrategy_NoConsolidation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ConsolidationStrategy_NoConsolidation* other);
  friend void swap(ConsolidationStrategy_NoConsolidation& a, ConsolidationStrategy_NoConsolidation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConsolidationStrategy_NoConsolidation* New() const final {
    return CreateMaybeMessage<ConsolidationStrategy_NoConsolidation>(nullptr);
  }

  ConsolidationStrategy_NoConsolidation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConsolidationStrategy_NoConsolidation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConsolidationStrategy_NoConsolidation& from);
  void MergeFrom(const ConsolidationStrategy_NoConsolidation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConsolidationStrategy_NoConsolidation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.ConsolidationStrategy.NoConsolidation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ConsolidationStrategy_Legacy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.ConsolidationStrategy.Legacy) */ {
 public:
  ConsolidationStrategy_Legacy();
  virtual ~ConsolidationStrategy_Legacy();

  ConsolidationStrategy_Legacy(const ConsolidationStrategy_Legacy& from);

  inline ConsolidationStrategy_Legacy& operator=(const ConsolidationStrategy_Legacy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConsolidationStrategy_Legacy(ConsolidationStrategy_Legacy&& from) noexcept
    : ConsolidationStrategy_Legacy() {
    *this = ::std::move(from);
  }

  inline ConsolidationStrategy_Legacy& operator=(ConsolidationStrategy_Legacy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConsolidationStrategy_Legacy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConsolidationStrategy_Legacy* internal_default_instance() {
    return reinterpret_cast<const ConsolidationStrategy_Legacy*>(
               &_ConsolidationStrategy_Legacy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ConsolidationStrategy_Legacy* other);
  friend void swap(ConsolidationStrategy_Legacy& a, ConsolidationStrategy_Legacy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConsolidationStrategy_Legacy* New() const final {
    return CreateMaybeMessage<ConsolidationStrategy_Legacy>(nullptr);
  }

  ConsolidationStrategy_Legacy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConsolidationStrategy_Legacy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConsolidationStrategy_Legacy& from);
  void MergeFrom(const ConsolidationStrategy_Legacy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConsolidationStrategy_Legacy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.ConsolidationStrategy.Legacy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ConsolidationStrategy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.ConsolidationStrategy) */ {
 public:
  ConsolidationStrategy();
  virtual ~ConsolidationStrategy();

  ConsolidationStrategy(const ConsolidationStrategy& from);

  inline ConsolidationStrategy& operator=(const ConsolidationStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConsolidationStrategy(ConsolidationStrategy&& from) noexcept
    : ConsolidationStrategy() {
    *this = ::std::move(from);
  }

  inline ConsolidationStrategy& operator=(ConsolidationStrategy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConsolidationStrategy& default_instance();

  enum StrategyCase {
    kNone = 1,
    kLegacy = 2,
    STRATEGY_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConsolidationStrategy* internal_default_instance() {
    return reinterpret_cast<const ConsolidationStrategy*>(
               &_ConsolidationStrategy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ConsolidationStrategy* other);
  friend void swap(ConsolidationStrategy& a, ConsolidationStrategy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConsolidationStrategy* New() const final {
    return CreateMaybeMessage<ConsolidationStrategy>(nullptr);
  }

  ConsolidationStrategy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConsolidationStrategy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConsolidationStrategy& from);
  void MergeFrom(const ConsolidationStrategy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConsolidationStrategy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConsolidationStrategy_NoConsolidation NoConsolidation;
  typedef ConsolidationStrategy_Legacy Legacy;

  // accessors -------------------------------------------------------

  // .google.apps.drive.activity.v2.ConsolidationStrategy.NoConsolidation none = 1;
  bool has_none() const;
  void clear_none();
  static const int kNoneFieldNumber = 1;
  const ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation& none() const;
  ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation* release_none();
  ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation* mutable_none();
  void set_allocated_none(::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation* none);

  // .google.apps.drive.activity.v2.ConsolidationStrategy.Legacy legacy = 2;
  bool has_legacy() const;
  void clear_legacy();
  static const int kLegacyFieldNumber = 2;
  const ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy& legacy() const;
  ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy* release_legacy();
  ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy* mutable_legacy();
  void set_allocated_legacy(::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy* legacy);

  void clear_strategy();
  StrategyCase strategy_case() const;
  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.ConsolidationStrategy)
 private:
  class HasBitSetters;
  void set_has_none();
  void set_has_legacy();

  inline bool has_strategy() const;
  inline void clear_has_strategy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union StrategyUnion {
    StrategyUnion() {}
    ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation* none_;
    ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy* legacy_;
  } strategy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QueryDriveActivityRequest

// string item_name = 1;
inline bool QueryDriveActivityRequest::has_item_name() const {
  return key_case() == kItemName;
}
inline void QueryDriveActivityRequest::set_has_item_name() {
  _oneof_case_[0] = kItemName;
}
inline void QueryDriveActivityRequest::clear_item_name() {
  if (has_item_name()) {
    key_.item_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_key();
  }
}
inline const ::std::string& QueryDriveActivityRequest::item_name() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
  if (has_item_name()) {
    return key_.item_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void QueryDriveActivityRequest::set_item_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
  if (!has_item_name()) {
    clear_key();
    set_has_item_name();
    key_.item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  key_.item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
}
#if LANG_CXX11
inline void QueryDriveActivityRequest::set_item_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
  if (!has_item_name()) {
    clear_key();
    set_has_item_name();
    key_.item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  key_.item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
}
#endif
inline void QueryDriveActivityRequest::set_item_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_item_name()) {
    clear_key();
    set_has_item_name();
    key_.item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  key_.item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
}
inline void QueryDriveActivityRequest::set_item_name(const char* value, size_t size) {
  if (!has_item_name()) {
    clear_key();
    set_has_item_name();
    key_.item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  key_.item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
}
inline ::std::string* QueryDriveActivityRequest::mutable_item_name() {
  if (!has_item_name()) {
    clear_key();
    set_has_item_name();
    key_.item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
  return key_.item_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDriveActivityRequest::release_item_name() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
  if (has_item_name()) {
    clear_has_key();
    return key_.item_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void QueryDriveActivityRequest::set_allocated_item_name(::std::string* item_name) {
  if (has_key()) {
    clear_key();
  }
  if (item_name != nullptr) {
    set_has_item_name();
    key_.item_name_.UnsafeSetDefault(item_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.QueryDriveActivityRequest.item_name)
}

// string ancestor_name = 2;
inline bool QueryDriveActivityRequest::has_ancestor_name() const {
  return key_case() == kAncestorName;
}
inline void QueryDriveActivityRequest::set_has_ancestor_name() {
  _oneof_case_[0] = kAncestorName;
}
inline void QueryDriveActivityRequest::clear_ancestor_name() {
  if (has_ancestor_name()) {
    key_.ancestor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_key();
  }
}
inline const ::std::string& QueryDriveActivityRequest::ancestor_name() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
  if (has_ancestor_name()) {
    return key_.ancestor_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void QueryDriveActivityRequest::set_ancestor_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
  if (!has_ancestor_name()) {
    clear_key();
    set_has_ancestor_name();
    key_.ancestor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  key_.ancestor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
}
#if LANG_CXX11
inline void QueryDriveActivityRequest::set_ancestor_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
  if (!has_ancestor_name()) {
    clear_key();
    set_has_ancestor_name();
    key_.ancestor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  key_.ancestor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
}
#endif
inline void QueryDriveActivityRequest::set_ancestor_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_ancestor_name()) {
    clear_key();
    set_has_ancestor_name();
    key_.ancestor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  key_.ancestor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
}
inline void QueryDriveActivityRequest::set_ancestor_name(const char* value, size_t size) {
  if (!has_ancestor_name()) {
    clear_key();
    set_has_ancestor_name();
    key_.ancestor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  key_.ancestor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
}
inline ::std::string* QueryDriveActivityRequest::mutable_ancestor_name() {
  if (!has_ancestor_name()) {
    clear_key();
    set_has_ancestor_name();
    key_.ancestor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
  return key_.ancestor_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDriveActivityRequest::release_ancestor_name() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
  if (has_ancestor_name()) {
    clear_has_key();
    return key_.ancestor_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void QueryDriveActivityRequest::set_allocated_ancestor_name(::std::string* ancestor_name) {
  if (has_key()) {
    clear_key();
  }
  if (ancestor_name != nullptr) {
    set_has_ancestor_name();
    key_.ancestor_name_.UnsafeSetDefault(ancestor_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.QueryDriveActivityRequest.ancestor_name)
}

// .google.apps.drive.activity.v2.ConsolidationStrategy consolidation_strategy = 5;
inline bool QueryDriveActivityRequest::has_consolidation_strategy() const {
  return this != internal_default_instance() && consolidation_strategy_ != nullptr;
}
inline void QueryDriveActivityRequest::clear_consolidation_strategy() {
  if (GetArenaNoVirtual() == nullptr && consolidation_strategy_ != nullptr) {
    delete consolidation_strategy_;
  }
  consolidation_strategy_ = nullptr;
}
inline const ::google::apps::drive::activity::v2::ConsolidationStrategy& QueryDriveActivityRequest::consolidation_strategy() const {
  const ::google::apps::drive::activity::v2::ConsolidationStrategy* p = consolidation_strategy_;
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.QueryDriveActivityRequest.consolidation_strategy)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::apps::drive::activity::v2::ConsolidationStrategy*>(
      &::google::apps::drive::activity::v2::_ConsolidationStrategy_default_instance_);
}
inline ::google::apps::drive::activity::v2::ConsolidationStrategy* QueryDriveActivityRequest::release_consolidation_strategy() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.QueryDriveActivityRequest.consolidation_strategy)
  
  ::google::apps::drive::activity::v2::ConsolidationStrategy* temp = consolidation_strategy_;
  consolidation_strategy_ = nullptr;
  return temp;
}
inline ::google::apps::drive::activity::v2::ConsolidationStrategy* QueryDriveActivityRequest::mutable_consolidation_strategy() {
  
  if (consolidation_strategy_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::apps::drive::activity::v2::ConsolidationStrategy>(GetArenaNoVirtual());
    consolidation_strategy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.QueryDriveActivityRequest.consolidation_strategy)
  return consolidation_strategy_;
}
inline void QueryDriveActivityRequest::set_allocated_consolidation_strategy(::google::apps::drive::activity::v2::ConsolidationStrategy* consolidation_strategy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete consolidation_strategy_;
  }
  if (consolidation_strategy) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      consolidation_strategy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, consolidation_strategy, submessage_arena);
    }
    
  } else {
    
  }
  consolidation_strategy_ = consolidation_strategy;
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.QueryDriveActivityRequest.consolidation_strategy)
}

// int32 page_size = 6;
inline void QueryDriveActivityRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 QueryDriveActivityRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_size)
  return page_size_;
}
inline void QueryDriveActivityRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_size)
}

// string page_token = 7;
inline void QueryDriveActivityRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryDriveActivityRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_token)
  return page_token_.GetNoArena();
}
inline void QueryDriveActivityRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_token)
}
#if LANG_CXX11
inline void QueryDriveActivityRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_token)
}
#endif
inline void QueryDriveActivityRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_token)
}
inline void QueryDriveActivityRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_token)
}
inline ::std::string* QueryDriveActivityRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDriveActivityRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryDriveActivityRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.QueryDriveActivityRequest.page_token)
}

// string filter = 8;
inline void QueryDriveActivityRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryDriveActivityRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.QueryDriveActivityRequest.filter)
  return filter_.GetNoArena();
}
inline void QueryDriveActivityRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.QueryDriveActivityRequest.filter)
}
#if LANG_CXX11
inline void QueryDriveActivityRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.drive.activity.v2.QueryDriveActivityRequest.filter)
}
#endif
inline void QueryDriveActivityRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.drive.activity.v2.QueryDriveActivityRequest.filter)
}
inline void QueryDriveActivityRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.drive.activity.v2.QueryDriveActivityRequest.filter)
}
inline ::std::string* QueryDriveActivityRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.QueryDriveActivityRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryDriveActivityRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.QueryDriveActivityRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryDriveActivityRequest::set_allocated_filter(::std::string* filter) {
  if (filter != nullptr) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.QueryDriveActivityRequest.filter)
}

inline bool QueryDriveActivityRequest::has_key() const {
  return key_case() != KEY_NOT_SET;
}
inline void QueryDriveActivityRequest::clear_has_key() {
  _oneof_case_[0] = KEY_NOT_SET;
}
inline QueryDriveActivityRequest::KeyCase QueryDriveActivityRequest::key_case() const {
  return QueryDriveActivityRequest::KeyCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ConsolidationStrategy_NoConsolidation

// -------------------------------------------------------------------

// ConsolidationStrategy_Legacy

// -------------------------------------------------------------------

// ConsolidationStrategy

// .google.apps.drive.activity.v2.ConsolidationStrategy.NoConsolidation none = 1;
inline bool ConsolidationStrategy::has_none() const {
  return strategy_case() == kNone;
}
inline void ConsolidationStrategy::set_has_none() {
  _oneof_case_[0] = kNone;
}
inline void ConsolidationStrategy::clear_none() {
  if (has_none()) {
    delete strategy_.none_;
    clear_has_strategy();
  }
}
inline ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation* ConsolidationStrategy::release_none() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.ConsolidationStrategy.none)
  if (has_none()) {
    clear_has_strategy();
      ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation* temp = strategy_.none_;
    strategy_.none_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation& ConsolidationStrategy::none() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.ConsolidationStrategy.none)
  return has_none()
      ? *strategy_.none_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation*>(&::google::apps::drive::activity::v2::_ConsolidationStrategy_NoConsolidation_default_instance_);
}
inline ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation* ConsolidationStrategy::mutable_none() {
  if (!has_none()) {
    clear_strategy();
    set_has_none();
    strategy_.none_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::ConsolidationStrategy_NoConsolidation >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.ConsolidationStrategy.none)
  return strategy_.none_;
}

// .google.apps.drive.activity.v2.ConsolidationStrategy.Legacy legacy = 2;
inline bool ConsolidationStrategy::has_legacy() const {
  return strategy_case() == kLegacy;
}
inline void ConsolidationStrategy::set_has_legacy() {
  _oneof_case_[0] = kLegacy;
}
inline void ConsolidationStrategy::clear_legacy() {
  if (has_legacy()) {
    delete strategy_.legacy_;
    clear_has_strategy();
  }
}
inline ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy* ConsolidationStrategy::release_legacy() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.ConsolidationStrategy.legacy)
  if (has_legacy()) {
    clear_has_strategy();
      ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy* temp = strategy_.legacy_;
    strategy_.legacy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy& ConsolidationStrategy::legacy() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.ConsolidationStrategy.legacy)
  return has_legacy()
      ? *strategy_.legacy_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy*>(&::google::apps::drive::activity::v2::_ConsolidationStrategy_Legacy_default_instance_);
}
inline ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy* ConsolidationStrategy::mutable_legacy() {
  if (!has_legacy()) {
    clear_strategy();
    set_has_legacy();
    strategy_.legacy_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::ConsolidationStrategy_Legacy >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.ConsolidationStrategy.legacy)
  return strategy_.legacy_;
}

inline bool ConsolidationStrategy::has_strategy() const {
  return strategy_case() != STRATEGY_NOT_SET;
}
inline void ConsolidationStrategy::clear_has_strategy() {
  _oneof_case_[0] = STRATEGY_NOT_SET;
}
inline ConsolidationStrategy::StrategyCase ConsolidationStrategy::strategy_case() const {
  return ConsolidationStrategy::StrategyCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace activity
}  // namespace drive
}  // namespace apps
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fapps_2fdrive_2factivity_2fv2_2fquery_5fdrive_5factivity_5frequest_2eproto
