// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/drive/activity/v2/actor.proto

#ifndef PROTOBUF_INCLUDED_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto
#define PROTOBUF_INCLUDED_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/apps/drive/activity/v2/common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto();
namespace google {
namespace apps {
namespace drive {
namespace activity {
namespace v2 {
class Actor;
class ActorDefaultTypeInternal;
extern ActorDefaultTypeInternal _Actor_default_instance_;
class Administrator;
class AdministratorDefaultTypeInternal;
extern AdministratorDefaultTypeInternal _Administrator_default_instance_;
class AnonymousUser;
class AnonymousUserDefaultTypeInternal;
extern AnonymousUserDefaultTypeInternal _AnonymousUser_default_instance_;
class Impersonation;
class ImpersonationDefaultTypeInternal;
extern ImpersonationDefaultTypeInternal _Impersonation_default_instance_;
class SystemEvent;
class SystemEventDefaultTypeInternal;
extern SystemEventDefaultTypeInternal _SystemEvent_default_instance_;
class User;
class UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
class User_DeletedUser;
class User_DeletedUserDefaultTypeInternal;
extern User_DeletedUserDefaultTypeInternal _User_DeletedUser_default_instance_;
class User_KnownUser;
class User_KnownUserDefaultTypeInternal;
extern User_KnownUserDefaultTypeInternal _User_KnownUser_default_instance_;
class User_UnknownUser;
class User_UnknownUserDefaultTypeInternal;
extern User_UnknownUserDefaultTypeInternal _User_UnknownUser_default_instance_;
}  // namespace v2
}  // namespace activity
}  // namespace drive
}  // namespace apps
namespace protobuf {
template<> ::google::apps::drive::activity::v2::Actor* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::Actor>(Arena*);
template<> ::google::apps::drive::activity::v2::Administrator* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::Administrator>(Arena*);
template<> ::google::apps::drive::activity::v2::AnonymousUser* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::AnonymousUser>(Arena*);
template<> ::google::apps::drive::activity::v2::Impersonation* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::Impersonation>(Arena*);
template<> ::google::apps::drive::activity::v2::SystemEvent* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::SystemEvent>(Arena*);
template<> ::google::apps::drive::activity::v2::User* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::User>(Arena*);
template<> ::google::apps::drive::activity::v2::User_DeletedUser* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::User_DeletedUser>(Arena*);
template<> ::google::apps::drive::activity::v2::User_KnownUser* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::User_KnownUser>(Arena*);
template<> ::google::apps::drive::activity::v2::User_UnknownUser* Arena::CreateMaybeMessage<::google::apps::drive::activity::v2::User_UnknownUser>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace apps {
namespace drive {
namespace activity {
namespace v2 {

enum SystemEvent_Type {
  SystemEvent_Type_TYPE_UNSPECIFIED = 0,
  SystemEvent_Type_USER_DELETION = 1,
  SystemEvent_Type_TRASH_AUTO_PURGE = 2,
  SystemEvent_Type_SystemEvent_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  SystemEvent_Type_SystemEvent_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool SystemEvent_Type_IsValid(int value);
const SystemEvent_Type SystemEvent_Type_Type_MIN = SystemEvent_Type_TYPE_UNSPECIFIED;
const SystemEvent_Type SystemEvent_Type_Type_MAX = SystemEvent_Type_TRASH_AUTO_PURGE;
const int SystemEvent_Type_Type_ARRAYSIZE = SystemEvent_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemEvent_Type_descriptor();
inline const ::std::string& SystemEvent_Type_Name(SystemEvent_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemEvent_Type_descriptor(), value);
}
inline bool SystemEvent_Type_Parse(
    const ::std::string& name, SystemEvent_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemEvent_Type>(
    SystemEvent_Type_descriptor(), name, value);
}
// ===================================================================

class Actor final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.Actor) */ {
 public:
  Actor();
  virtual ~Actor();

  Actor(const Actor& from);

  inline Actor& operator=(const Actor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Actor(Actor&& from) noexcept
    : Actor() {
    *this = ::std::move(from);
  }

  inline Actor& operator=(Actor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Actor& default_instance();

  enum TypeCase {
    kUser = 1,
    kAnonymous = 2,
    kImpersonation = 3,
    kSystem = 4,
    kAdministrator = 5,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Actor* internal_default_instance() {
    return reinterpret_cast<const Actor*>(
               &_Actor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Actor* other);
  friend void swap(Actor& a, Actor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Actor* New() const final {
    return CreateMaybeMessage<Actor>(nullptr);
  }

  Actor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Actor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Actor& from);
  void MergeFrom(const Actor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Actor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.apps.drive.activity.v2.User user = 1;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::google::apps::drive::activity::v2::User& user() const;
  ::google::apps::drive::activity::v2::User* release_user();
  ::google::apps::drive::activity::v2::User* mutable_user();
  void set_allocated_user(::google::apps::drive::activity::v2::User* user);

  // .google.apps.drive.activity.v2.AnonymousUser anonymous = 2;
  bool has_anonymous() const;
  void clear_anonymous();
  static const int kAnonymousFieldNumber = 2;
  const ::google::apps::drive::activity::v2::AnonymousUser& anonymous() const;
  ::google::apps::drive::activity::v2::AnonymousUser* release_anonymous();
  ::google::apps::drive::activity::v2::AnonymousUser* mutable_anonymous();
  void set_allocated_anonymous(::google::apps::drive::activity::v2::AnonymousUser* anonymous);

  // .google.apps.drive.activity.v2.Impersonation impersonation = 3;
  bool has_impersonation() const;
  void clear_impersonation();
  static const int kImpersonationFieldNumber = 3;
  const ::google::apps::drive::activity::v2::Impersonation& impersonation() const;
  ::google::apps::drive::activity::v2::Impersonation* release_impersonation();
  ::google::apps::drive::activity::v2::Impersonation* mutable_impersonation();
  void set_allocated_impersonation(::google::apps::drive::activity::v2::Impersonation* impersonation);

  // .google.apps.drive.activity.v2.SystemEvent system = 4;
  bool has_system() const;
  void clear_system();
  static const int kSystemFieldNumber = 4;
  const ::google::apps::drive::activity::v2::SystemEvent& system() const;
  ::google::apps::drive::activity::v2::SystemEvent* release_system();
  ::google::apps::drive::activity::v2::SystemEvent* mutable_system();
  void set_allocated_system(::google::apps::drive::activity::v2::SystemEvent* system);

  // .google.apps.drive.activity.v2.Administrator administrator = 5;
  bool has_administrator() const;
  void clear_administrator();
  static const int kAdministratorFieldNumber = 5;
  const ::google::apps::drive::activity::v2::Administrator& administrator() const;
  ::google::apps::drive::activity::v2::Administrator* release_administrator();
  ::google::apps::drive::activity::v2::Administrator* mutable_administrator();
  void set_allocated_administrator(::google::apps::drive::activity::v2::Administrator* administrator);

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.Actor)
 private:
  class HasBitSetters;
  void set_has_user();
  void set_has_anonymous();
  void set_has_impersonation();
  void set_has_system();
  void set_has_administrator();

  inline bool has_type() const;
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::google::apps::drive::activity::v2::User* user_;
    ::google::apps::drive::activity::v2::AnonymousUser* anonymous_;
    ::google::apps::drive::activity::v2::Impersonation* impersonation_;
    ::google::apps::drive::activity::v2::SystemEvent* system_;
    ::google::apps::drive::activity::v2::Administrator* administrator_;
  } type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// -------------------------------------------------------------------

class User_KnownUser final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.User.KnownUser) */ {
 public:
  User_KnownUser();
  virtual ~User_KnownUser();

  User_KnownUser(const User_KnownUser& from);

  inline User_KnownUser& operator=(const User_KnownUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User_KnownUser(User_KnownUser&& from) noexcept
    : User_KnownUser() {
    *this = ::std::move(from);
  }

  inline User_KnownUser& operator=(User_KnownUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const User_KnownUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User_KnownUser* internal_default_instance() {
    return reinterpret_cast<const User_KnownUser*>(
               &_User_KnownUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(User_KnownUser* other);
  friend void swap(User_KnownUser& a, User_KnownUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User_KnownUser* New() const final {
    return CreateMaybeMessage<User_KnownUser>(nullptr);
  }

  User_KnownUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<User_KnownUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const User_KnownUser& from);
  void MergeFrom(const User_KnownUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(User_KnownUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string person_name = 1;
  void clear_person_name();
  static const int kPersonNameFieldNumber = 1;
  const ::std::string& person_name() const;
  void set_person_name(const ::std::string& value);
  #if LANG_CXX11
  void set_person_name(::std::string&& value);
  #endif
  void set_person_name(const char* value);
  void set_person_name(const char* value, size_t size);
  ::std::string* mutable_person_name();
  ::std::string* release_person_name();
  void set_allocated_person_name(::std::string* person_name);

  // bool is_current_user = 2;
  void clear_is_current_user();
  static const int kIsCurrentUserFieldNumber = 2;
  bool is_current_user() const;
  void set_is_current_user(bool value);

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.User.KnownUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr person_name_;
  bool is_current_user_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// -------------------------------------------------------------------

class User_DeletedUser final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.User.DeletedUser) */ {
 public:
  User_DeletedUser();
  virtual ~User_DeletedUser();

  User_DeletedUser(const User_DeletedUser& from);

  inline User_DeletedUser& operator=(const User_DeletedUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User_DeletedUser(User_DeletedUser&& from) noexcept
    : User_DeletedUser() {
    *this = ::std::move(from);
  }

  inline User_DeletedUser& operator=(User_DeletedUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const User_DeletedUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User_DeletedUser* internal_default_instance() {
    return reinterpret_cast<const User_DeletedUser*>(
               &_User_DeletedUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(User_DeletedUser* other);
  friend void swap(User_DeletedUser& a, User_DeletedUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User_DeletedUser* New() const final {
    return CreateMaybeMessage<User_DeletedUser>(nullptr);
  }

  User_DeletedUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<User_DeletedUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const User_DeletedUser& from);
  void MergeFrom(const User_DeletedUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(User_DeletedUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.User.DeletedUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// -------------------------------------------------------------------

class User_UnknownUser final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.User.UnknownUser) */ {
 public:
  User_UnknownUser();
  virtual ~User_UnknownUser();

  User_UnknownUser(const User_UnknownUser& from);

  inline User_UnknownUser& operator=(const User_UnknownUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User_UnknownUser(User_UnknownUser&& from) noexcept
    : User_UnknownUser() {
    *this = ::std::move(from);
  }

  inline User_UnknownUser& operator=(User_UnknownUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const User_UnknownUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User_UnknownUser* internal_default_instance() {
    return reinterpret_cast<const User_UnknownUser*>(
               &_User_UnknownUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(User_UnknownUser* other);
  friend void swap(User_UnknownUser& a, User_UnknownUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User_UnknownUser* New() const final {
    return CreateMaybeMessage<User_UnknownUser>(nullptr);
  }

  User_UnknownUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<User_UnknownUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const User_UnknownUser& from);
  void MergeFrom(const User_UnknownUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(User_UnknownUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.User.UnknownUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// -------------------------------------------------------------------

class User final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.User) */ {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User(User&& from) noexcept
    : User() {
    *this = ::std::move(from);
  }

  inline User& operator=(User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const User& default_instance();

  enum TypeCase {
    kKnownUser = 2,
    kDeletedUser = 3,
    kUnknownUser = 4,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User* internal_default_instance() {
    return reinterpret_cast<const User*>(
               &_User_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(User* other);
  friend void swap(User& a, User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User* New() const final {
    return CreateMaybeMessage<User>(nullptr);
  }

  User* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<User>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef User_KnownUser KnownUser;
  typedef User_DeletedUser DeletedUser;
  typedef User_UnknownUser UnknownUser;

  // accessors -------------------------------------------------------

  // .google.apps.drive.activity.v2.User.KnownUser known_user = 2;
  bool has_known_user() const;
  void clear_known_user();
  static const int kKnownUserFieldNumber = 2;
  const ::google::apps::drive::activity::v2::User_KnownUser& known_user() const;
  ::google::apps::drive::activity::v2::User_KnownUser* release_known_user();
  ::google::apps::drive::activity::v2::User_KnownUser* mutable_known_user();
  void set_allocated_known_user(::google::apps::drive::activity::v2::User_KnownUser* known_user);

  // .google.apps.drive.activity.v2.User.DeletedUser deleted_user = 3;
  bool has_deleted_user() const;
  void clear_deleted_user();
  static const int kDeletedUserFieldNumber = 3;
  const ::google::apps::drive::activity::v2::User_DeletedUser& deleted_user() const;
  ::google::apps::drive::activity::v2::User_DeletedUser* release_deleted_user();
  ::google::apps::drive::activity::v2::User_DeletedUser* mutable_deleted_user();
  void set_allocated_deleted_user(::google::apps::drive::activity::v2::User_DeletedUser* deleted_user);

  // .google.apps.drive.activity.v2.User.UnknownUser unknown_user = 4;
  bool has_unknown_user() const;
  void clear_unknown_user();
  static const int kUnknownUserFieldNumber = 4;
  const ::google::apps::drive::activity::v2::User_UnknownUser& unknown_user() const;
  ::google::apps::drive::activity::v2::User_UnknownUser* release_unknown_user();
  ::google::apps::drive::activity::v2::User_UnknownUser* mutable_unknown_user();
  void set_allocated_unknown_user(::google::apps::drive::activity::v2::User_UnknownUser* unknown_user);

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.User)
 private:
  class HasBitSetters;
  void set_has_known_user();
  void set_has_deleted_user();
  void set_has_unknown_user();

  inline bool has_type() const;
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::google::apps::drive::activity::v2::User_KnownUser* known_user_;
    ::google::apps::drive::activity::v2::User_DeletedUser* deleted_user_;
    ::google::apps::drive::activity::v2::User_UnknownUser* unknown_user_;
  } type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// -------------------------------------------------------------------

class AnonymousUser final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.AnonymousUser) */ {
 public:
  AnonymousUser();
  virtual ~AnonymousUser();

  AnonymousUser(const AnonymousUser& from);

  inline AnonymousUser& operator=(const AnonymousUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnonymousUser(AnonymousUser&& from) noexcept
    : AnonymousUser() {
    *this = ::std::move(from);
  }

  inline AnonymousUser& operator=(AnonymousUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AnonymousUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnonymousUser* internal_default_instance() {
    return reinterpret_cast<const AnonymousUser*>(
               &_AnonymousUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AnonymousUser* other);
  friend void swap(AnonymousUser& a, AnonymousUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnonymousUser* New() const final {
    return CreateMaybeMessage<AnonymousUser>(nullptr);
  }

  AnonymousUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AnonymousUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AnonymousUser& from);
  void MergeFrom(const AnonymousUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnonymousUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.AnonymousUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// -------------------------------------------------------------------

class Impersonation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.Impersonation) */ {
 public:
  Impersonation();
  virtual ~Impersonation();

  Impersonation(const Impersonation& from);

  inline Impersonation& operator=(const Impersonation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Impersonation(Impersonation&& from) noexcept
    : Impersonation() {
    *this = ::std::move(from);
  }

  inline Impersonation& operator=(Impersonation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Impersonation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Impersonation* internal_default_instance() {
    return reinterpret_cast<const Impersonation*>(
               &_Impersonation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Impersonation* other);
  friend void swap(Impersonation& a, Impersonation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Impersonation* New() const final {
    return CreateMaybeMessage<Impersonation>(nullptr);
  }

  Impersonation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Impersonation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Impersonation& from);
  void MergeFrom(const Impersonation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Impersonation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.apps.drive.activity.v2.User impersonated_user = 1;
  bool has_impersonated_user() const;
  void clear_impersonated_user();
  static const int kImpersonatedUserFieldNumber = 1;
  const ::google::apps::drive::activity::v2::User& impersonated_user() const;
  ::google::apps::drive::activity::v2::User* release_impersonated_user();
  ::google::apps::drive::activity::v2::User* mutable_impersonated_user();
  void set_allocated_impersonated_user(::google::apps::drive::activity::v2::User* impersonated_user);

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.Impersonation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::apps::drive::activity::v2::User* impersonated_user_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// -------------------------------------------------------------------

class SystemEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.SystemEvent) */ {
 public:
  SystemEvent();
  virtual ~SystemEvent();

  SystemEvent(const SystemEvent& from);

  inline SystemEvent& operator=(const SystemEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemEvent(SystemEvent&& from) noexcept
    : SystemEvent() {
    *this = ::std::move(from);
  }

  inline SystemEvent& operator=(SystemEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SystemEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemEvent* internal_default_instance() {
    return reinterpret_cast<const SystemEvent*>(
               &_SystemEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(SystemEvent* other);
  friend void swap(SystemEvent& a, SystemEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemEvent* New() const final {
    return CreateMaybeMessage<SystemEvent>(nullptr);
  }

  SystemEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemEvent& from);
  void MergeFrom(const SystemEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SystemEvent_Type Type;
  static const Type TYPE_UNSPECIFIED =
    SystemEvent_Type_TYPE_UNSPECIFIED;
  static const Type USER_DELETION =
    SystemEvent_Type_USER_DELETION;
  static const Type TRASH_AUTO_PURGE =
    SystemEvent_Type_TRASH_AUTO_PURGE;
  static inline bool Type_IsValid(int value) {
    return SystemEvent_Type_IsValid(value);
  }
  static const Type Type_MIN =
    SystemEvent_Type_Type_MIN;
  static const Type Type_MAX =
    SystemEvent_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    SystemEvent_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return SystemEvent_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return SystemEvent_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return SystemEvent_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.apps.drive.activity.v2.SystemEvent.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::apps::drive::activity::v2::SystemEvent_Type type() const;
  void set_type(::google::apps::drive::activity::v2::SystemEvent_Type value);

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.SystemEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// -------------------------------------------------------------------

class Administrator final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.apps.drive.activity.v2.Administrator) */ {
 public:
  Administrator();
  virtual ~Administrator();

  Administrator(const Administrator& from);

  inline Administrator& operator=(const Administrator& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Administrator(Administrator&& from) noexcept
    : Administrator() {
    *this = ::std::move(from);
  }

  inline Administrator& operator=(Administrator&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Administrator& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Administrator* internal_default_instance() {
    return reinterpret_cast<const Administrator*>(
               &_Administrator_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Administrator* other);
  friend void swap(Administrator& a, Administrator& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Administrator* New() const final {
    return CreateMaybeMessage<Administrator>(nullptr);
  }

  Administrator* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Administrator>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Administrator& from);
  void MergeFrom(const Administrator& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Administrator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.Administrator)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Actor

// .google.apps.drive.activity.v2.User user = 1;
inline bool Actor::has_user() const {
  return type_case() == kUser;
}
inline void Actor::set_has_user() {
  _oneof_case_[0] = kUser;
}
inline void Actor::clear_user() {
  if (has_user()) {
    delete type_.user_;
    clear_has_type();
  }
}
inline ::google::apps::drive::activity::v2::User* Actor::release_user() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.Actor.user)
  if (has_user()) {
    clear_has_type();
      ::google::apps::drive::activity::v2::User* temp = type_.user_;
    type_.user_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::User& Actor::user() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.Actor.user)
  return has_user()
      ? *type_.user_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::User*>(&::google::apps::drive::activity::v2::_User_default_instance_);
}
inline ::google::apps::drive::activity::v2::User* Actor::mutable_user() {
  if (!has_user()) {
    clear_type();
    set_has_user();
    type_.user_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::User >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.Actor.user)
  return type_.user_;
}

// .google.apps.drive.activity.v2.AnonymousUser anonymous = 2;
inline bool Actor::has_anonymous() const {
  return type_case() == kAnonymous;
}
inline void Actor::set_has_anonymous() {
  _oneof_case_[0] = kAnonymous;
}
inline void Actor::clear_anonymous() {
  if (has_anonymous()) {
    delete type_.anonymous_;
    clear_has_type();
  }
}
inline ::google::apps::drive::activity::v2::AnonymousUser* Actor::release_anonymous() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.Actor.anonymous)
  if (has_anonymous()) {
    clear_has_type();
      ::google::apps::drive::activity::v2::AnonymousUser* temp = type_.anonymous_;
    type_.anonymous_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::AnonymousUser& Actor::anonymous() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.Actor.anonymous)
  return has_anonymous()
      ? *type_.anonymous_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::AnonymousUser*>(&::google::apps::drive::activity::v2::_AnonymousUser_default_instance_);
}
inline ::google::apps::drive::activity::v2::AnonymousUser* Actor::mutable_anonymous() {
  if (!has_anonymous()) {
    clear_type();
    set_has_anonymous();
    type_.anonymous_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::AnonymousUser >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.Actor.anonymous)
  return type_.anonymous_;
}

// .google.apps.drive.activity.v2.Impersonation impersonation = 3;
inline bool Actor::has_impersonation() const {
  return type_case() == kImpersonation;
}
inline void Actor::set_has_impersonation() {
  _oneof_case_[0] = kImpersonation;
}
inline void Actor::clear_impersonation() {
  if (has_impersonation()) {
    delete type_.impersonation_;
    clear_has_type();
  }
}
inline ::google::apps::drive::activity::v2::Impersonation* Actor::release_impersonation() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.Actor.impersonation)
  if (has_impersonation()) {
    clear_has_type();
      ::google::apps::drive::activity::v2::Impersonation* temp = type_.impersonation_;
    type_.impersonation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::Impersonation& Actor::impersonation() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.Actor.impersonation)
  return has_impersonation()
      ? *type_.impersonation_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::Impersonation*>(&::google::apps::drive::activity::v2::_Impersonation_default_instance_);
}
inline ::google::apps::drive::activity::v2::Impersonation* Actor::mutable_impersonation() {
  if (!has_impersonation()) {
    clear_type();
    set_has_impersonation();
    type_.impersonation_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::Impersonation >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.Actor.impersonation)
  return type_.impersonation_;
}

// .google.apps.drive.activity.v2.SystemEvent system = 4;
inline bool Actor::has_system() const {
  return type_case() == kSystem;
}
inline void Actor::set_has_system() {
  _oneof_case_[0] = kSystem;
}
inline void Actor::clear_system() {
  if (has_system()) {
    delete type_.system_;
    clear_has_type();
  }
}
inline ::google::apps::drive::activity::v2::SystemEvent* Actor::release_system() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.Actor.system)
  if (has_system()) {
    clear_has_type();
      ::google::apps::drive::activity::v2::SystemEvent* temp = type_.system_;
    type_.system_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::SystemEvent& Actor::system() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.Actor.system)
  return has_system()
      ? *type_.system_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::SystemEvent*>(&::google::apps::drive::activity::v2::_SystemEvent_default_instance_);
}
inline ::google::apps::drive::activity::v2::SystemEvent* Actor::mutable_system() {
  if (!has_system()) {
    clear_type();
    set_has_system();
    type_.system_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::SystemEvent >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.Actor.system)
  return type_.system_;
}

// .google.apps.drive.activity.v2.Administrator administrator = 5;
inline bool Actor::has_administrator() const {
  return type_case() == kAdministrator;
}
inline void Actor::set_has_administrator() {
  _oneof_case_[0] = kAdministrator;
}
inline void Actor::clear_administrator() {
  if (has_administrator()) {
    delete type_.administrator_;
    clear_has_type();
  }
}
inline ::google::apps::drive::activity::v2::Administrator* Actor::release_administrator() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.Actor.administrator)
  if (has_administrator()) {
    clear_has_type();
      ::google::apps::drive::activity::v2::Administrator* temp = type_.administrator_;
    type_.administrator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::Administrator& Actor::administrator() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.Actor.administrator)
  return has_administrator()
      ? *type_.administrator_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::Administrator*>(&::google::apps::drive::activity::v2::_Administrator_default_instance_);
}
inline ::google::apps::drive::activity::v2::Administrator* Actor::mutable_administrator() {
  if (!has_administrator()) {
    clear_type();
    set_has_administrator();
    type_.administrator_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::Administrator >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.Actor.administrator)
  return type_.administrator_;
}

inline bool Actor::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void Actor::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline Actor::TypeCase Actor::type_case() const {
  return Actor::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// User_KnownUser

// string person_name = 1;
inline void User_KnownUser::clear_person_name() {
  person_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User_KnownUser::person_name() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.User.KnownUser.person_name)
  return person_name_.GetNoArena();
}
inline void User_KnownUser::set_person_name(const ::std::string& value) {
  
  person_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.User.KnownUser.person_name)
}
#if LANG_CXX11
inline void User_KnownUser::set_person_name(::std::string&& value) {
  
  person_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.apps.drive.activity.v2.User.KnownUser.person_name)
}
#endif
inline void User_KnownUser::set_person_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  person_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.apps.drive.activity.v2.User.KnownUser.person_name)
}
inline void User_KnownUser::set_person_name(const char* value, size_t size) {
  
  person_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.apps.drive.activity.v2.User.KnownUser.person_name)
}
inline ::std::string* User_KnownUser::mutable_person_name() {
  
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.User.KnownUser.person_name)
  return person_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User_KnownUser::release_person_name() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.User.KnownUser.person_name)
  
  return person_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User_KnownUser::set_allocated_person_name(::std::string* person_name) {
  if (person_name != nullptr) {
    
  } else {
    
  }
  person_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), person_name);
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.User.KnownUser.person_name)
}

// bool is_current_user = 2;
inline void User_KnownUser::clear_is_current_user() {
  is_current_user_ = false;
}
inline bool User_KnownUser::is_current_user() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.User.KnownUser.is_current_user)
  return is_current_user_;
}
inline void User_KnownUser::set_is_current_user(bool value) {
  
  is_current_user_ = value;
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.User.KnownUser.is_current_user)
}

// -------------------------------------------------------------------

// User_DeletedUser

// -------------------------------------------------------------------

// User_UnknownUser

// -------------------------------------------------------------------

// User

// .google.apps.drive.activity.v2.User.KnownUser known_user = 2;
inline bool User::has_known_user() const {
  return type_case() == kKnownUser;
}
inline void User::set_has_known_user() {
  _oneof_case_[0] = kKnownUser;
}
inline void User::clear_known_user() {
  if (has_known_user()) {
    delete type_.known_user_;
    clear_has_type();
  }
}
inline ::google::apps::drive::activity::v2::User_KnownUser* User::release_known_user() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.User.known_user)
  if (has_known_user()) {
    clear_has_type();
      ::google::apps::drive::activity::v2::User_KnownUser* temp = type_.known_user_;
    type_.known_user_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::User_KnownUser& User::known_user() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.User.known_user)
  return has_known_user()
      ? *type_.known_user_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::User_KnownUser*>(&::google::apps::drive::activity::v2::_User_KnownUser_default_instance_);
}
inline ::google::apps::drive::activity::v2::User_KnownUser* User::mutable_known_user() {
  if (!has_known_user()) {
    clear_type();
    set_has_known_user();
    type_.known_user_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::User_KnownUser >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.User.known_user)
  return type_.known_user_;
}

// .google.apps.drive.activity.v2.User.DeletedUser deleted_user = 3;
inline bool User::has_deleted_user() const {
  return type_case() == kDeletedUser;
}
inline void User::set_has_deleted_user() {
  _oneof_case_[0] = kDeletedUser;
}
inline void User::clear_deleted_user() {
  if (has_deleted_user()) {
    delete type_.deleted_user_;
    clear_has_type();
  }
}
inline ::google::apps::drive::activity::v2::User_DeletedUser* User::release_deleted_user() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.User.deleted_user)
  if (has_deleted_user()) {
    clear_has_type();
      ::google::apps::drive::activity::v2::User_DeletedUser* temp = type_.deleted_user_;
    type_.deleted_user_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::User_DeletedUser& User::deleted_user() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.User.deleted_user)
  return has_deleted_user()
      ? *type_.deleted_user_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::User_DeletedUser*>(&::google::apps::drive::activity::v2::_User_DeletedUser_default_instance_);
}
inline ::google::apps::drive::activity::v2::User_DeletedUser* User::mutable_deleted_user() {
  if (!has_deleted_user()) {
    clear_type();
    set_has_deleted_user();
    type_.deleted_user_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::User_DeletedUser >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.User.deleted_user)
  return type_.deleted_user_;
}

// .google.apps.drive.activity.v2.User.UnknownUser unknown_user = 4;
inline bool User::has_unknown_user() const {
  return type_case() == kUnknownUser;
}
inline void User::set_has_unknown_user() {
  _oneof_case_[0] = kUnknownUser;
}
inline void User::clear_unknown_user() {
  if (has_unknown_user()) {
    delete type_.unknown_user_;
    clear_has_type();
  }
}
inline ::google::apps::drive::activity::v2::User_UnknownUser* User::release_unknown_user() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.User.unknown_user)
  if (has_unknown_user()) {
    clear_has_type();
      ::google::apps::drive::activity::v2::User_UnknownUser* temp = type_.unknown_user_;
    type_.unknown_user_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::apps::drive::activity::v2::User_UnknownUser& User::unknown_user() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.User.unknown_user)
  return has_unknown_user()
      ? *type_.unknown_user_
      : *reinterpret_cast< ::google::apps::drive::activity::v2::User_UnknownUser*>(&::google::apps::drive::activity::v2::_User_UnknownUser_default_instance_);
}
inline ::google::apps::drive::activity::v2::User_UnknownUser* User::mutable_unknown_user() {
  if (!has_unknown_user()) {
    clear_type();
    set_has_unknown_user();
    type_.unknown_user_ = CreateMaybeMessage< ::google::apps::drive::activity::v2::User_UnknownUser >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.User.unknown_user)
  return type_.unknown_user_;
}

inline bool User::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void User::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline User::TypeCase User::type_case() const {
  return User::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AnonymousUser

// -------------------------------------------------------------------

// Impersonation

// .google.apps.drive.activity.v2.User impersonated_user = 1;
inline bool Impersonation::has_impersonated_user() const {
  return this != internal_default_instance() && impersonated_user_ != nullptr;
}
inline void Impersonation::clear_impersonated_user() {
  if (GetArenaNoVirtual() == nullptr && impersonated_user_ != nullptr) {
    delete impersonated_user_;
  }
  impersonated_user_ = nullptr;
}
inline const ::google::apps::drive::activity::v2::User& Impersonation::impersonated_user() const {
  const ::google::apps::drive::activity::v2::User* p = impersonated_user_;
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.Impersonation.impersonated_user)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::apps::drive::activity::v2::User*>(
      &::google::apps::drive::activity::v2::_User_default_instance_);
}
inline ::google::apps::drive::activity::v2::User* Impersonation::release_impersonated_user() {
  // @@protoc_insertion_point(field_release:google.apps.drive.activity.v2.Impersonation.impersonated_user)
  
  ::google::apps::drive::activity::v2::User* temp = impersonated_user_;
  impersonated_user_ = nullptr;
  return temp;
}
inline ::google::apps::drive::activity::v2::User* Impersonation::mutable_impersonated_user() {
  
  if (impersonated_user_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::apps::drive::activity::v2::User>(GetArenaNoVirtual());
    impersonated_user_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.apps.drive.activity.v2.Impersonation.impersonated_user)
  return impersonated_user_;
}
inline void Impersonation::set_allocated_impersonated_user(::google::apps::drive::activity::v2::User* impersonated_user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete impersonated_user_;
  }
  if (impersonated_user) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      impersonated_user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, impersonated_user, submessage_arena);
    }
    
  } else {
    
  }
  impersonated_user_ = impersonated_user;
  // @@protoc_insertion_point(field_set_allocated:google.apps.drive.activity.v2.Impersonation.impersonated_user)
}

// -------------------------------------------------------------------

// SystemEvent

// .google.apps.drive.activity.v2.SystemEvent.Type type = 1;
inline void SystemEvent::clear_type() {
  type_ = 0;
}
inline ::google::apps::drive::activity::v2::SystemEvent_Type SystemEvent::type() const {
  // @@protoc_insertion_point(field_get:google.apps.drive.activity.v2.SystemEvent.type)
  return static_cast< ::google::apps::drive::activity::v2::SystemEvent_Type >(type_);
}
inline void SystemEvent::set_type(::google::apps::drive::activity::v2::SystemEvent_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.apps.drive.activity.v2.SystemEvent.type)
}

// -------------------------------------------------------------------

// Administrator

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace activity
}  // namespace drive
}  // namespace apps
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::apps::drive::activity::v2::SystemEvent_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::apps::drive::activity::v2::SystemEvent_Type>() {
  return ::google::apps::drive::activity::v2::SystemEvent_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fapps_2fdrive_2factivity_2fv2_2factor_2eproto
