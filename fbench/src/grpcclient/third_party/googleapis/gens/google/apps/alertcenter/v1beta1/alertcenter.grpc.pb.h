// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/apps/alertcenter/v1beta1/alertcenter.proto
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto__INCLUDED
#define GRPC_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto__INCLUDED

#include "google/apps/alertcenter/v1beta1/alertcenter.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace apps {
namespace alertcenter {
namespace v1beta1 {

// Google Workspace Alert Center API (beta).
class AlertCenterService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.apps.alertcenter.v1beta1.AlertCenterService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Lists the alerts.
    virtual ::grpc::Status ListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>> AsyncListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>>(AsyncListAlertsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>> PrepareAsyncListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>>(PrepareAsyncListAlertsRaw(context, request, cq));
    }
    // Gets the specified alert. Attempting to get a nonexistent alert returns
    // `NOT_FOUND` error.
    virtual ::grpc::Status GetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::google::apps::alertcenter::v1beta1::Alert* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>> AsyncGetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>>(AsyncGetAlertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>> PrepareAsyncGetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>>(PrepareAsyncGetAlertRaw(context, request, cq));
    }
    // Marks the specified alert for deletion. An alert that has been marked for
    // deletion is removed from Alert Center after 30 days.
    // Marking an alert for deletion has no effect on an alert which has
    // already been marked for deletion. Attempting to mark a nonexistent alert
    // for deletion results in a `NOT_FOUND` error.
    virtual ::grpc::Status DeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteAlertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteAlertRaw(context, request, cq));
    }
    // Restores, or "undeletes", an alert that was marked for deletion within the
    // past 30 days. Attempting to undelete an alert which was marked for deletion
    // over 30 days ago (which has been removed from the Alert Center database) or
    // a nonexistent alert returns a `NOT_FOUND` error. Attempting to
    // undelete an alert which has not been marked for deletion has no effect.
    virtual ::grpc::Status UndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::google::apps::alertcenter::v1beta1::Alert* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>> AsyncUndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>>(AsyncUndeleteAlertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>> PrepareAsyncUndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>>(PrepareAsyncUndeleteAlertRaw(context, request, cq));
    }
    // Creates new feedback for an alert. Attempting to create a feedback for
    // a non-existent alert returns `NOT_FOUND` error. Attempting to create a
    // feedback for an alert that is marked for deletion returns
    // `FAILED_PRECONDITION' error.
    virtual ::grpc::Status CreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::google::apps::alertcenter::v1beta1::AlertFeedback* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertFeedback>> AsyncCreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertFeedback>>(AsyncCreateAlertFeedbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertFeedback>> PrepareAsyncCreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertFeedback>>(PrepareAsyncCreateAlertFeedbackRaw(context, request, cq));
    }
    // Lists all the feedback for an alert. Attempting to list feedbacks for
    // a non-existent alert returns `NOT_FOUND` error.
    virtual ::grpc::Status ListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>> AsyncListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>>(AsyncListAlertFeedbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>> PrepareAsyncListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>>(PrepareAsyncListAlertFeedbackRaw(context, request, cq));
    }
    // Returns the metadata of an alert. Attempting to get metadata for
    // a non-existent alert returns `NOT_FOUND` error.
    virtual ::grpc::Status GetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::google::apps::alertcenter::v1beta1::AlertMetadata* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertMetadata>> AsyncGetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertMetadata>>(AsyncGetAlertMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertMetadata>> PrepareAsyncGetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertMetadata>>(PrepareAsyncGetAlertMetadataRaw(context, request, cq));
    }
    // Returns customer-level settings.
    virtual ::grpc::Status GetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::google::apps::alertcenter::v1beta1::Settings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>> AsyncGetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>>(AsyncGetSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>> PrepareAsyncGetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>>(PrepareAsyncGetSettingsRaw(context, request, cq));
    }
    // Updates the customer-level settings.
    virtual ::grpc::Status UpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::google::apps::alertcenter::v1beta1::Settings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>> AsyncUpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>>(AsyncUpdateSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>> PrepareAsyncUpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>>(PrepareAsyncUpdateSettingsRaw(context, request, cq));
    }
    // Performs batch delete operation on alerts.
    virtual ::grpc::Status BatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>> AsyncBatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>>(AsyncBatchDeleteAlertsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>> PrepareAsyncBatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>>(PrepareAsyncBatchDeleteAlertsRaw(context, request, cq));
    }
    // Performs batch undelete operation on alerts.
    virtual ::grpc::Status BatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>> AsyncBatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>>(AsyncBatchUndeleteAlertsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>> PrepareAsyncBatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>>(PrepareAsyncBatchUndeleteAlertsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Lists the alerts.
      virtual void ListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets the specified alert. Attempting to get a nonexistent alert returns
      // `NOT_FOUND` error.
      virtual void GetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Marks the specified alert for deletion. An alert that has been marked for
      // deletion is removed from Alert Center after 30 days.
      // Marking an alert for deletion has no effect on an alert which has
      // already been marked for deletion. Attempting to mark a nonexistent alert
      // for deletion results in a `NOT_FOUND` error.
      virtual void DeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Restores, or "undeletes", an alert that was marked for deletion within the
      // past 30 days. Attempting to undelete an alert which was marked for deletion
      // over 30 days ago (which has been removed from the Alert Center database) or
      // a nonexistent alert returns a `NOT_FOUND` error. Attempting to
      // undelete an alert which has not been marked for deletion has no effect.
      virtual void UndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates new feedback for an alert. Attempting to create a feedback for
      // a non-existent alert returns `NOT_FOUND` error. Attempting to create a
      // feedback for an alert that is marked for deletion returns
      // `FAILED_PRECONDITION' error.
      virtual void CreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::AlertFeedback* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::AlertFeedback* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists all the feedback for an alert. Attempting to list feedbacks for
      // a non-existent alert returns `NOT_FOUND` error.
      virtual void ListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns the metadata of an alert. Attempting to get metadata for
      // a non-existent alert returns `NOT_FOUND` error.
      virtual void GetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* request, ::google::apps::alertcenter::v1beta1::AlertMetadata* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* request, ::google::apps::alertcenter::v1beta1::AlertMetadata* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns customer-level settings.
      virtual void GetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates the customer-level settings.
      virtual void UpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Performs batch delete operation on alerts.
      virtual void BatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Performs batch undelete operation on alerts.
      virtual void BatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>* AsyncListAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>* PrepareAsyncListAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>* AsyncGetAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>* PrepareAsyncGetAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>* AsyncUndeleteAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Alert>* PrepareAsyncUndeleteAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertFeedback>* AsyncCreateAlertFeedbackRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertFeedback>* PrepareAsyncCreateAlertFeedbackRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>* AsyncListAlertFeedbackRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>* PrepareAsyncListAlertFeedbackRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertMetadata>* AsyncGetAlertMetadataRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::AlertMetadata>* PrepareAsyncGetAlertMetadataRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>* AsyncGetSettingsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>* PrepareAsyncGetSettingsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>* AsyncUpdateSettingsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::Settings>* PrepareAsyncUpdateSettingsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>* AsyncBatchDeleteAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>* PrepareAsyncBatchDeleteAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>* AsyncBatchUndeleteAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>* PrepareAsyncBatchUndeleteAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>> AsyncListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>>(AsyncListAlertsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>> PrepareAsyncListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>>(PrepareAsyncListAlertsRaw(context, request, cq));
    }
    ::grpc::Status GetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::google::apps::alertcenter::v1beta1::Alert* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>> AsyncGetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>>(AsyncGetAlertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>> PrepareAsyncGetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>>(PrepareAsyncGetAlertRaw(context, request, cq));
    }
    ::grpc::Status DeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteAlertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteAlertRaw(context, request, cq));
    }
    ::grpc::Status UndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::google::apps::alertcenter::v1beta1::Alert* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>> AsyncUndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>>(AsyncUndeleteAlertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>> PrepareAsyncUndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>>(PrepareAsyncUndeleteAlertRaw(context, request, cq));
    }
    ::grpc::Status CreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::google::apps::alertcenter::v1beta1::AlertFeedback* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertFeedback>> AsyncCreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertFeedback>>(AsyncCreateAlertFeedbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertFeedback>> PrepareAsyncCreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertFeedback>>(PrepareAsyncCreateAlertFeedbackRaw(context, request, cq));
    }
    ::grpc::Status ListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>> AsyncListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>>(AsyncListAlertFeedbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>> PrepareAsyncListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>>(PrepareAsyncListAlertFeedbackRaw(context, request, cq));
    }
    ::grpc::Status GetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::google::apps::alertcenter::v1beta1::AlertMetadata* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertMetadata>> AsyncGetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertMetadata>>(AsyncGetAlertMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertMetadata>> PrepareAsyncGetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertMetadata>>(PrepareAsyncGetAlertMetadataRaw(context, request, cq));
    }
    ::grpc::Status GetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::google::apps::alertcenter::v1beta1::Settings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>> AsyncGetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>>(AsyncGetSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>> PrepareAsyncGetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>>(PrepareAsyncGetSettingsRaw(context, request, cq));
    }
    ::grpc::Status UpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::google::apps::alertcenter::v1beta1::Settings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>> AsyncUpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>>(AsyncUpdateSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>> PrepareAsyncUpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>>(PrepareAsyncUpdateSettingsRaw(context, request, cq));
    }
    ::grpc::Status BatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>> AsyncBatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>>(AsyncBatchDeleteAlertsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>> PrepareAsyncBatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>>(PrepareAsyncBatchDeleteAlertsRaw(context, request, cq));
    }
    ::grpc::Status BatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>> AsyncBatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>>(AsyncBatchUndeleteAlertsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>> PrepareAsyncBatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>>(PrepareAsyncBatchUndeleteAlertsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response, std::function<void(::grpc::Status)>) override;
      void GetAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response, std::function<void(::grpc::Status)>) override;
      void UndeleteAlert(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::AlertFeedback* response, std::function<void(::grpc::Status)>) override;
      void CreateAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::AlertFeedback* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAlertFeedback(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* request, ::google::apps::alertcenter::v1beta1::AlertMetadata* response, std::function<void(::grpc::Status)>) override;
      void GetAlertMetadata(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* request, ::google::apps::alertcenter::v1beta1::AlertMetadata* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response, std::function<void(::grpc::Status)>) override;
      void GetSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response, std::function<void(::grpc::Status)>) override;
      void UpdateSettings(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* response, std::function<void(::grpc::Status)>) override;
      void BatchDeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* response, std::function<void(::grpc::Status)>) override;
      void BatchUndeleteAlerts(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>* AsyncListAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>* PrepareAsyncListAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>* AsyncGetAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>* PrepareAsyncGetAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>* AsyncUndeleteAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Alert>* PrepareAsyncUndeleteAlertRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertFeedback>* AsyncCreateAlertFeedbackRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertFeedback>* PrepareAsyncCreateAlertFeedbackRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>* AsyncListAlertFeedbackRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>* PrepareAsyncListAlertFeedbackRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertMetadata>* AsyncGetAlertMetadataRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::AlertMetadata>* PrepareAsyncGetAlertMetadataRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>* AsyncGetSettingsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>* PrepareAsyncGetSettingsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>* AsyncUpdateSettingsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::Settings>* PrepareAsyncUpdateSettingsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>* AsyncBatchDeleteAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>* PrepareAsyncBatchDeleteAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>* AsyncBatchUndeleteAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>* PrepareAsyncBatchUndeleteAlertsRaw(::grpc::ClientContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListAlerts_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAlert_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteAlert_;
    const ::grpc::internal::RpcMethod rpcmethod_UndeleteAlert_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateAlertFeedback_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAlertFeedback_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAlertMetadata_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_BatchDeleteAlerts_;
    const ::grpc::internal::RpcMethod rpcmethod_BatchUndeleteAlerts_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Lists the alerts.
    virtual ::grpc::Status ListAlerts(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* response);
    // Gets the specified alert. Attempting to get a nonexistent alert returns
    // `NOT_FOUND` error.
    virtual ::grpc::Status GetAlert(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response);
    // Marks the specified alert for deletion. An alert that has been marked for
    // deletion is removed from Alert Center after 30 days.
    // Marking an alert for deletion has no effect on an alert which has
    // already been marked for deletion. Attempting to mark a nonexistent alert
    // for deletion results in a `NOT_FOUND` error.
    virtual ::grpc::Status DeleteAlert(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* request, ::google::protobuf::Empty* response);
    // Restores, or "undeletes", an alert that was marked for deletion within the
    // past 30 days. Attempting to undelete an alert which was marked for deletion
    // over 30 days ago (which has been removed from the Alert Center database) or
    // a nonexistent alert returns a `NOT_FOUND` error. Attempting to
    // undelete an alert which has not been marked for deletion has no effect.
    virtual ::grpc::Status UndeleteAlert(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response);
    // Creates new feedback for an alert. Attempting to create a feedback for
    // a non-existent alert returns `NOT_FOUND` error. Attempting to create a
    // feedback for an alert that is marked for deletion returns
    // `FAILED_PRECONDITION' error.
    virtual ::grpc::Status CreateAlertFeedback(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::AlertFeedback* response);
    // Lists all the feedback for an alert. Attempting to list feedbacks for
    // a non-existent alert returns `NOT_FOUND` error.
    virtual ::grpc::Status ListAlertFeedback(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* response);
    // Returns the metadata of an alert. Attempting to get metadata for
    // a non-existent alert returns `NOT_FOUND` error.
    virtual ::grpc::Status GetAlertMetadata(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* request, ::google::apps::alertcenter::v1beta1::AlertMetadata* response);
    // Returns customer-level settings.
    virtual ::grpc::Status GetSettings(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response);
    // Updates the customer-level settings.
    virtual ::grpc::Status UpdateSettings(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response);
    // Performs batch delete operation on alerts.
    virtual ::grpc::Status BatchDeleteAlerts(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* response);
    // Performs batch undelete operation on alerts.
    virtual ::grpc::Status BatchUndeleteAlerts(::grpc::ServerContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListAlerts() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAlerts(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::ListAlertsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::ListAlertsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAlert() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAlert(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::GetAlertRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::Alert>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteAlert() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAlert(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UndeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UndeleteAlert() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UndeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UndeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUndeleteAlert(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::Alert>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateAlertFeedback() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CreateAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertFeedback* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAlertFeedback(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::AlertFeedback>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListAlertFeedback() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAlertFeedback(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAlertMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAlertMetadata() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetAlertMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlertMetadata(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAlertMetadata(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::AlertMetadata>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSettings() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSettings(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::GetSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::Settings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSettings() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_UpdateSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSettings(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::Settings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BatchDeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BatchDeleteAlerts() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_BatchDeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchDeleteAlerts(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BatchUndeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BatchUndeleteAlerts() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_BatchUndeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUndeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchUndeleteAlerts(::grpc::ServerContext* context, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListAlerts<WithAsyncMethod_GetAlert<WithAsyncMethod_DeleteAlert<WithAsyncMethod_UndeleteAlert<WithAsyncMethod_CreateAlertFeedback<WithAsyncMethod_ListAlertFeedback<WithAsyncMethod_GetAlertMetadata<WithAsyncMethod_GetSettings<WithAsyncMethod_UpdateSettings<WithAsyncMethod_BatchDeleteAlerts<WithAsyncMethod_BatchUndeleteAlerts<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ListAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListAlerts() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::ListAlertsRequest, ::google::apps::alertcenter::v1beta1::ListAlertsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* response) { return this->ListAlerts(context, request, response); }));}
    void SetMessageAllocatorFor_ListAlerts(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::ListAlertsRequest, ::google::apps::alertcenter::v1beta1::ListAlertsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::ListAlertsRequest, ::google::apps::alertcenter::v1beta1::ListAlertsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAlerts(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAlert() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::GetAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response) { return this->GetAlert(context, request, response); }));}
    void SetMessageAllocatorFor_GetAlert(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::GetAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::GetAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAlert(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteAlert() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::DeleteAlertRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* request, ::google::protobuf::Empty* response) { return this->DeleteAlert(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteAlert(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::DeleteAlertRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::DeleteAlertRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAlert(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UndeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UndeleteAlert() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* request, ::google::apps::alertcenter::v1beta1::Alert* response) { return this->UndeleteAlert(context, request, response); }));}
    void SetMessageAllocatorFor_UndeleteAlert(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UndeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UndeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UndeleteAlert(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateAlertFeedback() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::AlertFeedback>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::AlertFeedback* response) { return this->CreateAlertFeedback(context, request, response); }));}
    void SetMessageAllocatorFor_CreateAlertFeedback(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::AlertFeedback>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::AlertFeedback>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertFeedback* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAlertFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertFeedback* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListAlertFeedback() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* request, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* response) { return this->ListAlertFeedback(context, request, response); }));}
    void SetMessageAllocatorFor_ListAlertFeedback(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAlertFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAlertMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAlertMetadata() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest, ::google::apps::alertcenter::v1beta1::AlertMetadata>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* request, ::google::apps::alertcenter::v1beta1::AlertMetadata* response) { return this->GetAlertMetadata(context, request, response); }));}
    void SetMessageAllocatorFor_GetAlertMetadata(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest, ::google::apps::alertcenter::v1beta1::AlertMetadata>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest, ::google::apps::alertcenter::v1beta1::AlertMetadata>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAlertMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlertMetadata(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAlertMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertMetadata* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSettings() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::GetSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response) { return this->GetSettings(context, request, response); }));}
    void SetMessageAllocatorFor_GetSettings(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::GetSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::GetSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSettings() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* request, ::google::apps::alertcenter::v1beta1::Settings* response) { return this->UpdateSettings(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSettings(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BatchDeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BatchDeleteAlerts() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* response) { return this->BatchDeleteAlerts(context, request, response); }));}
    void SetMessageAllocatorFor_BatchDeleteAlerts(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BatchDeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchDeleteAlerts(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BatchUndeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BatchUndeleteAlerts() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* request, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* response) { return this->BatchUndeleteAlerts(context, request, response); }));}
    void SetMessageAllocatorFor_BatchUndeleteAlerts(
        ::grpc::MessageAllocator< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BatchUndeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUndeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchUndeleteAlerts(
      ::grpc::CallbackServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ListAlerts<WithCallbackMethod_GetAlert<WithCallbackMethod_DeleteAlert<WithCallbackMethod_UndeleteAlert<WithCallbackMethod_CreateAlertFeedback<WithCallbackMethod_ListAlertFeedback<WithCallbackMethod_GetAlertMetadata<WithCallbackMethod_GetSettings<WithCallbackMethod_UpdateSettings<WithCallbackMethod_BatchDeleteAlerts<WithCallbackMethod_BatchUndeleteAlerts<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ListAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListAlerts() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAlert() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteAlert() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UndeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UndeleteAlert() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UndeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UndeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateAlertFeedback() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CreateAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertFeedback* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListAlertFeedback() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAlertMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAlertMetadata() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetAlertMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlertMetadata(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSettings() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSettings() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_UpdateSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BatchDeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BatchDeleteAlerts() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_BatchDeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BatchUndeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BatchUndeleteAlerts() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_BatchUndeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUndeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListAlerts() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ListAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAlerts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAlert() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAlert(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteAlert() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAlert(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UndeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UndeleteAlert() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UndeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UndeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUndeleteAlert(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateAlertFeedback() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_CreateAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertFeedback* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAlertFeedback(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListAlertFeedback() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAlertFeedback(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAlertMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAlertMetadata() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetAlertMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlertMetadata(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAlertMetadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSettings() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSettings() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_UpdateSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BatchDeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BatchDeleteAlerts() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_BatchDeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchDeleteAlerts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BatchUndeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BatchUndeleteAlerts() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_BatchUndeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUndeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchUndeleteAlerts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListAlerts() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListAlerts(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAlerts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAlert() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAlert(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAlert(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteAlert() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteAlert(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAlert(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UndeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UndeleteAlert() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UndeleteAlert(context, request, response); }));
    }
    ~WithRawCallbackMethod_UndeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UndeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UndeleteAlert(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateAlertFeedback() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateAlertFeedback(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertFeedback* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAlertFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListAlertFeedback() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListAlertFeedback(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAlertFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAlertMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAlertMetadata() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAlertMetadata(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAlertMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAlertMetadata(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAlertMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSettings() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSettings() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BatchDeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BatchDeleteAlerts() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BatchDeleteAlerts(context, request, response); }));
    }
    ~WithRawCallbackMethod_BatchDeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchDeleteAlerts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BatchUndeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BatchUndeleteAlerts() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BatchUndeleteAlerts(context, request, response); }));
    }
    ~WithRawCallbackMethod_BatchUndeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUndeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchUndeleteAlerts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListAlerts() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::ListAlertsRequest, ::google::apps::alertcenter::v1beta1::ListAlertsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::ListAlertsRequest, ::google::apps::alertcenter::v1beta1::ListAlertsResponse>* streamer) {
                       return this->StreamedListAlerts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAlerts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::ListAlertsRequest,::google::apps::alertcenter::v1beta1::ListAlertsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAlert() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::GetAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::GetAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>* streamer) {
                       return this->StreamedGetAlert(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAlert(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::GetAlertRequest,::google::apps::alertcenter::v1beta1::Alert>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteAlert() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::DeleteAlertRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::DeleteAlertRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteAlert(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::DeleteAlertRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteAlert(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::DeleteAlertRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UndeleteAlert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UndeleteAlert() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest, ::google::apps::alertcenter::v1beta1::Alert>* streamer) {
                       return this->StreamedUndeleteAlert(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UndeleteAlert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UndeleteAlert(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Alert* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUndeleteAlert(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::UndeleteAlertRequest,::google::apps::alertcenter::v1beta1::Alert>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateAlertFeedback() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::AlertFeedback>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::AlertFeedback>* streamer) {
                       return this->StreamedCreateAlertFeedback(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertFeedback* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateAlertFeedback(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::CreateAlertFeedbackRequest,::google::apps::alertcenter::v1beta1::AlertFeedback>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAlertFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListAlertFeedback() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>* streamer) {
                       return this->StreamedListAlertFeedback(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListAlertFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAlertFeedback(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest* /*request*/, ::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAlertFeedback(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::ListAlertFeedbackRequest,::google::apps::alertcenter::v1beta1::ListAlertFeedbackResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAlertMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAlertMetadata() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest, ::google::apps::alertcenter::v1beta1::AlertMetadata>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest, ::google::apps::alertcenter::v1beta1::AlertMetadata>* streamer) {
                       return this->StreamedGetAlertMetadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAlertMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAlertMetadata(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest* /*request*/, ::google::apps::alertcenter::v1beta1::AlertMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAlertMetadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::GetAlertMetadataRequest,::google::apps::alertcenter::v1beta1::AlertMetadata>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSettings() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::GetSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::GetSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>* streamer) {
                       return this->StreamedGetSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::GetSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::GetSettingsRequest,::google::apps::alertcenter::v1beta1::Settings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSettings() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest, ::google::apps::alertcenter::v1beta1::Settings>* streamer) {
                       return this->StreamedUpdateSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSettings(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::Settings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::UpdateSettingsRequest,::google::apps::alertcenter::v1beta1::Settings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BatchDeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BatchDeleteAlerts() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>* streamer) {
                       return this->StreamedBatchDeleteAlerts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BatchDeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BatchDeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBatchDeleteAlerts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::BatchDeleteAlertsRequest,::google::apps::alertcenter::v1beta1::BatchDeleteAlertsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BatchUndeleteAlerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BatchUndeleteAlerts() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>* streamer) {
                       return this->StreamedBatchUndeleteAlerts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BatchUndeleteAlerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BatchUndeleteAlerts(::grpc::ServerContext* /*context*/, const ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest* /*request*/, ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBatchUndeleteAlerts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsRequest,::google::apps::alertcenter::v1beta1::BatchUndeleteAlertsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ListAlerts<WithStreamedUnaryMethod_GetAlert<WithStreamedUnaryMethod_DeleteAlert<WithStreamedUnaryMethod_UndeleteAlert<WithStreamedUnaryMethod_CreateAlertFeedback<WithStreamedUnaryMethod_ListAlertFeedback<WithStreamedUnaryMethod_GetAlertMetadata<WithStreamedUnaryMethod_GetSettings<WithStreamedUnaryMethod_UpdateSettings<WithStreamedUnaryMethod_BatchDeleteAlerts<WithStreamedUnaryMethod_BatchUndeleteAlerts<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ListAlerts<WithStreamedUnaryMethod_GetAlert<WithStreamedUnaryMethod_DeleteAlert<WithStreamedUnaryMethod_UndeleteAlert<WithStreamedUnaryMethod_CreateAlertFeedback<WithStreamedUnaryMethod_ListAlertFeedback<WithStreamedUnaryMethod_GetAlertMetadata<WithStreamedUnaryMethod_GetSettings<WithStreamedUnaryMethod_UpdateSettings<WithStreamedUnaryMethod_BatchDeleteAlerts<WithStreamedUnaryMethod_BatchUndeleteAlerts<Service > > > > > > > > > > > StreamedService;
};

}  // namespace v1beta1
}  // namespace alertcenter
}  // namespace apps
}  // namespace google


#endif  // GRPC_google_2fapps_2falertcenter_2fv1beta1_2falertcenter_2eproto__INCLUDED
