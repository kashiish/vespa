// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storage/v1/storage_resources.proto

#ifndef PROTOBUF_INCLUDED_google_2fstorage_2fv1_2fstorage_5fresources_2eproto
#define PROTOBUF_INCLUDED_google_2fstorage_2fv1_2fstorage_5fresources_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fstorage_2fv1_2fstorage_5fresources_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[39]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fstorage_2fv1_2fstorage_5fresources_2eproto();
namespace google {
namespace storage {
namespace v1 {
class Bucket;
class BucketDefaultTypeInternal;
extern BucketDefaultTypeInternal _Bucket_default_instance_;
class BucketAccessControl;
class BucketAccessControlDefaultTypeInternal;
extern BucketAccessControlDefaultTypeInternal _BucketAccessControl_default_instance_;
class Bucket_Billing;
class Bucket_BillingDefaultTypeInternal;
extern Bucket_BillingDefaultTypeInternal _Bucket_Billing_default_instance_;
class Bucket_Cors;
class Bucket_CorsDefaultTypeInternal;
extern Bucket_CorsDefaultTypeInternal _Bucket_Cors_default_instance_;
class Bucket_Encryption;
class Bucket_EncryptionDefaultTypeInternal;
extern Bucket_EncryptionDefaultTypeInternal _Bucket_Encryption_default_instance_;
class Bucket_IamConfiguration;
class Bucket_IamConfigurationDefaultTypeInternal;
extern Bucket_IamConfigurationDefaultTypeInternal _Bucket_IamConfiguration_default_instance_;
class Bucket_IamConfiguration_UniformBucketLevelAccess;
class Bucket_IamConfiguration_UniformBucketLevelAccessDefaultTypeInternal;
extern Bucket_IamConfiguration_UniformBucketLevelAccessDefaultTypeInternal _Bucket_IamConfiguration_UniformBucketLevelAccess_default_instance_;
class Bucket_LabelsEntry_DoNotUse;
class Bucket_LabelsEntry_DoNotUseDefaultTypeInternal;
extern Bucket_LabelsEntry_DoNotUseDefaultTypeInternal _Bucket_LabelsEntry_DoNotUse_default_instance_;
class Bucket_Lifecycle;
class Bucket_LifecycleDefaultTypeInternal;
extern Bucket_LifecycleDefaultTypeInternal _Bucket_Lifecycle_default_instance_;
class Bucket_Lifecycle_Rule;
class Bucket_Lifecycle_RuleDefaultTypeInternal;
extern Bucket_Lifecycle_RuleDefaultTypeInternal _Bucket_Lifecycle_Rule_default_instance_;
class Bucket_Lifecycle_Rule_Action;
class Bucket_Lifecycle_Rule_ActionDefaultTypeInternal;
extern Bucket_Lifecycle_Rule_ActionDefaultTypeInternal _Bucket_Lifecycle_Rule_Action_default_instance_;
class Bucket_Lifecycle_Rule_Condition;
class Bucket_Lifecycle_Rule_ConditionDefaultTypeInternal;
extern Bucket_Lifecycle_Rule_ConditionDefaultTypeInternal _Bucket_Lifecycle_Rule_Condition_default_instance_;
class Bucket_Logging;
class Bucket_LoggingDefaultTypeInternal;
extern Bucket_LoggingDefaultTypeInternal _Bucket_Logging_default_instance_;
class Bucket_RetentionPolicy;
class Bucket_RetentionPolicyDefaultTypeInternal;
extern Bucket_RetentionPolicyDefaultTypeInternal _Bucket_RetentionPolicy_default_instance_;
class Bucket_Versioning;
class Bucket_VersioningDefaultTypeInternal;
extern Bucket_VersioningDefaultTypeInternal _Bucket_Versioning_default_instance_;
class Bucket_Website;
class Bucket_WebsiteDefaultTypeInternal;
extern Bucket_WebsiteDefaultTypeInternal _Bucket_Website_default_instance_;
class Channel;
class ChannelDefaultTypeInternal;
extern ChannelDefaultTypeInternal _Channel_default_instance_;
class Channel_ParamsEntry_DoNotUse;
class Channel_ParamsEntry_DoNotUseDefaultTypeInternal;
extern Channel_ParamsEntry_DoNotUseDefaultTypeInternal _Channel_ParamsEntry_DoNotUse_default_instance_;
class ChecksummedData;
class ChecksummedDataDefaultTypeInternal;
extern ChecksummedDataDefaultTypeInternal _ChecksummedData_default_instance_;
class CommonEnums;
class CommonEnumsDefaultTypeInternal;
extern CommonEnumsDefaultTypeInternal _CommonEnums_default_instance_;
class ContentRange;
class ContentRangeDefaultTypeInternal;
extern ContentRangeDefaultTypeInternal _ContentRange_default_instance_;
class HmacKeyMetadata;
class HmacKeyMetadataDefaultTypeInternal;
extern HmacKeyMetadataDefaultTypeInternal _HmacKeyMetadata_default_instance_;
class ListBucketAccessControlsResponse;
class ListBucketAccessControlsResponseDefaultTypeInternal;
extern ListBucketAccessControlsResponseDefaultTypeInternal _ListBucketAccessControlsResponse_default_instance_;
class ListBucketsResponse;
class ListBucketsResponseDefaultTypeInternal;
extern ListBucketsResponseDefaultTypeInternal _ListBucketsResponse_default_instance_;
class ListChannelsResponse;
class ListChannelsResponseDefaultTypeInternal;
extern ListChannelsResponseDefaultTypeInternal _ListChannelsResponse_default_instance_;
class ListChannelsResponse_Items;
class ListChannelsResponse_ItemsDefaultTypeInternal;
extern ListChannelsResponse_ItemsDefaultTypeInternal _ListChannelsResponse_Items_default_instance_;
class ListNotificationsResponse;
class ListNotificationsResponseDefaultTypeInternal;
extern ListNotificationsResponseDefaultTypeInternal _ListNotificationsResponse_default_instance_;
class ListObjectAccessControlsResponse;
class ListObjectAccessControlsResponseDefaultTypeInternal;
extern ListObjectAccessControlsResponseDefaultTypeInternal _ListObjectAccessControlsResponse_default_instance_;
class ListObjectsResponse;
class ListObjectsResponseDefaultTypeInternal;
extern ListObjectsResponseDefaultTypeInternal _ListObjectsResponse_default_instance_;
class Notification;
class NotificationDefaultTypeInternal;
extern NotificationDefaultTypeInternal _Notification_default_instance_;
class Notification_CustomAttributesEntry_DoNotUse;
class Notification_CustomAttributesEntry_DoNotUseDefaultTypeInternal;
extern Notification_CustomAttributesEntry_DoNotUseDefaultTypeInternal _Notification_CustomAttributesEntry_DoNotUse_default_instance_;
class Object;
class ObjectDefaultTypeInternal;
extern ObjectDefaultTypeInternal _Object_default_instance_;
class ObjectAccessControl;
class ObjectAccessControlDefaultTypeInternal;
extern ObjectAccessControlDefaultTypeInternal _ObjectAccessControl_default_instance_;
class ObjectChecksums;
class ObjectChecksumsDefaultTypeInternal;
extern ObjectChecksumsDefaultTypeInternal _ObjectChecksums_default_instance_;
class Object_CustomerEncryption;
class Object_CustomerEncryptionDefaultTypeInternal;
extern Object_CustomerEncryptionDefaultTypeInternal _Object_CustomerEncryption_default_instance_;
class Object_MetadataEntry_DoNotUse;
class Object_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Object_MetadataEntry_DoNotUseDefaultTypeInternal _Object_MetadataEntry_DoNotUse_default_instance_;
class Owner;
class OwnerDefaultTypeInternal;
extern OwnerDefaultTypeInternal _Owner_default_instance_;
class ProjectTeam;
class ProjectTeamDefaultTypeInternal;
extern ProjectTeamDefaultTypeInternal _ProjectTeam_default_instance_;
class ServiceAccount;
class ServiceAccountDefaultTypeInternal;
extern ServiceAccountDefaultTypeInternal _ServiceAccount_default_instance_;
}  // namespace v1
}  // namespace storage
namespace protobuf {
template<> ::google::storage::v1::Bucket* Arena::CreateMaybeMessage<::google::storage::v1::Bucket>(Arena*);
template<> ::google::storage::v1::BucketAccessControl* Arena::CreateMaybeMessage<::google::storage::v1::BucketAccessControl>(Arena*);
template<> ::google::storage::v1::Bucket_Billing* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Billing>(Arena*);
template<> ::google::storage::v1::Bucket_Cors* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Cors>(Arena*);
template<> ::google::storage::v1::Bucket_Encryption* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Encryption>(Arena*);
template<> ::google::storage::v1::Bucket_IamConfiguration* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_IamConfiguration>(Arena*);
template<> ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess>(Arena*);
template<> ::google::storage::v1::Bucket_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_LabelsEntry_DoNotUse>(Arena*);
template<> ::google::storage::v1::Bucket_Lifecycle* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Lifecycle>(Arena*);
template<> ::google::storage::v1::Bucket_Lifecycle_Rule* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Lifecycle_Rule>(Arena*);
template<> ::google::storage::v1::Bucket_Lifecycle_Rule_Action* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Lifecycle_Rule_Action>(Arena*);
template<> ::google::storage::v1::Bucket_Lifecycle_Rule_Condition* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Lifecycle_Rule_Condition>(Arena*);
template<> ::google::storage::v1::Bucket_Logging* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Logging>(Arena*);
template<> ::google::storage::v1::Bucket_RetentionPolicy* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_RetentionPolicy>(Arena*);
template<> ::google::storage::v1::Bucket_Versioning* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Versioning>(Arena*);
template<> ::google::storage::v1::Bucket_Website* Arena::CreateMaybeMessage<::google::storage::v1::Bucket_Website>(Arena*);
template<> ::google::storage::v1::Channel* Arena::CreateMaybeMessage<::google::storage::v1::Channel>(Arena*);
template<> ::google::storage::v1::Channel_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::storage::v1::Channel_ParamsEntry_DoNotUse>(Arena*);
template<> ::google::storage::v1::ChecksummedData* Arena::CreateMaybeMessage<::google::storage::v1::ChecksummedData>(Arena*);
template<> ::google::storage::v1::CommonEnums* Arena::CreateMaybeMessage<::google::storage::v1::CommonEnums>(Arena*);
template<> ::google::storage::v1::ContentRange* Arena::CreateMaybeMessage<::google::storage::v1::ContentRange>(Arena*);
template<> ::google::storage::v1::HmacKeyMetadata* Arena::CreateMaybeMessage<::google::storage::v1::HmacKeyMetadata>(Arena*);
template<> ::google::storage::v1::ListBucketAccessControlsResponse* Arena::CreateMaybeMessage<::google::storage::v1::ListBucketAccessControlsResponse>(Arena*);
template<> ::google::storage::v1::ListBucketsResponse* Arena::CreateMaybeMessage<::google::storage::v1::ListBucketsResponse>(Arena*);
template<> ::google::storage::v1::ListChannelsResponse* Arena::CreateMaybeMessage<::google::storage::v1::ListChannelsResponse>(Arena*);
template<> ::google::storage::v1::ListChannelsResponse_Items* Arena::CreateMaybeMessage<::google::storage::v1::ListChannelsResponse_Items>(Arena*);
template<> ::google::storage::v1::ListNotificationsResponse* Arena::CreateMaybeMessage<::google::storage::v1::ListNotificationsResponse>(Arena*);
template<> ::google::storage::v1::ListObjectAccessControlsResponse* Arena::CreateMaybeMessage<::google::storage::v1::ListObjectAccessControlsResponse>(Arena*);
template<> ::google::storage::v1::ListObjectsResponse* Arena::CreateMaybeMessage<::google::storage::v1::ListObjectsResponse>(Arena*);
template<> ::google::storage::v1::Notification* Arena::CreateMaybeMessage<::google::storage::v1::Notification>(Arena*);
template<> ::google::storage::v1::Notification_CustomAttributesEntry_DoNotUse* Arena::CreateMaybeMessage<::google::storage::v1::Notification_CustomAttributesEntry_DoNotUse>(Arena*);
template<> ::google::storage::v1::Object* Arena::CreateMaybeMessage<::google::storage::v1::Object>(Arena*);
template<> ::google::storage::v1::ObjectAccessControl* Arena::CreateMaybeMessage<::google::storage::v1::ObjectAccessControl>(Arena*);
template<> ::google::storage::v1::ObjectChecksums* Arena::CreateMaybeMessage<::google::storage::v1::ObjectChecksums>(Arena*);
template<> ::google::storage::v1::Object_CustomerEncryption* Arena::CreateMaybeMessage<::google::storage::v1::Object_CustomerEncryption>(Arena*);
template<> ::google::storage::v1::Object_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::google::storage::v1::Object_MetadataEntry_DoNotUse>(Arena*);
template<> ::google::storage::v1::Owner* Arena::CreateMaybeMessage<::google::storage::v1::Owner>(Arena*);
template<> ::google::storage::v1::ProjectTeam* Arena::CreateMaybeMessage<::google::storage::v1::ProjectTeam>(Arena*);
template<> ::google::storage::v1::ServiceAccount* Arena::CreateMaybeMessage<::google::storage::v1::ServiceAccount>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace storage {
namespace v1 {

enum CommonEnums_Projection {
  CommonEnums_Projection_PROJECTION_UNSPECIFIED = 0,
  CommonEnums_Projection_NO_ACL = 1,
  CommonEnums_Projection_FULL = 2,
  CommonEnums_Projection_CommonEnums_Projection_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  CommonEnums_Projection_CommonEnums_Projection_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool CommonEnums_Projection_IsValid(int value);
const CommonEnums_Projection CommonEnums_Projection_Projection_MIN = CommonEnums_Projection_PROJECTION_UNSPECIFIED;
const CommonEnums_Projection CommonEnums_Projection_Projection_MAX = CommonEnums_Projection_FULL;
const int CommonEnums_Projection_Projection_ARRAYSIZE = CommonEnums_Projection_Projection_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonEnums_Projection_descriptor();
inline const ::std::string& CommonEnums_Projection_Name(CommonEnums_Projection value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonEnums_Projection_descriptor(), value);
}
inline bool CommonEnums_Projection_Parse(
    const ::std::string& name, CommonEnums_Projection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonEnums_Projection>(
    CommonEnums_Projection_descriptor(), name, value);
}
enum CommonEnums_PredefinedBucketAcl {
  CommonEnums_PredefinedBucketAcl_PREDEFINED_BUCKET_ACL_UNSPECIFIED = 0,
  CommonEnums_PredefinedBucketAcl_BUCKET_ACL_AUTHENTICATED_READ = 1,
  CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PRIVATE = 2,
  CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PROJECT_PRIVATE = 3,
  CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PUBLIC_READ = 4,
  CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PUBLIC_READ_WRITE = 5,
  CommonEnums_PredefinedBucketAcl_CommonEnums_PredefinedBucketAcl_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  CommonEnums_PredefinedBucketAcl_CommonEnums_PredefinedBucketAcl_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool CommonEnums_PredefinedBucketAcl_IsValid(int value);
const CommonEnums_PredefinedBucketAcl CommonEnums_PredefinedBucketAcl_PredefinedBucketAcl_MIN = CommonEnums_PredefinedBucketAcl_PREDEFINED_BUCKET_ACL_UNSPECIFIED;
const CommonEnums_PredefinedBucketAcl CommonEnums_PredefinedBucketAcl_PredefinedBucketAcl_MAX = CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PUBLIC_READ_WRITE;
const int CommonEnums_PredefinedBucketAcl_PredefinedBucketAcl_ARRAYSIZE = CommonEnums_PredefinedBucketAcl_PredefinedBucketAcl_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonEnums_PredefinedBucketAcl_descriptor();
inline const ::std::string& CommonEnums_PredefinedBucketAcl_Name(CommonEnums_PredefinedBucketAcl value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonEnums_PredefinedBucketAcl_descriptor(), value);
}
inline bool CommonEnums_PredefinedBucketAcl_Parse(
    const ::std::string& name, CommonEnums_PredefinedBucketAcl* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonEnums_PredefinedBucketAcl>(
    CommonEnums_PredefinedBucketAcl_descriptor(), name, value);
}
enum CommonEnums_PredefinedObjectAcl {
  CommonEnums_PredefinedObjectAcl_PREDEFINED_OBJECT_ACL_UNSPECIFIED = 0,
  CommonEnums_PredefinedObjectAcl_OBJECT_ACL_AUTHENTICATED_READ = 1,
  CommonEnums_PredefinedObjectAcl_OBJECT_ACL_BUCKET_OWNER_FULL_CONTROL = 2,
  CommonEnums_PredefinedObjectAcl_OBJECT_ACL_BUCKET_OWNER_READ = 3,
  CommonEnums_PredefinedObjectAcl_OBJECT_ACL_PRIVATE = 4,
  CommonEnums_PredefinedObjectAcl_OBJECT_ACL_PROJECT_PRIVATE = 5,
  CommonEnums_PredefinedObjectAcl_OBJECT_ACL_PUBLIC_READ = 6,
  CommonEnums_PredefinedObjectAcl_CommonEnums_PredefinedObjectAcl_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  CommonEnums_PredefinedObjectAcl_CommonEnums_PredefinedObjectAcl_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool CommonEnums_PredefinedObjectAcl_IsValid(int value);
const CommonEnums_PredefinedObjectAcl CommonEnums_PredefinedObjectAcl_PredefinedObjectAcl_MIN = CommonEnums_PredefinedObjectAcl_PREDEFINED_OBJECT_ACL_UNSPECIFIED;
const CommonEnums_PredefinedObjectAcl CommonEnums_PredefinedObjectAcl_PredefinedObjectAcl_MAX = CommonEnums_PredefinedObjectAcl_OBJECT_ACL_PUBLIC_READ;
const int CommonEnums_PredefinedObjectAcl_PredefinedObjectAcl_ARRAYSIZE = CommonEnums_PredefinedObjectAcl_PredefinedObjectAcl_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonEnums_PredefinedObjectAcl_descriptor();
inline const ::std::string& CommonEnums_PredefinedObjectAcl_Name(CommonEnums_PredefinedObjectAcl value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonEnums_PredefinedObjectAcl_descriptor(), value);
}
inline bool CommonEnums_PredefinedObjectAcl_Parse(
    const ::std::string& name, CommonEnums_PredefinedObjectAcl* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonEnums_PredefinedObjectAcl>(
    CommonEnums_PredefinedObjectAcl_descriptor(), name, value);
}
// ===================================================================

class Bucket_Billing final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Billing) */ {
 public:
  Bucket_Billing();
  virtual ~Bucket_Billing();

  Bucket_Billing(const Bucket_Billing& from);

  inline Bucket_Billing& operator=(const Bucket_Billing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Billing(Bucket_Billing&& from) noexcept
    : Bucket_Billing() {
    *this = ::std::move(from);
  }

  inline Bucket_Billing& operator=(Bucket_Billing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Billing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Billing* internal_default_instance() {
    return reinterpret_cast<const Bucket_Billing*>(
               &_Bucket_Billing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Bucket_Billing* other);
  friend void swap(Bucket_Billing& a, Bucket_Billing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Billing* New() const final {
    return CreateMaybeMessage<Bucket_Billing>(nullptr);
  }

  Bucket_Billing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Billing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Billing& from);
  void MergeFrom(const Bucket_Billing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Billing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool requester_pays = 1;
  void clear_requester_pays();
  static const int kRequesterPaysFieldNumber = 1;
  bool requester_pays() const;
  void set_requester_pays(bool value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Billing)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool requester_pays_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Cors final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Cors) */ {
 public:
  Bucket_Cors();
  virtual ~Bucket_Cors();

  Bucket_Cors(const Bucket_Cors& from);

  inline Bucket_Cors& operator=(const Bucket_Cors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Cors(Bucket_Cors&& from) noexcept
    : Bucket_Cors() {
    *this = ::std::move(from);
  }

  inline Bucket_Cors& operator=(Bucket_Cors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Cors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Cors* internal_default_instance() {
    return reinterpret_cast<const Bucket_Cors*>(
               &_Bucket_Cors_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Bucket_Cors* other);
  friend void swap(Bucket_Cors& a, Bucket_Cors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Cors* New() const final {
    return CreateMaybeMessage<Bucket_Cors>(nullptr);
  }

  Bucket_Cors* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Cors>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Cors& from);
  void MergeFrom(const Bucket_Cors& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Cors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string origin = 1;
  int origin_size() const;
  void clear_origin();
  static const int kOriginFieldNumber = 1;
  const ::std::string& origin(int index) const;
  ::std::string* mutable_origin(int index);
  void set_origin(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_origin(int index, ::std::string&& value);
  #endif
  void set_origin(int index, const char* value);
  void set_origin(int index, const char* value, size_t size);
  ::std::string* add_origin();
  void add_origin(const ::std::string& value);
  #if LANG_CXX11
  void add_origin(::std::string&& value);
  #endif
  void add_origin(const char* value);
  void add_origin(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& origin() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_origin();

  // repeated string method = 2;
  int method_size() const;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method(int index) const;
  ::std::string* mutable_method(int index);
  void set_method(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_method(int index, ::std::string&& value);
  #endif
  void set_method(int index, const char* value);
  void set_method(int index, const char* value, size_t size);
  ::std::string* add_method();
  void add_method(const ::std::string& value);
  #if LANG_CXX11
  void add_method(::std::string&& value);
  #endif
  void add_method(const char* value);
  void add_method(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& method() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_method();

  // repeated string response_header = 3;
  int response_header_size() const;
  void clear_response_header();
  static const int kResponseHeaderFieldNumber = 3;
  const ::std::string& response_header(int index) const;
  ::std::string* mutable_response_header(int index);
  void set_response_header(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_response_header(int index, ::std::string&& value);
  #endif
  void set_response_header(int index, const char* value);
  void set_response_header(int index, const char* value, size_t size);
  ::std::string* add_response_header();
  void add_response_header(const ::std::string& value);
  #if LANG_CXX11
  void add_response_header(::std::string&& value);
  #endif
  void add_response_header(const char* value);
  void add_response_header(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& response_header() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_response_header();

  // int32 max_age_seconds = 4;
  void clear_max_age_seconds();
  static const int kMaxAgeSecondsFieldNumber = 4;
  ::google::protobuf::int32 max_age_seconds() const;
  void set_max_age_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Cors)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> origin_;
  ::google::protobuf::RepeatedPtrField<::std::string> method_;
  ::google::protobuf::RepeatedPtrField<::std::string> response_header_;
  ::google::protobuf::int32 max_age_seconds_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Encryption final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Encryption) */ {
 public:
  Bucket_Encryption();
  virtual ~Bucket_Encryption();

  Bucket_Encryption(const Bucket_Encryption& from);

  inline Bucket_Encryption& operator=(const Bucket_Encryption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Encryption(Bucket_Encryption&& from) noexcept
    : Bucket_Encryption() {
    *this = ::std::move(from);
  }

  inline Bucket_Encryption& operator=(Bucket_Encryption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Encryption& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Encryption* internal_default_instance() {
    return reinterpret_cast<const Bucket_Encryption*>(
               &_Bucket_Encryption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Bucket_Encryption* other);
  friend void swap(Bucket_Encryption& a, Bucket_Encryption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Encryption* New() const final {
    return CreateMaybeMessage<Bucket_Encryption>(nullptr);
  }

  Bucket_Encryption* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Encryption>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Encryption& from);
  void MergeFrom(const Bucket_Encryption& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Encryption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string default_kms_key_name = 1;
  void clear_default_kms_key_name();
  static const int kDefaultKmsKeyNameFieldNumber = 1;
  const ::std::string& default_kms_key_name() const;
  void set_default_kms_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_default_kms_key_name(::std::string&& value);
  #endif
  void set_default_kms_key_name(const char* value);
  void set_default_kms_key_name(const char* value, size_t size);
  ::std::string* mutable_default_kms_key_name();
  ::std::string* release_default_kms_key_name();
  void set_allocated_default_kms_key_name(::std::string* default_kms_key_name);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Encryption)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr default_kms_key_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_IamConfiguration_UniformBucketLevelAccess final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess) */ {
 public:
  Bucket_IamConfiguration_UniformBucketLevelAccess();
  virtual ~Bucket_IamConfiguration_UniformBucketLevelAccess();

  Bucket_IamConfiguration_UniformBucketLevelAccess(const Bucket_IamConfiguration_UniformBucketLevelAccess& from);

  inline Bucket_IamConfiguration_UniformBucketLevelAccess& operator=(const Bucket_IamConfiguration_UniformBucketLevelAccess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_IamConfiguration_UniformBucketLevelAccess(Bucket_IamConfiguration_UniformBucketLevelAccess&& from) noexcept
    : Bucket_IamConfiguration_UniformBucketLevelAccess() {
    *this = ::std::move(from);
  }

  inline Bucket_IamConfiguration_UniformBucketLevelAccess& operator=(Bucket_IamConfiguration_UniformBucketLevelAccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_IamConfiguration_UniformBucketLevelAccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_IamConfiguration_UniformBucketLevelAccess* internal_default_instance() {
    return reinterpret_cast<const Bucket_IamConfiguration_UniformBucketLevelAccess*>(
               &_Bucket_IamConfiguration_UniformBucketLevelAccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Bucket_IamConfiguration_UniformBucketLevelAccess* other);
  friend void swap(Bucket_IamConfiguration_UniformBucketLevelAccess& a, Bucket_IamConfiguration_UniformBucketLevelAccess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_IamConfiguration_UniformBucketLevelAccess* New() const final {
    return CreateMaybeMessage<Bucket_IamConfiguration_UniformBucketLevelAccess>(nullptr);
  }

  Bucket_IamConfiguration_UniformBucketLevelAccess* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_IamConfiguration_UniformBucketLevelAccess>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_IamConfiguration_UniformBucketLevelAccess& from);
  void MergeFrom(const Bucket_IamConfiguration_UniformBucketLevelAccess& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_IamConfiguration_UniformBucketLevelAccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp locked_time = 2;
  bool has_locked_time() const;
  void clear_locked_time();
  static const int kLockedTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& locked_time() const;
  ::google::protobuf::Timestamp* release_locked_time();
  ::google::protobuf::Timestamp* mutable_locked_time();
  void set_allocated_locked_time(::google::protobuf::Timestamp* locked_time);

  // bool enabled = 1;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* locked_time_;
  bool enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_IamConfiguration final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.IamConfiguration) */ {
 public:
  Bucket_IamConfiguration();
  virtual ~Bucket_IamConfiguration();

  Bucket_IamConfiguration(const Bucket_IamConfiguration& from);

  inline Bucket_IamConfiguration& operator=(const Bucket_IamConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_IamConfiguration(Bucket_IamConfiguration&& from) noexcept
    : Bucket_IamConfiguration() {
    *this = ::std::move(from);
  }

  inline Bucket_IamConfiguration& operator=(Bucket_IamConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_IamConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_IamConfiguration* internal_default_instance() {
    return reinterpret_cast<const Bucket_IamConfiguration*>(
               &_Bucket_IamConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Bucket_IamConfiguration* other);
  friend void swap(Bucket_IamConfiguration& a, Bucket_IamConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_IamConfiguration* New() const final {
    return CreateMaybeMessage<Bucket_IamConfiguration>(nullptr);
  }

  Bucket_IamConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_IamConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_IamConfiguration& from);
  void MergeFrom(const Bucket_IamConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_IamConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Bucket_IamConfiguration_UniformBucketLevelAccess UniformBucketLevelAccess;

  // accessors -------------------------------------------------------

  // .google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess uniform_bucket_level_access = 1;
  bool has_uniform_bucket_level_access() const;
  void clear_uniform_bucket_level_access();
  static const int kUniformBucketLevelAccessFieldNumber = 1;
  const ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess& uniform_bucket_level_access() const;
  ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* release_uniform_bucket_level_access();
  ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* mutable_uniform_bucket_level_access();
  void set_allocated_uniform_bucket_level_access(::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* uniform_bucket_level_access);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.IamConfiguration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* uniform_bucket_level_access_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Lifecycle_Rule_Action final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Lifecycle.Rule.Action) */ {
 public:
  Bucket_Lifecycle_Rule_Action();
  virtual ~Bucket_Lifecycle_Rule_Action();

  Bucket_Lifecycle_Rule_Action(const Bucket_Lifecycle_Rule_Action& from);

  inline Bucket_Lifecycle_Rule_Action& operator=(const Bucket_Lifecycle_Rule_Action& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Lifecycle_Rule_Action(Bucket_Lifecycle_Rule_Action&& from) noexcept
    : Bucket_Lifecycle_Rule_Action() {
    *this = ::std::move(from);
  }

  inline Bucket_Lifecycle_Rule_Action& operator=(Bucket_Lifecycle_Rule_Action&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Lifecycle_Rule_Action& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Lifecycle_Rule_Action* internal_default_instance() {
    return reinterpret_cast<const Bucket_Lifecycle_Rule_Action*>(
               &_Bucket_Lifecycle_Rule_Action_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Bucket_Lifecycle_Rule_Action* other);
  friend void swap(Bucket_Lifecycle_Rule_Action& a, Bucket_Lifecycle_Rule_Action& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Lifecycle_Rule_Action* New() const final {
    return CreateMaybeMessage<Bucket_Lifecycle_Rule_Action>(nullptr);
  }

  Bucket_Lifecycle_Rule_Action* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Lifecycle_Rule_Action>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Lifecycle_Rule_Action& from);
  void MergeFrom(const Bucket_Lifecycle_Rule_Action& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Lifecycle_Rule_Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string storage_class = 2;
  void clear_storage_class();
  static const int kStorageClassFieldNumber = 2;
  const ::std::string& storage_class() const;
  void set_storage_class(const ::std::string& value);
  #if LANG_CXX11
  void set_storage_class(::std::string&& value);
  #endif
  void set_storage_class(const char* value);
  void set_storage_class(const char* value, size_t size);
  ::std::string* mutable_storage_class();
  ::std::string* release_storage_class();
  void set_allocated_storage_class(::std::string* storage_class);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Lifecycle.Rule.Action)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr storage_class_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Lifecycle_Rule_Condition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Lifecycle.Rule.Condition) */ {
 public:
  Bucket_Lifecycle_Rule_Condition();
  virtual ~Bucket_Lifecycle_Rule_Condition();

  Bucket_Lifecycle_Rule_Condition(const Bucket_Lifecycle_Rule_Condition& from);

  inline Bucket_Lifecycle_Rule_Condition& operator=(const Bucket_Lifecycle_Rule_Condition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Lifecycle_Rule_Condition(Bucket_Lifecycle_Rule_Condition&& from) noexcept
    : Bucket_Lifecycle_Rule_Condition() {
    *this = ::std::move(from);
  }

  inline Bucket_Lifecycle_Rule_Condition& operator=(Bucket_Lifecycle_Rule_Condition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Lifecycle_Rule_Condition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Lifecycle_Rule_Condition* internal_default_instance() {
    return reinterpret_cast<const Bucket_Lifecycle_Rule_Condition*>(
               &_Bucket_Lifecycle_Rule_Condition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Bucket_Lifecycle_Rule_Condition* other);
  friend void swap(Bucket_Lifecycle_Rule_Condition& a, Bucket_Lifecycle_Rule_Condition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Lifecycle_Rule_Condition* New() const final {
    return CreateMaybeMessage<Bucket_Lifecycle_Rule_Condition>(nullptr);
  }

  Bucket_Lifecycle_Rule_Condition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Lifecycle_Rule_Condition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Lifecycle_Rule_Condition& from);
  void MergeFrom(const Bucket_Lifecycle_Rule_Condition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Lifecycle_Rule_Condition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string matches_storage_class = 5;
  int matches_storage_class_size() const;
  void clear_matches_storage_class();
  static const int kMatchesStorageClassFieldNumber = 5;
  const ::std::string& matches_storage_class(int index) const;
  ::std::string* mutable_matches_storage_class(int index);
  void set_matches_storage_class(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_matches_storage_class(int index, ::std::string&& value);
  #endif
  void set_matches_storage_class(int index, const char* value);
  void set_matches_storage_class(int index, const char* value, size_t size);
  ::std::string* add_matches_storage_class();
  void add_matches_storage_class(const ::std::string& value);
  #if LANG_CXX11
  void add_matches_storage_class(::std::string&& value);
  #endif
  void add_matches_storage_class(const char* value);
  void add_matches_storage_class(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& matches_storage_class() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_matches_storage_class();

  // string matches_pattern = 6;
  void clear_matches_pattern();
  static const int kMatchesPatternFieldNumber = 6;
  const ::std::string& matches_pattern() const;
  void set_matches_pattern(const ::std::string& value);
  #if LANG_CXX11
  void set_matches_pattern(::std::string&& value);
  #endif
  void set_matches_pattern(const char* value);
  void set_matches_pattern(const char* value, size_t size);
  ::std::string* mutable_matches_pattern();
  ::std::string* release_matches_pattern();
  void set_allocated_matches_pattern(::std::string* matches_pattern);

  // .google.protobuf.Timestamp created_before = 2;
  bool has_created_before() const;
  void clear_created_before();
  static const int kCreatedBeforeFieldNumber = 2;
  const ::google::protobuf::Timestamp& created_before() const;
  ::google::protobuf::Timestamp* release_created_before();
  ::google::protobuf::Timestamp* mutable_created_before();
  void set_allocated_created_before(::google::protobuf::Timestamp* created_before);

  // .google.protobuf.BoolValue is_live = 3;
  bool has_is_live() const;
  void clear_is_live();
  static const int kIsLiveFieldNumber = 3;
  const ::google::protobuf::BoolValue& is_live() const;
  ::google::protobuf::BoolValue* release_is_live();
  ::google::protobuf::BoolValue* mutable_is_live();
  void set_allocated_is_live(::google::protobuf::BoolValue* is_live);

  // int32 age = 1;
  void clear_age();
  static const int kAgeFieldNumber = 1;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // int32 num_newer_versions = 4;
  void clear_num_newer_versions();
  static const int kNumNewerVersionsFieldNumber = 4;
  ::google::protobuf::int32 num_newer_versions() const;
  void set_num_newer_versions(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Lifecycle.Rule.Condition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> matches_storage_class_;
  ::google::protobuf::internal::ArenaStringPtr matches_pattern_;
  ::google::protobuf::Timestamp* created_before_;
  ::google::protobuf::BoolValue* is_live_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 num_newer_versions_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Lifecycle_Rule final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Lifecycle.Rule) */ {
 public:
  Bucket_Lifecycle_Rule();
  virtual ~Bucket_Lifecycle_Rule();

  Bucket_Lifecycle_Rule(const Bucket_Lifecycle_Rule& from);

  inline Bucket_Lifecycle_Rule& operator=(const Bucket_Lifecycle_Rule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Lifecycle_Rule(Bucket_Lifecycle_Rule&& from) noexcept
    : Bucket_Lifecycle_Rule() {
    *this = ::std::move(from);
  }

  inline Bucket_Lifecycle_Rule& operator=(Bucket_Lifecycle_Rule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Lifecycle_Rule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Lifecycle_Rule* internal_default_instance() {
    return reinterpret_cast<const Bucket_Lifecycle_Rule*>(
               &_Bucket_Lifecycle_Rule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Bucket_Lifecycle_Rule* other);
  friend void swap(Bucket_Lifecycle_Rule& a, Bucket_Lifecycle_Rule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Lifecycle_Rule* New() const final {
    return CreateMaybeMessage<Bucket_Lifecycle_Rule>(nullptr);
  }

  Bucket_Lifecycle_Rule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Lifecycle_Rule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Lifecycle_Rule& from);
  void MergeFrom(const Bucket_Lifecycle_Rule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Lifecycle_Rule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Bucket_Lifecycle_Rule_Action Action;
  typedef Bucket_Lifecycle_Rule_Condition Condition;

  // accessors -------------------------------------------------------

  // .google.storage.v1.Bucket.Lifecycle.Rule.Action action = 1;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 1;
  const ::google::storage::v1::Bucket_Lifecycle_Rule_Action& action() const;
  ::google::storage::v1::Bucket_Lifecycle_Rule_Action* release_action();
  ::google::storage::v1::Bucket_Lifecycle_Rule_Action* mutable_action();
  void set_allocated_action(::google::storage::v1::Bucket_Lifecycle_Rule_Action* action);

  // .google.storage.v1.Bucket.Lifecycle.Rule.Condition condition = 2;
  bool has_condition() const;
  void clear_condition();
  static const int kConditionFieldNumber = 2;
  const ::google::storage::v1::Bucket_Lifecycle_Rule_Condition& condition() const;
  ::google::storage::v1::Bucket_Lifecycle_Rule_Condition* release_condition();
  ::google::storage::v1::Bucket_Lifecycle_Rule_Condition* mutable_condition();
  void set_allocated_condition(::google::storage::v1::Bucket_Lifecycle_Rule_Condition* condition);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Lifecycle.Rule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::storage::v1::Bucket_Lifecycle_Rule_Action* action_;
  ::google::storage::v1::Bucket_Lifecycle_Rule_Condition* condition_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Lifecycle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Lifecycle) */ {
 public:
  Bucket_Lifecycle();
  virtual ~Bucket_Lifecycle();

  Bucket_Lifecycle(const Bucket_Lifecycle& from);

  inline Bucket_Lifecycle& operator=(const Bucket_Lifecycle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Lifecycle(Bucket_Lifecycle&& from) noexcept
    : Bucket_Lifecycle() {
    *this = ::std::move(from);
  }

  inline Bucket_Lifecycle& operator=(Bucket_Lifecycle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Lifecycle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Lifecycle* internal_default_instance() {
    return reinterpret_cast<const Bucket_Lifecycle*>(
               &_Bucket_Lifecycle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Bucket_Lifecycle* other);
  friend void swap(Bucket_Lifecycle& a, Bucket_Lifecycle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Lifecycle* New() const final {
    return CreateMaybeMessage<Bucket_Lifecycle>(nullptr);
  }

  Bucket_Lifecycle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Lifecycle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Lifecycle& from);
  void MergeFrom(const Bucket_Lifecycle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Lifecycle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Bucket_Lifecycle_Rule Rule;

  // accessors -------------------------------------------------------

  // repeated .google.storage.v1.Bucket.Lifecycle.Rule rule = 1;
  int rule_size() const;
  void clear_rule();
  static const int kRuleFieldNumber = 1;
  ::google::storage::v1::Bucket_Lifecycle_Rule* mutable_rule(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Lifecycle_Rule >*
      mutable_rule();
  const ::google::storage::v1::Bucket_Lifecycle_Rule& rule(int index) const;
  ::google::storage::v1::Bucket_Lifecycle_Rule* add_rule();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Lifecycle_Rule >&
      rule() const;

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Lifecycle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Lifecycle_Rule > rule_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Logging final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Logging) */ {
 public:
  Bucket_Logging();
  virtual ~Bucket_Logging();

  Bucket_Logging(const Bucket_Logging& from);

  inline Bucket_Logging& operator=(const Bucket_Logging& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Logging(Bucket_Logging&& from) noexcept
    : Bucket_Logging() {
    *this = ::std::move(from);
  }

  inline Bucket_Logging& operator=(Bucket_Logging&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Logging& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Logging* internal_default_instance() {
    return reinterpret_cast<const Bucket_Logging*>(
               &_Bucket_Logging_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Bucket_Logging* other);
  friend void swap(Bucket_Logging& a, Bucket_Logging& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Logging* New() const final {
    return CreateMaybeMessage<Bucket_Logging>(nullptr);
  }

  Bucket_Logging* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Logging>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Logging& from);
  void MergeFrom(const Bucket_Logging& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Logging* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string log_bucket = 1;
  void clear_log_bucket();
  static const int kLogBucketFieldNumber = 1;
  const ::std::string& log_bucket() const;
  void set_log_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_log_bucket(::std::string&& value);
  #endif
  void set_log_bucket(const char* value);
  void set_log_bucket(const char* value, size_t size);
  ::std::string* mutable_log_bucket();
  ::std::string* release_log_bucket();
  void set_allocated_log_bucket(::std::string* log_bucket);

  // string log_object_prefix = 2;
  void clear_log_object_prefix();
  static const int kLogObjectPrefixFieldNumber = 2;
  const ::std::string& log_object_prefix() const;
  void set_log_object_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_log_object_prefix(::std::string&& value);
  #endif
  void set_log_object_prefix(const char* value);
  void set_log_object_prefix(const char* value, size_t size);
  ::std::string* mutable_log_object_prefix();
  ::std::string* release_log_object_prefix();
  void set_allocated_log_object_prefix(::std::string* log_object_prefix);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Logging)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr log_bucket_;
  ::google::protobuf::internal::ArenaStringPtr log_object_prefix_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_RetentionPolicy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.RetentionPolicy) */ {
 public:
  Bucket_RetentionPolicy();
  virtual ~Bucket_RetentionPolicy();

  Bucket_RetentionPolicy(const Bucket_RetentionPolicy& from);

  inline Bucket_RetentionPolicy& operator=(const Bucket_RetentionPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_RetentionPolicy(Bucket_RetentionPolicy&& from) noexcept
    : Bucket_RetentionPolicy() {
    *this = ::std::move(from);
  }

  inline Bucket_RetentionPolicy& operator=(Bucket_RetentionPolicy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_RetentionPolicy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_RetentionPolicy* internal_default_instance() {
    return reinterpret_cast<const Bucket_RetentionPolicy*>(
               &_Bucket_RetentionPolicy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Bucket_RetentionPolicy* other);
  friend void swap(Bucket_RetentionPolicy& a, Bucket_RetentionPolicy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_RetentionPolicy* New() const final {
    return CreateMaybeMessage<Bucket_RetentionPolicy>(nullptr);
  }

  Bucket_RetentionPolicy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_RetentionPolicy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_RetentionPolicy& from);
  void MergeFrom(const Bucket_RetentionPolicy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_RetentionPolicy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp effective_time = 1;
  bool has_effective_time() const;
  void clear_effective_time();
  static const int kEffectiveTimeFieldNumber = 1;
  const ::google::protobuf::Timestamp& effective_time() const;
  ::google::protobuf::Timestamp* release_effective_time();
  ::google::protobuf::Timestamp* mutable_effective_time();
  void set_allocated_effective_time(::google::protobuf::Timestamp* effective_time);

  // int64 retention_period = 3;
  void clear_retention_period();
  static const int kRetentionPeriodFieldNumber = 3;
  ::google::protobuf::int64 retention_period() const;
  void set_retention_period(::google::protobuf::int64 value);

  // bool is_locked = 2;
  void clear_is_locked();
  static const int kIsLockedFieldNumber = 2;
  bool is_locked() const;
  void set_is_locked(bool value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.RetentionPolicy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* effective_time_;
  ::google::protobuf::int64 retention_period_;
  bool is_locked_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Versioning final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Versioning) */ {
 public:
  Bucket_Versioning();
  virtual ~Bucket_Versioning();

  Bucket_Versioning(const Bucket_Versioning& from);

  inline Bucket_Versioning& operator=(const Bucket_Versioning& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Versioning(Bucket_Versioning&& from) noexcept
    : Bucket_Versioning() {
    *this = ::std::move(from);
  }

  inline Bucket_Versioning& operator=(Bucket_Versioning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Versioning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Versioning* internal_default_instance() {
    return reinterpret_cast<const Bucket_Versioning*>(
               &_Bucket_Versioning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Bucket_Versioning* other);
  friend void swap(Bucket_Versioning& a, Bucket_Versioning& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Versioning* New() const final {
    return CreateMaybeMessage<Bucket_Versioning>(nullptr);
  }

  Bucket_Versioning* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Versioning>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Versioning& from);
  void MergeFrom(const Bucket_Versioning& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Versioning* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool enabled = 1;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Versioning)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_Website final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket.Website) */ {
 public:
  Bucket_Website();
  virtual ~Bucket_Website();

  Bucket_Website(const Bucket_Website& from);

  inline Bucket_Website& operator=(const Bucket_Website& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket_Website(Bucket_Website&& from) noexcept
    : Bucket_Website() {
    *this = ::std::move(from);
  }

  inline Bucket_Website& operator=(Bucket_Website&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket_Website& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket_Website* internal_default_instance() {
    return reinterpret_cast<const Bucket_Website*>(
               &_Bucket_Website_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(Bucket_Website* other);
  friend void swap(Bucket_Website& a, Bucket_Website& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket_Website* New() const final {
    return CreateMaybeMessage<Bucket_Website>(nullptr);
  }

  Bucket_Website* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket_Website>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket_Website& from);
  void MergeFrom(const Bucket_Website& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket_Website* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string main_page_suffix = 1;
  void clear_main_page_suffix();
  static const int kMainPageSuffixFieldNumber = 1;
  const ::std::string& main_page_suffix() const;
  void set_main_page_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_main_page_suffix(::std::string&& value);
  #endif
  void set_main_page_suffix(const char* value);
  void set_main_page_suffix(const char* value, size_t size);
  ::std::string* mutable_main_page_suffix();
  ::std::string* release_main_page_suffix();
  void set_allocated_main_page_suffix(::std::string* main_page_suffix);

  // string not_found_page = 2;
  void clear_not_found_page();
  static const int kNotFoundPageFieldNumber = 2;
  const ::std::string& not_found_page() const;
  void set_not_found_page(const ::std::string& value);
  #if LANG_CXX11
  void set_not_found_page(::std::string&& value);
  #endif
  void set_not_found_page(const char* value);
  void set_not_found_page(const char* value, size_t size);
  ::std::string* mutable_not_found_page();
  ::std::string* release_not_found_page();
  void set_allocated_not_found_page(::std::string* not_found_page);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket.Website)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr main_page_suffix_;
  ::google::protobuf::internal::ArenaStringPtr not_found_page_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Bucket_LabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Bucket_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Bucket_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Bucket_LabelsEntry_DoNotUse();
  Bucket_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Bucket_LabelsEntry_DoNotUse& other);
  static const Bucket_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Bucket_LabelsEntry_DoNotUse*>(&_Bucket_LabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Bucket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Bucket) */ {
 public:
  Bucket();
  virtual ~Bucket();

  Bucket(const Bucket& from);

  inline Bucket& operator=(const Bucket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bucket(Bucket&& from) noexcept
    : Bucket() {
    *this = ::std::move(from);
  }

  inline Bucket& operator=(Bucket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bucket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bucket* internal_default_instance() {
    return reinterpret_cast<const Bucket*>(
               &_Bucket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(Bucket* other);
  friend void swap(Bucket& a, Bucket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bucket* New() const final {
    return CreateMaybeMessage<Bucket>(nullptr);
  }

  Bucket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bucket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bucket& from);
  void MergeFrom(const Bucket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Bucket_Billing Billing;
  typedef Bucket_Cors Cors;
  typedef Bucket_Encryption Encryption;
  typedef Bucket_IamConfiguration IamConfiguration;
  typedef Bucket_Lifecycle Lifecycle;
  typedef Bucket_Logging Logging;
  typedef Bucket_RetentionPolicy RetentionPolicy;
  typedef Bucket_Versioning Versioning;
  typedef Bucket_Website Website;

  // accessors -------------------------------------------------------

  // repeated .google.storage.v1.BucketAccessControl acl = 1;
  int acl_size() const;
  void clear_acl();
  static const int kAclFieldNumber = 1;
  ::google::storage::v1::BucketAccessControl* mutable_acl(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl >*
      mutable_acl();
  const ::google::storage::v1::BucketAccessControl& acl(int index) const;
  ::google::storage::v1::BucketAccessControl* add_acl();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl >&
      acl() const;

  // repeated .google.storage.v1.ObjectAccessControl default_object_acl = 2;
  int default_object_acl_size() const;
  void clear_default_object_acl();
  static const int kDefaultObjectAclFieldNumber = 2;
  ::google::storage::v1::ObjectAccessControl* mutable_default_object_acl(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >*
      mutable_default_object_acl();
  const ::google::storage::v1::ObjectAccessControl& default_object_acl(int index) const;
  ::google::storage::v1::ObjectAccessControl* add_default_object_acl();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >&
      default_object_acl() const;

  // repeated .google.storage.v1.Bucket.Cors cors = 9;
  int cors_size() const;
  void clear_cors();
  static const int kCorsFieldNumber = 9;
  ::google::storage::v1::Bucket_Cors* mutable_cors(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Cors >*
      mutable_cors();
  const ::google::storage::v1::Bucket_Cors& cors(int index) const;
  ::google::storage::v1::Bucket_Cors* add_cors();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Cors >&
      cors() const;

  // map<string, string> labels = 15;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 15;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // repeated string zone_affinity = 25;
  int zone_affinity_size() const;
  void clear_zone_affinity();
  static const int kZoneAffinityFieldNumber = 25;
  const ::std::string& zone_affinity(int index) const;
  ::std::string* mutable_zone_affinity(int index);
  void set_zone_affinity(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_zone_affinity(int index, ::std::string&& value);
  #endif
  void set_zone_affinity(int index, const char* value);
  void set_zone_affinity(int index, const char* value, size_t size);
  ::std::string* add_zone_affinity();
  void add_zone_affinity(const ::std::string& value);
  #if LANG_CXX11
  void add_zone_affinity(::std::string&& value);
  #endif
  void add_zone_affinity(const char* value);
  void add_zone_affinity(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& zone_affinity() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_zone_affinity();

  // string id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 6;
  void clear_name();
  static const int kNameFieldNumber = 6;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string location = 10;
  void clear_location();
  static const int kLocationFieldNumber = 10;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  #if LANG_CXX11
  void set_location(::std::string&& value);
  #endif
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // string storage_class = 11;
  void clear_storage_class();
  static const int kStorageClassFieldNumber = 11;
  const ::std::string& storage_class() const;
  void set_storage_class(const ::std::string& value);
  #if LANG_CXX11
  void set_storage_class(::std::string&& value);
  #endif
  void set_storage_class(const char* value);
  void set_storage_class(const char* value, size_t size);
  ::std::string* mutable_storage_class();
  ::std::string* release_storage_class();
  void set_allocated_storage_class(::std::string* storage_class);

  // string etag = 12;
  void clear_etag();
  static const int kEtagFieldNumber = 12;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string location_type = 23;
  void clear_location_type();
  static const int kLocationTypeFieldNumber = 23;
  const ::std::string& location_type() const;
  void set_location_type(const ::std::string& value);
  #if LANG_CXX11
  void set_location_type(::std::string&& value);
  #endif
  void set_location_type(const char* value);
  void set_location_type(const char* value, size_t size);
  ::std::string* mutable_location_type();
  ::std::string* release_location_type();
  void set_allocated_location_type(::std::string* location_type);

  // .google.storage.v1.Bucket.Lifecycle lifecycle = 3;
  bool has_lifecycle() const;
  void clear_lifecycle();
  static const int kLifecycleFieldNumber = 3;
  const ::google::storage::v1::Bucket_Lifecycle& lifecycle() const;
  ::google::storage::v1::Bucket_Lifecycle* release_lifecycle();
  ::google::storage::v1::Bucket_Lifecycle* mutable_lifecycle();
  void set_allocated_lifecycle(::google::storage::v1::Bucket_Lifecycle* lifecycle);

  // .google.protobuf.Timestamp time_created = 4;
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 4;
  const ::google::protobuf::Timestamp& time_created() const;
  ::google::protobuf::Timestamp* release_time_created();
  ::google::protobuf::Timestamp* mutable_time_created();
  void set_allocated_time_created(::google::protobuf::Timestamp* time_created);

  // .google.protobuf.Timestamp updated = 13;
  bool has_updated() const;
  void clear_updated();
  static const int kUpdatedFieldNumber = 13;
  const ::google::protobuf::Timestamp& updated() const;
  ::google::protobuf::Timestamp* release_updated();
  ::google::protobuf::Timestamp* mutable_updated();
  void set_allocated_updated(::google::protobuf::Timestamp* updated);

  // .google.storage.v1.Bucket.Website website = 16;
  bool has_website() const;
  void clear_website();
  static const int kWebsiteFieldNumber = 16;
  const ::google::storage::v1::Bucket_Website& website() const;
  ::google::storage::v1::Bucket_Website* release_website();
  ::google::storage::v1::Bucket_Website* mutable_website();
  void set_allocated_website(::google::storage::v1::Bucket_Website* website);

  // .google.storage.v1.Bucket.Versioning versioning = 17;
  bool has_versioning() const;
  void clear_versioning();
  static const int kVersioningFieldNumber = 17;
  const ::google::storage::v1::Bucket_Versioning& versioning() const;
  ::google::storage::v1::Bucket_Versioning* release_versioning();
  ::google::storage::v1::Bucket_Versioning* mutable_versioning();
  void set_allocated_versioning(::google::storage::v1::Bucket_Versioning* versioning);

  // .google.storage.v1.Bucket.Logging logging = 18;
  bool has_logging() const;
  void clear_logging();
  static const int kLoggingFieldNumber = 18;
  const ::google::storage::v1::Bucket_Logging& logging() const;
  ::google::storage::v1::Bucket_Logging* release_logging();
  ::google::storage::v1::Bucket_Logging* mutable_logging();
  void set_allocated_logging(::google::storage::v1::Bucket_Logging* logging);

  // .google.storage.v1.Owner owner = 19;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 19;
  const ::google::storage::v1::Owner& owner() const;
  ::google::storage::v1::Owner* release_owner();
  ::google::storage::v1::Owner* mutable_owner();
  void set_allocated_owner(::google::storage::v1::Owner* owner);

  // .google.storage.v1.Bucket.Encryption encryption = 20;
  bool has_encryption() const;
  void clear_encryption();
  static const int kEncryptionFieldNumber = 20;
  const ::google::storage::v1::Bucket_Encryption& encryption() const;
  ::google::storage::v1::Bucket_Encryption* release_encryption();
  ::google::storage::v1::Bucket_Encryption* mutable_encryption();
  void set_allocated_encryption(::google::storage::v1::Bucket_Encryption* encryption);

  // .google.storage.v1.Bucket.Billing billing = 21;
  bool has_billing() const;
  void clear_billing();
  static const int kBillingFieldNumber = 21;
  const ::google::storage::v1::Bucket_Billing& billing() const;
  ::google::storage::v1::Bucket_Billing* release_billing();
  ::google::storage::v1::Bucket_Billing* mutable_billing();
  void set_allocated_billing(::google::storage::v1::Bucket_Billing* billing);

  // .google.storage.v1.Bucket.RetentionPolicy retention_policy = 22;
  bool has_retention_policy() const;
  void clear_retention_policy();
  static const int kRetentionPolicyFieldNumber = 22;
  const ::google::storage::v1::Bucket_RetentionPolicy& retention_policy() const;
  ::google::storage::v1::Bucket_RetentionPolicy* release_retention_policy();
  ::google::storage::v1::Bucket_RetentionPolicy* mutable_retention_policy();
  void set_allocated_retention_policy(::google::storage::v1::Bucket_RetentionPolicy* retention_policy);

  // .google.storage.v1.Bucket.IamConfiguration iam_configuration = 24;
  bool has_iam_configuration() const;
  void clear_iam_configuration();
  static const int kIamConfigurationFieldNumber = 24;
  const ::google::storage::v1::Bucket_IamConfiguration& iam_configuration() const;
  ::google::storage::v1::Bucket_IamConfiguration* release_iam_configuration();
  ::google::storage::v1::Bucket_IamConfiguration* mutable_iam_configuration();
  void set_allocated_iam_configuration(::google::storage::v1::Bucket_IamConfiguration* iam_configuration);

  // int64 project_number = 7;
  void clear_project_number();
  static const int kProjectNumberFieldNumber = 7;
  ::google::protobuf::int64 project_number() const;
  void set_project_number(::google::protobuf::int64 value);

  // int64 metageneration = 8;
  void clear_metageneration();
  static const int kMetagenerationFieldNumber = 8;
  ::google::protobuf::int64 metageneration() const;
  void set_metageneration(::google::protobuf::int64 value);

  // bool default_event_based_hold = 14;
  void clear_default_event_based_hold();
  static const int kDefaultEventBasedHoldFieldNumber = 14;
  bool default_event_based_hold() const;
  void set_default_event_based_hold(bool value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Bucket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl > acl_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl > default_object_acl_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Cors > cors_;
  ::google::protobuf::internal::MapField<
      Bucket_LabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::RepeatedPtrField<::std::string> zone_affinity_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::internal::ArenaStringPtr storage_class_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr location_type_;
  ::google::storage::v1::Bucket_Lifecycle* lifecycle_;
  ::google::protobuf::Timestamp* time_created_;
  ::google::protobuf::Timestamp* updated_;
  ::google::storage::v1::Bucket_Website* website_;
  ::google::storage::v1::Bucket_Versioning* versioning_;
  ::google::storage::v1::Bucket_Logging* logging_;
  ::google::storage::v1::Owner* owner_;
  ::google::storage::v1::Bucket_Encryption* encryption_;
  ::google::storage::v1::Bucket_Billing* billing_;
  ::google::storage::v1::Bucket_RetentionPolicy* retention_policy_;
  ::google::storage::v1::Bucket_IamConfiguration* iam_configuration_;
  ::google::protobuf::int64 project_number_;
  ::google::protobuf::int64 metageneration_;
  bool default_event_based_hold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class BucketAccessControl final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.BucketAccessControl) */ {
 public:
  BucketAccessControl();
  virtual ~BucketAccessControl();

  BucketAccessControl(const BucketAccessControl& from);

  inline BucketAccessControl& operator=(const BucketAccessControl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BucketAccessControl(BucketAccessControl&& from) noexcept
    : BucketAccessControl() {
    *this = ::std::move(from);
  }

  inline BucketAccessControl& operator=(BucketAccessControl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BucketAccessControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BucketAccessControl* internal_default_instance() {
    return reinterpret_cast<const BucketAccessControl*>(
               &_BucketAccessControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(BucketAccessControl* other);
  friend void swap(BucketAccessControl& a, BucketAccessControl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BucketAccessControl* New() const final {
    return CreateMaybeMessage<BucketAccessControl>(nullptr);
  }

  BucketAccessControl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BucketAccessControl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BucketAccessControl& from);
  void MergeFrom(const BucketAccessControl& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BucketAccessControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string role = 1;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  #if LANG_CXX11
  void set_role(::std::string&& value);
  #endif
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // string etag = 2;
  void clear_etag();
  static const int kEtagFieldNumber = 2;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string bucket = 4;
  void clear_bucket();
  static const int kBucketFieldNumber = 4;
  const ::std::string& bucket() const;
  void set_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket(::std::string&& value);
  #endif
  void set_bucket(const char* value);
  void set_bucket(const char* value, size_t size);
  ::std::string* mutable_bucket();
  ::std::string* release_bucket();
  void set_allocated_bucket(::std::string* bucket);

  // string entity = 6;
  void clear_entity();
  static const int kEntityFieldNumber = 6;
  const ::std::string& entity() const;
  void set_entity(const ::std::string& value);
  #if LANG_CXX11
  void set_entity(::std::string&& value);
  #endif
  void set_entity(const char* value);
  void set_entity(const char* value, size_t size);
  ::std::string* mutable_entity();
  ::std::string* release_entity();
  void set_allocated_entity(::std::string* entity);

  // string entity_id = 7;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 7;
  const ::std::string& entity_id() const;
  void set_entity_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_id(::std::string&& value);
  #endif
  void set_entity_id(const char* value);
  void set_entity_id(const char* value, size_t size);
  ::std::string* mutable_entity_id();
  ::std::string* release_entity_id();
  void set_allocated_entity_id(::std::string* entity_id);

  // string email = 8;
  void clear_email();
  static const int kEmailFieldNumber = 8;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // string domain = 9;
  void clear_domain();
  static const int kDomainFieldNumber = 9;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // .google.storage.v1.ProjectTeam project_team = 10;
  bool has_project_team() const;
  void clear_project_team();
  static const int kProjectTeamFieldNumber = 10;
  const ::google::storage::v1::ProjectTeam& project_team() const;
  ::google::storage::v1::ProjectTeam* release_project_team();
  ::google::storage::v1::ProjectTeam* mutable_project_team();
  void set_allocated_project_team(::google::storage::v1::ProjectTeam* project_team);

  // @@protoc_insertion_point(class_scope:google.storage.v1.BucketAccessControl)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr bucket_;
  ::google::protobuf::internal::ArenaStringPtr entity_;
  ::google::protobuf::internal::ArenaStringPtr entity_id_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::storage::v1::ProjectTeam* project_team_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ListBucketAccessControlsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ListBucketAccessControlsResponse) */ {
 public:
  ListBucketAccessControlsResponse();
  virtual ~ListBucketAccessControlsResponse();

  ListBucketAccessControlsResponse(const ListBucketAccessControlsResponse& from);

  inline ListBucketAccessControlsResponse& operator=(const ListBucketAccessControlsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBucketAccessControlsResponse(ListBucketAccessControlsResponse&& from) noexcept
    : ListBucketAccessControlsResponse() {
    *this = ::std::move(from);
  }

  inline ListBucketAccessControlsResponse& operator=(ListBucketAccessControlsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListBucketAccessControlsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBucketAccessControlsResponse* internal_default_instance() {
    return reinterpret_cast<const ListBucketAccessControlsResponse*>(
               &_ListBucketAccessControlsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ListBucketAccessControlsResponse* other);
  friend void swap(ListBucketAccessControlsResponse& a, ListBucketAccessControlsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBucketAccessControlsResponse* New() const final {
    return CreateMaybeMessage<ListBucketAccessControlsResponse>(nullptr);
  }

  ListBucketAccessControlsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBucketAccessControlsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBucketAccessControlsResponse& from);
  void MergeFrom(const ListBucketAccessControlsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBucketAccessControlsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.storage.v1.BucketAccessControl items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  ::google::storage::v1::BucketAccessControl* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl >*
      mutable_items();
  const ::google::storage::v1::BucketAccessControl& items(int index) const;
  ::google::storage::v1::BucketAccessControl* add_items();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl >&
      items() const;

  // @@protoc_insertion_point(class_scope:google.storage.v1.ListBucketAccessControlsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl > items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ListBucketsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ListBucketsResponse) */ {
 public:
  ListBucketsResponse();
  virtual ~ListBucketsResponse();

  ListBucketsResponse(const ListBucketsResponse& from);

  inline ListBucketsResponse& operator=(const ListBucketsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBucketsResponse(ListBucketsResponse&& from) noexcept
    : ListBucketsResponse() {
    *this = ::std::move(from);
  }

  inline ListBucketsResponse& operator=(ListBucketsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListBucketsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBucketsResponse* internal_default_instance() {
    return reinterpret_cast<const ListBucketsResponse*>(
               &_ListBucketsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ListBucketsResponse* other);
  friend void swap(ListBucketsResponse& a, ListBucketsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBucketsResponse* New() const final {
    return CreateMaybeMessage<ListBucketsResponse>(nullptr);
  }

  ListBucketsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBucketsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBucketsResponse& from);
  void MergeFrom(const ListBucketsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBucketsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.storage.v1.Bucket items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  ::google::storage::v1::Bucket* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket >*
      mutable_items();
  const ::google::storage::v1::Bucket& items(int index) const;
  ::google::storage::v1::Bucket* add_items();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket >&
      items() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ListBucketsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket > items_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Channel_ParamsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Channel_ParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Channel_ParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Channel_ParamsEntry_DoNotUse();
  Channel_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Channel_ParamsEntry_DoNotUse& other);
  static const Channel_ParamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Channel_ParamsEntry_DoNotUse*>(&_Channel_ParamsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Channel final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Channel) */ {
 public:
  Channel();
  virtual ~Channel();

  Channel(const Channel& from);

  inline Channel& operator=(const Channel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Channel(Channel&& from) noexcept
    : Channel() {
    *this = ::std::move(from);
  }

  inline Channel& operator=(Channel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Channel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Channel* internal_default_instance() {
    return reinterpret_cast<const Channel*>(
               &_Channel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(Channel* other);
  friend void swap(Channel& a, Channel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Channel* New() const final {
    return CreateMaybeMessage<Channel>(nullptr);
  }

  Channel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Channel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Channel& from);
  void MergeFrom(const Channel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Channel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> params = 8;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      params() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_params();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string resource_id = 2;
  void clear_resource_id();
  static const int kResourceIdFieldNumber = 2;
  const ::std::string& resource_id() const;
  void set_resource_id(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_id(::std::string&& value);
  #endif
  void set_resource_id(const char* value);
  void set_resource_id(const char* value, size_t size);
  ::std::string* mutable_resource_id();
  ::std::string* release_resource_id();
  void set_allocated_resource_id(::std::string* resource_id);

  // string resource_uri = 3;
  void clear_resource_uri();
  static const int kResourceUriFieldNumber = 3;
  const ::std::string& resource_uri() const;
  void set_resource_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_uri(::std::string&& value);
  #endif
  void set_resource_uri(const char* value);
  void set_resource_uri(const char* value, size_t size);
  ::std::string* mutable_resource_uri();
  ::std::string* release_resource_uri();
  void set_allocated_resource_uri(::std::string* resource_uri);

  // string token = 4;
  void clear_token();
  static const int kTokenFieldNumber = 4;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string address = 7;
  void clear_address();
  static const int kAddressFieldNumber = 7;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .google.protobuf.Timestamp expiration = 5;
  bool has_expiration() const;
  void clear_expiration();
  static const int kExpirationFieldNumber = 5;
  const ::google::protobuf::Timestamp& expiration() const;
  ::google::protobuf::Timestamp* release_expiration();
  ::google::protobuf::Timestamp* mutable_expiration();
  void set_allocated_expiration(::google::protobuf::Timestamp* expiration);

  // bool payload = 9;
  void clear_payload();
  static const int kPayloadFieldNumber = 9;
  bool payload() const;
  void set_payload(bool value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Channel)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Channel_ParamsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > params_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr resource_id_;
  ::google::protobuf::internal::ArenaStringPtr resource_uri_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::Timestamp* expiration_;
  bool payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ListChannelsResponse_Items final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ListChannelsResponse.Items) */ {
 public:
  ListChannelsResponse_Items();
  virtual ~ListChannelsResponse_Items();

  ListChannelsResponse_Items(const ListChannelsResponse_Items& from);

  inline ListChannelsResponse_Items& operator=(const ListChannelsResponse_Items& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListChannelsResponse_Items(ListChannelsResponse_Items&& from) noexcept
    : ListChannelsResponse_Items() {
    *this = ::std::move(from);
  }

  inline ListChannelsResponse_Items& operator=(ListChannelsResponse_Items&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListChannelsResponse_Items& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListChannelsResponse_Items* internal_default_instance() {
    return reinterpret_cast<const ListChannelsResponse_Items*>(
               &_ListChannelsResponse_Items_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(ListChannelsResponse_Items* other);
  friend void swap(ListChannelsResponse_Items& a, ListChannelsResponse_Items& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListChannelsResponse_Items* New() const final {
    return CreateMaybeMessage<ListChannelsResponse_Items>(nullptr);
  }

  ListChannelsResponse_Items* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListChannelsResponse_Items>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListChannelsResponse_Items& from);
  void MergeFrom(const ListChannelsResponse_Items& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListChannelsResponse_Items* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // string resource_id = 2;
  void clear_resource_id();
  static const int kResourceIdFieldNumber = 2;
  const ::std::string& resource_id() const;
  void set_resource_id(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_id(::std::string&& value);
  #endif
  void set_resource_id(const char* value);
  void set_resource_id(const char* value, size_t size);
  ::std::string* mutable_resource_id();
  ::std::string* release_resource_id();
  void set_allocated_resource_id(::std::string* resource_id);

  // string push_url = 3;
  void clear_push_url();
  static const int kPushUrlFieldNumber = 3;
  const ::std::string& push_url() const;
  void set_push_url(const ::std::string& value);
  #if LANG_CXX11
  void set_push_url(::std::string&& value);
  #endif
  void set_push_url(const char* value);
  void set_push_url(const char* value, size_t size);
  ::std::string* mutable_push_url();
  ::std::string* release_push_url();
  void set_allocated_push_url(::std::string* push_url);

  // string subscriber_email = 4;
  void clear_subscriber_email();
  static const int kSubscriberEmailFieldNumber = 4;
  const ::std::string& subscriber_email() const;
  void set_subscriber_email(const ::std::string& value);
  #if LANG_CXX11
  void set_subscriber_email(::std::string&& value);
  #endif
  void set_subscriber_email(const char* value);
  void set_subscriber_email(const char* value, size_t size);
  ::std::string* mutable_subscriber_email();
  ::std::string* release_subscriber_email();
  void set_allocated_subscriber_email(::std::string* subscriber_email);

  // .google.protobuf.Timestamp creation_time = 5;
  bool has_creation_time() const;
  void clear_creation_time();
  static const int kCreationTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& creation_time() const;
  ::google::protobuf::Timestamp* release_creation_time();
  ::google::protobuf::Timestamp* mutable_creation_time();
  void set_allocated_creation_time(::google::protobuf::Timestamp* creation_time);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ListChannelsResponse.Items)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr resource_id_;
  ::google::protobuf::internal::ArenaStringPtr push_url_;
  ::google::protobuf::internal::ArenaStringPtr subscriber_email_;
  ::google::protobuf::Timestamp* creation_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ListChannelsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ListChannelsResponse) */ {
 public:
  ListChannelsResponse();
  virtual ~ListChannelsResponse();

  ListChannelsResponse(const ListChannelsResponse& from);

  inline ListChannelsResponse& operator=(const ListChannelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListChannelsResponse(ListChannelsResponse&& from) noexcept
    : ListChannelsResponse() {
    *this = ::std::move(from);
  }

  inline ListChannelsResponse& operator=(ListChannelsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListChannelsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListChannelsResponse* internal_default_instance() {
    return reinterpret_cast<const ListChannelsResponse*>(
               &_ListChannelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(ListChannelsResponse* other);
  friend void swap(ListChannelsResponse& a, ListChannelsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListChannelsResponse* New() const final {
    return CreateMaybeMessage<ListChannelsResponse>(nullptr);
  }

  ListChannelsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListChannelsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListChannelsResponse& from);
  void MergeFrom(const ListChannelsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListChannelsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ListChannelsResponse_Items Items;

  // accessors -------------------------------------------------------

  // repeated .google.storage.v1.ListChannelsResponse.Items items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  ::google::storage::v1::ListChannelsResponse_Items* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ListChannelsResponse_Items >*
      mutable_items();
  const ::google::storage::v1::ListChannelsResponse_Items& items(int index) const;
  ::google::storage::v1::ListChannelsResponse_Items* add_items();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ListChannelsResponse_Items >&
      items() const;

  // @@protoc_insertion_point(class_scope:google.storage.v1.ListChannelsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ListChannelsResponse_Items > items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ChecksummedData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ChecksummedData) */ {
 public:
  ChecksummedData();
  virtual ~ChecksummedData();

  ChecksummedData(const ChecksummedData& from);

  inline ChecksummedData& operator=(const ChecksummedData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChecksummedData(ChecksummedData&& from) noexcept
    : ChecksummedData() {
    *this = ::std::move(from);
  }

  inline ChecksummedData& operator=(ChecksummedData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ChecksummedData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChecksummedData* internal_default_instance() {
    return reinterpret_cast<const ChecksummedData*>(
               &_ChecksummedData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(ChecksummedData* other);
  friend void swap(ChecksummedData& a, ChecksummedData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChecksummedData* New() const final {
    return CreateMaybeMessage<ChecksummedData>(nullptr);
  }

  ChecksummedData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChecksummedData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChecksummedData& from);
  void MergeFrom(const ChecksummedData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChecksummedData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // .google.protobuf.UInt32Value crc32c = 2;
  bool has_crc32c() const;
  void clear_crc32c();
  static const int kCrc32CFieldNumber = 2;
  const ::google::protobuf::UInt32Value& crc32c() const;
  ::google::protobuf::UInt32Value* release_crc32c();
  ::google::protobuf::UInt32Value* mutable_crc32c();
  void set_allocated_crc32c(::google::protobuf::UInt32Value* crc32c);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ChecksummedData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::UInt32Value* crc32c_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ObjectChecksums final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ObjectChecksums) */ {
 public:
  ObjectChecksums();
  virtual ~ObjectChecksums();

  ObjectChecksums(const ObjectChecksums& from);

  inline ObjectChecksums& operator=(const ObjectChecksums& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectChecksums(ObjectChecksums&& from) noexcept
    : ObjectChecksums() {
    *this = ::std::move(from);
  }

  inline ObjectChecksums& operator=(ObjectChecksums&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ObjectChecksums& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectChecksums* internal_default_instance() {
    return reinterpret_cast<const ObjectChecksums*>(
               &_ObjectChecksums_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(ObjectChecksums* other);
  friend void swap(ObjectChecksums& a, ObjectChecksums& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectChecksums* New() const final {
    return CreateMaybeMessage<ObjectChecksums>(nullptr);
  }

  ObjectChecksums* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObjectChecksums>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObjectChecksums& from);
  void MergeFrom(const ObjectChecksums& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectChecksums* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string md5_hash = 2;
  void clear_md5_hash();
  static const int kMd5HashFieldNumber = 2;
  const ::std::string& md5_hash() const;
  void set_md5_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_md5_hash(::std::string&& value);
  #endif
  void set_md5_hash(const char* value);
  void set_md5_hash(const char* value, size_t size);
  ::std::string* mutable_md5_hash();
  ::std::string* release_md5_hash();
  void set_allocated_md5_hash(::std::string* md5_hash);

  // .google.protobuf.UInt32Value crc32c = 1;
  bool has_crc32c() const;
  void clear_crc32c();
  static const int kCrc32CFieldNumber = 1;
  const ::google::protobuf::UInt32Value& crc32c() const;
  ::google::protobuf::UInt32Value* release_crc32c();
  ::google::protobuf::UInt32Value* mutable_crc32c();
  void set_allocated_crc32c(::google::protobuf::UInt32Value* crc32c);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ObjectChecksums)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr md5_hash_;
  ::google::protobuf::UInt32Value* crc32c_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class CommonEnums final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.CommonEnums) */ {
 public:
  CommonEnums();
  virtual ~CommonEnums();

  CommonEnums(const CommonEnums& from);

  inline CommonEnums& operator=(const CommonEnums& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommonEnums(CommonEnums&& from) noexcept
    : CommonEnums() {
    *this = ::std::move(from);
  }

  inline CommonEnums& operator=(CommonEnums&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CommonEnums& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonEnums* internal_default_instance() {
    return reinterpret_cast<const CommonEnums*>(
               &_CommonEnums_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CommonEnums* other);
  friend void swap(CommonEnums& a, CommonEnums& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommonEnums* New() const final {
    return CreateMaybeMessage<CommonEnums>(nullptr);
  }

  CommonEnums* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommonEnums>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommonEnums& from);
  void MergeFrom(const CommonEnums& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonEnums* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CommonEnums_Projection Projection;
  static const Projection PROJECTION_UNSPECIFIED =
    CommonEnums_Projection_PROJECTION_UNSPECIFIED;
  static const Projection NO_ACL =
    CommonEnums_Projection_NO_ACL;
  static const Projection FULL =
    CommonEnums_Projection_FULL;
  static inline bool Projection_IsValid(int value) {
    return CommonEnums_Projection_IsValid(value);
  }
  static const Projection Projection_MIN =
    CommonEnums_Projection_Projection_MIN;
  static const Projection Projection_MAX =
    CommonEnums_Projection_Projection_MAX;
  static const int Projection_ARRAYSIZE =
    CommonEnums_Projection_Projection_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Projection_descriptor() {
    return CommonEnums_Projection_descriptor();
  }
  static inline const ::std::string& Projection_Name(Projection value) {
    return CommonEnums_Projection_Name(value);
  }
  static inline bool Projection_Parse(const ::std::string& name,
      Projection* value) {
    return CommonEnums_Projection_Parse(name, value);
  }

  typedef CommonEnums_PredefinedBucketAcl PredefinedBucketAcl;
  static const PredefinedBucketAcl PREDEFINED_BUCKET_ACL_UNSPECIFIED =
    CommonEnums_PredefinedBucketAcl_PREDEFINED_BUCKET_ACL_UNSPECIFIED;
  static const PredefinedBucketAcl BUCKET_ACL_AUTHENTICATED_READ =
    CommonEnums_PredefinedBucketAcl_BUCKET_ACL_AUTHENTICATED_READ;
  static const PredefinedBucketAcl BUCKET_ACL_PRIVATE =
    CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PRIVATE;
  static const PredefinedBucketAcl BUCKET_ACL_PROJECT_PRIVATE =
    CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PROJECT_PRIVATE;
  static const PredefinedBucketAcl BUCKET_ACL_PUBLIC_READ =
    CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PUBLIC_READ;
  static const PredefinedBucketAcl BUCKET_ACL_PUBLIC_READ_WRITE =
    CommonEnums_PredefinedBucketAcl_BUCKET_ACL_PUBLIC_READ_WRITE;
  static inline bool PredefinedBucketAcl_IsValid(int value) {
    return CommonEnums_PredefinedBucketAcl_IsValid(value);
  }
  static const PredefinedBucketAcl PredefinedBucketAcl_MIN =
    CommonEnums_PredefinedBucketAcl_PredefinedBucketAcl_MIN;
  static const PredefinedBucketAcl PredefinedBucketAcl_MAX =
    CommonEnums_PredefinedBucketAcl_PredefinedBucketAcl_MAX;
  static const int PredefinedBucketAcl_ARRAYSIZE =
    CommonEnums_PredefinedBucketAcl_PredefinedBucketAcl_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PredefinedBucketAcl_descriptor() {
    return CommonEnums_PredefinedBucketAcl_descriptor();
  }
  static inline const ::std::string& PredefinedBucketAcl_Name(PredefinedBucketAcl value) {
    return CommonEnums_PredefinedBucketAcl_Name(value);
  }
  static inline bool PredefinedBucketAcl_Parse(const ::std::string& name,
      PredefinedBucketAcl* value) {
    return CommonEnums_PredefinedBucketAcl_Parse(name, value);
  }

  typedef CommonEnums_PredefinedObjectAcl PredefinedObjectAcl;
  static const PredefinedObjectAcl PREDEFINED_OBJECT_ACL_UNSPECIFIED =
    CommonEnums_PredefinedObjectAcl_PREDEFINED_OBJECT_ACL_UNSPECIFIED;
  static const PredefinedObjectAcl OBJECT_ACL_AUTHENTICATED_READ =
    CommonEnums_PredefinedObjectAcl_OBJECT_ACL_AUTHENTICATED_READ;
  static const PredefinedObjectAcl OBJECT_ACL_BUCKET_OWNER_FULL_CONTROL =
    CommonEnums_PredefinedObjectAcl_OBJECT_ACL_BUCKET_OWNER_FULL_CONTROL;
  static const PredefinedObjectAcl OBJECT_ACL_BUCKET_OWNER_READ =
    CommonEnums_PredefinedObjectAcl_OBJECT_ACL_BUCKET_OWNER_READ;
  static const PredefinedObjectAcl OBJECT_ACL_PRIVATE =
    CommonEnums_PredefinedObjectAcl_OBJECT_ACL_PRIVATE;
  static const PredefinedObjectAcl OBJECT_ACL_PROJECT_PRIVATE =
    CommonEnums_PredefinedObjectAcl_OBJECT_ACL_PROJECT_PRIVATE;
  static const PredefinedObjectAcl OBJECT_ACL_PUBLIC_READ =
    CommonEnums_PredefinedObjectAcl_OBJECT_ACL_PUBLIC_READ;
  static inline bool PredefinedObjectAcl_IsValid(int value) {
    return CommonEnums_PredefinedObjectAcl_IsValid(value);
  }
  static const PredefinedObjectAcl PredefinedObjectAcl_MIN =
    CommonEnums_PredefinedObjectAcl_PredefinedObjectAcl_MIN;
  static const PredefinedObjectAcl PredefinedObjectAcl_MAX =
    CommonEnums_PredefinedObjectAcl_PredefinedObjectAcl_MAX;
  static const int PredefinedObjectAcl_ARRAYSIZE =
    CommonEnums_PredefinedObjectAcl_PredefinedObjectAcl_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PredefinedObjectAcl_descriptor() {
    return CommonEnums_PredefinedObjectAcl_descriptor();
  }
  static inline const ::std::string& PredefinedObjectAcl_Name(PredefinedObjectAcl value) {
    return CommonEnums_PredefinedObjectAcl_Name(value);
  }
  static inline bool PredefinedObjectAcl_Parse(const ::std::string& name,
      PredefinedObjectAcl* value) {
    return CommonEnums_PredefinedObjectAcl_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.storage.v1.CommonEnums)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ContentRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ContentRange) */ {
 public:
  ContentRange();
  virtual ~ContentRange();

  ContentRange(const ContentRange& from);

  inline ContentRange& operator=(const ContentRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContentRange(ContentRange&& from) noexcept
    : ContentRange() {
    *this = ::std::move(from);
  }

  inline ContentRange& operator=(ContentRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ContentRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContentRange* internal_default_instance() {
    return reinterpret_cast<const ContentRange*>(
               &_ContentRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(ContentRange* other);
  friend void swap(ContentRange& a, ContentRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContentRange* New() const final {
    return CreateMaybeMessage<ContentRange>(nullptr);
  }

  ContentRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContentRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContentRange& from);
  void MergeFrom(const ContentRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContentRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // int64 end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // int64 complete_length = 3;
  void clear_complete_length();
  static const int kCompleteLengthFieldNumber = 3;
  ::google::protobuf::int64 complete_length() const;
  void set_complete_length(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ContentRange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  ::google::protobuf::int64 complete_length_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class HmacKeyMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.HmacKeyMetadata) */ {
 public:
  HmacKeyMetadata();
  virtual ~HmacKeyMetadata();

  HmacKeyMetadata(const HmacKeyMetadata& from);

  inline HmacKeyMetadata& operator=(const HmacKeyMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HmacKeyMetadata(HmacKeyMetadata&& from) noexcept
    : HmacKeyMetadata() {
    *this = ::std::move(from);
  }

  inline HmacKeyMetadata& operator=(HmacKeyMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HmacKeyMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HmacKeyMetadata* internal_default_instance() {
    return reinterpret_cast<const HmacKeyMetadata*>(
               &_HmacKeyMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(HmacKeyMetadata* other);
  friend void swap(HmacKeyMetadata& a, HmacKeyMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HmacKeyMetadata* New() const final {
    return CreateMaybeMessage<HmacKeyMetadata>(nullptr);
  }

  HmacKeyMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HmacKeyMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HmacKeyMetadata& from);
  void MergeFrom(const HmacKeyMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HmacKeyMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string access_id = 2;
  void clear_access_id();
  static const int kAccessIdFieldNumber = 2;
  const ::std::string& access_id() const;
  void set_access_id(const ::std::string& value);
  #if LANG_CXX11
  void set_access_id(::std::string&& value);
  #endif
  void set_access_id(const char* value);
  void set_access_id(const char* value, size_t size);
  ::std::string* mutable_access_id();
  ::std::string* release_access_id();
  void set_allocated_access_id(::std::string* access_id);

  // string project_id = 3;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 3;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string service_account_email = 4;
  void clear_service_account_email();
  static const int kServiceAccountEmailFieldNumber = 4;
  const ::std::string& service_account_email() const;
  void set_service_account_email(const ::std::string& value);
  #if LANG_CXX11
  void set_service_account_email(::std::string&& value);
  #endif
  void set_service_account_email(const char* value);
  void set_service_account_email(const char* value, size_t size);
  ::std::string* mutable_service_account_email();
  ::std::string* release_service_account_email();
  void set_allocated_service_account_email(::std::string* service_account_email);

  // string state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // string etag = 8;
  void clear_etag();
  static const int kEtagFieldNumber = 8;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // .google.protobuf.Timestamp time_created = 6;
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 6;
  const ::google::protobuf::Timestamp& time_created() const;
  ::google::protobuf::Timestamp* release_time_created();
  ::google::protobuf::Timestamp* mutable_time_created();
  void set_allocated_time_created(::google::protobuf::Timestamp* time_created);

  // .google.protobuf.Timestamp updated = 7;
  bool has_updated() const;
  void clear_updated();
  static const int kUpdatedFieldNumber = 7;
  const ::google::protobuf::Timestamp& updated() const;
  ::google::protobuf::Timestamp* release_updated();
  ::google::protobuf::Timestamp* mutable_updated();
  void set_allocated_updated(::google::protobuf::Timestamp* updated);

  // @@protoc_insertion_point(class_scope:google.storage.v1.HmacKeyMetadata)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr access_id_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr service_account_email_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::Timestamp* time_created_;
  ::google::protobuf::Timestamp* updated_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Notification_CustomAttributesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Notification_CustomAttributesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Notification_CustomAttributesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Notification_CustomAttributesEntry_DoNotUse();
  Notification_CustomAttributesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Notification_CustomAttributesEntry_DoNotUse& other);
  static const Notification_CustomAttributesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Notification_CustomAttributesEntry_DoNotUse*>(&_Notification_CustomAttributesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Notification) */ {
 public:
  Notification();
  virtual ~Notification();

  Notification(const Notification& from);

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Notification(Notification&& from) noexcept
    : Notification() {
    *this = ::std::move(from);
  }

  inline Notification& operator=(Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notification* internal_default_instance() {
    return reinterpret_cast<const Notification*>(
               &_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(Notification* other);
  friend void swap(Notification& a, Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Notification* New() const final {
    return CreateMaybeMessage<Notification>(nullptr);
  }

  Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string event_types = 2;
  int event_types_size() const;
  void clear_event_types();
  static const int kEventTypesFieldNumber = 2;
  const ::std::string& event_types(int index) const;
  ::std::string* mutable_event_types(int index);
  void set_event_types(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_event_types(int index, ::std::string&& value);
  #endif
  void set_event_types(int index, const char* value);
  void set_event_types(int index, const char* value, size_t size);
  ::std::string* add_event_types();
  void add_event_types(const ::std::string& value);
  #if LANG_CXX11
  void add_event_types(::std::string&& value);
  #endif
  void add_event_types(const char* value);
  void add_event_types(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_event_types();

  // map<string, string> custom_attributes = 3;
  int custom_attributes_size() const;
  void clear_custom_attributes();
  static const int kCustomAttributesFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      custom_attributes() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_custom_attributes();

  // string topic = 1;
  void clear_topic();
  static const int kTopicFieldNumber = 1;
  const ::std::string& topic() const;
  void set_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_topic(::std::string&& value);
  #endif
  void set_topic(const char* value);
  void set_topic(const char* value, size_t size);
  ::std::string* mutable_topic();
  ::std::string* release_topic();
  void set_allocated_topic(::std::string* topic);

  // string etag = 4;
  void clear_etag();
  static const int kEtagFieldNumber = 4;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string object_name_prefix = 5;
  void clear_object_name_prefix();
  static const int kObjectNamePrefixFieldNumber = 5;
  const ::std::string& object_name_prefix() const;
  void set_object_name_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_object_name_prefix(::std::string&& value);
  #endif
  void set_object_name_prefix(const char* value);
  void set_object_name_prefix(const char* value, size_t size);
  ::std::string* mutable_object_name_prefix();
  ::std::string* release_object_name_prefix();
  void set_allocated_object_name_prefix(::std::string* object_name_prefix);

  // string payload_format = 6;
  void clear_payload_format();
  static const int kPayloadFormatFieldNumber = 6;
  const ::std::string& payload_format() const;
  void set_payload_format(const ::std::string& value);
  #if LANG_CXX11
  void set_payload_format(::std::string&& value);
  #endif
  void set_payload_format(const char* value);
  void set_payload_format(const char* value, size_t size);
  ::std::string* mutable_payload_format();
  ::std::string* release_payload_format();
  void set_allocated_payload_format(::std::string* payload_format);

  // string id = 7;
  void clear_id();
  static const int kIdFieldNumber = 7;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> event_types_;
  ::google::protobuf::internal::MapField<
      Notification_CustomAttributesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > custom_attributes_;
  ::google::protobuf::internal::ArenaStringPtr topic_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr object_name_prefix_;
  ::google::protobuf::internal::ArenaStringPtr payload_format_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ListNotificationsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ListNotificationsResponse) */ {
 public:
  ListNotificationsResponse();
  virtual ~ListNotificationsResponse();

  ListNotificationsResponse(const ListNotificationsResponse& from);

  inline ListNotificationsResponse& operator=(const ListNotificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListNotificationsResponse(ListNotificationsResponse&& from) noexcept
    : ListNotificationsResponse() {
    *this = ::std::move(from);
  }

  inline ListNotificationsResponse& operator=(ListNotificationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListNotificationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListNotificationsResponse* internal_default_instance() {
    return reinterpret_cast<const ListNotificationsResponse*>(
               &_ListNotificationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(ListNotificationsResponse* other);
  friend void swap(ListNotificationsResponse& a, ListNotificationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListNotificationsResponse* New() const final {
    return CreateMaybeMessage<ListNotificationsResponse>(nullptr);
  }

  ListNotificationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListNotificationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListNotificationsResponse& from);
  void MergeFrom(const ListNotificationsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListNotificationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.storage.v1.Notification items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  ::google::storage::v1::Notification* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Notification >*
      mutable_items();
  const ::google::storage::v1::Notification& items(int index) const;
  ::google::storage::v1::Notification* add_items();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Notification >&
      items() const;

  // @@protoc_insertion_point(class_scope:google.storage.v1.ListNotificationsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Notification > items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Object_CustomerEncryption final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Object.CustomerEncryption) */ {
 public:
  Object_CustomerEncryption();
  virtual ~Object_CustomerEncryption();

  Object_CustomerEncryption(const Object_CustomerEncryption& from);

  inline Object_CustomerEncryption& operator=(const Object_CustomerEncryption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object_CustomerEncryption(Object_CustomerEncryption&& from) noexcept
    : Object_CustomerEncryption() {
    *this = ::std::move(from);
  }

  inline Object_CustomerEncryption& operator=(Object_CustomerEncryption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Object_CustomerEncryption& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object_CustomerEncryption* internal_default_instance() {
    return reinterpret_cast<const Object_CustomerEncryption*>(
               &_Object_CustomerEncryption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(Object_CustomerEncryption* other);
  friend void swap(Object_CustomerEncryption& a, Object_CustomerEncryption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object_CustomerEncryption* New() const final {
    return CreateMaybeMessage<Object_CustomerEncryption>(nullptr);
  }

  Object_CustomerEncryption* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Object_CustomerEncryption>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Object_CustomerEncryption& from);
  void MergeFrom(const Object_CustomerEncryption& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Object_CustomerEncryption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string encryption_algorithm = 1;
  void clear_encryption_algorithm();
  static const int kEncryptionAlgorithmFieldNumber = 1;
  const ::std::string& encryption_algorithm() const;
  void set_encryption_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_encryption_algorithm(::std::string&& value);
  #endif
  void set_encryption_algorithm(const char* value);
  void set_encryption_algorithm(const char* value, size_t size);
  ::std::string* mutable_encryption_algorithm();
  ::std::string* release_encryption_algorithm();
  void set_allocated_encryption_algorithm(::std::string* encryption_algorithm);

  // string key_sha256 = 2;
  void clear_key_sha256();
  static const int kKeySha256FieldNumber = 2;
  const ::std::string& key_sha256() const;
  void set_key_sha256(const ::std::string& value);
  #if LANG_CXX11
  void set_key_sha256(::std::string&& value);
  #endif
  void set_key_sha256(const char* value);
  void set_key_sha256(const char* value, size_t size);
  ::std::string* mutable_key_sha256();
  ::std::string* release_key_sha256();
  void set_allocated_key_sha256(::std::string* key_sha256);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Object.CustomerEncryption)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr encryption_algorithm_;
  ::google::protobuf::internal::ArenaStringPtr key_sha256_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Object_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Object_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Object_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Object_MetadataEntry_DoNotUse();
  Object_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Object_MetadataEntry_DoNotUse& other);
  static const Object_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Object_MetadataEntry_DoNotUse*>(&_Object_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Object final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Object) */ {
 public:
  Object();
  virtual ~Object();

  Object(const Object& from);

  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object(Object&& from) noexcept
    : Object() {
    *this = ::std::move(from);
  }

  inline Object& operator=(Object&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Object& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object* internal_default_instance() {
    return reinterpret_cast<const Object*>(
               &_Object_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(Object* other);
  friend void swap(Object& a, Object& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object* New() const final {
    return CreateMaybeMessage<Object>(nullptr);
  }

  Object* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Object>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Object* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Object_CustomerEncryption CustomerEncryption;

  // accessors -------------------------------------------------------

  // repeated .google.storage.v1.ObjectAccessControl acl = 4;
  int acl_size() const;
  void clear_acl();
  static const int kAclFieldNumber = 4;
  ::google::storage::v1::ObjectAccessControl* mutable_acl(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >*
      mutable_acl();
  const ::google::storage::v1::ObjectAccessControl& acl(int index) const;
  ::google::storage::v1::ObjectAccessControl* add_acl();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >&
      acl() const;

  // map<string, string> metadata = 21;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 21;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string content_encoding = 1;
  void clear_content_encoding();
  static const int kContentEncodingFieldNumber = 1;
  const ::std::string& content_encoding() const;
  void set_content_encoding(const ::std::string& value);
  #if LANG_CXX11
  void set_content_encoding(::std::string&& value);
  #endif
  void set_content_encoding(const char* value);
  void set_content_encoding(const char* value, size_t size);
  ::std::string* mutable_content_encoding();
  ::std::string* release_content_encoding();
  void set_allocated_content_encoding(::std::string* content_encoding);

  // string content_disposition = 2;
  void clear_content_disposition();
  static const int kContentDispositionFieldNumber = 2;
  const ::std::string& content_disposition() const;
  void set_content_disposition(const ::std::string& value);
  #if LANG_CXX11
  void set_content_disposition(::std::string&& value);
  #endif
  void set_content_disposition(const char* value);
  void set_content_disposition(const char* value, size_t size);
  ::std::string* mutable_content_disposition();
  ::std::string* release_content_disposition();
  void set_allocated_content_disposition(::std::string* content_disposition);

  // string cache_control = 3;
  void clear_cache_control();
  static const int kCacheControlFieldNumber = 3;
  const ::std::string& cache_control() const;
  void set_cache_control(const ::std::string& value);
  #if LANG_CXX11
  void set_cache_control(::std::string&& value);
  #endif
  void set_cache_control(const char* value);
  void set_cache_control(const char* value, size_t size);
  ::std::string* mutable_cache_control();
  ::std::string* release_cache_control();
  void set_allocated_cache_control(::std::string* cache_control);

  // string content_language = 5;
  void clear_content_language();
  static const int kContentLanguageFieldNumber = 5;
  const ::std::string& content_language() const;
  void set_content_language(const ::std::string& value);
  #if LANG_CXX11
  void set_content_language(::std::string&& value);
  #endif
  void set_content_language(const char* value);
  void set_content_language(const char* value, size_t size);
  ::std::string* mutable_content_language();
  ::std::string* release_content_language();
  void set_allocated_content_language(::std::string* content_language);

  // string content_type = 8;
  void clear_content_type();
  static const int kContentTypeFieldNumber = 8;
  const ::std::string& content_type() const;
  void set_content_type(const ::std::string& value);
  #if LANG_CXX11
  void set_content_type(::std::string&& value);
  #endif
  void set_content_type(const char* value);
  void set_content_type(const char* value, size_t size);
  ::std::string* mutable_content_type();
  ::std::string* release_content_type();
  void set_allocated_content_type(::std::string* content_type);

  // string md5_hash = 13;
  void clear_md5_hash();
  static const int kMd5HashFieldNumber = 13;
  const ::std::string& md5_hash() const;
  void set_md5_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_md5_hash(::std::string&& value);
  #endif
  void set_md5_hash(const char* value);
  void set_md5_hash(const char* value, size_t size);
  ::std::string* mutable_md5_hash();
  ::std::string* release_md5_hash();
  void set_allocated_md5_hash(::std::string* md5_hash);

  // string etag = 14;
  void clear_etag();
  static const int kEtagFieldNumber = 14;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string storage_class = 16;
  void clear_storage_class();
  static const int kStorageClassFieldNumber = 16;
  const ::std::string& storage_class() const;
  void set_storage_class(const ::std::string& value);
  #if LANG_CXX11
  void set_storage_class(::std::string&& value);
  #endif
  void set_storage_class(const char* value);
  void set_storage_class(const char* value, size_t size);
  ::std::string* mutable_storage_class();
  ::std::string* release_storage_class();
  void set_allocated_storage_class(::std::string* storage_class);

  // string kms_key_name = 17;
  void clear_kms_key_name();
  static const int kKmsKeyNameFieldNumber = 17;
  const ::std::string& kms_key_name() const;
  void set_kms_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_kms_key_name(::std::string&& value);
  #endif
  void set_kms_key_name(const char* value);
  void set_kms_key_name(const char* value, size_t size);
  ::std::string* mutable_kms_key_name();
  ::std::string* release_kms_key_name();
  void set_allocated_kms_key_name(::std::string* kms_key_name);

  // string name = 23;
  void clear_name();
  static const int kNameFieldNumber = 23;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string id = 24;
  void clear_id();
  static const int kIdFieldNumber = 24;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string bucket = 25;
  void clear_bucket();
  static const int kBucketFieldNumber = 25;
  const ::std::string& bucket() const;
  void set_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket(::std::string&& value);
  #endif
  void set_bucket(const char* value);
  void set_bucket(const char* value, size_t size);
  ::std::string* mutable_bucket();
  ::std::string* release_bucket();
  void set_allocated_bucket(::std::string* bucket);

  // .google.protobuf.Timestamp time_deleted = 7;
  bool has_time_deleted() const;
  void clear_time_deleted();
  static const int kTimeDeletedFieldNumber = 7;
  const ::google::protobuf::Timestamp& time_deleted() const;
  ::google::protobuf::Timestamp* release_time_deleted();
  ::google::protobuf::Timestamp* mutable_time_deleted();
  void set_allocated_time_deleted(::google::protobuf::Timestamp* time_deleted);

  // .google.protobuf.Timestamp time_created = 10;
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 10;
  const ::google::protobuf::Timestamp& time_created() const;
  ::google::protobuf::Timestamp* release_time_created();
  ::google::protobuf::Timestamp* mutable_time_created();
  void set_allocated_time_created(::google::protobuf::Timestamp* time_created);

  // .google.protobuf.UInt32Value crc32c = 11;
  bool has_crc32c() const;
  void clear_crc32c();
  static const int kCrc32CFieldNumber = 11;
  const ::google::protobuf::UInt32Value& crc32c() const;
  ::google::protobuf::UInt32Value* release_crc32c();
  ::google::protobuf::UInt32Value* mutable_crc32c();
  void set_allocated_crc32c(::google::protobuf::UInt32Value* crc32c);

  // .google.protobuf.Timestamp updated = 15;
  bool has_updated() const;
  void clear_updated();
  static const int kUpdatedFieldNumber = 15;
  const ::google::protobuf::Timestamp& updated() const;
  ::google::protobuf::Timestamp* release_updated();
  ::google::protobuf::Timestamp* mutable_updated();
  void set_allocated_updated(::google::protobuf::Timestamp* updated);

  // .google.protobuf.Timestamp time_storage_class_updated = 18;
  bool has_time_storage_class_updated() const;
  void clear_time_storage_class_updated();
  static const int kTimeStorageClassUpdatedFieldNumber = 18;
  const ::google::protobuf::Timestamp& time_storage_class_updated() const;
  ::google::protobuf::Timestamp* release_time_storage_class_updated();
  ::google::protobuf::Timestamp* mutable_time_storage_class_updated();
  void set_allocated_time_storage_class_updated(::google::protobuf::Timestamp* time_storage_class_updated);

  // .google.protobuf.Timestamp retention_expiration_time = 20;
  bool has_retention_expiration_time() const;
  void clear_retention_expiration_time();
  static const int kRetentionExpirationTimeFieldNumber = 20;
  const ::google::protobuf::Timestamp& retention_expiration_time() const;
  ::google::protobuf::Timestamp* release_retention_expiration_time();
  ::google::protobuf::Timestamp* mutable_retention_expiration_time();
  void set_allocated_retention_expiration_time(::google::protobuf::Timestamp* retention_expiration_time);

  // .google.storage.v1.Owner owner = 27;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 27;
  const ::google::storage::v1::Owner& owner() const;
  ::google::storage::v1::Owner* release_owner();
  ::google::storage::v1::Owner* mutable_owner();
  void set_allocated_owner(::google::storage::v1::Owner* owner);

  // .google.storage.v1.Object.CustomerEncryption customer_encryption = 28;
  bool has_customer_encryption() const;
  void clear_customer_encryption();
  static const int kCustomerEncryptionFieldNumber = 28;
  const ::google::storage::v1::Object_CustomerEncryption& customer_encryption() const;
  ::google::storage::v1::Object_CustomerEncryption* release_customer_encryption();
  ::google::storage::v1::Object_CustomerEncryption* mutable_customer_encryption();
  void set_allocated_customer_encryption(::google::storage::v1::Object_CustomerEncryption* customer_encryption);

  // .google.protobuf.BoolValue event_based_hold = 29;
  bool has_event_based_hold() const;
  void clear_event_based_hold();
  static const int kEventBasedHoldFieldNumber = 29;
  const ::google::protobuf::BoolValue& event_based_hold() const;
  ::google::protobuf::BoolValue* release_event_based_hold();
  ::google::protobuf::BoolValue* mutable_event_based_hold();
  void set_allocated_event_based_hold(::google::protobuf::BoolValue* event_based_hold);

  // int64 metageneration = 6;
  void clear_metageneration();
  static const int kMetagenerationFieldNumber = 6;
  ::google::protobuf::int64 metageneration() const;
  void set_metageneration(::google::protobuf::int64 value);

  // int64 size = 9;
  void clear_size();
  static const int kSizeFieldNumber = 9;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // int32 component_count = 12;
  void clear_component_count();
  static const int kComponentCountFieldNumber = 12;
  ::google::protobuf::int32 component_count() const;
  void set_component_count(::google::protobuf::int32 value);

  // bool temporary_hold = 19;
  void clear_temporary_hold();
  static const int kTemporaryHoldFieldNumber = 19;
  bool temporary_hold() const;
  void set_temporary_hold(bool value);

  // int64 generation = 26;
  void clear_generation();
  static const int kGenerationFieldNumber = 26;
  ::google::protobuf::int64 generation() const;
  void set_generation(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Object)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl > acl_;
  ::google::protobuf::internal::MapField<
      Object_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_encoding_;
  ::google::protobuf::internal::ArenaStringPtr content_disposition_;
  ::google::protobuf::internal::ArenaStringPtr cache_control_;
  ::google::protobuf::internal::ArenaStringPtr content_language_;
  ::google::protobuf::internal::ArenaStringPtr content_type_;
  ::google::protobuf::internal::ArenaStringPtr md5_hash_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr storage_class_;
  ::google::protobuf::internal::ArenaStringPtr kms_key_name_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr bucket_;
  ::google::protobuf::Timestamp* time_deleted_;
  ::google::protobuf::Timestamp* time_created_;
  ::google::protobuf::UInt32Value* crc32c_;
  ::google::protobuf::Timestamp* updated_;
  ::google::protobuf::Timestamp* time_storage_class_updated_;
  ::google::protobuf::Timestamp* retention_expiration_time_;
  ::google::storage::v1::Owner* owner_;
  ::google::storage::v1::Object_CustomerEncryption* customer_encryption_;
  ::google::protobuf::BoolValue* event_based_hold_;
  ::google::protobuf::int64 metageneration_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int32 component_count_;
  bool temporary_hold_;
  ::google::protobuf::int64 generation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ObjectAccessControl final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ObjectAccessControl) */ {
 public:
  ObjectAccessControl();
  virtual ~ObjectAccessControl();

  ObjectAccessControl(const ObjectAccessControl& from);

  inline ObjectAccessControl& operator=(const ObjectAccessControl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectAccessControl(ObjectAccessControl&& from) noexcept
    : ObjectAccessControl() {
    *this = ::std::move(from);
  }

  inline ObjectAccessControl& operator=(ObjectAccessControl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ObjectAccessControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectAccessControl* internal_default_instance() {
    return reinterpret_cast<const ObjectAccessControl*>(
               &_ObjectAccessControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(ObjectAccessControl* other);
  friend void swap(ObjectAccessControl& a, ObjectAccessControl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectAccessControl* New() const final {
    return CreateMaybeMessage<ObjectAccessControl>(nullptr);
  }

  ObjectAccessControl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObjectAccessControl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObjectAccessControl& from);
  void MergeFrom(const ObjectAccessControl& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectAccessControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string role = 1;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  #if LANG_CXX11
  void set_role(::std::string&& value);
  #endif
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // string etag = 2;
  void clear_etag();
  static const int kEtagFieldNumber = 2;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string bucket = 4;
  void clear_bucket();
  static const int kBucketFieldNumber = 4;
  const ::std::string& bucket() const;
  void set_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket(::std::string&& value);
  #endif
  void set_bucket(const char* value);
  void set_bucket(const char* value, size_t size);
  ::std::string* mutable_bucket();
  ::std::string* release_bucket();
  void set_allocated_bucket(::std::string* bucket);

  // string object = 5;
  void clear_object();
  static const int kObjectFieldNumber = 5;
  const ::std::string& object() const;
  void set_object(const ::std::string& value);
  #if LANG_CXX11
  void set_object(::std::string&& value);
  #endif
  void set_object(const char* value);
  void set_object(const char* value, size_t size);
  ::std::string* mutable_object();
  ::std::string* release_object();
  void set_allocated_object(::std::string* object);

  // string entity = 7;
  void clear_entity();
  static const int kEntityFieldNumber = 7;
  const ::std::string& entity() const;
  void set_entity(const ::std::string& value);
  #if LANG_CXX11
  void set_entity(::std::string&& value);
  #endif
  void set_entity(const char* value);
  void set_entity(const char* value, size_t size);
  ::std::string* mutable_entity();
  ::std::string* release_entity();
  void set_allocated_entity(::std::string* entity);

  // string entity_id = 8;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 8;
  const ::std::string& entity_id() const;
  void set_entity_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_id(::std::string&& value);
  #endif
  void set_entity_id(const char* value);
  void set_entity_id(const char* value, size_t size);
  ::std::string* mutable_entity_id();
  ::std::string* release_entity_id();
  void set_allocated_entity_id(::std::string* entity_id);

  // string email = 9;
  void clear_email();
  static const int kEmailFieldNumber = 9;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // string domain = 10;
  void clear_domain();
  static const int kDomainFieldNumber = 10;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // .google.storage.v1.ProjectTeam project_team = 11;
  bool has_project_team() const;
  void clear_project_team();
  static const int kProjectTeamFieldNumber = 11;
  const ::google::storage::v1::ProjectTeam& project_team() const;
  ::google::storage::v1::ProjectTeam* release_project_team();
  ::google::storage::v1::ProjectTeam* mutable_project_team();
  void set_allocated_project_team(::google::storage::v1::ProjectTeam* project_team);

  // int64 generation = 6;
  void clear_generation();
  static const int kGenerationFieldNumber = 6;
  ::google::protobuf::int64 generation() const;
  void set_generation(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ObjectAccessControl)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr bucket_;
  ::google::protobuf::internal::ArenaStringPtr object_;
  ::google::protobuf::internal::ArenaStringPtr entity_;
  ::google::protobuf::internal::ArenaStringPtr entity_id_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::storage::v1::ProjectTeam* project_team_;
  ::google::protobuf::int64 generation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ListObjectAccessControlsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ListObjectAccessControlsResponse) */ {
 public:
  ListObjectAccessControlsResponse();
  virtual ~ListObjectAccessControlsResponse();

  ListObjectAccessControlsResponse(const ListObjectAccessControlsResponse& from);

  inline ListObjectAccessControlsResponse& operator=(const ListObjectAccessControlsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListObjectAccessControlsResponse(ListObjectAccessControlsResponse&& from) noexcept
    : ListObjectAccessControlsResponse() {
    *this = ::std::move(from);
  }

  inline ListObjectAccessControlsResponse& operator=(ListObjectAccessControlsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListObjectAccessControlsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListObjectAccessControlsResponse* internal_default_instance() {
    return reinterpret_cast<const ListObjectAccessControlsResponse*>(
               &_ListObjectAccessControlsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(ListObjectAccessControlsResponse* other);
  friend void swap(ListObjectAccessControlsResponse& a, ListObjectAccessControlsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListObjectAccessControlsResponse* New() const final {
    return CreateMaybeMessage<ListObjectAccessControlsResponse>(nullptr);
  }

  ListObjectAccessControlsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListObjectAccessControlsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListObjectAccessControlsResponse& from);
  void MergeFrom(const ListObjectAccessControlsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListObjectAccessControlsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.storage.v1.ObjectAccessControl items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  ::google::storage::v1::ObjectAccessControl* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >*
      mutable_items();
  const ::google::storage::v1::ObjectAccessControl& items(int index) const;
  ::google::storage::v1::ObjectAccessControl* add_items();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >&
      items() const;

  // @@protoc_insertion_point(class_scope:google.storage.v1.ListObjectAccessControlsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl > items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ListObjectsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ListObjectsResponse) */ {
 public:
  ListObjectsResponse();
  virtual ~ListObjectsResponse();

  ListObjectsResponse(const ListObjectsResponse& from);

  inline ListObjectsResponse& operator=(const ListObjectsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListObjectsResponse(ListObjectsResponse&& from) noexcept
    : ListObjectsResponse() {
    *this = ::std::move(from);
  }

  inline ListObjectsResponse& operator=(ListObjectsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListObjectsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListObjectsResponse* internal_default_instance() {
    return reinterpret_cast<const ListObjectsResponse*>(
               &_ListObjectsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(ListObjectsResponse* other);
  friend void swap(ListObjectsResponse& a, ListObjectsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListObjectsResponse* New() const final {
    return CreateMaybeMessage<ListObjectsResponse>(nullptr);
  }

  ListObjectsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListObjectsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListObjectsResponse& from);
  void MergeFrom(const ListObjectsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListObjectsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string prefixes = 1;
  int prefixes_size() const;
  void clear_prefixes();
  static const int kPrefixesFieldNumber = 1;
  const ::std::string& prefixes(int index) const;
  ::std::string* mutable_prefixes(int index);
  void set_prefixes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_prefixes(int index, ::std::string&& value);
  #endif
  void set_prefixes(int index, const char* value);
  void set_prefixes(int index, const char* value, size_t size);
  ::std::string* add_prefixes();
  void add_prefixes(const ::std::string& value);
  #if LANG_CXX11
  void add_prefixes(::std::string&& value);
  #endif
  void add_prefixes(const char* value);
  void add_prefixes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& prefixes() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_prefixes();

  // repeated .google.storage.v1.Object items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::google::storage::v1::Object* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Object >*
      mutable_items();
  const ::google::storage::v1::Object& items(int index) const;
  ::google::storage::v1::Object* add_items();
  const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Object >&
      items() const;

  // string next_page_token = 3;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 3;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ListObjectsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> prefixes_;
  ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Object > items_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ProjectTeam final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ProjectTeam) */ {
 public:
  ProjectTeam();
  virtual ~ProjectTeam();

  ProjectTeam(const ProjectTeam& from);

  inline ProjectTeam& operator=(const ProjectTeam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectTeam(ProjectTeam&& from) noexcept
    : ProjectTeam() {
    *this = ::std::move(from);
  }

  inline ProjectTeam& operator=(ProjectTeam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectTeam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectTeam* internal_default_instance() {
    return reinterpret_cast<const ProjectTeam*>(
               &_ProjectTeam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(ProjectTeam* other);
  friend void swap(ProjectTeam& a, ProjectTeam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectTeam* New() const final {
    return CreateMaybeMessage<ProjectTeam>(nullptr);
  }

  ProjectTeam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectTeam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectTeam& from);
  void MergeFrom(const ProjectTeam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectTeam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_number = 1;
  void clear_project_number();
  static const int kProjectNumberFieldNumber = 1;
  const ::std::string& project_number() const;
  void set_project_number(const ::std::string& value);
  #if LANG_CXX11
  void set_project_number(::std::string&& value);
  #endif
  void set_project_number(const char* value);
  void set_project_number(const char* value, size_t size);
  ::std::string* mutable_project_number();
  ::std::string* release_project_number();
  void set_allocated_project_number(::std::string* project_number);

  // string team = 2;
  void clear_team();
  static const int kTeamFieldNumber = 2;
  const ::std::string& team() const;
  void set_team(const ::std::string& value);
  #if LANG_CXX11
  void set_team(::std::string&& value);
  #endif
  void set_team(const char* value);
  void set_team(const char* value, size_t size);
  ::std::string* mutable_team();
  ::std::string* release_team();
  void set_allocated_team(::std::string* team);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ProjectTeam)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_number_;
  ::google::protobuf::internal::ArenaStringPtr team_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class ServiceAccount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.ServiceAccount) */ {
 public:
  ServiceAccount();
  virtual ~ServiceAccount();

  ServiceAccount(const ServiceAccount& from);

  inline ServiceAccount& operator=(const ServiceAccount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServiceAccount(ServiceAccount&& from) noexcept
    : ServiceAccount() {
    *this = ::std::move(from);
  }

  inline ServiceAccount& operator=(ServiceAccount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServiceAccount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceAccount* internal_default_instance() {
    return reinterpret_cast<const ServiceAccount*>(
               &_ServiceAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(ServiceAccount* other);
  friend void swap(ServiceAccount& a, ServiceAccount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServiceAccount* New() const final {
    return CreateMaybeMessage<ServiceAccount>(nullptr);
  }

  ServiceAccount* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServiceAccount>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServiceAccount& from);
  void MergeFrom(const ServiceAccount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string email_address = 1;
  void clear_email_address();
  static const int kEmailAddressFieldNumber = 1;
  const ::std::string& email_address() const;
  void set_email_address(const ::std::string& value);
  #if LANG_CXX11
  void set_email_address(::std::string&& value);
  #endif
  void set_email_address(const char* value);
  void set_email_address(const char* value, size_t size);
  ::std::string* mutable_email_address();
  ::std::string* release_email_address();
  void set_allocated_email_address(::std::string* email_address);

  // @@protoc_insertion_point(class_scope:google.storage.v1.ServiceAccount)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr email_address_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// -------------------------------------------------------------------

class Owner final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storage.v1.Owner) */ {
 public:
  Owner();
  virtual ~Owner();

  Owner(const Owner& from);

  inline Owner& operator=(const Owner& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Owner(Owner&& from) noexcept
    : Owner() {
    *this = ::std::move(from);
  }

  inline Owner& operator=(Owner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Owner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Owner* internal_default_instance() {
    return reinterpret_cast<const Owner*>(
               &_Owner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(Owner* other);
  friend void swap(Owner& a, Owner& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Owner* New() const final {
    return CreateMaybeMessage<Owner>(nullptr);
  }

  Owner* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Owner>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Owner& from);
  void MergeFrom(const Owner& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Owner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string entity = 1;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::std::string& entity() const;
  void set_entity(const ::std::string& value);
  #if LANG_CXX11
  void set_entity(::std::string&& value);
  #endif
  void set_entity(const char* value);
  void set_entity(const char* value, size_t size);
  ::std::string* mutable_entity();
  ::std::string* release_entity();
  void set_allocated_entity(::std::string* entity);

  // string entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  const ::std::string& entity_id() const;
  void set_entity_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_id(::std::string&& value);
  #endif
  void set_entity_id(const char* value);
  void set_entity_id(const char* value, size_t size);
  ::std::string* mutable_entity_id();
  ::std::string* release_entity_id();
  void set_allocated_entity_id(::std::string* entity_id);

  // @@protoc_insertion_point(class_scope:google.storage.v1.Owner)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr entity_;
  ::google::protobuf::internal::ArenaStringPtr entity_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fstorage_2fv1_2fstorage_5fresources_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Bucket_Billing

// bool requester_pays = 1;
inline void Bucket_Billing::clear_requester_pays() {
  requester_pays_ = false;
}
inline bool Bucket_Billing::requester_pays() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Billing.requester_pays)
  return requester_pays_;
}
inline void Bucket_Billing::set_requester_pays(bool value) {
  
  requester_pays_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Billing.requester_pays)
}

// -------------------------------------------------------------------

// Bucket_Cors

// repeated string origin = 1;
inline int Bucket_Cors::origin_size() const {
  return origin_.size();
}
inline void Bucket_Cors::clear_origin() {
  origin_.Clear();
}
inline const ::std::string& Bucket_Cors::origin(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Cors.origin)
  return origin_.Get(index);
}
inline ::std::string* Bucket_Cors::mutable_origin(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Cors.origin)
  return origin_.Mutable(index);
}
inline void Bucket_Cors::set_origin(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Cors.origin)
  origin_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Bucket_Cors::set_origin(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Cors.origin)
  origin_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Bucket_Cors::set_origin(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  origin_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Cors.origin)
}
inline void Bucket_Cors::set_origin(int index, const char* value, size_t size) {
  origin_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Cors.origin)
}
inline ::std::string* Bucket_Cors::add_origin() {
  // @@protoc_insertion_point(field_add_mutable:google.storage.v1.Bucket.Cors.origin)
  return origin_.Add();
}
inline void Bucket_Cors::add_origin(const ::std::string& value) {
  origin_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Cors.origin)
}
#if LANG_CXX11
inline void Bucket_Cors::add_origin(::std::string&& value) {
  origin_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Cors.origin)
}
#endif
inline void Bucket_Cors::add_origin(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  origin_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storage.v1.Bucket.Cors.origin)
}
inline void Bucket_Cors::add_origin(const char* value, size_t size) {
  origin_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storage.v1.Bucket.Cors.origin)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Bucket_Cors::origin() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.Cors.origin)
  return origin_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Bucket_Cors::mutable_origin() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.Cors.origin)
  return &origin_;
}

// repeated string method = 2;
inline int Bucket_Cors::method_size() const {
  return method_.size();
}
inline void Bucket_Cors::clear_method() {
  method_.Clear();
}
inline const ::std::string& Bucket_Cors::method(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Cors.method)
  return method_.Get(index);
}
inline ::std::string* Bucket_Cors::mutable_method(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Cors.method)
  return method_.Mutable(index);
}
inline void Bucket_Cors::set_method(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Cors.method)
  method_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Bucket_Cors::set_method(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Cors.method)
  method_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Bucket_Cors::set_method(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  method_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Cors.method)
}
inline void Bucket_Cors::set_method(int index, const char* value, size_t size) {
  method_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Cors.method)
}
inline ::std::string* Bucket_Cors::add_method() {
  // @@protoc_insertion_point(field_add_mutable:google.storage.v1.Bucket.Cors.method)
  return method_.Add();
}
inline void Bucket_Cors::add_method(const ::std::string& value) {
  method_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Cors.method)
}
#if LANG_CXX11
inline void Bucket_Cors::add_method(::std::string&& value) {
  method_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Cors.method)
}
#endif
inline void Bucket_Cors::add_method(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  method_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storage.v1.Bucket.Cors.method)
}
inline void Bucket_Cors::add_method(const char* value, size_t size) {
  method_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storage.v1.Bucket.Cors.method)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Bucket_Cors::method() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.Cors.method)
  return method_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Bucket_Cors::mutable_method() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.Cors.method)
  return &method_;
}

// repeated string response_header = 3;
inline int Bucket_Cors::response_header_size() const {
  return response_header_.size();
}
inline void Bucket_Cors::clear_response_header() {
  response_header_.Clear();
}
inline const ::std::string& Bucket_Cors::response_header(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Cors.response_header)
  return response_header_.Get(index);
}
inline ::std::string* Bucket_Cors::mutable_response_header(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Cors.response_header)
  return response_header_.Mutable(index);
}
inline void Bucket_Cors::set_response_header(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Cors.response_header)
  response_header_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Bucket_Cors::set_response_header(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Cors.response_header)
  response_header_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Bucket_Cors::set_response_header(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  response_header_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Cors.response_header)
}
inline void Bucket_Cors::set_response_header(int index, const char* value, size_t size) {
  response_header_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Cors.response_header)
}
inline ::std::string* Bucket_Cors::add_response_header() {
  // @@protoc_insertion_point(field_add_mutable:google.storage.v1.Bucket.Cors.response_header)
  return response_header_.Add();
}
inline void Bucket_Cors::add_response_header(const ::std::string& value) {
  response_header_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Cors.response_header)
}
#if LANG_CXX11
inline void Bucket_Cors::add_response_header(::std::string&& value) {
  response_header_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Cors.response_header)
}
#endif
inline void Bucket_Cors::add_response_header(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  response_header_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storage.v1.Bucket.Cors.response_header)
}
inline void Bucket_Cors::add_response_header(const char* value, size_t size) {
  response_header_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storage.v1.Bucket.Cors.response_header)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Bucket_Cors::response_header() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.Cors.response_header)
  return response_header_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Bucket_Cors::mutable_response_header() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.Cors.response_header)
  return &response_header_;
}

// int32 max_age_seconds = 4;
inline void Bucket_Cors::clear_max_age_seconds() {
  max_age_seconds_ = 0;
}
inline ::google::protobuf::int32 Bucket_Cors::max_age_seconds() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Cors.max_age_seconds)
  return max_age_seconds_;
}
inline void Bucket_Cors::set_max_age_seconds(::google::protobuf::int32 value) {
  
  max_age_seconds_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Cors.max_age_seconds)
}

// -------------------------------------------------------------------

// Bucket_Encryption

// string default_kms_key_name = 1;
inline void Bucket_Encryption::clear_default_kms_key_name() {
  default_kms_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket_Encryption::default_kms_key_name() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Encryption.default_kms_key_name)
  return default_kms_key_name_.GetNoArena();
}
inline void Bucket_Encryption::set_default_kms_key_name(const ::std::string& value) {
  
  default_kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Encryption.default_kms_key_name)
}
#if LANG_CXX11
inline void Bucket_Encryption::set_default_kms_key_name(::std::string&& value) {
  
  default_kms_key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.Encryption.default_kms_key_name)
}
#endif
inline void Bucket_Encryption::set_default_kms_key_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  default_kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Encryption.default_kms_key_name)
}
inline void Bucket_Encryption::set_default_kms_key_name(const char* value, size_t size) {
  
  default_kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Encryption.default_kms_key_name)
}
inline ::std::string* Bucket_Encryption::mutable_default_kms_key_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Encryption.default_kms_key_name)
  return default_kms_key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket_Encryption::release_default_kms_key_name() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Encryption.default_kms_key_name)
  
  return default_kms_key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket_Encryption::set_allocated_default_kms_key_name(::std::string* default_kms_key_name) {
  if (default_kms_key_name != nullptr) {
    
  } else {
    
  }
  default_kms_key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_kms_key_name);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Encryption.default_kms_key_name)
}

// -------------------------------------------------------------------

// Bucket_IamConfiguration_UniformBucketLevelAccess

// bool enabled = 1;
inline void Bucket_IamConfiguration_UniformBucketLevelAccess::clear_enabled() {
  enabled_ = false;
}
inline bool Bucket_IamConfiguration_UniformBucketLevelAccess::enabled() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess.enabled)
  return enabled_;
}
inline void Bucket_IamConfiguration_UniformBucketLevelAccess::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess.enabled)
}

// .google.protobuf.Timestamp locked_time = 2;
inline bool Bucket_IamConfiguration_UniformBucketLevelAccess::has_locked_time() const {
  return this != internal_default_instance() && locked_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Bucket_IamConfiguration_UniformBucketLevelAccess::locked_time() const {
  const ::google::protobuf::Timestamp* p = locked_time_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess.locked_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Bucket_IamConfiguration_UniformBucketLevelAccess::release_locked_time() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess.locked_time)
  
  ::google::protobuf::Timestamp* temp = locked_time_;
  locked_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Bucket_IamConfiguration_UniformBucketLevelAccess::mutable_locked_time() {
  
  if (locked_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    locked_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess.locked_time)
  return locked_time_;
}
inline void Bucket_IamConfiguration_UniformBucketLevelAccess::set_allocated_locked_time(::google::protobuf::Timestamp* locked_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(locked_time_);
  }
  if (locked_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(locked_time)->GetArena();
    if (message_arena != submessage_arena) {
      locked_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, locked_time, submessage_arena);
    }
    
  } else {
    
  }
  locked_time_ = locked_time;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess.locked_time)
}

// -------------------------------------------------------------------

// Bucket_IamConfiguration

// .google.storage.v1.Bucket.IamConfiguration.UniformBucketLevelAccess uniform_bucket_level_access = 1;
inline bool Bucket_IamConfiguration::has_uniform_bucket_level_access() const {
  return this != internal_default_instance() && uniform_bucket_level_access_ != nullptr;
}
inline void Bucket_IamConfiguration::clear_uniform_bucket_level_access() {
  if (GetArenaNoVirtual() == nullptr && uniform_bucket_level_access_ != nullptr) {
    delete uniform_bucket_level_access_;
  }
  uniform_bucket_level_access_ = nullptr;
}
inline const ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess& Bucket_IamConfiguration::uniform_bucket_level_access() const {
  const ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* p = uniform_bucket_level_access_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.IamConfiguration.uniform_bucket_level_access)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess*>(
      &::google::storage::v1::_Bucket_IamConfiguration_UniformBucketLevelAccess_default_instance_);
}
inline ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* Bucket_IamConfiguration::release_uniform_bucket_level_access() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.IamConfiguration.uniform_bucket_level_access)
  
  ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* temp = uniform_bucket_level_access_;
  uniform_bucket_level_access_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* Bucket_IamConfiguration::mutable_uniform_bucket_level_access() {
  
  if (uniform_bucket_level_access_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess>(GetArenaNoVirtual());
    uniform_bucket_level_access_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.IamConfiguration.uniform_bucket_level_access)
  return uniform_bucket_level_access_;
}
inline void Bucket_IamConfiguration::set_allocated_uniform_bucket_level_access(::google::storage::v1::Bucket_IamConfiguration_UniformBucketLevelAccess* uniform_bucket_level_access) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete uniform_bucket_level_access_;
  }
  if (uniform_bucket_level_access) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      uniform_bucket_level_access = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uniform_bucket_level_access, submessage_arena);
    }
    
  } else {
    
  }
  uniform_bucket_level_access_ = uniform_bucket_level_access;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.IamConfiguration.uniform_bucket_level_access)
}

// -------------------------------------------------------------------

// Bucket_Lifecycle_Rule_Action

// string type = 1;
inline void Bucket_Lifecycle_Rule_Action::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket_Lifecycle_Rule_Action::type() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.Action.type)
  return type_.GetNoArena();
}
inline void Bucket_Lifecycle_Rule_Action::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Lifecycle.Rule.Action.type)
}
#if LANG_CXX11
inline void Bucket_Lifecycle_Rule_Action::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.Lifecycle.Rule.Action.type)
}
#endif
inline void Bucket_Lifecycle_Rule_Action::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Lifecycle.Rule.Action.type)
}
inline void Bucket_Lifecycle_Rule_Action::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Lifecycle.Rule.Action.type)
}
inline ::std::string* Bucket_Lifecycle_Rule_Action::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.Rule.Action.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket_Lifecycle_Rule_Action::release_type() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Lifecycle.Rule.Action.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket_Lifecycle_Rule_Action::set_allocated_type(::std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Lifecycle.Rule.Action.type)
}

// string storage_class = 2;
inline void Bucket_Lifecycle_Rule_Action::clear_storage_class() {
  storage_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket_Lifecycle_Rule_Action::storage_class() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.Action.storage_class)
  return storage_class_.GetNoArena();
}
inline void Bucket_Lifecycle_Rule_Action::set_storage_class(const ::std::string& value) {
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Lifecycle.Rule.Action.storage_class)
}
#if LANG_CXX11
inline void Bucket_Lifecycle_Rule_Action::set_storage_class(::std::string&& value) {
  
  storage_class_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.Lifecycle.Rule.Action.storage_class)
}
#endif
inline void Bucket_Lifecycle_Rule_Action::set_storage_class(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Lifecycle.Rule.Action.storage_class)
}
inline void Bucket_Lifecycle_Rule_Action::set_storage_class(const char* value, size_t size) {
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Lifecycle.Rule.Action.storage_class)
}
inline ::std::string* Bucket_Lifecycle_Rule_Action::mutable_storage_class() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.Rule.Action.storage_class)
  return storage_class_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket_Lifecycle_Rule_Action::release_storage_class() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Lifecycle.Rule.Action.storage_class)
  
  return storage_class_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket_Lifecycle_Rule_Action::set_allocated_storage_class(::std::string* storage_class) {
  if (storage_class != nullptr) {
    
  } else {
    
  }
  storage_class_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storage_class);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Lifecycle.Rule.Action.storage_class)
}

// -------------------------------------------------------------------

// Bucket_Lifecycle_Rule_Condition

// int32 age = 1;
inline void Bucket_Lifecycle_Rule_Condition::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 Bucket_Lifecycle_Rule_Condition::age() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.Condition.age)
  return age_;
}
inline void Bucket_Lifecycle_Rule_Condition::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Lifecycle.Rule.Condition.age)
}

// .google.protobuf.Timestamp created_before = 2;
inline bool Bucket_Lifecycle_Rule_Condition::has_created_before() const {
  return this != internal_default_instance() && created_before_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Bucket_Lifecycle_Rule_Condition::created_before() const {
  const ::google::protobuf::Timestamp* p = created_before_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.Condition.created_before)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Bucket_Lifecycle_Rule_Condition::release_created_before() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Lifecycle.Rule.Condition.created_before)
  
  ::google::protobuf::Timestamp* temp = created_before_;
  created_before_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Bucket_Lifecycle_Rule_Condition::mutable_created_before() {
  
  if (created_before_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    created_before_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.Rule.Condition.created_before)
  return created_before_;
}
inline void Bucket_Lifecycle_Rule_Condition::set_allocated_created_before(::google::protobuf::Timestamp* created_before) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(created_before_);
  }
  if (created_before) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(created_before)->GetArena();
    if (message_arena != submessage_arena) {
      created_before = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, created_before, submessage_arena);
    }
    
  } else {
    
  }
  created_before_ = created_before;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Lifecycle.Rule.Condition.created_before)
}

// .google.protobuf.BoolValue is_live = 3;
inline bool Bucket_Lifecycle_Rule_Condition::has_is_live() const {
  return this != internal_default_instance() && is_live_ != nullptr;
}
inline const ::google::protobuf::BoolValue& Bucket_Lifecycle_Rule_Condition::is_live() const {
  const ::google::protobuf::BoolValue* p = is_live_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.Condition.is_live)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* Bucket_Lifecycle_Rule_Condition::release_is_live() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Lifecycle.Rule.Condition.is_live)
  
  ::google::protobuf::BoolValue* temp = is_live_;
  is_live_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* Bucket_Lifecycle_Rule_Condition::mutable_is_live() {
  
  if (is_live_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    is_live_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.Rule.Condition.is_live)
  return is_live_;
}
inline void Bucket_Lifecycle_Rule_Condition::set_allocated_is_live(::google::protobuf::BoolValue* is_live) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(is_live_);
  }
  if (is_live) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(is_live)->GetArena();
    if (message_arena != submessage_arena) {
      is_live = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, is_live, submessage_arena);
    }
    
  } else {
    
  }
  is_live_ = is_live;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Lifecycle.Rule.Condition.is_live)
}

// int32 num_newer_versions = 4;
inline void Bucket_Lifecycle_Rule_Condition::clear_num_newer_versions() {
  num_newer_versions_ = 0;
}
inline ::google::protobuf::int32 Bucket_Lifecycle_Rule_Condition::num_newer_versions() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.Condition.num_newer_versions)
  return num_newer_versions_;
}
inline void Bucket_Lifecycle_Rule_Condition::set_num_newer_versions(::google::protobuf::int32 value) {
  
  num_newer_versions_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Lifecycle.Rule.Condition.num_newer_versions)
}

// repeated string matches_storage_class = 5;
inline int Bucket_Lifecycle_Rule_Condition::matches_storage_class_size() const {
  return matches_storage_class_.size();
}
inline void Bucket_Lifecycle_Rule_Condition::clear_matches_storage_class() {
  matches_storage_class_.Clear();
}
inline const ::std::string& Bucket_Lifecycle_Rule_Condition::matches_storage_class(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
  return matches_storage_class_.Get(index);
}
inline ::std::string* Bucket_Lifecycle_Rule_Condition::mutable_matches_storage_class(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
  return matches_storage_class_.Mutable(index);
}
inline void Bucket_Lifecycle_Rule_Condition::set_matches_storage_class(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
  matches_storage_class_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Bucket_Lifecycle_Rule_Condition::set_matches_storage_class(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
  matches_storage_class_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Bucket_Lifecycle_Rule_Condition::set_matches_storage_class(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  matches_storage_class_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
}
inline void Bucket_Lifecycle_Rule_Condition::set_matches_storage_class(int index, const char* value, size_t size) {
  matches_storage_class_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
}
inline ::std::string* Bucket_Lifecycle_Rule_Condition::add_matches_storage_class() {
  // @@protoc_insertion_point(field_add_mutable:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
  return matches_storage_class_.Add();
}
inline void Bucket_Lifecycle_Rule_Condition::add_matches_storage_class(const ::std::string& value) {
  matches_storage_class_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
}
#if LANG_CXX11
inline void Bucket_Lifecycle_Rule_Condition::add_matches_storage_class(::std::string&& value) {
  matches_storage_class_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
}
#endif
inline void Bucket_Lifecycle_Rule_Condition::add_matches_storage_class(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  matches_storage_class_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
}
inline void Bucket_Lifecycle_Rule_Condition::add_matches_storage_class(const char* value, size_t size) {
  matches_storage_class_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Bucket_Lifecycle_Rule_Condition::matches_storage_class() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
  return matches_storage_class_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Bucket_Lifecycle_Rule_Condition::mutable_matches_storage_class() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_storage_class)
  return &matches_storage_class_;
}

// string matches_pattern = 6;
inline void Bucket_Lifecycle_Rule_Condition::clear_matches_pattern() {
  matches_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket_Lifecycle_Rule_Condition::matches_pattern() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_pattern)
  return matches_pattern_.GetNoArena();
}
inline void Bucket_Lifecycle_Rule_Condition::set_matches_pattern(const ::std::string& value) {
  
  matches_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_pattern)
}
#if LANG_CXX11
inline void Bucket_Lifecycle_Rule_Condition::set_matches_pattern(::std::string&& value) {
  
  matches_pattern_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_pattern)
}
#endif
inline void Bucket_Lifecycle_Rule_Condition::set_matches_pattern(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  matches_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_pattern)
}
inline void Bucket_Lifecycle_Rule_Condition::set_matches_pattern(const char* value, size_t size) {
  
  matches_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_pattern)
}
inline ::std::string* Bucket_Lifecycle_Rule_Condition::mutable_matches_pattern() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_pattern)
  return matches_pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket_Lifecycle_Rule_Condition::release_matches_pattern() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_pattern)
  
  return matches_pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket_Lifecycle_Rule_Condition::set_allocated_matches_pattern(::std::string* matches_pattern) {
  if (matches_pattern != nullptr) {
    
  } else {
    
  }
  matches_pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), matches_pattern);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Lifecycle.Rule.Condition.matches_pattern)
}

// -------------------------------------------------------------------

// Bucket_Lifecycle_Rule

// .google.storage.v1.Bucket.Lifecycle.Rule.Action action = 1;
inline bool Bucket_Lifecycle_Rule::has_action() const {
  return this != internal_default_instance() && action_ != nullptr;
}
inline void Bucket_Lifecycle_Rule::clear_action() {
  if (GetArenaNoVirtual() == nullptr && action_ != nullptr) {
    delete action_;
  }
  action_ = nullptr;
}
inline const ::google::storage::v1::Bucket_Lifecycle_Rule_Action& Bucket_Lifecycle_Rule::action() const {
  const ::google::storage::v1::Bucket_Lifecycle_Rule_Action* p = action_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.action)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_Lifecycle_Rule_Action*>(
      &::google::storage::v1::_Bucket_Lifecycle_Rule_Action_default_instance_);
}
inline ::google::storage::v1::Bucket_Lifecycle_Rule_Action* Bucket_Lifecycle_Rule::release_action() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Lifecycle.Rule.action)
  
  ::google::storage::v1::Bucket_Lifecycle_Rule_Action* temp = action_;
  action_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_Lifecycle_Rule_Action* Bucket_Lifecycle_Rule::mutable_action() {
  
  if (action_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_Lifecycle_Rule_Action>(GetArenaNoVirtual());
    action_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.Rule.action)
  return action_;
}
inline void Bucket_Lifecycle_Rule::set_allocated_action(::google::storage::v1::Bucket_Lifecycle_Rule_Action* action) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_;
  }
  if (action) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    
  } else {
    
  }
  action_ = action;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Lifecycle.Rule.action)
}

// .google.storage.v1.Bucket.Lifecycle.Rule.Condition condition = 2;
inline bool Bucket_Lifecycle_Rule::has_condition() const {
  return this != internal_default_instance() && condition_ != nullptr;
}
inline void Bucket_Lifecycle_Rule::clear_condition() {
  if (GetArenaNoVirtual() == nullptr && condition_ != nullptr) {
    delete condition_;
  }
  condition_ = nullptr;
}
inline const ::google::storage::v1::Bucket_Lifecycle_Rule_Condition& Bucket_Lifecycle_Rule::condition() const {
  const ::google::storage::v1::Bucket_Lifecycle_Rule_Condition* p = condition_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.Rule.condition)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_Lifecycle_Rule_Condition*>(
      &::google::storage::v1::_Bucket_Lifecycle_Rule_Condition_default_instance_);
}
inline ::google::storage::v1::Bucket_Lifecycle_Rule_Condition* Bucket_Lifecycle_Rule::release_condition() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Lifecycle.Rule.condition)
  
  ::google::storage::v1::Bucket_Lifecycle_Rule_Condition* temp = condition_;
  condition_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_Lifecycle_Rule_Condition* Bucket_Lifecycle_Rule::mutable_condition() {
  
  if (condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_Lifecycle_Rule_Condition>(GetArenaNoVirtual());
    condition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.Rule.condition)
  return condition_;
}
inline void Bucket_Lifecycle_Rule::set_allocated_condition(::google::storage::v1::Bucket_Lifecycle_Rule_Condition* condition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete condition_;
  }
  if (condition) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      condition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, condition, submessage_arena);
    }
    
  } else {
    
  }
  condition_ = condition;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Lifecycle.Rule.condition)
}

// -------------------------------------------------------------------

// Bucket_Lifecycle

// repeated .google.storage.v1.Bucket.Lifecycle.Rule rule = 1;
inline int Bucket_Lifecycle::rule_size() const {
  return rule_.size();
}
inline void Bucket_Lifecycle::clear_rule() {
  rule_.Clear();
}
inline ::google::storage::v1::Bucket_Lifecycle_Rule* Bucket_Lifecycle::mutable_rule(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Lifecycle.rule)
  return rule_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Lifecycle_Rule >*
Bucket_Lifecycle::mutable_rule() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.Lifecycle.rule)
  return &rule_;
}
inline const ::google::storage::v1::Bucket_Lifecycle_Rule& Bucket_Lifecycle::rule(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Lifecycle.rule)
  return rule_.Get(index);
}
inline ::google::storage::v1::Bucket_Lifecycle_Rule* Bucket_Lifecycle::add_rule() {
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.Lifecycle.rule)
  return rule_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Lifecycle_Rule >&
Bucket_Lifecycle::rule() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.Lifecycle.rule)
  return rule_;
}

// -------------------------------------------------------------------

// Bucket_Logging

// string log_bucket = 1;
inline void Bucket_Logging::clear_log_bucket() {
  log_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket_Logging::log_bucket() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Logging.log_bucket)
  return log_bucket_.GetNoArena();
}
inline void Bucket_Logging::set_log_bucket(const ::std::string& value) {
  
  log_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Logging.log_bucket)
}
#if LANG_CXX11
inline void Bucket_Logging::set_log_bucket(::std::string&& value) {
  
  log_bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.Logging.log_bucket)
}
#endif
inline void Bucket_Logging::set_log_bucket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  log_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Logging.log_bucket)
}
inline void Bucket_Logging::set_log_bucket(const char* value, size_t size) {
  
  log_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Logging.log_bucket)
}
inline ::std::string* Bucket_Logging::mutable_log_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Logging.log_bucket)
  return log_bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket_Logging::release_log_bucket() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Logging.log_bucket)
  
  return log_bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket_Logging::set_allocated_log_bucket(::std::string* log_bucket) {
  if (log_bucket != nullptr) {
    
  } else {
    
  }
  log_bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_bucket);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Logging.log_bucket)
}

// string log_object_prefix = 2;
inline void Bucket_Logging::clear_log_object_prefix() {
  log_object_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket_Logging::log_object_prefix() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Logging.log_object_prefix)
  return log_object_prefix_.GetNoArena();
}
inline void Bucket_Logging::set_log_object_prefix(const ::std::string& value) {
  
  log_object_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Logging.log_object_prefix)
}
#if LANG_CXX11
inline void Bucket_Logging::set_log_object_prefix(::std::string&& value) {
  
  log_object_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.Logging.log_object_prefix)
}
#endif
inline void Bucket_Logging::set_log_object_prefix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  log_object_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Logging.log_object_prefix)
}
inline void Bucket_Logging::set_log_object_prefix(const char* value, size_t size) {
  
  log_object_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Logging.log_object_prefix)
}
inline ::std::string* Bucket_Logging::mutable_log_object_prefix() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Logging.log_object_prefix)
  return log_object_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket_Logging::release_log_object_prefix() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Logging.log_object_prefix)
  
  return log_object_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket_Logging::set_allocated_log_object_prefix(::std::string* log_object_prefix) {
  if (log_object_prefix != nullptr) {
    
  } else {
    
  }
  log_object_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_object_prefix);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Logging.log_object_prefix)
}

// -------------------------------------------------------------------

// Bucket_RetentionPolicy

// .google.protobuf.Timestamp effective_time = 1;
inline bool Bucket_RetentionPolicy::has_effective_time() const {
  return this != internal_default_instance() && effective_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Bucket_RetentionPolicy::effective_time() const {
  const ::google::protobuf::Timestamp* p = effective_time_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.RetentionPolicy.effective_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Bucket_RetentionPolicy::release_effective_time() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.RetentionPolicy.effective_time)
  
  ::google::protobuf::Timestamp* temp = effective_time_;
  effective_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Bucket_RetentionPolicy::mutable_effective_time() {
  
  if (effective_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    effective_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.RetentionPolicy.effective_time)
  return effective_time_;
}
inline void Bucket_RetentionPolicy::set_allocated_effective_time(::google::protobuf::Timestamp* effective_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(effective_time_);
  }
  if (effective_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(effective_time)->GetArena();
    if (message_arena != submessage_arena) {
      effective_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, effective_time, submessage_arena);
    }
    
  } else {
    
  }
  effective_time_ = effective_time;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.RetentionPolicy.effective_time)
}

// bool is_locked = 2;
inline void Bucket_RetentionPolicy::clear_is_locked() {
  is_locked_ = false;
}
inline bool Bucket_RetentionPolicy::is_locked() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.RetentionPolicy.is_locked)
  return is_locked_;
}
inline void Bucket_RetentionPolicy::set_is_locked(bool value) {
  
  is_locked_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.RetentionPolicy.is_locked)
}

// int64 retention_period = 3;
inline void Bucket_RetentionPolicy::clear_retention_period() {
  retention_period_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Bucket_RetentionPolicy::retention_period() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.RetentionPolicy.retention_period)
  return retention_period_;
}
inline void Bucket_RetentionPolicy::set_retention_period(::google::protobuf::int64 value) {
  
  retention_period_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.RetentionPolicy.retention_period)
}

// -------------------------------------------------------------------

// Bucket_Versioning

// bool enabled = 1;
inline void Bucket_Versioning::clear_enabled() {
  enabled_ = false;
}
inline bool Bucket_Versioning::enabled() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Versioning.enabled)
  return enabled_;
}
inline void Bucket_Versioning::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Versioning.enabled)
}

// -------------------------------------------------------------------

// Bucket_Website

// string main_page_suffix = 1;
inline void Bucket_Website::clear_main_page_suffix() {
  main_page_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket_Website::main_page_suffix() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Website.main_page_suffix)
  return main_page_suffix_.GetNoArena();
}
inline void Bucket_Website::set_main_page_suffix(const ::std::string& value) {
  
  main_page_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Website.main_page_suffix)
}
#if LANG_CXX11
inline void Bucket_Website::set_main_page_suffix(::std::string&& value) {
  
  main_page_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.Website.main_page_suffix)
}
#endif
inline void Bucket_Website::set_main_page_suffix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  main_page_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Website.main_page_suffix)
}
inline void Bucket_Website::set_main_page_suffix(const char* value, size_t size) {
  
  main_page_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Website.main_page_suffix)
}
inline ::std::string* Bucket_Website::mutable_main_page_suffix() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Website.main_page_suffix)
  return main_page_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket_Website::release_main_page_suffix() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Website.main_page_suffix)
  
  return main_page_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket_Website::set_allocated_main_page_suffix(::std::string* main_page_suffix) {
  if (main_page_suffix != nullptr) {
    
  } else {
    
  }
  main_page_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), main_page_suffix);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Website.main_page_suffix)
}

// string not_found_page = 2;
inline void Bucket_Website::clear_not_found_page() {
  not_found_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket_Website::not_found_page() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.Website.not_found_page)
  return not_found_page_.GetNoArena();
}
inline void Bucket_Website::set_not_found_page(const ::std::string& value) {
  
  not_found_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.Website.not_found_page)
}
#if LANG_CXX11
inline void Bucket_Website::set_not_found_page(::std::string&& value) {
  
  not_found_page_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.Website.not_found_page)
}
#endif
inline void Bucket_Website::set_not_found_page(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  not_found_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.Website.not_found_page)
}
inline void Bucket_Website::set_not_found_page(const char* value, size_t size) {
  
  not_found_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.Website.not_found_page)
}
inline ::std::string* Bucket_Website::mutable_not_found_page() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.Website.not_found_page)
  return not_found_page_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket_Website::release_not_found_page() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.Website.not_found_page)
  
  return not_found_page_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket_Website::set_allocated_not_found_page(::std::string* not_found_page) {
  if (not_found_page != nullptr) {
    
  } else {
    
  }
  not_found_page_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), not_found_page);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.Website.not_found_page)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Bucket

// repeated .google.storage.v1.BucketAccessControl acl = 1;
inline int Bucket::acl_size() const {
  return acl_.size();
}
inline void Bucket::clear_acl() {
  acl_.Clear();
}
inline ::google::storage::v1::BucketAccessControl* Bucket::mutable_acl(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.acl)
  return acl_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl >*
Bucket::mutable_acl() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.acl)
  return &acl_;
}
inline const ::google::storage::v1::BucketAccessControl& Bucket::acl(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.acl)
  return acl_.Get(index);
}
inline ::google::storage::v1::BucketAccessControl* Bucket::add_acl() {
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.acl)
  return acl_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl >&
Bucket::acl() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.acl)
  return acl_;
}

// repeated .google.storage.v1.ObjectAccessControl default_object_acl = 2;
inline int Bucket::default_object_acl_size() const {
  return default_object_acl_.size();
}
inline void Bucket::clear_default_object_acl() {
  default_object_acl_.Clear();
}
inline ::google::storage::v1::ObjectAccessControl* Bucket::mutable_default_object_acl(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.default_object_acl)
  return default_object_acl_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >*
Bucket::mutable_default_object_acl() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.default_object_acl)
  return &default_object_acl_;
}
inline const ::google::storage::v1::ObjectAccessControl& Bucket::default_object_acl(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.default_object_acl)
  return default_object_acl_.Get(index);
}
inline ::google::storage::v1::ObjectAccessControl* Bucket::add_default_object_acl() {
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.default_object_acl)
  return default_object_acl_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >&
Bucket::default_object_acl() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.default_object_acl)
  return default_object_acl_;
}

// .google.storage.v1.Bucket.Lifecycle lifecycle = 3;
inline bool Bucket::has_lifecycle() const {
  return this != internal_default_instance() && lifecycle_ != nullptr;
}
inline void Bucket::clear_lifecycle() {
  if (GetArenaNoVirtual() == nullptr && lifecycle_ != nullptr) {
    delete lifecycle_;
  }
  lifecycle_ = nullptr;
}
inline const ::google::storage::v1::Bucket_Lifecycle& Bucket::lifecycle() const {
  const ::google::storage::v1::Bucket_Lifecycle* p = lifecycle_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.lifecycle)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_Lifecycle*>(
      &::google::storage::v1::_Bucket_Lifecycle_default_instance_);
}
inline ::google::storage::v1::Bucket_Lifecycle* Bucket::release_lifecycle() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.lifecycle)
  
  ::google::storage::v1::Bucket_Lifecycle* temp = lifecycle_;
  lifecycle_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_Lifecycle* Bucket::mutable_lifecycle() {
  
  if (lifecycle_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_Lifecycle>(GetArenaNoVirtual());
    lifecycle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.lifecycle)
  return lifecycle_;
}
inline void Bucket::set_allocated_lifecycle(::google::storage::v1::Bucket_Lifecycle* lifecycle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete lifecycle_;
  }
  if (lifecycle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      lifecycle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lifecycle, submessage_arena);
    }
    
  } else {
    
  }
  lifecycle_ = lifecycle;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.lifecycle)
}

// .google.protobuf.Timestamp time_created = 4;
inline bool Bucket::has_time_created() const {
  return this != internal_default_instance() && time_created_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Bucket::time_created() const {
  const ::google::protobuf::Timestamp* p = time_created_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.time_created)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Bucket::release_time_created() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.time_created)
  
  ::google::protobuf::Timestamp* temp = time_created_;
  time_created_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Bucket::mutable_time_created() {
  
  if (time_created_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    time_created_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.time_created)
  return time_created_;
}
inline void Bucket::set_allocated_time_created(::google::protobuf::Timestamp* time_created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_created_);
  }
  if (time_created) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(time_created)->GetArena();
    if (message_arena != submessage_arena) {
      time_created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_created, submessage_arena);
    }
    
  } else {
    
  }
  time_created_ = time_created;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.time_created)
}

// string id = 5;
inline void Bucket::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket::id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.id)
  return id_.GetNoArena();
}
inline void Bucket::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.id)
}
#if LANG_CXX11
inline void Bucket::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.id)
}
#endif
inline void Bucket::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.id)
}
inline void Bucket::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.id)
}
inline ::std::string* Bucket::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket::release_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.id)
}

// string name = 6;
inline void Bucket::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket::name() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.name)
  return name_.GetNoArena();
}
inline void Bucket::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.name)
}
#if LANG_CXX11
inline void Bucket::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.name)
}
#endif
inline void Bucket::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.name)
}
inline void Bucket::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.name)
}
inline ::std::string* Bucket::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket::release_name() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.name)
}

// int64 project_number = 7;
inline void Bucket::clear_project_number() {
  project_number_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Bucket::project_number() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.project_number)
  return project_number_;
}
inline void Bucket::set_project_number(::google::protobuf::int64 value) {
  
  project_number_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.project_number)
}

// int64 metageneration = 8;
inline void Bucket::clear_metageneration() {
  metageneration_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Bucket::metageneration() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.metageneration)
  return metageneration_;
}
inline void Bucket::set_metageneration(::google::protobuf::int64 value) {
  
  metageneration_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.metageneration)
}

// repeated .google.storage.v1.Bucket.Cors cors = 9;
inline int Bucket::cors_size() const {
  return cors_.size();
}
inline void Bucket::clear_cors() {
  cors_.Clear();
}
inline ::google::storage::v1::Bucket_Cors* Bucket::mutable_cors(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.cors)
  return cors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Cors >*
Bucket::mutable_cors() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.cors)
  return &cors_;
}
inline const ::google::storage::v1::Bucket_Cors& Bucket::cors(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.cors)
  return cors_.Get(index);
}
inline ::google::storage::v1::Bucket_Cors* Bucket::add_cors() {
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.cors)
  return cors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket_Cors >&
Bucket::cors() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.cors)
  return cors_;
}

// string location = 10;
inline void Bucket::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket::location() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.location)
  return location_.GetNoArena();
}
inline void Bucket::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.location)
}
#if LANG_CXX11
inline void Bucket::set_location(::std::string&& value) {
  
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.location)
}
#endif
inline void Bucket::set_location(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.location)
}
inline void Bucket::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.location)
}
inline ::std::string* Bucket::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket::release_location() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket::set_allocated_location(::std::string* location) {
  if (location != nullptr) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.location)
}

// string storage_class = 11;
inline void Bucket::clear_storage_class() {
  storage_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket::storage_class() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.storage_class)
  return storage_class_.GetNoArena();
}
inline void Bucket::set_storage_class(const ::std::string& value) {
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.storage_class)
}
#if LANG_CXX11
inline void Bucket::set_storage_class(::std::string&& value) {
  
  storage_class_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.storage_class)
}
#endif
inline void Bucket::set_storage_class(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.storage_class)
}
inline void Bucket::set_storage_class(const char* value, size_t size) {
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.storage_class)
}
inline ::std::string* Bucket::mutable_storage_class() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.storage_class)
  return storage_class_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket::release_storage_class() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.storage_class)
  
  return storage_class_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket::set_allocated_storage_class(::std::string* storage_class) {
  if (storage_class != nullptr) {
    
  } else {
    
  }
  storage_class_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storage_class);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.storage_class)
}

// string etag = 12;
inline void Bucket::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket::etag() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.etag)
  return etag_.GetNoArena();
}
inline void Bucket::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.etag)
}
#if LANG_CXX11
inline void Bucket::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.etag)
}
#endif
inline void Bucket::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.etag)
}
inline void Bucket::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.etag)
}
inline ::std::string* Bucket::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket::release_etag() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.etag)
}

// .google.protobuf.Timestamp updated = 13;
inline bool Bucket::has_updated() const {
  return this != internal_default_instance() && updated_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Bucket::updated() const {
  const ::google::protobuf::Timestamp* p = updated_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.updated)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Bucket::release_updated() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.updated)
  
  ::google::protobuf::Timestamp* temp = updated_;
  updated_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Bucket::mutable_updated() {
  
  if (updated_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    updated_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.updated)
  return updated_;
}
inline void Bucket::set_allocated_updated(::google::protobuf::Timestamp* updated) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(updated_);
  }
  if (updated) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(updated)->GetArena();
    if (message_arena != submessage_arena) {
      updated = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updated, submessage_arena);
    }
    
  } else {
    
  }
  updated_ = updated;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.updated)
}

// bool default_event_based_hold = 14;
inline void Bucket::clear_default_event_based_hold() {
  default_event_based_hold_ = false;
}
inline bool Bucket::default_event_based_hold() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.default_event_based_hold)
  return default_event_based_hold_;
}
inline void Bucket::set_default_event_based_hold(bool value) {
  
  default_event_based_hold_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.default_event_based_hold)
}

// map<string, string> labels = 15;
inline int Bucket::labels_size() const {
  return labels_.size();
}
inline void Bucket::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Bucket::labels() const {
  // @@protoc_insertion_point(field_map:google.storage.v1.Bucket.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Bucket::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.storage.v1.Bucket.labels)
  return labels_.MutableMap();
}

// .google.storage.v1.Bucket.Website website = 16;
inline bool Bucket::has_website() const {
  return this != internal_default_instance() && website_ != nullptr;
}
inline void Bucket::clear_website() {
  if (GetArenaNoVirtual() == nullptr && website_ != nullptr) {
    delete website_;
  }
  website_ = nullptr;
}
inline const ::google::storage::v1::Bucket_Website& Bucket::website() const {
  const ::google::storage::v1::Bucket_Website* p = website_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.website)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_Website*>(
      &::google::storage::v1::_Bucket_Website_default_instance_);
}
inline ::google::storage::v1::Bucket_Website* Bucket::release_website() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.website)
  
  ::google::storage::v1::Bucket_Website* temp = website_;
  website_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_Website* Bucket::mutable_website() {
  
  if (website_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_Website>(GetArenaNoVirtual());
    website_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.website)
  return website_;
}
inline void Bucket::set_allocated_website(::google::storage::v1::Bucket_Website* website) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete website_;
  }
  if (website) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      website = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, website, submessage_arena);
    }
    
  } else {
    
  }
  website_ = website;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.website)
}

// .google.storage.v1.Bucket.Versioning versioning = 17;
inline bool Bucket::has_versioning() const {
  return this != internal_default_instance() && versioning_ != nullptr;
}
inline void Bucket::clear_versioning() {
  if (GetArenaNoVirtual() == nullptr && versioning_ != nullptr) {
    delete versioning_;
  }
  versioning_ = nullptr;
}
inline const ::google::storage::v1::Bucket_Versioning& Bucket::versioning() const {
  const ::google::storage::v1::Bucket_Versioning* p = versioning_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.versioning)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_Versioning*>(
      &::google::storage::v1::_Bucket_Versioning_default_instance_);
}
inline ::google::storage::v1::Bucket_Versioning* Bucket::release_versioning() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.versioning)
  
  ::google::storage::v1::Bucket_Versioning* temp = versioning_;
  versioning_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_Versioning* Bucket::mutable_versioning() {
  
  if (versioning_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_Versioning>(GetArenaNoVirtual());
    versioning_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.versioning)
  return versioning_;
}
inline void Bucket::set_allocated_versioning(::google::storage::v1::Bucket_Versioning* versioning) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete versioning_;
  }
  if (versioning) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      versioning = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, versioning, submessage_arena);
    }
    
  } else {
    
  }
  versioning_ = versioning;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.versioning)
}

// .google.storage.v1.Bucket.Logging logging = 18;
inline bool Bucket::has_logging() const {
  return this != internal_default_instance() && logging_ != nullptr;
}
inline void Bucket::clear_logging() {
  if (GetArenaNoVirtual() == nullptr && logging_ != nullptr) {
    delete logging_;
  }
  logging_ = nullptr;
}
inline const ::google::storage::v1::Bucket_Logging& Bucket::logging() const {
  const ::google::storage::v1::Bucket_Logging* p = logging_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.logging)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_Logging*>(
      &::google::storage::v1::_Bucket_Logging_default_instance_);
}
inline ::google::storage::v1::Bucket_Logging* Bucket::release_logging() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.logging)
  
  ::google::storage::v1::Bucket_Logging* temp = logging_;
  logging_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_Logging* Bucket::mutable_logging() {
  
  if (logging_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_Logging>(GetArenaNoVirtual());
    logging_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.logging)
  return logging_;
}
inline void Bucket::set_allocated_logging(::google::storage::v1::Bucket_Logging* logging) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete logging_;
  }
  if (logging) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      logging = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logging, submessage_arena);
    }
    
  } else {
    
  }
  logging_ = logging;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.logging)
}

// .google.storage.v1.Owner owner = 19;
inline bool Bucket::has_owner() const {
  return this != internal_default_instance() && owner_ != nullptr;
}
inline void Bucket::clear_owner() {
  if (GetArenaNoVirtual() == nullptr && owner_ != nullptr) {
    delete owner_;
  }
  owner_ = nullptr;
}
inline const ::google::storage::v1::Owner& Bucket::owner() const {
  const ::google::storage::v1::Owner* p = owner_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.owner)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Owner*>(
      &::google::storage::v1::_Owner_default_instance_);
}
inline ::google::storage::v1::Owner* Bucket::release_owner() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.owner)
  
  ::google::storage::v1::Owner* temp = owner_;
  owner_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Owner* Bucket::mutable_owner() {
  
  if (owner_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Owner>(GetArenaNoVirtual());
    owner_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.owner)
  return owner_;
}
inline void Bucket::set_allocated_owner(::google::storage::v1::Owner* owner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete owner_;
  }
  if (owner) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      owner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner, submessage_arena);
    }
    
  } else {
    
  }
  owner_ = owner;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.owner)
}

// .google.storage.v1.Bucket.Encryption encryption = 20;
inline bool Bucket::has_encryption() const {
  return this != internal_default_instance() && encryption_ != nullptr;
}
inline void Bucket::clear_encryption() {
  if (GetArenaNoVirtual() == nullptr && encryption_ != nullptr) {
    delete encryption_;
  }
  encryption_ = nullptr;
}
inline const ::google::storage::v1::Bucket_Encryption& Bucket::encryption() const {
  const ::google::storage::v1::Bucket_Encryption* p = encryption_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.encryption)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_Encryption*>(
      &::google::storage::v1::_Bucket_Encryption_default_instance_);
}
inline ::google::storage::v1::Bucket_Encryption* Bucket::release_encryption() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.encryption)
  
  ::google::storage::v1::Bucket_Encryption* temp = encryption_;
  encryption_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_Encryption* Bucket::mutable_encryption() {
  
  if (encryption_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_Encryption>(GetArenaNoVirtual());
    encryption_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.encryption)
  return encryption_;
}
inline void Bucket::set_allocated_encryption(::google::storage::v1::Bucket_Encryption* encryption) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete encryption_;
  }
  if (encryption) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      encryption = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, encryption, submessage_arena);
    }
    
  } else {
    
  }
  encryption_ = encryption;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.encryption)
}

// .google.storage.v1.Bucket.Billing billing = 21;
inline bool Bucket::has_billing() const {
  return this != internal_default_instance() && billing_ != nullptr;
}
inline void Bucket::clear_billing() {
  if (GetArenaNoVirtual() == nullptr && billing_ != nullptr) {
    delete billing_;
  }
  billing_ = nullptr;
}
inline const ::google::storage::v1::Bucket_Billing& Bucket::billing() const {
  const ::google::storage::v1::Bucket_Billing* p = billing_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.billing)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_Billing*>(
      &::google::storage::v1::_Bucket_Billing_default_instance_);
}
inline ::google::storage::v1::Bucket_Billing* Bucket::release_billing() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.billing)
  
  ::google::storage::v1::Bucket_Billing* temp = billing_;
  billing_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_Billing* Bucket::mutable_billing() {
  
  if (billing_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_Billing>(GetArenaNoVirtual());
    billing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.billing)
  return billing_;
}
inline void Bucket::set_allocated_billing(::google::storage::v1::Bucket_Billing* billing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete billing_;
  }
  if (billing) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      billing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, billing, submessage_arena);
    }
    
  } else {
    
  }
  billing_ = billing;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.billing)
}

// .google.storage.v1.Bucket.RetentionPolicy retention_policy = 22;
inline bool Bucket::has_retention_policy() const {
  return this != internal_default_instance() && retention_policy_ != nullptr;
}
inline void Bucket::clear_retention_policy() {
  if (GetArenaNoVirtual() == nullptr && retention_policy_ != nullptr) {
    delete retention_policy_;
  }
  retention_policy_ = nullptr;
}
inline const ::google::storage::v1::Bucket_RetentionPolicy& Bucket::retention_policy() const {
  const ::google::storage::v1::Bucket_RetentionPolicy* p = retention_policy_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.retention_policy)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_RetentionPolicy*>(
      &::google::storage::v1::_Bucket_RetentionPolicy_default_instance_);
}
inline ::google::storage::v1::Bucket_RetentionPolicy* Bucket::release_retention_policy() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.retention_policy)
  
  ::google::storage::v1::Bucket_RetentionPolicy* temp = retention_policy_;
  retention_policy_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_RetentionPolicy* Bucket::mutable_retention_policy() {
  
  if (retention_policy_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_RetentionPolicy>(GetArenaNoVirtual());
    retention_policy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.retention_policy)
  return retention_policy_;
}
inline void Bucket::set_allocated_retention_policy(::google::storage::v1::Bucket_RetentionPolicy* retention_policy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete retention_policy_;
  }
  if (retention_policy) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      retention_policy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retention_policy, submessage_arena);
    }
    
  } else {
    
  }
  retention_policy_ = retention_policy;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.retention_policy)
}

// string location_type = 23;
inline void Bucket::clear_location_type() {
  location_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Bucket::location_type() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.location_type)
  return location_type_.GetNoArena();
}
inline void Bucket::set_location_type(const ::std::string& value) {
  
  location_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.location_type)
}
#if LANG_CXX11
inline void Bucket::set_location_type(::std::string&& value) {
  
  location_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Bucket.location_type)
}
#endif
inline void Bucket::set_location_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  location_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.location_type)
}
inline void Bucket::set_location_type(const char* value, size_t size) {
  
  location_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.location_type)
}
inline ::std::string* Bucket::mutable_location_type() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.location_type)
  return location_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bucket::release_location_type() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.location_type)
  
  return location_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bucket::set_allocated_location_type(::std::string* location_type) {
  if (location_type != nullptr) {
    
  } else {
    
  }
  location_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_type);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.location_type)
}

// .google.storage.v1.Bucket.IamConfiguration iam_configuration = 24;
inline bool Bucket::has_iam_configuration() const {
  return this != internal_default_instance() && iam_configuration_ != nullptr;
}
inline void Bucket::clear_iam_configuration() {
  if (GetArenaNoVirtual() == nullptr && iam_configuration_ != nullptr) {
    delete iam_configuration_;
  }
  iam_configuration_ = nullptr;
}
inline const ::google::storage::v1::Bucket_IamConfiguration& Bucket::iam_configuration() const {
  const ::google::storage::v1::Bucket_IamConfiguration* p = iam_configuration_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.iam_configuration)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Bucket_IamConfiguration*>(
      &::google::storage::v1::_Bucket_IamConfiguration_default_instance_);
}
inline ::google::storage::v1::Bucket_IamConfiguration* Bucket::release_iam_configuration() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Bucket.iam_configuration)
  
  ::google::storage::v1::Bucket_IamConfiguration* temp = iam_configuration_;
  iam_configuration_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Bucket_IamConfiguration* Bucket::mutable_iam_configuration() {
  
  if (iam_configuration_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Bucket_IamConfiguration>(GetArenaNoVirtual());
    iam_configuration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.iam_configuration)
  return iam_configuration_;
}
inline void Bucket::set_allocated_iam_configuration(::google::storage::v1::Bucket_IamConfiguration* iam_configuration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete iam_configuration_;
  }
  if (iam_configuration) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      iam_configuration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iam_configuration, submessage_arena);
    }
    
  } else {
    
  }
  iam_configuration_ = iam_configuration;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Bucket.iam_configuration)
}

// repeated string zone_affinity = 25;
inline int Bucket::zone_affinity_size() const {
  return zone_affinity_.size();
}
inline void Bucket::clear_zone_affinity() {
  zone_affinity_.Clear();
}
inline const ::std::string& Bucket::zone_affinity(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Bucket.zone_affinity)
  return zone_affinity_.Get(index);
}
inline ::std::string* Bucket::mutable_zone_affinity(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Bucket.zone_affinity)
  return zone_affinity_.Mutable(index);
}
inline void Bucket::set_zone_affinity(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.zone_affinity)
  zone_affinity_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Bucket::set_zone_affinity(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Bucket.zone_affinity)
  zone_affinity_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Bucket::set_zone_affinity(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  zone_affinity_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Bucket.zone_affinity)
}
inline void Bucket::set_zone_affinity(int index, const char* value, size_t size) {
  zone_affinity_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Bucket.zone_affinity)
}
inline ::std::string* Bucket::add_zone_affinity() {
  // @@protoc_insertion_point(field_add_mutable:google.storage.v1.Bucket.zone_affinity)
  return zone_affinity_.Add();
}
inline void Bucket::add_zone_affinity(const ::std::string& value) {
  zone_affinity_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.zone_affinity)
}
#if LANG_CXX11
inline void Bucket::add_zone_affinity(::std::string&& value) {
  zone_affinity_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storage.v1.Bucket.zone_affinity)
}
#endif
inline void Bucket::add_zone_affinity(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  zone_affinity_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storage.v1.Bucket.zone_affinity)
}
inline void Bucket::add_zone_affinity(const char* value, size_t size) {
  zone_affinity_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storage.v1.Bucket.zone_affinity)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Bucket::zone_affinity() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Bucket.zone_affinity)
  return zone_affinity_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Bucket::mutable_zone_affinity() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Bucket.zone_affinity)
  return &zone_affinity_;
}

// -------------------------------------------------------------------

// BucketAccessControl

// string role = 1;
inline void BucketAccessControl::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketAccessControl::role() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.role)
  return role_.GetNoArena();
}
inline void BucketAccessControl::set_role(const ::std::string& value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.BucketAccessControl.role)
}
#if LANG_CXX11
inline void BucketAccessControl::set_role(::std::string&& value) {
  
  role_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.BucketAccessControl.role)
}
#endif
inline void BucketAccessControl::set_role(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.BucketAccessControl.role)
}
inline void BucketAccessControl::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.BucketAccessControl.role)
}
inline ::std::string* BucketAccessControl::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketAccessControl::release_role() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.role)
  
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketAccessControl::set_allocated_role(::std::string* role) {
  if (role != nullptr) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.role)
}

// string etag = 2;
inline void BucketAccessControl::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketAccessControl::etag() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.etag)
  return etag_.GetNoArena();
}
inline void BucketAccessControl::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.BucketAccessControl.etag)
}
#if LANG_CXX11
inline void BucketAccessControl::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.BucketAccessControl.etag)
}
#endif
inline void BucketAccessControl::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.BucketAccessControl.etag)
}
inline void BucketAccessControl::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.BucketAccessControl.etag)
}
inline ::std::string* BucketAccessControl::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketAccessControl::release_etag() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketAccessControl::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.etag)
}

// string id = 3;
inline void BucketAccessControl::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketAccessControl::id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.id)
  return id_.GetNoArena();
}
inline void BucketAccessControl::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.BucketAccessControl.id)
}
#if LANG_CXX11
inline void BucketAccessControl::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.BucketAccessControl.id)
}
#endif
inline void BucketAccessControl::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.BucketAccessControl.id)
}
inline void BucketAccessControl::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.BucketAccessControl.id)
}
inline ::std::string* BucketAccessControl::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketAccessControl::release_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketAccessControl::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.id)
}

// string bucket = 4;
inline void BucketAccessControl::clear_bucket() {
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketAccessControl::bucket() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.bucket)
  return bucket_.GetNoArena();
}
inline void BucketAccessControl::set_bucket(const ::std::string& value) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.BucketAccessControl.bucket)
}
#if LANG_CXX11
inline void BucketAccessControl::set_bucket(::std::string&& value) {
  
  bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.BucketAccessControl.bucket)
}
#endif
inline void BucketAccessControl::set_bucket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.BucketAccessControl.bucket)
}
inline void BucketAccessControl::set_bucket(const char* value, size_t size) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.BucketAccessControl.bucket)
}
inline ::std::string* BucketAccessControl::mutable_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.bucket)
  return bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketAccessControl::release_bucket() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.bucket)
  
  return bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketAccessControl::set_allocated_bucket(::std::string* bucket) {
  if (bucket != nullptr) {
    
  } else {
    
  }
  bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.bucket)
}

// string entity = 6;
inline void BucketAccessControl::clear_entity() {
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketAccessControl::entity() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.entity)
  return entity_.GetNoArena();
}
inline void BucketAccessControl::set_entity(const ::std::string& value) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.BucketAccessControl.entity)
}
#if LANG_CXX11
inline void BucketAccessControl::set_entity(::std::string&& value) {
  
  entity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.BucketAccessControl.entity)
}
#endif
inline void BucketAccessControl::set_entity(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.BucketAccessControl.entity)
}
inline void BucketAccessControl::set_entity(const char* value, size_t size) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.BucketAccessControl.entity)
}
inline ::std::string* BucketAccessControl::mutable_entity() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.entity)
  return entity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketAccessControl::release_entity() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.entity)
  
  return entity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketAccessControl::set_allocated_entity(::std::string* entity) {
  if (entity != nullptr) {
    
  } else {
    
  }
  entity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.entity)
}

// string entity_id = 7;
inline void BucketAccessControl::clear_entity_id() {
  entity_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketAccessControl::entity_id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.entity_id)
  return entity_id_.GetNoArena();
}
inline void BucketAccessControl::set_entity_id(const ::std::string& value) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.BucketAccessControl.entity_id)
}
#if LANG_CXX11
inline void BucketAccessControl::set_entity_id(::std::string&& value) {
  
  entity_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.BucketAccessControl.entity_id)
}
#endif
inline void BucketAccessControl::set_entity_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.BucketAccessControl.entity_id)
}
inline void BucketAccessControl::set_entity_id(const char* value, size_t size) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.BucketAccessControl.entity_id)
}
inline ::std::string* BucketAccessControl::mutable_entity_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.entity_id)
  return entity_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketAccessControl::release_entity_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.entity_id)
  
  return entity_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketAccessControl::set_allocated_entity_id(::std::string* entity_id) {
  if (entity_id != nullptr) {
    
  } else {
    
  }
  entity_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.entity_id)
}

// string email = 8;
inline void BucketAccessControl::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketAccessControl::email() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.email)
  return email_.GetNoArena();
}
inline void BucketAccessControl::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.BucketAccessControl.email)
}
#if LANG_CXX11
inline void BucketAccessControl::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.BucketAccessControl.email)
}
#endif
inline void BucketAccessControl::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.BucketAccessControl.email)
}
inline void BucketAccessControl::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.BucketAccessControl.email)
}
inline ::std::string* BucketAccessControl::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketAccessControl::release_email() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketAccessControl::set_allocated_email(::std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.email)
}

// string domain = 9;
inline void BucketAccessControl::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketAccessControl::domain() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.domain)
  return domain_.GetNoArena();
}
inline void BucketAccessControl::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.BucketAccessControl.domain)
}
#if LANG_CXX11
inline void BucketAccessControl::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.BucketAccessControl.domain)
}
#endif
inline void BucketAccessControl::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.BucketAccessControl.domain)
}
inline void BucketAccessControl::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.BucketAccessControl.domain)
}
inline ::std::string* BucketAccessControl::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketAccessControl::release_domain() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketAccessControl::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.domain)
}

// .google.storage.v1.ProjectTeam project_team = 10;
inline bool BucketAccessControl::has_project_team() const {
  return this != internal_default_instance() && project_team_ != nullptr;
}
inline void BucketAccessControl::clear_project_team() {
  if (GetArenaNoVirtual() == nullptr && project_team_ != nullptr) {
    delete project_team_;
  }
  project_team_ = nullptr;
}
inline const ::google::storage::v1::ProjectTeam& BucketAccessControl::project_team() const {
  const ::google::storage::v1::ProjectTeam* p = project_team_;
  // @@protoc_insertion_point(field_get:google.storage.v1.BucketAccessControl.project_team)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::ProjectTeam*>(
      &::google::storage::v1::_ProjectTeam_default_instance_);
}
inline ::google::storage::v1::ProjectTeam* BucketAccessControl::release_project_team() {
  // @@protoc_insertion_point(field_release:google.storage.v1.BucketAccessControl.project_team)
  
  ::google::storage::v1::ProjectTeam* temp = project_team_;
  project_team_ = nullptr;
  return temp;
}
inline ::google::storage::v1::ProjectTeam* BucketAccessControl::mutable_project_team() {
  
  if (project_team_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::ProjectTeam>(GetArenaNoVirtual());
    project_team_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.BucketAccessControl.project_team)
  return project_team_;
}
inline void BucketAccessControl::set_allocated_project_team(::google::storage::v1::ProjectTeam* project_team) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete project_team_;
  }
  if (project_team) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      project_team = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, project_team, submessage_arena);
    }
    
  } else {
    
  }
  project_team_ = project_team;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.BucketAccessControl.project_team)
}

// -------------------------------------------------------------------

// ListBucketAccessControlsResponse

// repeated .google.storage.v1.BucketAccessControl items = 1;
inline int ListBucketAccessControlsResponse::items_size() const {
  return items_.size();
}
inline void ListBucketAccessControlsResponse::clear_items() {
  items_.Clear();
}
inline ::google::storage::v1::BucketAccessControl* ListBucketAccessControlsResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListBucketAccessControlsResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl >*
ListBucketAccessControlsResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.ListBucketAccessControlsResponse.items)
  return &items_;
}
inline const ::google::storage::v1::BucketAccessControl& ListBucketAccessControlsResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListBucketAccessControlsResponse.items)
  return items_.Get(index);
}
inline ::google::storage::v1::BucketAccessControl* ListBucketAccessControlsResponse::add_items() {
  // @@protoc_insertion_point(field_add:google.storage.v1.ListBucketAccessControlsResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::BucketAccessControl >&
ListBucketAccessControlsResponse::items() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.ListBucketAccessControlsResponse.items)
  return items_;
}

// -------------------------------------------------------------------

// ListBucketsResponse

// repeated .google.storage.v1.Bucket items = 1;
inline int ListBucketsResponse::items_size() const {
  return items_.size();
}
inline void ListBucketsResponse::clear_items() {
  items_.Clear();
}
inline ::google::storage::v1::Bucket* ListBucketsResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListBucketsResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket >*
ListBucketsResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.ListBucketsResponse.items)
  return &items_;
}
inline const ::google::storage::v1::Bucket& ListBucketsResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListBucketsResponse.items)
  return items_.Get(index);
}
inline ::google::storage::v1::Bucket* ListBucketsResponse::add_items() {
  // @@protoc_insertion_point(field_add:google.storage.v1.ListBucketsResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Bucket >&
ListBucketsResponse::items() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.ListBucketsResponse.items)
  return items_;
}

// string next_page_token = 2;
inline void ListBucketsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBucketsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListBucketsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListBucketsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ListBucketsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListBucketsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ListBucketsResponse.next_page_token)
}
#endif
inline void ListBucketsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ListBucketsResponse.next_page_token)
}
inline void ListBucketsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ListBucketsResponse.next_page_token)
}
inline ::std::string* ListBucketsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListBucketsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBucketsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ListBucketsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBucketsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ListBucketsResponse.next_page_token)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Channel

// string id = 1;
inline void Channel::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel::id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Channel.id)
  return id_.GetNoArena();
}
inline void Channel::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Channel.id)
}
#if LANG_CXX11
inline void Channel::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Channel.id)
}
#endif
inline void Channel::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Channel.id)
}
inline void Channel::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Channel.id)
}
inline ::std::string* Channel::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Channel.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel::release_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Channel.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Channel.id)
}

// string resource_id = 2;
inline void Channel::clear_resource_id() {
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel::resource_id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Channel.resource_id)
  return resource_id_.GetNoArena();
}
inline void Channel::set_resource_id(const ::std::string& value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Channel.resource_id)
}
#if LANG_CXX11
inline void Channel::set_resource_id(::std::string&& value) {
  
  resource_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Channel.resource_id)
}
#endif
inline void Channel::set_resource_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Channel.resource_id)
}
inline void Channel::set_resource_id(const char* value, size_t size) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Channel.resource_id)
}
inline ::std::string* Channel::mutable_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Channel.resource_id)
  return resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel::release_resource_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Channel.resource_id)
  
  return resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel::set_allocated_resource_id(::std::string* resource_id) {
  if (resource_id != nullptr) {
    
  } else {
    
  }
  resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Channel.resource_id)
}

// string resource_uri = 3;
inline void Channel::clear_resource_uri() {
  resource_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel::resource_uri() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Channel.resource_uri)
  return resource_uri_.GetNoArena();
}
inline void Channel::set_resource_uri(const ::std::string& value) {
  
  resource_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Channel.resource_uri)
}
#if LANG_CXX11
inline void Channel::set_resource_uri(::std::string&& value) {
  
  resource_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Channel.resource_uri)
}
#endif
inline void Channel::set_resource_uri(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  resource_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Channel.resource_uri)
}
inline void Channel::set_resource_uri(const char* value, size_t size) {
  
  resource_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Channel.resource_uri)
}
inline ::std::string* Channel::mutable_resource_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Channel.resource_uri)
  return resource_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel::release_resource_uri() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Channel.resource_uri)
  
  return resource_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel::set_allocated_resource_uri(::std::string* resource_uri) {
  if (resource_uri != nullptr) {
    
  } else {
    
  }
  resource_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_uri);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Channel.resource_uri)
}

// string token = 4;
inline void Channel::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel::token() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Channel.token)
  return token_.GetNoArena();
}
inline void Channel::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Channel.token)
}
#if LANG_CXX11
inline void Channel::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Channel.token)
}
#endif
inline void Channel::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Channel.token)
}
inline void Channel::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Channel.token)
}
inline ::std::string* Channel::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Channel.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel::release_token() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Channel.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Channel.token)
}

// .google.protobuf.Timestamp expiration = 5;
inline bool Channel::has_expiration() const {
  return this != internal_default_instance() && expiration_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Channel::expiration() const {
  const ::google::protobuf::Timestamp* p = expiration_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Channel.expiration)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Channel::release_expiration() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Channel.expiration)
  
  ::google::protobuf::Timestamp* temp = expiration_;
  expiration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Channel::mutable_expiration() {
  
  if (expiration_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    expiration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Channel.expiration)
  return expiration_;
}
inline void Channel::set_allocated_expiration(::google::protobuf::Timestamp* expiration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expiration_);
  }
  if (expiration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(expiration)->GetArena();
    if (message_arena != submessage_arena) {
      expiration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expiration, submessage_arena);
    }
    
  } else {
    
  }
  expiration_ = expiration;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Channel.expiration)
}

// string type = 6;
inline void Channel::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel::type() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Channel.type)
  return type_.GetNoArena();
}
inline void Channel::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Channel.type)
}
#if LANG_CXX11
inline void Channel::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Channel.type)
}
#endif
inline void Channel::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Channel.type)
}
inline void Channel::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Channel.type)
}
inline ::std::string* Channel::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Channel.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel::release_type() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Channel.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel::set_allocated_type(::std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Channel.type)
}

// string address = 7;
inline void Channel::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel::address() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Channel.address)
  return address_.GetNoArena();
}
inline void Channel::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Channel.address)
}
#if LANG_CXX11
inline void Channel::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Channel.address)
}
#endif
inline void Channel::set_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Channel.address)
}
inline void Channel::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Channel.address)
}
inline ::std::string* Channel::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Channel.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel::release_address() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Channel.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel::set_allocated_address(::std::string* address) {
  if (address != nullptr) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Channel.address)
}

// map<string, string> params = 8;
inline int Channel::params_size() const {
  return params_.size();
}
inline void Channel::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Channel::params() const {
  // @@protoc_insertion_point(field_map:google.storage.v1.Channel.params)
  return params_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Channel::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:google.storage.v1.Channel.params)
  return params_.MutableMap();
}

// bool payload = 9;
inline void Channel::clear_payload() {
  payload_ = false;
}
inline bool Channel::payload() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Channel.payload)
  return payload_;
}
inline void Channel::set_payload(bool value) {
  
  payload_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Channel.payload)
}

// -------------------------------------------------------------------

// ListChannelsResponse_Items

// string channel_id = 1;
inline void ListChannelsResponse_Items::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListChannelsResponse_Items::channel_id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListChannelsResponse.Items.channel_id)
  return channel_id_.GetNoArena();
}
inline void ListChannelsResponse_Items::set_channel_id(const ::std::string& value) {
  
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ListChannelsResponse.Items.channel_id)
}
#if LANG_CXX11
inline void ListChannelsResponse_Items::set_channel_id(::std::string&& value) {
  
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ListChannelsResponse.Items.channel_id)
}
#endif
inline void ListChannelsResponse_Items::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ListChannelsResponse.Items.channel_id)
}
inline void ListChannelsResponse_Items::set_channel_id(const char* value, size_t size) {
  
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ListChannelsResponse.Items.channel_id)
}
inline ::std::string* ListChannelsResponse_Items::mutable_channel_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListChannelsResponse.Items.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListChannelsResponse_Items::release_channel_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ListChannelsResponse.Items.channel_id)
  
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListChannelsResponse_Items::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != nullptr) {
    
  } else {
    
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ListChannelsResponse.Items.channel_id)
}

// string resource_id = 2;
inline void ListChannelsResponse_Items::clear_resource_id() {
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListChannelsResponse_Items::resource_id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListChannelsResponse.Items.resource_id)
  return resource_id_.GetNoArena();
}
inline void ListChannelsResponse_Items::set_resource_id(const ::std::string& value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ListChannelsResponse.Items.resource_id)
}
#if LANG_CXX11
inline void ListChannelsResponse_Items::set_resource_id(::std::string&& value) {
  
  resource_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ListChannelsResponse.Items.resource_id)
}
#endif
inline void ListChannelsResponse_Items::set_resource_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ListChannelsResponse.Items.resource_id)
}
inline void ListChannelsResponse_Items::set_resource_id(const char* value, size_t size) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ListChannelsResponse.Items.resource_id)
}
inline ::std::string* ListChannelsResponse_Items::mutable_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListChannelsResponse.Items.resource_id)
  return resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListChannelsResponse_Items::release_resource_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ListChannelsResponse.Items.resource_id)
  
  return resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListChannelsResponse_Items::set_allocated_resource_id(::std::string* resource_id) {
  if (resource_id != nullptr) {
    
  } else {
    
  }
  resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ListChannelsResponse.Items.resource_id)
}

// string push_url = 3;
inline void ListChannelsResponse_Items::clear_push_url() {
  push_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListChannelsResponse_Items::push_url() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListChannelsResponse.Items.push_url)
  return push_url_.GetNoArena();
}
inline void ListChannelsResponse_Items::set_push_url(const ::std::string& value) {
  
  push_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ListChannelsResponse.Items.push_url)
}
#if LANG_CXX11
inline void ListChannelsResponse_Items::set_push_url(::std::string&& value) {
  
  push_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ListChannelsResponse.Items.push_url)
}
#endif
inline void ListChannelsResponse_Items::set_push_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  push_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ListChannelsResponse.Items.push_url)
}
inline void ListChannelsResponse_Items::set_push_url(const char* value, size_t size) {
  
  push_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ListChannelsResponse.Items.push_url)
}
inline ::std::string* ListChannelsResponse_Items::mutable_push_url() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListChannelsResponse.Items.push_url)
  return push_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListChannelsResponse_Items::release_push_url() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ListChannelsResponse.Items.push_url)
  
  return push_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListChannelsResponse_Items::set_allocated_push_url(::std::string* push_url) {
  if (push_url != nullptr) {
    
  } else {
    
  }
  push_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), push_url);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ListChannelsResponse.Items.push_url)
}

// string subscriber_email = 4;
inline void ListChannelsResponse_Items::clear_subscriber_email() {
  subscriber_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListChannelsResponse_Items::subscriber_email() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListChannelsResponse.Items.subscriber_email)
  return subscriber_email_.GetNoArena();
}
inline void ListChannelsResponse_Items::set_subscriber_email(const ::std::string& value) {
  
  subscriber_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ListChannelsResponse.Items.subscriber_email)
}
#if LANG_CXX11
inline void ListChannelsResponse_Items::set_subscriber_email(::std::string&& value) {
  
  subscriber_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ListChannelsResponse.Items.subscriber_email)
}
#endif
inline void ListChannelsResponse_Items::set_subscriber_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  subscriber_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ListChannelsResponse.Items.subscriber_email)
}
inline void ListChannelsResponse_Items::set_subscriber_email(const char* value, size_t size) {
  
  subscriber_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ListChannelsResponse.Items.subscriber_email)
}
inline ::std::string* ListChannelsResponse_Items::mutable_subscriber_email() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListChannelsResponse.Items.subscriber_email)
  return subscriber_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListChannelsResponse_Items::release_subscriber_email() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ListChannelsResponse.Items.subscriber_email)
  
  return subscriber_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListChannelsResponse_Items::set_allocated_subscriber_email(::std::string* subscriber_email) {
  if (subscriber_email != nullptr) {
    
  } else {
    
  }
  subscriber_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subscriber_email);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ListChannelsResponse.Items.subscriber_email)
}

// .google.protobuf.Timestamp creation_time = 5;
inline bool ListChannelsResponse_Items::has_creation_time() const {
  return this != internal_default_instance() && creation_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& ListChannelsResponse_Items::creation_time() const {
  const ::google::protobuf::Timestamp* p = creation_time_;
  // @@protoc_insertion_point(field_get:google.storage.v1.ListChannelsResponse.Items.creation_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ListChannelsResponse_Items::release_creation_time() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ListChannelsResponse.Items.creation_time)
  
  ::google::protobuf::Timestamp* temp = creation_time_;
  creation_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ListChannelsResponse_Items::mutable_creation_time() {
  
  if (creation_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    creation_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListChannelsResponse.Items.creation_time)
  return creation_time_;
}
inline void ListChannelsResponse_Items::set_allocated_creation_time(::google::protobuf::Timestamp* creation_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(creation_time_);
  }
  if (creation_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(creation_time)->GetArena();
    if (message_arena != submessage_arena) {
      creation_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, creation_time, submessage_arena);
    }
    
  } else {
    
  }
  creation_time_ = creation_time;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ListChannelsResponse.Items.creation_time)
}

// -------------------------------------------------------------------

// ListChannelsResponse

// repeated .google.storage.v1.ListChannelsResponse.Items items = 1;
inline int ListChannelsResponse::items_size() const {
  return items_.size();
}
inline void ListChannelsResponse::clear_items() {
  items_.Clear();
}
inline ::google::storage::v1::ListChannelsResponse_Items* ListChannelsResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListChannelsResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ListChannelsResponse_Items >*
ListChannelsResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.ListChannelsResponse.items)
  return &items_;
}
inline const ::google::storage::v1::ListChannelsResponse_Items& ListChannelsResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListChannelsResponse.items)
  return items_.Get(index);
}
inline ::google::storage::v1::ListChannelsResponse_Items* ListChannelsResponse::add_items() {
  // @@protoc_insertion_point(field_add:google.storage.v1.ListChannelsResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ListChannelsResponse_Items >&
ListChannelsResponse::items() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.ListChannelsResponse.items)
  return items_;
}

// -------------------------------------------------------------------

// ChecksummedData

// bytes content = 1;
inline void ChecksummedData::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChecksummedData::content() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ChecksummedData.content)
  return content_.GetNoArena();
}
inline void ChecksummedData::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ChecksummedData.content)
}
#if LANG_CXX11
inline void ChecksummedData::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ChecksummedData.content)
}
#endif
inline void ChecksummedData::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ChecksummedData.content)
}
inline void ChecksummedData::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ChecksummedData.content)
}
inline ::std::string* ChecksummedData::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ChecksummedData.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChecksummedData::release_content() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ChecksummedData.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChecksummedData::set_allocated_content(::std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ChecksummedData.content)
}

// .google.protobuf.UInt32Value crc32c = 2;
inline bool ChecksummedData::has_crc32c() const {
  return this != internal_default_instance() && crc32c_ != nullptr;
}
inline const ::google::protobuf::UInt32Value& ChecksummedData::crc32c() const {
  const ::google::protobuf::UInt32Value* p = crc32c_;
  // @@protoc_insertion_point(field_get:google.storage.v1.ChecksummedData.crc32c)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::UInt32Value*>(
      &::google::protobuf::_UInt32Value_default_instance_);
}
inline ::google::protobuf::UInt32Value* ChecksummedData::release_crc32c() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ChecksummedData.crc32c)
  
  ::google::protobuf::UInt32Value* temp = crc32c_;
  crc32c_ = nullptr;
  return temp;
}
inline ::google::protobuf::UInt32Value* ChecksummedData::mutable_crc32c() {
  
  if (crc32c_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::UInt32Value>(GetArenaNoVirtual());
    crc32c_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ChecksummedData.crc32c)
  return crc32c_;
}
inline void ChecksummedData::set_allocated_crc32c(::google::protobuf::UInt32Value* crc32c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(crc32c_);
  }
  if (crc32c) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(crc32c)->GetArena();
    if (message_arena != submessage_arena) {
      crc32c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, crc32c, submessage_arena);
    }
    
  } else {
    
  }
  crc32c_ = crc32c;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ChecksummedData.crc32c)
}

// -------------------------------------------------------------------

// ObjectChecksums

// .google.protobuf.UInt32Value crc32c = 1;
inline bool ObjectChecksums::has_crc32c() const {
  return this != internal_default_instance() && crc32c_ != nullptr;
}
inline const ::google::protobuf::UInt32Value& ObjectChecksums::crc32c() const {
  const ::google::protobuf::UInt32Value* p = crc32c_;
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectChecksums.crc32c)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::UInt32Value*>(
      &::google::protobuf::_UInt32Value_default_instance_);
}
inline ::google::protobuf::UInt32Value* ObjectChecksums::release_crc32c() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectChecksums.crc32c)
  
  ::google::protobuf::UInt32Value* temp = crc32c_;
  crc32c_ = nullptr;
  return temp;
}
inline ::google::protobuf::UInt32Value* ObjectChecksums::mutable_crc32c() {
  
  if (crc32c_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::UInt32Value>(GetArenaNoVirtual());
    crc32c_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectChecksums.crc32c)
  return crc32c_;
}
inline void ObjectChecksums::set_allocated_crc32c(::google::protobuf::UInt32Value* crc32c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(crc32c_);
  }
  if (crc32c) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(crc32c)->GetArena();
    if (message_arena != submessage_arena) {
      crc32c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, crc32c, submessage_arena);
    }
    
  } else {
    
  }
  crc32c_ = crc32c;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectChecksums.crc32c)
}

// string md5_hash = 2;
inline void ObjectChecksums::clear_md5_hash() {
  md5_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectChecksums::md5_hash() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectChecksums.md5_hash)
  return md5_hash_.GetNoArena();
}
inline void ObjectChecksums::set_md5_hash(const ::std::string& value) {
  
  md5_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectChecksums.md5_hash)
}
#if LANG_CXX11
inline void ObjectChecksums::set_md5_hash(::std::string&& value) {
  
  md5_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectChecksums.md5_hash)
}
#endif
inline void ObjectChecksums::set_md5_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  md5_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectChecksums.md5_hash)
}
inline void ObjectChecksums::set_md5_hash(const char* value, size_t size) {
  
  md5_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectChecksums.md5_hash)
}
inline ::std::string* ObjectChecksums::mutable_md5_hash() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectChecksums.md5_hash)
  return md5_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectChecksums::release_md5_hash() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectChecksums.md5_hash)
  
  return md5_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectChecksums::set_allocated_md5_hash(::std::string* md5_hash) {
  if (md5_hash != nullptr) {
    
  } else {
    
  }
  md5_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5_hash);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectChecksums.md5_hash)
}

// -------------------------------------------------------------------

// CommonEnums

// -------------------------------------------------------------------

// ContentRange

// int64 start = 1;
inline void ContentRange::clear_start() {
  start_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ContentRange::start() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ContentRange.start)
  return start_;
}
inline void ContentRange::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.ContentRange.start)
}

// int64 end = 2;
inline void ContentRange::clear_end() {
  end_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ContentRange::end() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ContentRange.end)
  return end_;
}
inline void ContentRange::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.ContentRange.end)
}

// int64 complete_length = 3;
inline void ContentRange::clear_complete_length() {
  complete_length_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ContentRange::complete_length() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ContentRange.complete_length)
  return complete_length_;
}
inline void ContentRange::set_complete_length(::google::protobuf::int64 value) {
  
  complete_length_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.ContentRange.complete_length)
}

// -------------------------------------------------------------------

// HmacKeyMetadata

// string id = 1;
inline void HmacKeyMetadata::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HmacKeyMetadata::id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.HmacKeyMetadata.id)
  return id_.GetNoArena();
}
inline void HmacKeyMetadata::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.HmacKeyMetadata.id)
}
#if LANG_CXX11
inline void HmacKeyMetadata::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.HmacKeyMetadata.id)
}
#endif
inline void HmacKeyMetadata::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.HmacKeyMetadata.id)
}
inline void HmacKeyMetadata::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.HmacKeyMetadata.id)
}
inline ::std::string* HmacKeyMetadata::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.HmacKeyMetadata.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HmacKeyMetadata::release_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.HmacKeyMetadata.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HmacKeyMetadata::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.HmacKeyMetadata.id)
}

// string access_id = 2;
inline void HmacKeyMetadata::clear_access_id() {
  access_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HmacKeyMetadata::access_id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.HmacKeyMetadata.access_id)
  return access_id_.GetNoArena();
}
inline void HmacKeyMetadata::set_access_id(const ::std::string& value) {
  
  access_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.HmacKeyMetadata.access_id)
}
#if LANG_CXX11
inline void HmacKeyMetadata::set_access_id(::std::string&& value) {
  
  access_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.HmacKeyMetadata.access_id)
}
#endif
inline void HmacKeyMetadata::set_access_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  access_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.HmacKeyMetadata.access_id)
}
inline void HmacKeyMetadata::set_access_id(const char* value, size_t size) {
  
  access_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.HmacKeyMetadata.access_id)
}
inline ::std::string* HmacKeyMetadata::mutable_access_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.HmacKeyMetadata.access_id)
  return access_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HmacKeyMetadata::release_access_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.HmacKeyMetadata.access_id)
  
  return access_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HmacKeyMetadata::set_allocated_access_id(::std::string* access_id) {
  if (access_id != nullptr) {
    
  } else {
    
  }
  access_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.HmacKeyMetadata.access_id)
}

// string project_id = 3;
inline void HmacKeyMetadata::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HmacKeyMetadata::project_id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.HmacKeyMetadata.project_id)
  return project_id_.GetNoArena();
}
inline void HmacKeyMetadata::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.HmacKeyMetadata.project_id)
}
#if LANG_CXX11
inline void HmacKeyMetadata::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.HmacKeyMetadata.project_id)
}
#endif
inline void HmacKeyMetadata::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.HmacKeyMetadata.project_id)
}
inline void HmacKeyMetadata::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.HmacKeyMetadata.project_id)
}
inline ::std::string* HmacKeyMetadata::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.HmacKeyMetadata.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HmacKeyMetadata::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.HmacKeyMetadata.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HmacKeyMetadata::set_allocated_project_id(::std::string* project_id) {
  if (project_id != nullptr) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.HmacKeyMetadata.project_id)
}

// string service_account_email = 4;
inline void HmacKeyMetadata::clear_service_account_email() {
  service_account_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HmacKeyMetadata::service_account_email() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.HmacKeyMetadata.service_account_email)
  return service_account_email_.GetNoArena();
}
inline void HmacKeyMetadata::set_service_account_email(const ::std::string& value) {
  
  service_account_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.HmacKeyMetadata.service_account_email)
}
#if LANG_CXX11
inline void HmacKeyMetadata::set_service_account_email(::std::string&& value) {
  
  service_account_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.HmacKeyMetadata.service_account_email)
}
#endif
inline void HmacKeyMetadata::set_service_account_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  service_account_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.HmacKeyMetadata.service_account_email)
}
inline void HmacKeyMetadata::set_service_account_email(const char* value, size_t size) {
  
  service_account_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.HmacKeyMetadata.service_account_email)
}
inline ::std::string* HmacKeyMetadata::mutable_service_account_email() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.HmacKeyMetadata.service_account_email)
  return service_account_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HmacKeyMetadata::release_service_account_email() {
  // @@protoc_insertion_point(field_release:google.storage.v1.HmacKeyMetadata.service_account_email)
  
  return service_account_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HmacKeyMetadata::set_allocated_service_account_email(::std::string* service_account_email) {
  if (service_account_email != nullptr) {
    
  } else {
    
  }
  service_account_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_account_email);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.HmacKeyMetadata.service_account_email)
}

// string state = 5;
inline void HmacKeyMetadata::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HmacKeyMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.HmacKeyMetadata.state)
  return state_.GetNoArena();
}
inline void HmacKeyMetadata::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.HmacKeyMetadata.state)
}
#if LANG_CXX11
inline void HmacKeyMetadata::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.HmacKeyMetadata.state)
}
#endif
inline void HmacKeyMetadata::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.HmacKeyMetadata.state)
}
inline void HmacKeyMetadata::set_state(const char* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.HmacKeyMetadata.state)
}
inline ::std::string* HmacKeyMetadata::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.HmacKeyMetadata.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HmacKeyMetadata::release_state() {
  // @@protoc_insertion_point(field_release:google.storage.v1.HmacKeyMetadata.state)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HmacKeyMetadata::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.HmacKeyMetadata.state)
}

// .google.protobuf.Timestamp time_created = 6;
inline bool HmacKeyMetadata::has_time_created() const {
  return this != internal_default_instance() && time_created_ != nullptr;
}
inline const ::google::protobuf::Timestamp& HmacKeyMetadata::time_created() const {
  const ::google::protobuf::Timestamp* p = time_created_;
  // @@protoc_insertion_point(field_get:google.storage.v1.HmacKeyMetadata.time_created)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* HmacKeyMetadata::release_time_created() {
  // @@protoc_insertion_point(field_release:google.storage.v1.HmacKeyMetadata.time_created)
  
  ::google::protobuf::Timestamp* temp = time_created_;
  time_created_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* HmacKeyMetadata::mutable_time_created() {
  
  if (time_created_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    time_created_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.HmacKeyMetadata.time_created)
  return time_created_;
}
inline void HmacKeyMetadata::set_allocated_time_created(::google::protobuf::Timestamp* time_created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_created_);
  }
  if (time_created) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(time_created)->GetArena();
    if (message_arena != submessage_arena) {
      time_created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_created, submessage_arena);
    }
    
  } else {
    
  }
  time_created_ = time_created;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.HmacKeyMetadata.time_created)
}

// .google.protobuf.Timestamp updated = 7;
inline bool HmacKeyMetadata::has_updated() const {
  return this != internal_default_instance() && updated_ != nullptr;
}
inline const ::google::protobuf::Timestamp& HmacKeyMetadata::updated() const {
  const ::google::protobuf::Timestamp* p = updated_;
  // @@protoc_insertion_point(field_get:google.storage.v1.HmacKeyMetadata.updated)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* HmacKeyMetadata::release_updated() {
  // @@protoc_insertion_point(field_release:google.storage.v1.HmacKeyMetadata.updated)
  
  ::google::protobuf::Timestamp* temp = updated_;
  updated_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* HmacKeyMetadata::mutable_updated() {
  
  if (updated_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    updated_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.HmacKeyMetadata.updated)
  return updated_;
}
inline void HmacKeyMetadata::set_allocated_updated(::google::protobuf::Timestamp* updated) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(updated_);
  }
  if (updated) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(updated)->GetArena();
    if (message_arena != submessage_arena) {
      updated = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updated, submessage_arena);
    }
    
  } else {
    
  }
  updated_ = updated;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.HmacKeyMetadata.updated)
}

// string etag = 8;
inline void HmacKeyMetadata::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HmacKeyMetadata::etag() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.HmacKeyMetadata.etag)
  return etag_.GetNoArena();
}
inline void HmacKeyMetadata::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.HmacKeyMetadata.etag)
}
#if LANG_CXX11
inline void HmacKeyMetadata::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.HmacKeyMetadata.etag)
}
#endif
inline void HmacKeyMetadata::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.HmacKeyMetadata.etag)
}
inline void HmacKeyMetadata::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.HmacKeyMetadata.etag)
}
inline ::std::string* HmacKeyMetadata::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.HmacKeyMetadata.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HmacKeyMetadata::release_etag() {
  // @@protoc_insertion_point(field_release:google.storage.v1.HmacKeyMetadata.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HmacKeyMetadata::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.HmacKeyMetadata.etag)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Notification

// string topic = 1;
inline void Notification::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::topic() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Notification.topic)
  return topic_.GetNoArena();
}
inline void Notification::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Notification.topic)
}
#if LANG_CXX11
inline void Notification::set_topic(::std::string&& value) {
  
  topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Notification.topic)
}
#endif
inline void Notification::set_topic(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Notification.topic)
}
inline void Notification::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Notification.topic)
}
inline ::std::string* Notification::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Notification.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_topic() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Notification.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_topic(::std::string* topic) {
  if (topic != nullptr) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Notification.topic)
}

// repeated string event_types = 2;
inline int Notification::event_types_size() const {
  return event_types_.size();
}
inline void Notification::clear_event_types() {
  event_types_.Clear();
}
inline const ::std::string& Notification::event_types(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Notification.event_types)
  return event_types_.Get(index);
}
inline ::std::string* Notification::mutable_event_types(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Notification.event_types)
  return event_types_.Mutable(index);
}
inline void Notification::set_event_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Notification.event_types)
  event_types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Notification::set_event_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.Notification.event_types)
  event_types_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Notification::set_event_types(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  event_types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Notification.event_types)
}
inline void Notification::set_event_types(int index, const char* value, size_t size) {
  event_types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Notification.event_types)
}
inline ::std::string* Notification::add_event_types() {
  // @@protoc_insertion_point(field_add_mutable:google.storage.v1.Notification.event_types)
  return event_types_.Add();
}
inline void Notification::add_event_types(const ::std::string& value) {
  event_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storage.v1.Notification.event_types)
}
#if LANG_CXX11
inline void Notification::add_event_types(::std::string&& value) {
  event_types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storage.v1.Notification.event_types)
}
#endif
inline void Notification::add_event_types(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  event_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storage.v1.Notification.event_types)
}
inline void Notification::add_event_types(const char* value, size_t size) {
  event_types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storage.v1.Notification.event_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Notification::event_types() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Notification.event_types)
  return event_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Notification::mutable_event_types() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Notification.event_types)
  return &event_types_;
}

// map<string, string> custom_attributes = 3;
inline int Notification::custom_attributes_size() const {
  return custom_attributes_.size();
}
inline void Notification::clear_custom_attributes() {
  custom_attributes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Notification::custom_attributes() const {
  // @@protoc_insertion_point(field_map:google.storage.v1.Notification.custom_attributes)
  return custom_attributes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Notification::mutable_custom_attributes() {
  // @@protoc_insertion_point(field_mutable_map:google.storage.v1.Notification.custom_attributes)
  return custom_attributes_.MutableMap();
}

// string etag = 4;
inline void Notification::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::etag() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Notification.etag)
  return etag_.GetNoArena();
}
inline void Notification::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Notification.etag)
}
#if LANG_CXX11
inline void Notification::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Notification.etag)
}
#endif
inline void Notification::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Notification.etag)
}
inline void Notification::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Notification.etag)
}
inline ::std::string* Notification::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Notification.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_etag() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Notification.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Notification.etag)
}

// string object_name_prefix = 5;
inline void Notification::clear_object_name_prefix() {
  object_name_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::object_name_prefix() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Notification.object_name_prefix)
  return object_name_prefix_.GetNoArena();
}
inline void Notification::set_object_name_prefix(const ::std::string& value) {
  
  object_name_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Notification.object_name_prefix)
}
#if LANG_CXX11
inline void Notification::set_object_name_prefix(::std::string&& value) {
  
  object_name_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Notification.object_name_prefix)
}
#endif
inline void Notification::set_object_name_prefix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_name_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Notification.object_name_prefix)
}
inline void Notification::set_object_name_prefix(const char* value, size_t size) {
  
  object_name_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Notification.object_name_prefix)
}
inline ::std::string* Notification::mutable_object_name_prefix() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Notification.object_name_prefix)
  return object_name_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_object_name_prefix() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Notification.object_name_prefix)
  
  return object_name_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_object_name_prefix(::std::string* object_name_prefix) {
  if (object_name_prefix != nullptr) {
    
  } else {
    
  }
  object_name_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_name_prefix);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Notification.object_name_prefix)
}

// string payload_format = 6;
inline void Notification::clear_payload_format() {
  payload_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::payload_format() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Notification.payload_format)
  return payload_format_.GetNoArena();
}
inline void Notification::set_payload_format(const ::std::string& value) {
  
  payload_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Notification.payload_format)
}
#if LANG_CXX11
inline void Notification::set_payload_format(::std::string&& value) {
  
  payload_format_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Notification.payload_format)
}
#endif
inline void Notification::set_payload_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  payload_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Notification.payload_format)
}
inline void Notification::set_payload_format(const char* value, size_t size) {
  
  payload_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Notification.payload_format)
}
inline ::std::string* Notification::mutable_payload_format() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Notification.payload_format)
  return payload_format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_payload_format() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Notification.payload_format)
  
  return payload_format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_payload_format(::std::string* payload_format) {
  if (payload_format != nullptr) {
    
  } else {
    
  }
  payload_format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload_format);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Notification.payload_format)
}

// string id = 7;
inline void Notification::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Notification.id)
  return id_.GetNoArena();
}
inline void Notification::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Notification.id)
}
#if LANG_CXX11
inline void Notification::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Notification.id)
}
#endif
inline void Notification::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Notification.id)
}
inline void Notification::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Notification.id)
}
inline ::std::string* Notification::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Notification.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Notification.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Notification.id)
}

// -------------------------------------------------------------------

// ListNotificationsResponse

// repeated .google.storage.v1.Notification items = 1;
inline int ListNotificationsResponse::items_size() const {
  return items_.size();
}
inline void ListNotificationsResponse::clear_items() {
  items_.Clear();
}
inline ::google::storage::v1::Notification* ListNotificationsResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListNotificationsResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Notification >*
ListNotificationsResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.ListNotificationsResponse.items)
  return &items_;
}
inline const ::google::storage::v1::Notification& ListNotificationsResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListNotificationsResponse.items)
  return items_.Get(index);
}
inline ::google::storage::v1::Notification* ListNotificationsResponse::add_items() {
  // @@protoc_insertion_point(field_add:google.storage.v1.ListNotificationsResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Notification >&
ListNotificationsResponse::items() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.ListNotificationsResponse.items)
  return items_;
}

// -------------------------------------------------------------------

// Object_CustomerEncryption

// string encryption_algorithm = 1;
inline void Object_CustomerEncryption::clear_encryption_algorithm() {
  encryption_algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object_CustomerEncryption::encryption_algorithm() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.CustomerEncryption.encryption_algorithm)
  return encryption_algorithm_.GetNoArena();
}
inline void Object_CustomerEncryption::set_encryption_algorithm(const ::std::string& value) {
  
  encryption_algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.CustomerEncryption.encryption_algorithm)
}
#if LANG_CXX11
inline void Object_CustomerEncryption::set_encryption_algorithm(::std::string&& value) {
  
  encryption_algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.CustomerEncryption.encryption_algorithm)
}
#endif
inline void Object_CustomerEncryption::set_encryption_algorithm(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encryption_algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.CustomerEncryption.encryption_algorithm)
}
inline void Object_CustomerEncryption::set_encryption_algorithm(const char* value, size_t size) {
  
  encryption_algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.CustomerEncryption.encryption_algorithm)
}
inline ::std::string* Object_CustomerEncryption::mutable_encryption_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.CustomerEncryption.encryption_algorithm)
  return encryption_algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object_CustomerEncryption::release_encryption_algorithm() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.CustomerEncryption.encryption_algorithm)
  
  return encryption_algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object_CustomerEncryption::set_allocated_encryption_algorithm(::std::string* encryption_algorithm) {
  if (encryption_algorithm != nullptr) {
    
  } else {
    
  }
  encryption_algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encryption_algorithm);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.CustomerEncryption.encryption_algorithm)
}

// string key_sha256 = 2;
inline void Object_CustomerEncryption::clear_key_sha256() {
  key_sha256_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object_CustomerEncryption::key_sha256() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.CustomerEncryption.key_sha256)
  return key_sha256_.GetNoArena();
}
inline void Object_CustomerEncryption::set_key_sha256(const ::std::string& value) {
  
  key_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.CustomerEncryption.key_sha256)
}
#if LANG_CXX11
inline void Object_CustomerEncryption::set_key_sha256(::std::string&& value) {
  
  key_sha256_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.CustomerEncryption.key_sha256)
}
#endif
inline void Object_CustomerEncryption::set_key_sha256(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.CustomerEncryption.key_sha256)
}
inline void Object_CustomerEncryption::set_key_sha256(const char* value, size_t size) {
  
  key_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.CustomerEncryption.key_sha256)
}
inline ::std::string* Object_CustomerEncryption::mutable_key_sha256() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.CustomerEncryption.key_sha256)
  return key_sha256_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object_CustomerEncryption::release_key_sha256() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.CustomerEncryption.key_sha256)
  
  return key_sha256_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object_CustomerEncryption::set_allocated_key_sha256(::std::string* key_sha256) {
  if (key_sha256 != nullptr) {
    
  } else {
    
  }
  key_sha256_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_sha256);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.CustomerEncryption.key_sha256)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Object

// string content_encoding = 1;
inline void Object::clear_content_encoding() {
  content_encoding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::content_encoding() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.content_encoding)
  return content_encoding_.GetNoArena();
}
inline void Object::set_content_encoding(const ::std::string& value) {
  
  content_encoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.content_encoding)
}
#if LANG_CXX11
inline void Object::set_content_encoding(::std::string&& value) {
  
  content_encoding_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.content_encoding)
}
#endif
inline void Object::set_content_encoding(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_encoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.content_encoding)
}
inline void Object::set_content_encoding(const char* value, size_t size) {
  
  content_encoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.content_encoding)
}
inline ::std::string* Object::mutable_content_encoding() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.content_encoding)
  return content_encoding_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_content_encoding() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.content_encoding)
  
  return content_encoding_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_content_encoding(::std::string* content_encoding) {
  if (content_encoding != nullptr) {
    
  } else {
    
  }
  content_encoding_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_encoding);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.content_encoding)
}

// string content_disposition = 2;
inline void Object::clear_content_disposition() {
  content_disposition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::content_disposition() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.content_disposition)
  return content_disposition_.GetNoArena();
}
inline void Object::set_content_disposition(const ::std::string& value) {
  
  content_disposition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.content_disposition)
}
#if LANG_CXX11
inline void Object::set_content_disposition(::std::string&& value) {
  
  content_disposition_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.content_disposition)
}
#endif
inline void Object::set_content_disposition(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_disposition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.content_disposition)
}
inline void Object::set_content_disposition(const char* value, size_t size) {
  
  content_disposition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.content_disposition)
}
inline ::std::string* Object::mutable_content_disposition() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.content_disposition)
  return content_disposition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_content_disposition() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.content_disposition)
  
  return content_disposition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_content_disposition(::std::string* content_disposition) {
  if (content_disposition != nullptr) {
    
  } else {
    
  }
  content_disposition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_disposition);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.content_disposition)
}

// string cache_control = 3;
inline void Object::clear_cache_control() {
  cache_control_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::cache_control() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.cache_control)
  return cache_control_.GetNoArena();
}
inline void Object::set_cache_control(const ::std::string& value) {
  
  cache_control_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.cache_control)
}
#if LANG_CXX11
inline void Object::set_cache_control(::std::string&& value) {
  
  cache_control_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.cache_control)
}
#endif
inline void Object::set_cache_control(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cache_control_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.cache_control)
}
inline void Object::set_cache_control(const char* value, size_t size) {
  
  cache_control_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.cache_control)
}
inline ::std::string* Object::mutable_cache_control() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.cache_control)
  return cache_control_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_cache_control() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.cache_control)
  
  return cache_control_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_cache_control(::std::string* cache_control) {
  if (cache_control != nullptr) {
    
  } else {
    
  }
  cache_control_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_control);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.cache_control)
}

// repeated .google.storage.v1.ObjectAccessControl acl = 4;
inline int Object::acl_size() const {
  return acl_.size();
}
inline void Object::clear_acl() {
  acl_.Clear();
}
inline ::google::storage::v1::ObjectAccessControl* Object::mutable_acl(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.acl)
  return acl_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >*
Object::mutable_acl() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.Object.acl)
  return &acl_;
}
inline const ::google::storage::v1::ObjectAccessControl& Object::acl(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.acl)
  return acl_.Get(index);
}
inline ::google::storage::v1::ObjectAccessControl* Object::add_acl() {
  // @@protoc_insertion_point(field_add:google.storage.v1.Object.acl)
  return acl_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >&
Object::acl() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.Object.acl)
  return acl_;
}

// string content_language = 5;
inline void Object::clear_content_language() {
  content_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::content_language() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.content_language)
  return content_language_.GetNoArena();
}
inline void Object::set_content_language(const ::std::string& value) {
  
  content_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.content_language)
}
#if LANG_CXX11
inline void Object::set_content_language(::std::string&& value) {
  
  content_language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.content_language)
}
#endif
inline void Object::set_content_language(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.content_language)
}
inline void Object::set_content_language(const char* value, size_t size) {
  
  content_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.content_language)
}
inline ::std::string* Object::mutable_content_language() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.content_language)
  return content_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_content_language() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.content_language)
  
  return content_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_content_language(::std::string* content_language) {
  if (content_language != nullptr) {
    
  } else {
    
  }
  content_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_language);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.content_language)
}

// int64 metageneration = 6;
inline void Object::clear_metageneration() {
  metageneration_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Object::metageneration() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.metageneration)
  return metageneration_;
}
inline void Object::set_metageneration(::google::protobuf::int64 value) {
  
  metageneration_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.metageneration)
}

// .google.protobuf.Timestamp time_deleted = 7;
inline bool Object::has_time_deleted() const {
  return this != internal_default_instance() && time_deleted_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Object::time_deleted() const {
  const ::google::protobuf::Timestamp* p = time_deleted_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.time_deleted)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Object::release_time_deleted() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.time_deleted)
  
  ::google::protobuf::Timestamp* temp = time_deleted_;
  time_deleted_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Object::mutable_time_deleted() {
  
  if (time_deleted_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    time_deleted_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.time_deleted)
  return time_deleted_;
}
inline void Object::set_allocated_time_deleted(::google::protobuf::Timestamp* time_deleted) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_deleted_);
  }
  if (time_deleted) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(time_deleted)->GetArena();
    if (message_arena != submessage_arena) {
      time_deleted = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_deleted, submessage_arena);
    }
    
  } else {
    
  }
  time_deleted_ = time_deleted;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.time_deleted)
}

// string content_type = 8;
inline void Object::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::content_type() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.content_type)
  return content_type_.GetNoArena();
}
inline void Object::set_content_type(const ::std::string& value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.content_type)
}
#if LANG_CXX11
inline void Object::set_content_type(::std::string&& value) {
  
  content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.content_type)
}
#endif
inline void Object::set_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.content_type)
}
inline void Object::set_content_type(const char* value, size_t size) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.content_type)
}
inline ::std::string* Object::mutable_content_type() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_content_type() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.content_type)
  
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_content_type(::std::string* content_type) {
  if (content_type != nullptr) {
    
  } else {
    
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.content_type)
}

// int64 size = 9;
inline void Object::clear_size() {
  size_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Object::size() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.size)
  return size_;
}
inline void Object::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.size)
}

// .google.protobuf.Timestamp time_created = 10;
inline bool Object::has_time_created() const {
  return this != internal_default_instance() && time_created_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Object::time_created() const {
  const ::google::protobuf::Timestamp* p = time_created_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.time_created)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Object::release_time_created() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.time_created)
  
  ::google::protobuf::Timestamp* temp = time_created_;
  time_created_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Object::mutable_time_created() {
  
  if (time_created_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    time_created_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.time_created)
  return time_created_;
}
inline void Object::set_allocated_time_created(::google::protobuf::Timestamp* time_created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_created_);
  }
  if (time_created) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(time_created)->GetArena();
    if (message_arena != submessage_arena) {
      time_created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_created, submessage_arena);
    }
    
  } else {
    
  }
  time_created_ = time_created;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.time_created)
}

// .google.protobuf.UInt32Value crc32c = 11;
inline bool Object::has_crc32c() const {
  return this != internal_default_instance() && crc32c_ != nullptr;
}
inline const ::google::protobuf::UInt32Value& Object::crc32c() const {
  const ::google::protobuf::UInt32Value* p = crc32c_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.crc32c)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::UInt32Value*>(
      &::google::protobuf::_UInt32Value_default_instance_);
}
inline ::google::protobuf::UInt32Value* Object::release_crc32c() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.crc32c)
  
  ::google::protobuf::UInt32Value* temp = crc32c_;
  crc32c_ = nullptr;
  return temp;
}
inline ::google::protobuf::UInt32Value* Object::mutable_crc32c() {
  
  if (crc32c_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::UInt32Value>(GetArenaNoVirtual());
    crc32c_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.crc32c)
  return crc32c_;
}
inline void Object::set_allocated_crc32c(::google::protobuf::UInt32Value* crc32c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(crc32c_);
  }
  if (crc32c) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(crc32c)->GetArena();
    if (message_arena != submessage_arena) {
      crc32c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, crc32c, submessage_arena);
    }
    
  } else {
    
  }
  crc32c_ = crc32c;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.crc32c)
}

// int32 component_count = 12;
inline void Object::clear_component_count() {
  component_count_ = 0;
}
inline ::google::protobuf::int32 Object::component_count() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.component_count)
  return component_count_;
}
inline void Object::set_component_count(::google::protobuf::int32 value) {
  
  component_count_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.component_count)
}

// string md5_hash = 13;
inline void Object::clear_md5_hash() {
  md5_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::md5_hash() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.md5_hash)
  return md5_hash_.GetNoArena();
}
inline void Object::set_md5_hash(const ::std::string& value) {
  
  md5_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.md5_hash)
}
#if LANG_CXX11
inline void Object::set_md5_hash(::std::string&& value) {
  
  md5_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.md5_hash)
}
#endif
inline void Object::set_md5_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  md5_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.md5_hash)
}
inline void Object::set_md5_hash(const char* value, size_t size) {
  
  md5_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.md5_hash)
}
inline ::std::string* Object::mutable_md5_hash() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.md5_hash)
  return md5_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_md5_hash() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.md5_hash)
  
  return md5_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_md5_hash(::std::string* md5_hash) {
  if (md5_hash != nullptr) {
    
  } else {
    
  }
  md5_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5_hash);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.md5_hash)
}

// string etag = 14;
inline void Object::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::etag() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.etag)
  return etag_.GetNoArena();
}
inline void Object::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.etag)
}
#if LANG_CXX11
inline void Object::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.etag)
}
#endif
inline void Object::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.etag)
}
inline void Object::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.etag)
}
inline ::std::string* Object::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_etag() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.etag)
}

// .google.protobuf.Timestamp updated = 15;
inline bool Object::has_updated() const {
  return this != internal_default_instance() && updated_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Object::updated() const {
  const ::google::protobuf::Timestamp* p = updated_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.updated)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Object::release_updated() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.updated)
  
  ::google::protobuf::Timestamp* temp = updated_;
  updated_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Object::mutable_updated() {
  
  if (updated_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    updated_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.updated)
  return updated_;
}
inline void Object::set_allocated_updated(::google::protobuf::Timestamp* updated) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(updated_);
  }
  if (updated) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(updated)->GetArena();
    if (message_arena != submessage_arena) {
      updated = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updated, submessage_arena);
    }
    
  } else {
    
  }
  updated_ = updated;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.updated)
}

// string storage_class = 16;
inline void Object::clear_storage_class() {
  storage_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::storage_class() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.storage_class)
  return storage_class_.GetNoArena();
}
inline void Object::set_storage_class(const ::std::string& value) {
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.storage_class)
}
#if LANG_CXX11
inline void Object::set_storage_class(::std::string&& value) {
  
  storage_class_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.storage_class)
}
#endif
inline void Object::set_storage_class(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.storage_class)
}
inline void Object::set_storage_class(const char* value, size_t size) {
  
  storage_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.storage_class)
}
inline ::std::string* Object::mutable_storage_class() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.storage_class)
  return storage_class_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_storage_class() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.storage_class)
  
  return storage_class_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_storage_class(::std::string* storage_class) {
  if (storage_class != nullptr) {
    
  } else {
    
  }
  storage_class_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storage_class);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.storage_class)
}

// string kms_key_name = 17;
inline void Object::clear_kms_key_name() {
  kms_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::kms_key_name() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.kms_key_name)
  return kms_key_name_.GetNoArena();
}
inline void Object::set_kms_key_name(const ::std::string& value) {
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.kms_key_name)
}
#if LANG_CXX11
inline void Object::set_kms_key_name(::std::string&& value) {
  
  kms_key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.kms_key_name)
}
#endif
inline void Object::set_kms_key_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.kms_key_name)
}
inline void Object::set_kms_key_name(const char* value, size_t size) {
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.kms_key_name)
}
inline ::std::string* Object::mutable_kms_key_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.kms_key_name)
  return kms_key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_kms_key_name() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.kms_key_name)
  
  return kms_key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_kms_key_name(::std::string* kms_key_name) {
  if (kms_key_name != nullptr) {
    
  } else {
    
  }
  kms_key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kms_key_name);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.kms_key_name)
}

// .google.protobuf.Timestamp time_storage_class_updated = 18;
inline bool Object::has_time_storage_class_updated() const {
  return this != internal_default_instance() && time_storage_class_updated_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Object::time_storage_class_updated() const {
  const ::google::protobuf::Timestamp* p = time_storage_class_updated_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.time_storage_class_updated)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Object::release_time_storage_class_updated() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.time_storage_class_updated)
  
  ::google::protobuf::Timestamp* temp = time_storage_class_updated_;
  time_storage_class_updated_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Object::mutable_time_storage_class_updated() {
  
  if (time_storage_class_updated_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    time_storage_class_updated_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.time_storage_class_updated)
  return time_storage_class_updated_;
}
inline void Object::set_allocated_time_storage_class_updated(::google::protobuf::Timestamp* time_storage_class_updated) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_storage_class_updated_);
  }
  if (time_storage_class_updated) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(time_storage_class_updated)->GetArena();
    if (message_arena != submessage_arena) {
      time_storage_class_updated = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_storage_class_updated, submessage_arena);
    }
    
  } else {
    
  }
  time_storage_class_updated_ = time_storage_class_updated;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.time_storage_class_updated)
}

// bool temporary_hold = 19;
inline void Object::clear_temporary_hold() {
  temporary_hold_ = false;
}
inline bool Object::temporary_hold() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.temporary_hold)
  return temporary_hold_;
}
inline void Object::set_temporary_hold(bool value) {
  
  temporary_hold_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.temporary_hold)
}

// .google.protobuf.Timestamp retention_expiration_time = 20;
inline bool Object::has_retention_expiration_time() const {
  return this != internal_default_instance() && retention_expiration_time_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Object::retention_expiration_time() const {
  const ::google::protobuf::Timestamp* p = retention_expiration_time_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.retention_expiration_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Object::release_retention_expiration_time() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.retention_expiration_time)
  
  ::google::protobuf::Timestamp* temp = retention_expiration_time_;
  retention_expiration_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Object::mutable_retention_expiration_time() {
  
  if (retention_expiration_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    retention_expiration_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.retention_expiration_time)
  return retention_expiration_time_;
}
inline void Object::set_allocated_retention_expiration_time(::google::protobuf::Timestamp* retention_expiration_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(retention_expiration_time_);
  }
  if (retention_expiration_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(retention_expiration_time)->GetArena();
    if (message_arena != submessage_arena) {
      retention_expiration_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retention_expiration_time, submessage_arena);
    }
    
  } else {
    
  }
  retention_expiration_time_ = retention_expiration_time;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.retention_expiration_time)
}

// map<string, string> metadata = 21;
inline int Object::metadata_size() const {
  return metadata_.size();
}
inline void Object::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Object::metadata() const {
  // @@protoc_insertion_point(field_map:google.storage.v1.Object.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Object::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:google.storage.v1.Object.metadata)
  return metadata_.MutableMap();
}

// .google.protobuf.BoolValue event_based_hold = 29;
inline bool Object::has_event_based_hold() const {
  return this != internal_default_instance() && event_based_hold_ != nullptr;
}
inline const ::google::protobuf::BoolValue& Object::event_based_hold() const {
  const ::google::protobuf::BoolValue* p = event_based_hold_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.event_based_hold)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* Object::release_event_based_hold() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.event_based_hold)
  
  ::google::protobuf::BoolValue* temp = event_based_hold_;
  event_based_hold_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* Object::mutable_event_based_hold() {
  
  if (event_based_hold_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    event_based_hold_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.event_based_hold)
  return event_based_hold_;
}
inline void Object::set_allocated_event_based_hold(::google::protobuf::BoolValue* event_based_hold) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_based_hold_);
  }
  if (event_based_hold) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(event_based_hold)->GetArena();
    if (message_arena != submessage_arena) {
      event_based_hold = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_based_hold, submessage_arena);
    }
    
  } else {
    
  }
  event_based_hold_ = event_based_hold;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.event_based_hold)
}

// string name = 23;
inline void Object::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::name() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.name)
  return name_.GetNoArena();
}
inline void Object::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.name)
}
#if LANG_CXX11
inline void Object::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.name)
}
#endif
inline void Object::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.name)
}
inline void Object::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.name)
}
inline ::std::string* Object::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_name() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.name)
}

// string id = 24;
inline void Object::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.id)
  return id_.GetNoArena();
}
inline void Object::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.id)
}
#if LANG_CXX11
inline void Object::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.id)
}
#endif
inline void Object::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.id)
}
inline void Object::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.id)
}
inline ::std::string* Object::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.id)
}

// string bucket = 25;
inline void Object::clear_bucket() {
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Object::bucket() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.bucket)
  return bucket_.GetNoArena();
}
inline void Object::set_bucket(const ::std::string& value) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.bucket)
}
#if LANG_CXX11
inline void Object::set_bucket(::std::string&& value) {
  
  bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Object.bucket)
}
#endif
inline void Object::set_bucket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Object.bucket)
}
inline void Object::set_bucket(const char* value, size_t size) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Object.bucket)
}
inline ::std::string* Object::mutable_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.bucket)
  return bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_bucket() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.bucket)
  
  return bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_bucket(::std::string* bucket) {
  if (bucket != nullptr) {
    
  } else {
    
  }
  bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.bucket)
}

// int64 generation = 26;
inline void Object::clear_generation() {
  generation_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Object::generation() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.generation)
  return generation_;
}
inline void Object::set_generation(::google::protobuf::int64 value) {
  
  generation_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.Object.generation)
}

// .google.storage.v1.Owner owner = 27;
inline bool Object::has_owner() const {
  return this != internal_default_instance() && owner_ != nullptr;
}
inline void Object::clear_owner() {
  if (GetArenaNoVirtual() == nullptr && owner_ != nullptr) {
    delete owner_;
  }
  owner_ = nullptr;
}
inline const ::google::storage::v1::Owner& Object::owner() const {
  const ::google::storage::v1::Owner* p = owner_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.owner)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Owner*>(
      &::google::storage::v1::_Owner_default_instance_);
}
inline ::google::storage::v1::Owner* Object::release_owner() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.owner)
  
  ::google::storage::v1::Owner* temp = owner_;
  owner_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Owner* Object::mutable_owner() {
  
  if (owner_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Owner>(GetArenaNoVirtual());
    owner_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.owner)
  return owner_;
}
inline void Object::set_allocated_owner(::google::storage::v1::Owner* owner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete owner_;
  }
  if (owner) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      owner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner, submessage_arena);
    }
    
  } else {
    
  }
  owner_ = owner;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.owner)
}

// .google.storage.v1.Object.CustomerEncryption customer_encryption = 28;
inline bool Object::has_customer_encryption() const {
  return this != internal_default_instance() && customer_encryption_ != nullptr;
}
inline void Object::clear_customer_encryption() {
  if (GetArenaNoVirtual() == nullptr && customer_encryption_ != nullptr) {
    delete customer_encryption_;
  }
  customer_encryption_ = nullptr;
}
inline const ::google::storage::v1::Object_CustomerEncryption& Object::customer_encryption() const {
  const ::google::storage::v1::Object_CustomerEncryption* p = customer_encryption_;
  // @@protoc_insertion_point(field_get:google.storage.v1.Object.customer_encryption)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::Object_CustomerEncryption*>(
      &::google::storage::v1::_Object_CustomerEncryption_default_instance_);
}
inline ::google::storage::v1::Object_CustomerEncryption* Object::release_customer_encryption() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Object.customer_encryption)
  
  ::google::storage::v1::Object_CustomerEncryption* temp = customer_encryption_;
  customer_encryption_ = nullptr;
  return temp;
}
inline ::google::storage::v1::Object_CustomerEncryption* Object::mutable_customer_encryption() {
  
  if (customer_encryption_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::Object_CustomerEncryption>(GetArenaNoVirtual());
    customer_encryption_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Object.customer_encryption)
  return customer_encryption_;
}
inline void Object::set_allocated_customer_encryption(::google::storage::v1::Object_CustomerEncryption* customer_encryption) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete customer_encryption_;
  }
  if (customer_encryption) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      customer_encryption = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, customer_encryption, submessage_arena);
    }
    
  } else {
    
  }
  customer_encryption_ = customer_encryption;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Object.customer_encryption)
}

// -------------------------------------------------------------------

// ObjectAccessControl

// string role = 1;
inline void ObjectAccessControl::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::role() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.role)
  return role_.GetNoArena();
}
inline void ObjectAccessControl::set_role(const ::std::string& value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.role)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_role(::std::string&& value) {
  
  role_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.role)
}
#endif
inline void ObjectAccessControl::set_role(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.role)
}
inline void ObjectAccessControl::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.role)
}
inline ::std::string* ObjectAccessControl::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_role() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.role)
  
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_role(::std::string* role) {
  if (role != nullptr) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.role)
}

// string etag = 2;
inline void ObjectAccessControl::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::etag() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.etag)
  return etag_.GetNoArena();
}
inline void ObjectAccessControl::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.etag)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.etag)
}
#endif
inline void ObjectAccessControl::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.etag)
}
inline void ObjectAccessControl::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.etag)
}
inline ::std::string* ObjectAccessControl::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_etag() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.etag)
}

// string id = 3;
inline void ObjectAccessControl::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.id)
  return id_.GetNoArena();
}
inline void ObjectAccessControl::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.id)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.id)
}
#endif
inline void ObjectAccessControl::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.id)
}
inline void ObjectAccessControl::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.id)
}
inline ::std::string* ObjectAccessControl::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.id)
}

// string bucket = 4;
inline void ObjectAccessControl::clear_bucket() {
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::bucket() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.bucket)
  return bucket_.GetNoArena();
}
inline void ObjectAccessControl::set_bucket(const ::std::string& value) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.bucket)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_bucket(::std::string&& value) {
  
  bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.bucket)
}
#endif
inline void ObjectAccessControl::set_bucket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.bucket)
}
inline void ObjectAccessControl::set_bucket(const char* value, size_t size) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.bucket)
}
inline ::std::string* ObjectAccessControl::mutable_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.bucket)
  return bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_bucket() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.bucket)
  
  return bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_bucket(::std::string* bucket) {
  if (bucket != nullptr) {
    
  } else {
    
  }
  bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.bucket)
}

// string object = 5;
inline void ObjectAccessControl::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::object() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.object)
  return object_.GetNoArena();
}
inline void ObjectAccessControl::set_object(const ::std::string& value) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.object)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_object(::std::string&& value) {
  
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.object)
}
#endif
inline void ObjectAccessControl::set_object(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.object)
}
inline void ObjectAccessControl::set_object(const char* value, size_t size) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.object)
}
inline ::std::string* ObjectAccessControl::mutable_object() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_object() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.object)
  
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_object(::std::string* object) {
  if (object != nullptr) {
    
  } else {
    
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.object)
}

// int64 generation = 6;
inline void ObjectAccessControl::clear_generation() {
  generation_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ObjectAccessControl::generation() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.generation)
  return generation_;
}
inline void ObjectAccessControl::set_generation(::google::protobuf::int64 value) {
  
  generation_ = value;
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.generation)
}

// string entity = 7;
inline void ObjectAccessControl::clear_entity() {
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::entity() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.entity)
  return entity_.GetNoArena();
}
inline void ObjectAccessControl::set_entity(const ::std::string& value) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.entity)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_entity(::std::string&& value) {
  
  entity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.entity)
}
#endif
inline void ObjectAccessControl::set_entity(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.entity)
}
inline void ObjectAccessControl::set_entity(const char* value, size_t size) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.entity)
}
inline ::std::string* ObjectAccessControl::mutable_entity() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.entity)
  return entity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_entity() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.entity)
  
  return entity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_entity(::std::string* entity) {
  if (entity != nullptr) {
    
  } else {
    
  }
  entity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.entity)
}

// string entity_id = 8;
inline void ObjectAccessControl::clear_entity_id() {
  entity_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::entity_id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.entity_id)
  return entity_id_.GetNoArena();
}
inline void ObjectAccessControl::set_entity_id(const ::std::string& value) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.entity_id)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_entity_id(::std::string&& value) {
  
  entity_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.entity_id)
}
#endif
inline void ObjectAccessControl::set_entity_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.entity_id)
}
inline void ObjectAccessControl::set_entity_id(const char* value, size_t size) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.entity_id)
}
inline ::std::string* ObjectAccessControl::mutable_entity_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.entity_id)
  return entity_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_entity_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.entity_id)
  
  return entity_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_entity_id(::std::string* entity_id) {
  if (entity_id != nullptr) {
    
  } else {
    
  }
  entity_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.entity_id)
}

// string email = 9;
inline void ObjectAccessControl::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::email() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.email)
  return email_.GetNoArena();
}
inline void ObjectAccessControl::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.email)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.email)
}
#endif
inline void ObjectAccessControl::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.email)
}
inline void ObjectAccessControl::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.email)
}
inline ::std::string* ObjectAccessControl::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_email() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_email(::std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.email)
}

// string domain = 10;
inline void ObjectAccessControl::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectAccessControl::domain() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.domain)
  return domain_.GetNoArena();
}
inline void ObjectAccessControl::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ObjectAccessControl.domain)
}
#if LANG_CXX11
inline void ObjectAccessControl::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ObjectAccessControl.domain)
}
#endif
inline void ObjectAccessControl::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ObjectAccessControl.domain)
}
inline void ObjectAccessControl::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ObjectAccessControl.domain)
}
inline ::std::string* ObjectAccessControl::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectAccessControl::release_domain() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectAccessControl::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.domain)
}

// .google.storage.v1.ProjectTeam project_team = 11;
inline bool ObjectAccessControl::has_project_team() const {
  return this != internal_default_instance() && project_team_ != nullptr;
}
inline void ObjectAccessControl::clear_project_team() {
  if (GetArenaNoVirtual() == nullptr && project_team_ != nullptr) {
    delete project_team_;
  }
  project_team_ = nullptr;
}
inline const ::google::storage::v1::ProjectTeam& ObjectAccessControl::project_team() const {
  const ::google::storage::v1::ProjectTeam* p = project_team_;
  // @@protoc_insertion_point(field_get:google.storage.v1.ObjectAccessControl.project_team)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::storage::v1::ProjectTeam*>(
      &::google::storage::v1::_ProjectTeam_default_instance_);
}
inline ::google::storage::v1::ProjectTeam* ObjectAccessControl::release_project_team() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ObjectAccessControl.project_team)
  
  ::google::storage::v1::ProjectTeam* temp = project_team_;
  project_team_ = nullptr;
  return temp;
}
inline ::google::storage::v1::ProjectTeam* ObjectAccessControl::mutable_project_team() {
  
  if (project_team_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::storage::v1::ProjectTeam>(GetArenaNoVirtual());
    project_team_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ObjectAccessControl.project_team)
  return project_team_;
}
inline void ObjectAccessControl::set_allocated_project_team(::google::storage::v1::ProjectTeam* project_team) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete project_team_;
  }
  if (project_team) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      project_team = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, project_team, submessage_arena);
    }
    
  } else {
    
  }
  project_team_ = project_team;
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ObjectAccessControl.project_team)
}

// -------------------------------------------------------------------

// ListObjectAccessControlsResponse

// repeated .google.storage.v1.ObjectAccessControl items = 1;
inline int ListObjectAccessControlsResponse::items_size() const {
  return items_.size();
}
inline void ListObjectAccessControlsResponse::clear_items() {
  items_.Clear();
}
inline ::google::storage::v1::ObjectAccessControl* ListObjectAccessControlsResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListObjectAccessControlsResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >*
ListObjectAccessControlsResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.ListObjectAccessControlsResponse.items)
  return &items_;
}
inline const ::google::storage::v1::ObjectAccessControl& ListObjectAccessControlsResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListObjectAccessControlsResponse.items)
  return items_.Get(index);
}
inline ::google::storage::v1::ObjectAccessControl* ListObjectAccessControlsResponse::add_items() {
  // @@protoc_insertion_point(field_add:google.storage.v1.ListObjectAccessControlsResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::ObjectAccessControl >&
ListObjectAccessControlsResponse::items() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.ListObjectAccessControlsResponse.items)
  return items_;
}

// -------------------------------------------------------------------

// ListObjectsResponse

// repeated string prefixes = 1;
inline int ListObjectsResponse::prefixes_size() const {
  return prefixes_.size();
}
inline void ListObjectsResponse::clear_prefixes() {
  prefixes_.Clear();
}
inline const ::std::string& ListObjectsResponse::prefixes(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListObjectsResponse.prefixes)
  return prefixes_.Get(index);
}
inline ::std::string* ListObjectsResponse::mutable_prefixes(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListObjectsResponse.prefixes)
  return prefixes_.Mutable(index);
}
inline void ListObjectsResponse::set_prefixes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.ListObjectsResponse.prefixes)
  prefixes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListObjectsResponse::set_prefixes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storage.v1.ListObjectsResponse.prefixes)
  prefixes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListObjectsResponse::set_prefixes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  prefixes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ListObjectsResponse.prefixes)
}
inline void ListObjectsResponse::set_prefixes(int index, const char* value, size_t size) {
  prefixes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ListObjectsResponse.prefixes)
}
inline ::std::string* ListObjectsResponse::add_prefixes() {
  // @@protoc_insertion_point(field_add_mutable:google.storage.v1.ListObjectsResponse.prefixes)
  return prefixes_.Add();
}
inline void ListObjectsResponse::add_prefixes(const ::std::string& value) {
  prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storage.v1.ListObjectsResponse.prefixes)
}
#if LANG_CXX11
inline void ListObjectsResponse::add_prefixes(::std::string&& value) {
  prefixes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storage.v1.ListObjectsResponse.prefixes)
}
#endif
inline void ListObjectsResponse::add_prefixes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storage.v1.ListObjectsResponse.prefixes)
}
inline void ListObjectsResponse::add_prefixes(const char* value, size_t size) {
  prefixes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storage.v1.ListObjectsResponse.prefixes)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ListObjectsResponse::prefixes() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.ListObjectsResponse.prefixes)
  return prefixes_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
ListObjectsResponse::mutable_prefixes() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.ListObjectsResponse.prefixes)
  return &prefixes_;
}

// repeated .google.storage.v1.Object items = 2;
inline int ListObjectsResponse::items_size() const {
  return items_.size();
}
inline void ListObjectsResponse::clear_items() {
  items_.Clear();
}
inline ::google::storage::v1::Object* ListObjectsResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListObjectsResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Object >*
ListObjectsResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.storage.v1.ListObjectsResponse.items)
  return &items_;
}
inline const ::google::storage::v1::Object& ListObjectsResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListObjectsResponse.items)
  return items_.Get(index);
}
inline ::google::storage::v1::Object* ListObjectsResponse::add_items() {
  // @@protoc_insertion_point(field_add:google.storage.v1.ListObjectsResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storage::v1::Object >&
ListObjectsResponse::items() const {
  // @@protoc_insertion_point(field_list:google.storage.v1.ListObjectsResponse.items)
  return items_;
}

// string next_page_token = 3;
inline void ListObjectsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListObjectsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ListObjectsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListObjectsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ListObjectsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListObjectsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ListObjectsResponse.next_page_token)
}
#endif
inline void ListObjectsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ListObjectsResponse.next_page_token)
}
inline void ListObjectsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ListObjectsResponse.next_page_token)
}
inline ::std::string* ListObjectsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ListObjectsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListObjectsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ListObjectsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListObjectsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ListObjectsResponse.next_page_token)
}

// -------------------------------------------------------------------

// ProjectTeam

// string project_number = 1;
inline void ProjectTeam::clear_project_number() {
  project_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectTeam::project_number() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ProjectTeam.project_number)
  return project_number_.GetNoArena();
}
inline void ProjectTeam::set_project_number(const ::std::string& value) {
  
  project_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ProjectTeam.project_number)
}
#if LANG_CXX11
inline void ProjectTeam::set_project_number(::std::string&& value) {
  
  project_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ProjectTeam.project_number)
}
#endif
inline void ProjectTeam::set_project_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ProjectTeam.project_number)
}
inline void ProjectTeam::set_project_number(const char* value, size_t size) {
  
  project_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ProjectTeam.project_number)
}
inline ::std::string* ProjectTeam::mutable_project_number() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ProjectTeam.project_number)
  return project_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectTeam::release_project_number() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ProjectTeam.project_number)
  
  return project_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectTeam::set_allocated_project_number(::std::string* project_number) {
  if (project_number != nullptr) {
    
  } else {
    
  }
  project_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_number);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ProjectTeam.project_number)
}

// string team = 2;
inline void ProjectTeam::clear_team() {
  team_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectTeam::team() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ProjectTeam.team)
  return team_.GetNoArena();
}
inline void ProjectTeam::set_team(const ::std::string& value) {
  
  team_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ProjectTeam.team)
}
#if LANG_CXX11
inline void ProjectTeam::set_team(::std::string&& value) {
  
  team_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ProjectTeam.team)
}
#endif
inline void ProjectTeam::set_team(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  team_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ProjectTeam.team)
}
inline void ProjectTeam::set_team(const char* value, size_t size) {
  
  team_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ProjectTeam.team)
}
inline ::std::string* ProjectTeam::mutable_team() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ProjectTeam.team)
  return team_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectTeam::release_team() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ProjectTeam.team)
  
  return team_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectTeam::set_allocated_team(::std::string* team) {
  if (team != nullptr) {
    
  } else {
    
  }
  team_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ProjectTeam.team)
}

// -------------------------------------------------------------------

// ServiceAccount

// string email_address = 1;
inline void ServiceAccount::clear_email_address() {
  email_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServiceAccount::email_address() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.ServiceAccount.email_address)
  return email_address_.GetNoArena();
}
inline void ServiceAccount::set_email_address(const ::std::string& value) {
  
  email_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.ServiceAccount.email_address)
}
#if LANG_CXX11
inline void ServiceAccount::set_email_address(::std::string&& value) {
  
  email_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.ServiceAccount.email_address)
}
#endif
inline void ServiceAccount::set_email_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.ServiceAccount.email_address)
}
inline void ServiceAccount::set_email_address(const char* value, size_t size) {
  
  email_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.ServiceAccount.email_address)
}
inline ::std::string* ServiceAccount::mutable_email_address() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.ServiceAccount.email_address)
  return email_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceAccount::release_email_address() {
  // @@protoc_insertion_point(field_release:google.storage.v1.ServiceAccount.email_address)
  
  return email_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceAccount::set_allocated_email_address(::std::string* email_address) {
  if (email_address != nullptr) {
    
  } else {
    
  }
  email_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email_address);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.ServiceAccount.email_address)
}

// -------------------------------------------------------------------

// Owner

// string entity = 1;
inline void Owner::clear_entity() {
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Owner::entity() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Owner.entity)
  return entity_.GetNoArena();
}
inline void Owner::set_entity(const ::std::string& value) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Owner.entity)
}
#if LANG_CXX11
inline void Owner::set_entity(::std::string&& value) {
  
  entity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Owner.entity)
}
#endif
inline void Owner::set_entity(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Owner.entity)
}
inline void Owner::set_entity(const char* value, size_t size) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Owner.entity)
}
inline ::std::string* Owner::mutable_entity() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Owner.entity)
  return entity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Owner::release_entity() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Owner.entity)
  
  return entity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Owner::set_allocated_entity(::std::string* entity) {
  if (entity != nullptr) {
    
  } else {
    
  }
  entity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Owner.entity)
}

// string entity_id = 2;
inline void Owner::clear_entity_id() {
  entity_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Owner::entity_id() const {
  // @@protoc_insertion_point(field_get:google.storage.v1.Owner.entity_id)
  return entity_id_.GetNoArena();
}
inline void Owner::set_entity_id(const ::std::string& value) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.storage.v1.Owner.entity_id)
}
#if LANG_CXX11
inline void Owner::set_entity_id(::std::string&& value) {
  
  entity_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.storage.v1.Owner.entity_id)
}
#endif
inline void Owner::set_entity_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.storage.v1.Owner.entity_id)
}
inline void Owner::set_entity_id(const char* value, size_t size) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.storage.v1.Owner.entity_id)
}
inline ::std::string* Owner::mutable_entity_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storage.v1.Owner.entity_id)
  return entity_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Owner::release_entity_id() {
  // @@protoc_insertion_point(field_release:google.storage.v1.Owner.entity_id)
  
  return entity_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Owner::set_allocated_entity_id(::std::string* entity_id) {
  if (entity_id != nullptr) {
    
  } else {
    
  }
  entity_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_id);
  // @@protoc_insertion_point(field_set_allocated:google.storage.v1.Owner.entity_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace storage
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::storage::v1::CommonEnums_Projection> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::storage::v1::CommonEnums_Projection>() {
  return ::google::storage::v1::CommonEnums_Projection_descriptor();
}
template <> struct is_proto_enum< ::google::storage::v1::CommonEnums_PredefinedBucketAcl> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::storage::v1::CommonEnums_PredefinedBucketAcl>() {
  return ::google::storage::v1::CommonEnums_PredefinedBucketAcl_descriptor();
}
template <> struct is_proto_enum< ::google::storage::v1::CommonEnums_PredefinedObjectAcl> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::storage::v1::CommonEnums_PredefinedObjectAcl>() {
  return ::google::storage::v1::CommonEnums_PredefinedObjectAcl_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fstorage_2fv1_2fstorage_5fresources_2eproto
