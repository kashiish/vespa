// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/pubsub/v1/schema.proto

#ifndef PROTOBUF_INCLUDED_google_2fpubsub_2fv1_2fschema_2eproto
#define PROTOBUF_INCLUDED_google_2fpubsub_2fv1_2fschema_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fpubsub_2fv1_2fschema_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fpubsub_2fv1_2fschema_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fpubsub_2fv1_2fschema_2eproto();
namespace google {
namespace pubsub {
namespace v1 {
class CreateSchemaRequest;
class CreateSchemaRequestDefaultTypeInternal;
extern CreateSchemaRequestDefaultTypeInternal _CreateSchemaRequest_default_instance_;
class DeleteSchemaRequest;
class DeleteSchemaRequestDefaultTypeInternal;
extern DeleteSchemaRequestDefaultTypeInternal _DeleteSchemaRequest_default_instance_;
class GetSchemaRequest;
class GetSchemaRequestDefaultTypeInternal;
extern GetSchemaRequestDefaultTypeInternal _GetSchemaRequest_default_instance_;
class ListSchemasRequest;
class ListSchemasRequestDefaultTypeInternal;
extern ListSchemasRequestDefaultTypeInternal _ListSchemasRequest_default_instance_;
class ListSchemasResponse;
class ListSchemasResponseDefaultTypeInternal;
extern ListSchemasResponseDefaultTypeInternal _ListSchemasResponse_default_instance_;
class Schema;
class SchemaDefaultTypeInternal;
extern SchemaDefaultTypeInternal _Schema_default_instance_;
class ValidateMessageRequest;
class ValidateMessageRequestDefaultTypeInternal;
extern ValidateMessageRequestDefaultTypeInternal _ValidateMessageRequest_default_instance_;
class ValidateMessageResponse;
class ValidateMessageResponseDefaultTypeInternal;
extern ValidateMessageResponseDefaultTypeInternal _ValidateMessageResponse_default_instance_;
class ValidateSchemaRequest;
class ValidateSchemaRequestDefaultTypeInternal;
extern ValidateSchemaRequestDefaultTypeInternal _ValidateSchemaRequest_default_instance_;
class ValidateSchemaResponse;
class ValidateSchemaResponseDefaultTypeInternal;
extern ValidateSchemaResponseDefaultTypeInternal _ValidateSchemaResponse_default_instance_;
}  // namespace v1
}  // namespace pubsub
namespace protobuf {
template<> ::google::pubsub::v1::CreateSchemaRequest* Arena::CreateMaybeMessage<::google::pubsub::v1::CreateSchemaRequest>(Arena*);
template<> ::google::pubsub::v1::DeleteSchemaRequest* Arena::CreateMaybeMessage<::google::pubsub::v1::DeleteSchemaRequest>(Arena*);
template<> ::google::pubsub::v1::GetSchemaRequest* Arena::CreateMaybeMessage<::google::pubsub::v1::GetSchemaRequest>(Arena*);
template<> ::google::pubsub::v1::ListSchemasRequest* Arena::CreateMaybeMessage<::google::pubsub::v1::ListSchemasRequest>(Arena*);
template<> ::google::pubsub::v1::ListSchemasResponse* Arena::CreateMaybeMessage<::google::pubsub::v1::ListSchemasResponse>(Arena*);
template<> ::google::pubsub::v1::Schema* Arena::CreateMaybeMessage<::google::pubsub::v1::Schema>(Arena*);
template<> ::google::pubsub::v1::ValidateMessageRequest* Arena::CreateMaybeMessage<::google::pubsub::v1::ValidateMessageRequest>(Arena*);
template<> ::google::pubsub::v1::ValidateMessageResponse* Arena::CreateMaybeMessage<::google::pubsub::v1::ValidateMessageResponse>(Arena*);
template<> ::google::pubsub::v1::ValidateSchemaRequest* Arena::CreateMaybeMessage<::google::pubsub::v1::ValidateSchemaRequest>(Arena*);
template<> ::google::pubsub::v1::ValidateSchemaResponse* Arena::CreateMaybeMessage<::google::pubsub::v1::ValidateSchemaResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace pubsub {
namespace v1 {

enum Schema_Type {
  Schema_Type_TYPE_UNSPECIFIED = 0,
  Schema_Type_PROTOCOL_BUFFER = 1,
  Schema_Type_AVRO = 2,
  Schema_Type_Schema_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Schema_Type_Schema_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Schema_Type_IsValid(int value);
const Schema_Type Schema_Type_Type_MIN = Schema_Type_TYPE_UNSPECIFIED;
const Schema_Type Schema_Type_Type_MAX = Schema_Type_AVRO;
const int Schema_Type_Type_ARRAYSIZE = Schema_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Schema_Type_descriptor();
inline const ::std::string& Schema_Type_Name(Schema_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Schema_Type_descriptor(), value);
}
inline bool Schema_Type_Parse(
    const ::std::string& name, Schema_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Schema_Type>(
    Schema_Type_descriptor(), name, value);
}
enum SchemaView {
  SCHEMA_VIEW_UNSPECIFIED = 0,
  BASIC = 1,
  FULL = 2,
  SchemaView_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  SchemaView_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool SchemaView_IsValid(int value);
const SchemaView SchemaView_MIN = SCHEMA_VIEW_UNSPECIFIED;
const SchemaView SchemaView_MAX = FULL;
const int SchemaView_ARRAYSIZE = SchemaView_MAX + 1;

const ::google::protobuf::EnumDescriptor* SchemaView_descriptor();
inline const ::std::string& SchemaView_Name(SchemaView value) {
  return ::google::protobuf::internal::NameOfEnum(
    SchemaView_descriptor(), value);
}
inline bool SchemaView_Parse(
    const ::std::string& name, SchemaView* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SchemaView>(
    SchemaView_descriptor(), name, value);
}
enum Encoding {
  ENCODING_UNSPECIFIED = 0,
  JSON = 1,
  BINARY = 2,
  Encoding_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Encoding_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Encoding_IsValid(int value);
const Encoding Encoding_MIN = ENCODING_UNSPECIFIED;
const Encoding Encoding_MAX = BINARY;
const int Encoding_ARRAYSIZE = Encoding_MAX + 1;

const ::google::protobuf::EnumDescriptor* Encoding_descriptor();
inline const ::std::string& Encoding_Name(Encoding value) {
  return ::google::protobuf::internal::NameOfEnum(
    Encoding_descriptor(), value);
}
inline bool Encoding_Parse(
    const ::std::string& name, Encoding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Encoding>(
    Encoding_descriptor(), name, value);
}
// ===================================================================

class Schema final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.Schema) */ {
 public:
  Schema();
  virtual ~Schema();

  Schema(const Schema& from);

  inline Schema& operator=(const Schema& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Schema(Schema&& from) noexcept
    : Schema() {
    *this = ::std::move(from);
  }

  inline Schema& operator=(Schema&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Schema& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Schema* internal_default_instance() {
    return reinterpret_cast<const Schema*>(
               &_Schema_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Schema* other);
  void Swap(Schema* other);
  friend void swap(Schema& a, Schema& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Schema* New() const final {
    return CreateMaybeMessage<Schema>(nullptr);
  }

  Schema* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Schema>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Schema& from);
  void MergeFrom(const Schema& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Schema* other);
  protected:
  explicit Schema(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Schema_Type Type;
  static const Type TYPE_UNSPECIFIED =
    Schema_Type_TYPE_UNSPECIFIED;
  static const Type PROTOCOL_BUFFER =
    Schema_Type_PROTOCOL_BUFFER;
  static const Type AVRO =
    Schema_Type_AVRO;
  static inline bool Type_IsValid(int value) {
    return Schema_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Schema_Type_Type_MIN;
  static const Type Type_MAX =
    Schema_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Schema_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Schema_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Schema_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Schema_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string definition = 3;
  void clear_definition();
  static const int kDefinitionFieldNumber = 3;
  const ::std::string& definition() const;
  void set_definition(const ::std::string& value);
  #if LANG_CXX11
  void set_definition(::std::string&& value);
  #endif
  void set_definition(const char* value);
  void set_definition(const char* value, size_t size);
  ::std::string* mutable_definition();
  ::std::string* release_definition();
  void set_allocated_definition(::std::string* definition);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_definition();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_definition(
      ::std::string* definition);

  // .google.pubsub.v1.Schema.Type type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::pubsub::v1::Schema_Type type() const;
  void set_type(::google::pubsub::v1::Schema_Type value);

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.Schema)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr definition_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class CreateSchemaRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.CreateSchemaRequest) */ {
 public:
  CreateSchemaRequest();
  virtual ~CreateSchemaRequest();

  CreateSchemaRequest(const CreateSchemaRequest& from);

  inline CreateSchemaRequest& operator=(const CreateSchemaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSchemaRequest(CreateSchemaRequest&& from) noexcept
    : CreateSchemaRequest() {
    *this = ::std::move(from);
  }

  inline CreateSchemaRequest& operator=(CreateSchemaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateSchemaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSchemaRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSchemaRequest*>(
               &_CreateSchemaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(CreateSchemaRequest* other);
  void Swap(CreateSchemaRequest* other);
  friend void swap(CreateSchemaRequest& a, CreateSchemaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSchemaRequest* New() const final {
    return CreateMaybeMessage<CreateSchemaRequest>(nullptr);
  }

  CreateSchemaRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateSchemaRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateSchemaRequest& from);
  void MergeFrom(const CreateSchemaRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSchemaRequest* other);
  protected:
  explicit CreateSchemaRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string schema_id = 3;
  void clear_schema_id();
  static const int kSchemaIdFieldNumber = 3;
  const ::std::string& schema_id() const;
  void set_schema_id(const ::std::string& value);
  #if LANG_CXX11
  void set_schema_id(::std::string&& value);
  #endif
  void set_schema_id(const char* value);
  void set_schema_id(const char* value, size_t size);
  ::std::string* mutable_schema_id();
  ::std::string* release_schema_id();
  void set_allocated_schema_id(::std::string* schema_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_schema_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_schema_id(
      ::std::string* schema_id);

  // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_schema() const;
  void clear_schema();
  static const int kSchemaFieldNumber = 2;
  const ::google::pubsub::v1::Schema& schema() const;
  ::google::pubsub::v1::Schema* release_schema();
  ::google::pubsub::v1::Schema* mutable_schema();
  void set_allocated_schema(::google::pubsub::v1::Schema* schema);
  void unsafe_arena_set_allocated_schema(
      ::google::pubsub::v1::Schema* schema);
  ::google::pubsub::v1::Schema* unsafe_arena_release_schema();

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.CreateSchemaRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr schema_id_;
  ::google::pubsub::v1::Schema* schema_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class GetSchemaRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.GetSchemaRequest) */ {
 public:
  GetSchemaRequest();
  virtual ~GetSchemaRequest();

  GetSchemaRequest(const GetSchemaRequest& from);

  inline GetSchemaRequest& operator=(const GetSchemaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSchemaRequest(GetSchemaRequest&& from) noexcept
    : GetSchemaRequest() {
    *this = ::std::move(from);
  }

  inline GetSchemaRequest& operator=(GetSchemaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetSchemaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSchemaRequest* internal_default_instance() {
    return reinterpret_cast<const GetSchemaRequest*>(
               &_GetSchemaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(GetSchemaRequest* other);
  void Swap(GetSchemaRequest* other);
  friend void swap(GetSchemaRequest& a, GetSchemaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSchemaRequest* New() const final {
    return CreateMaybeMessage<GetSchemaRequest>(nullptr);
  }

  GetSchemaRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSchemaRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSchemaRequest& from);
  void MergeFrom(const GetSchemaRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSchemaRequest* other);
  protected:
  explicit GetSchemaRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .google.pubsub.v1.SchemaView view = 2;
  void clear_view();
  static const int kViewFieldNumber = 2;
  ::google::pubsub::v1::SchemaView view() const;
  void set_view(::google::pubsub::v1::SchemaView value);

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.GetSchemaRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int view_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class ListSchemasRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.ListSchemasRequest) */ {
 public:
  ListSchemasRequest();
  virtual ~ListSchemasRequest();

  ListSchemasRequest(const ListSchemasRequest& from);

  inline ListSchemasRequest& operator=(const ListSchemasRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSchemasRequest(ListSchemasRequest&& from) noexcept
    : ListSchemasRequest() {
    *this = ::std::move(from);
  }

  inline ListSchemasRequest& operator=(ListSchemasRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListSchemasRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSchemasRequest* internal_default_instance() {
    return reinterpret_cast<const ListSchemasRequest*>(
               &_ListSchemasRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ListSchemasRequest* other);
  void Swap(ListSchemasRequest* other);
  friend void swap(ListSchemasRequest& a, ListSchemasRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSchemasRequest* New() const final {
    return CreateMaybeMessage<ListSchemasRequest>(nullptr);
  }

  ListSchemasRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSchemasRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSchemasRequest& from);
  void MergeFrom(const ListSchemasRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSchemasRequest* other);
  protected:
  explicit ListSchemasRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // .google.pubsub.v1.SchemaView view = 2;
  void clear_view();
  static const int kViewFieldNumber = 2;
  ::google::pubsub::v1::SchemaView view() const;
  void set_view(::google::pubsub::v1::SchemaView value);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.ListSchemasRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  int view_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class ListSchemasResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.ListSchemasResponse) */ {
 public:
  ListSchemasResponse();
  virtual ~ListSchemasResponse();

  ListSchemasResponse(const ListSchemasResponse& from);

  inline ListSchemasResponse& operator=(const ListSchemasResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSchemasResponse(ListSchemasResponse&& from) noexcept
    : ListSchemasResponse() {
    *this = ::std::move(from);
  }

  inline ListSchemasResponse& operator=(ListSchemasResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListSchemasResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSchemasResponse* internal_default_instance() {
    return reinterpret_cast<const ListSchemasResponse*>(
               &_ListSchemasResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ListSchemasResponse* other);
  void Swap(ListSchemasResponse* other);
  friend void swap(ListSchemasResponse& a, ListSchemasResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSchemasResponse* New() const final {
    return CreateMaybeMessage<ListSchemasResponse>(nullptr);
  }

  ListSchemasResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSchemasResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSchemasResponse& from);
  void MergeFrom(const ListSchemasResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSchemasResponse* other);
  protected:
  explicit ListSchemasResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.pubsub.v1.Schema schemas = 1;
  int schemas_size() const;
  void clear_schemas();
  static const int kSchemasFieldNumber = 1;
  ::google::pubsub::v1::Schema* mutable_schemas(int index);
  ::google::protobuf::RepeatedPtrField< ::google::pubsub::v1::Schema >*
      mutable_schemas();
  const ::google::pubsub::v1::Schema& schemas(int index) const;
  ::google::pubsub::v1::Schema* add_schemas();
  const ::google::protobuf::RepeatedPtrField< ::google::pubsub::v1::Schema >&
      schemas() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.ListSchemasResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::pubsub::v1::Schema > schemas_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class DeleteSchemaRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.DeleteSchemaRequest) */ {
 public:
  DeleteSchemaRequest();
  virtual ~DeleteSchemaRequest();

  DeleteSchemaRequest(const DeleteSchemaRequest& from);

  inline DeleteSchemaRequest& operator=(const DeleteSchemaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteSchemaRequest(DeleteSchemaRequest&& from) noexcept
    : DeleteSchemaRequest() {
    *this = ::std::move(from);
  }

  inline DeleteSchemaRequest& operator=(DeleteSchemaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteSchemaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSchemaRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSchemaRequest*>(
               &_DeleteSchemaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(DeleteSchemaRequest* other);
  void Swap(DeleteSchemaRequest* other);
  friend void swap(DeleteSchemaRequest& a, DeleteSchemaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteSchemaRequest* New() const final {
    return CreateMaybeMessage<DeleteSchemaRequest>(nullptr);
  }

  DeleteSchemaRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSchemaRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteSchemaRequest& from);
  void MergeFrom(const DeleteSchemaRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSchemaRequest* other);
  protected:
  explicit DeleteSchemaRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.DeleteSchemaRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class ValidateSchemaRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.ValidateSchemaRequest) */ {
 public:
  ValidateSchemaRequest();
  virtual ~ValidateSchemaRequest();

  ValidateSchemaRequest(const ValidateSchemaRequest& from);

  inline ValidateSchemaRequest& operator=(const ValidateSchemaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidateSchemaRequest(ValidateSchemaRequest&& from) noexcept
    : ValidateSchemaRequest() {
    *this = ::std::move(from);
  }

  inline ValidateSchemaRequest& operator=(ValidateSchemaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ValidateSchemaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidateSchemaRequest* internal_default_instance() {
    return reinterpret_cast<const ValidateSchemaRequest*>(
               &_ValidateSchemaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ValidateSchemaRequest* other);
  void Swap(ValidateSchemaRequest* other);
  friend void swap(ValidateSchemaRequest& a, ValidateSchemaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidateSchemaRequest* New() const final {
    return CreateMaybeMessage<ValidateSchemaRequest>(nullptr);
  }

  ValidateSchemaRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ValidateSchemaRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ValidateSchemaRequest& from);
  void MergeFrom(const ValidateSchemaRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidateSchemaRequest* other);
  protected:
  explicit ValidateSchemaRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_schema() const;
  void clear_schema();
  static const int kSchemaFieldNumber = 2;
  const ::google::pubsub::v1::Schema& schema() const;
  ::google::pubsub::v1::Schema* release_schema();
  ::google::pubsub::v1::Schema* mutable_schema();
  void set_allocated_schema(::google::pubsub::v1::Schema* schema);
  void unsafe_arena_set_allocated_schema(
      ::google::pubsub::v1::Schema* schema);
  ::google::pubsub::v1::Schema* unsafe_arena_release_schema();

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.ValidateSchemaRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::pubsub::v1::Schema* schema_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class ValidateSchemaResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.ValidateSchemaResponse) */ {
 public:
  ValidateSchemaResponse();
  virtual ~ValidateSchemaResponse();

  ValidateSchemaResponse(const ValidateSchemaResponse& from);

  inline ValidateSchemaResponse& operator=(const ValidateSchemaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidateSchemaResponse(ValidateSchemaResponse&& from) noexcept
    : ValidateSchemaResponse() {
    *this = ::std::move(from);
  }

  inline ValidateSchemaResponse& operator=(ValidateSchemaResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ValidateSchemaResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidateSchemaResponse* internal_default_instance() {
    return reinterpret_cast<const ValidateSchemaResponse*>(
               &_ValidateSchemaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ValidateSchemaResponse* other);
  void Swap(ValidateSchemaResponse* other);
  friend void swap(ValidateSchemaResponse& a, ValidateSchemaResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidateSchemaResponse* New() const final {
    return CreateMaybeMessage<ValidateSchemaResponse>(nullptr);
  }

  ValidateSchemaResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ValidateSchemaResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ValidateSchemaResponse& from);
  void MergeFrom(const ValidateSchemaResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidateSchemaResponse* other);
  protected:
  explicit ValidateSchemaResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.ValidateSchemaResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class ValidateMessageRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.ValidateMessageRequest) */ {
 public:
  ValidateMessageRequest();
  virtual ~ValidateMessageRequest();

  ValidateMessageRequest(const ValidateMessageRequest& from);

  inline ValidateMessageRequest& operator=(const ValidateMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidateMessageRequest(ValidateMessageRequest&& from) noexcept
    : ValidateMessageRequest() {
    *this = ::std::move(from);
  }

  inline ValidateMessageRequest& operator=(ValidateMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ValidateMessageRequest& default_instance();

  enum SchemaSpecCase {
    kName = 2,
    kSchema = 3,
    SCHEMA_SPEC_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidateMessageRequest* internal_default_instance() {
    return reinterpret_cast<const ValidateMessageRequest*>(
               &_ValidateMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(ValidateMessageRequest* other);
  void Swap(ValidateMessageRequest* other);
  friend void swap(ValidateMessageRequest& a, ValidateMessageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidateMessageRequest* New() const final {
    return CreateMaybeMessage<ValidateMessageRequest>(nullptr);
  }

  ValidateMessageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ValidateMessageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ValidateMessageRequest& from);
  void MergeFrom(const ValidateMessageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidateMessageRequest* other);
  protected:
  explicit ValidateMessageRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // bytes message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_message();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_message(
      ::std::string* message);

  // .google.pubsub.v1.Encoding encoding = 5;
  void clear_encoding();
  static const int kEncodingFieldNumber = 5;
  ::google::pubsub::v1::Encoding encoding() const;
  void set_encoding(::google::pubsub::v1::Encoding value);

  // string name = 2 [(.google.api.resource_reference) = {
  private:
  bool has_name() const;
  public:
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .google.pubsub.v1.Schema schema = 3;
  bool has_schema() const;
  void clear_schema();
  static const int kSchemaFieldNumber = 3;
  const ::google::pubsub::v1::Schema& schema() const;
  ::google::pubsub::v1::Schema* release_schema();
  ::google::pubsub::v1::Schema* mutable_schema();
  void set_allocated_schema(::google::pubsub::v1::Schema* schema);
  void unsafe_arena_set_allocated_schema(
      ::google::pubsub::v1::Schema* schema);
  ::google::pubsub::v1::Schema* unsafe_arena_release_schema();

  void clear_schema_spec();
  SchemaSpecCase schema_spec_case() const;
  // @@protoc_insertion_point(class_scope:google.pubsub.v1.ValidateMessageRequest)
 private:
  class HasBitSetters;
  void set_has_name();
  void set_has_schema();

  inline bool has_schema_spec() const;
  inline void clear_has_schema_spec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int encoding_;
  union SchemaSpecUnion {
    SchemaSpecUnion() {}
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::pubsub::v1::Schema* schema_;
  } schema_spec_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// -------------------------------------------------------------------

class ValidateMessageResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.pubsub.v1.ValidateMessageResponse) */ {
 public:
  ValidateMessageResponse();
  virtual ~ValidateMessageResponse();

  ValidateMessageResponse(const ValidateMessageResponse& from);

  inline ValidateMessageResponse& operator=(const ValidateMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidateMessageResponse(ValidateMessageResponse&& from) noexcept
    : ValidateMessageResponse() {
    *this = ::std::move(from);
  }

  inline ValidateMessageResponse& operator=(ValidateMessageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ValidateMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidateMessageResponse* internal_default_instance() {
    return reinterpret_cast<const ValidateMessageResponse*>(
               &_ValidateMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(ValidateMessageResponse* other);
  void Swap(ValidateMessageResponse* other);
  friend void swap(ValidateMessageResponse& a, ValidateMessageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidateMessageResponse* New() const final {
    return CreateMaybeMessage<ValidateMessageResponse>(nullptr);
  }

  ValidateMessageResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ValidateMessageResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ValidateMessageResponse& from);
  void MergeFrom(const ValidateMessageResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidateMessageResponse* other);
  protected:
  explicit ValidateMessageResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.ValidateMessageResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fpubsub_2fv1_2fschema_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Schema

// string name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void Schema::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Schema::name() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.Schema.name)
  return name_.Get();
}
inline void Schema::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.Schema.name)
}
#if LANG_CXX11
inline void Schema::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.Schema.name)
}
#endif
inline void Schema::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.Schema.name)
}
inline void Schema::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.Schema.name)
}
inline ::std::string* Schema::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.Schema.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Schema::release_name() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.Schema.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Schema::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.Schema.name)
}
inline ::std::string* Schema::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.Schema.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Schema::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.Schema.name)
}

// .google.pubsub.v1.Schema.Type type = 2;
inline void Schema::clear_type() {
  type_ = 0;
}
inline ::google::pubsub::v1::Schema_Type Schema::type() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.Schema.type)
  return static_cast< ::google::pubsub::v1::Schema_Type >(type_);
}
inline void Schema::set_type(::google::pubsub::v1::Schema_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.pubsub.v1.Schema.type)
}

// string definition = 3;
inline void Schema::clear_definition() {
  definition_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Schema::definition() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.Schema.definition)
  return definition_.Get();
}
inline void Schema::set_definition(const ::std::string& value) {
  
  definition_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.Schema.definition)
}
#if LANG_CXX11
inline void Schema::set_definition(::std::string&& value) {
  
  definition_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.Schema.definition)
}
#endif
inline void Schema::set_definition(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  definition_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.Schema.definition)
}
inline void Schema::set_definition(const char* value,
    size_t size) {
  
  definition_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.Schema.definition)
}
inline ::std::string* Schema::mutable_definition() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.Schema.definition)
  return definition_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Schema::release_definition() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.Schema.definition)
  
  return definition_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Schema::set_allocated_definition(::std::string* definition) {
  if (definition != nullptr) {
    
  } else {
    
  }
  definition_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), definition,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.Schema.definition)
}
inline ::std::string* Schema::unsafe_arena_release_definition() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.Schema.definition)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return definition_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Schema::unsafe_arena_set_allocated_definition(
    ::std::string* definition) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (definition != nullptr) {
    
  } else {
    
  }
  definition_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      definition, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.Schema.definition)
}

// -------------------------------------------------------------------

// CreateSchemaRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void CreateSchemaRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateSchemaRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.CreateSchemaRequest.parent)
  return parent_.Get();
}
inline void CreateSchemaRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.CreateSchemaRequest.parent)
}
#if LANG_CXX11
inline void CreateSchemaRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.CreateSchemaRequest.parent)
}
#endif
inline void CreateSchemaRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.CreateSchemaRequest.parent)
}
inline void CreateSchemaRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.CreateSchemaRequest.parent)
}
inline ::std::string* CreateSchemaRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.CreateSchemaRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateSchemaRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.CreateSchemaRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateSchemaRequest::set_allocated_parent(::std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.CreateSchemaRequest.parent)
}
inline ::std::string* CreateSchemaRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.CreateSchemaRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateSchemaRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.CreateSchemaRequest.parent)
}

// .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool CreateSchemaRequest::has_schema() const {
  return this != internal_default_instance() && schema_ != nullptr;
}
inline void CreateSchemaRequest::clear_schema() {
  if (GetArenaNoVirtual() == nullptr && schema_ != nullptr) {
    delete schema_;
  }
  schema_ = nullptr;
}
inline const ::google::pubsub::v1::Schema& CreateSchemaRequest::schema() const {
  const ::google::pubsub::v1::Schema* p = schema_;
  // @@protoc_insertion_point(field_get:google.pubsub.v1.CreateSchemaRequest.schema)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::pubsub::v1::Schema*>(
      &::google::pubsub::v1::_Schema_default_instance_);
}
inline ::google::pubsub::v1::Schema* CreateSchemaRequest::release_schema() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.CreateSchemaRequest.schema)
  
  ::google::pubsub::v1::Schema* temp = schema_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  schema_ = nullptr;
  return temp;
}
inline ::google::pubsub::v1::Schema* CreateSchemaRequest::unsafe_arena_release_schema() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.CreateSchemaRequest.schema)
  
  ::google::pubsub::v1::Schema* temp = schema_;
  schema_ = nullptr;
  return temp;
}
inline ::google::pubsub::v1::Schema* CreateSchemaRequest::mutable_schema() {
  
  if (schema_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::pubsub::v1::Schema>(GetArenaNoVirtual());
    schema_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.CreateSchemaRequest.schema)
  return schema_;
}
inline void CreateSchemaRequest::set_allocated_schema(::google::pubsub::v1::Schema* schema) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete schema_;
  }
  if (schema) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(schema);
    if (message_arena != submessage_arena) {
      schema = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schema, submessage_arena);
    }
    
  } else {
    
  }
  schema_ = schema;
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.CreateSchemaRequest.schema)
}

// string schema_id = 3;
inline void CreateSchemaRequest::clear_schema_id() {
  schema_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateSchemaRequest::schema_id() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.CreateSchemaRequest.schema_id)
  return schema_id_.Get();
}
inline void CreateSchemaRequest::set_schema_id(const ::std::string& value) {
  
  schema_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.CreateSchemaRequest.schema_id)
}
#if LANG_CXX11
inline void CreateSchemaRequest::set_schema_id(::std::string&& value) {
  
  schema_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.CreateSchemaRequest.schema_id)
}
#endif
inline void CreateSchemaRequest::set_schema_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  schema_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.CreateSchemaRequest.schema_id)
}
inline void CreateSchemaRequest::set_schema_id(const char* value,
    size_t size) {
  
  schema_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.CreateSchemaRequest.schema_id)
}
inline ::std::string* CreateSchemaRequest::mutable_schema_id() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.CreateSchemaRequest.schema_id)
  return schema_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateSchemaRequest::release_schema_id() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.CreateSchemaRequest.schema_id)
  
  return schema_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateSchemaRequest::set_allocated_schema_id(::std::string* schema_id) {
  if (schema_id != nullptr) {
    
  } else {
    
  }
  schema_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), schema_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.CreateSchemaRequest.schema_id)
}
inline ::std::string* CreateSchemaRequest::unsafe_arena_release_schema_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.CreateSchemaRequest.schema_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return schema_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateSchemaRequest::unsafe_arena_set_allocated_schema_id(
    ::std::string* schema_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (schema_id != nullptr) {
    
  } else {
    
  }
  schema_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      schema_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.CreateSchemaRequest.schema_id)
}

// -------------------------------------------------------------------

// GetSchemaRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void GetSchemaRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetSchemaRequest::name() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.GetSchemaRequest.name)
  return name_.Get();
}
inline void GetSchemaRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.GetSchemaRequest.name)
}
#if LANG_CXX11
inline void GetSchemaRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.GetSchemaRequest.name)
}
#endif
inline void GetSchemaRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.GetSchemaRequest.name)
}
inline void GetSchemaRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.GetSchemaRequest.name)
}
inline ::std::string* GetSchemaRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.GetSchemaRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetSchemaRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.GetSchemaRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetSchemaRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.GetSchemaRequest.name)
}
inline ::std::string* GetSchemaRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.GetSchemaRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetSchemaRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.GetSchemaRequest.name)
}

// .google.pubsub.v1.SchemaView view = 2;
inline void GetSchemaRequest::clear_view() {
  view_ = 0;
}
inline ::google::pubsub::v1::SchemaView GetSchemaRequest::view() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.GetSchemaRequest.view)
  return static_cast< ::google::pubsub::v1::SchemaView >(view_);
}
inline void GetSchemaRequest::set_view(::google::pubsub::v1::SchemaView value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.pubsub.v1.GetSchemaRequest.view)
}

// -------------------------------------------------------------------

// ListSchemasRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void ListSchemasRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListSchemasRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ListSchemasRequest.parent)
  return parent_.Get();
}
inline void ListSchemasRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ListSchemasRequest.parent)
}
#if LANG_CXX11
inline void ListSchemasRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.ListSchemasRequest.parent)
}
#endif
inline void ListSchemasRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.ListSchemasRequest.parent)
}
inline void ListSchemasRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.ListSchemasRequest.parent)
}
inline ::std::string* ListSchemasRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ListSchemasRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListSchemasRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ListSchemasRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListSchemasRequest::set_allocated_parent(::std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ListSchemasRequest.parent)
}
inline ::std::string* ListSchemasRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ListSchemasRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListSchemasRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ListSchemasRequest.parent)
}

// .google.pubsub.v1.SchemaView view = 2;
inline void ListSchemasRequest::clear_view() {
  view_ = 0;
}
inline ::google::pubsub::v1::SchemaView ListSchemasRequest::view() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ListSchemasRequest.view)
  return static_cast< ::google::pubsub::v1::SchemaView >(view_);
}
inline void ListSchemasRequest::set_view(::google::pubsub::v1::SchemaView value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ListSchemasRequest.view)
}

// int32 page_size = 3;
inline void ListSchemasRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListSchemasRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ListSchemasRequest.page_size)
  return page_size_;
}
inline void ListSchemasRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ListSchemasRequest.page_size)
}

// string page_token = 4;
inline void ListSchemasRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListSchemasRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ListSchemasRequest.page_token)
  return page_token_.Get();
}
inline void ListSchemasRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ListSchemasRequest.page_token)
}
#if LANG_CXX11
inline void ListSchemasRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.ListSchemasRequest.page_token)
}
#endif
inline void ListSchemasRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.ListSchemasRequest.page_token)
}
inline void ListSchemasRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.ListSchemasRequest.page_token)
}
inline ::std::string* ListSchemasRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ListSchemasRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListSchemasRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ListSchemasRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListSchemasRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ListSchemasRequest.page_token)
}
inline ::std::string* ListSchemasRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ListSchemasRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListSchemasRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ListSchemasRequest.page_token)
}

// -------------------------------------------------------------------

// ListSchemasResponse

// repeated .google.pubsub.v1.Schema schemas = 1;
inline int ListSchemasResponse::schemas_size() const {
  return schemas_.size();
}
inline void ListSchemasResponse::clear_schemas() {
  schemas_.Clear();
}
inline ::google::pubsub::v1::Schema* ListSchemasResponse::mutable_schemas(int index) {
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ListSchemasResponse.schemas)
  return schemas_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::pubsub::v1::Schema >*
ListSchemasResponse::mutable_schemas() {
  // @@protoc_insertion_point(field_mutable_list:google.pubsub.v1.ListSchemasResponse.schemas)
  return &schemas_;
}
inline const ::google::pubsub::v1::Schema& ListSchemasResponse::schemas(int index) const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ListSchemasResponse.schemas)
  return schemas_.Get(index);
}
inline ::google::pubsub::v1::Schema* ListSchemasResponse::add_schemas() {
  // @@protoc_insertion_point(field_add:google.pubsub.v1.ListSchemasResponse.schemas)
  return schemas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::pubsub::v1::Schema >&
ListSchemasResponse::schemas() const {
  // @@protoc_insertion_point(field_list:google.pubsub.v1.ListSchemasResponse.schemas)
  return schemas_;
}

// string next_page_token = 2;
inline void ListSchemasResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListSchemasResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ListSchemasResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListSchemasResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ListSchemasResponse.next_page_token)
}
#if LANG_CXX11
inline void ListSchemasResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.ListSchemasResponse.next_page_token)
}
#endif
inline void ListSchemasResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.ListSchemasResponse.next_page_token)
}
inline void ListSchemasResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.ListSchemasResponse.next_page_token)
}
inline ::std::string* ListSchemasResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ListSchemasResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListSchemasResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ListSchemasResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListSchemasResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ListSchemasResponse.next_page_token)
}
inline ::std::string* ListSchemasResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ListSchemasResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListSchemasResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ListSchemasResponse.next_page_token)
}

// -------------------------------------------------------------------

// DeleteSchemaRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void DeleteSchemaRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteSchemaRequest::name() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.DeleteSchemaRequest.name)
  return name_.Get();
}
inline void DeleteSchemaRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.DeleteSchemaRequest.name)
}
#if LANG_CXX11
inline void DeleteSchemaRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.DeleteSchemaRequest.name)
}
#endif
inline void DeleteSchemaRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.DeleteSchemaRequest.name)
}
inline void DeleteSchemaRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.DeleteSchemaRequest.name)
}
inline ::std::string* DeleteSchemaRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.DeleteSchemaRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteSchemaRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.DeleteSchemaRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteSchemaRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.DeleteSchemaRequest.name)
}
inline ::std::string* DeleteSchemaRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.DeleteSchemaRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteSchemaRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.DeleteSchemaRequest.name)
}

// -------------------------------------------------------------------

// ValidateSchemaRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void ValidateSchemaRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ValidateSchemaRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ValidateSchemaRequest.parent)
  return parent_.Get();
}
inline void ValidateSchemaRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ValidateSchemaRequest.parent)
}
#if LANG_CXX11
inline void ValidateSchemaRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.ValidateSchemaRequest.parent)
}
#endif
inline void ValidateSchemaRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.ValidateSchemaRequest.parent)
}
inline void ValidateSchemaRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.ValidateSchemaRequest.parent)
}
inline ::std::string* ValidateSchemaRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ValidateSchemaRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ValidateSchemaRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ValidateSchemaRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ValidateSchemaRequest::set_allocated_parent(::std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ValidateSchemaRequest.parent)
}
inline ::std::string* ValidateSchemaRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ValidateSchemaRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ValidateSchemaRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ValidateSchemaRequest.parent)
}

// .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool ValidateSchemaRequest::has_schema() const {
  return this != internal_default_instance() && schema_ != nullptr;
}
inline void ValidateSchemaRequest::clear_schema() {
  if (GetArenaNoVirtual() == nullptr && schema_ != nullptr) {
    delete schema_;
  }
  schema_ = nullptr;
}
inline const ::google::pubsub::v1::Schema& ValidateSchemaRequest::schema() const {
  const ::google::pubsub::v1::Schema* p = schema_;
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ValidateSchemaRequest.schema)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::pubsub::v1::Schema*>(
      &::google::pubsub::v1::_Schema_default_instance_);
}
inline ::google::pubsub::v1::Schema* ValidateSchemaRequest::release_schema() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ValidateSchemaRequest.schema)
  
  ::google::pubsub::v1::Schema* temp = schema_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  schema_ = nullptr;
  return temp;
}
inline ::google::pubsub::v1::Schema* ValidateSchemaRequest::unsafe_arena_release_schema() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ValidateSchemaRequest.schema)
  
  ::google::pubsub::v1::Schema* temp = schema_;
  schema_ = nullptr;
  return temp;
}
inline ::google::pubsub::v1::Schema* ValidateSchemaRequest::mutable_schema() {
  
  if (schema_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::pubsub::v1::Schema>(GetArenaNoVirtual());
    schema_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ValidateSchemaRequest.schema)
  return schema_;
}
inline void ValidateSchemaRequest::set_allocated_schema(::google::pubsub::v1::Schema* schema) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete schema_;
  }
  if (schema) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(schema);
    if (message_arena != submessage_arena) {
      schema = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schema, submessage_arena);
    }
    
  } else {
    
  }
  schema_ = schema;
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ValidateSchemaRequest.schema)
}

// -------------------------------------------------------------------

// ValidateSchemaResponse

// -------------------------------------------------------------------

// ValidateMessageRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void ValidateMessageRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ValidateMessageRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ValidateMessageRequest.parent)
  return parent_.Get();
}
inline void ValidateMessageRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ValidateMessageRequest.parent)
}
#if LANG_CXX11
inline void ValidateMessageRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.ValidateMessageRequest.parent)
}
#endif
inline void ValidateMessageRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.ValidateMessageRequest.parent)
}
inline void ValidateMessageRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.ValidateMessageRequest.parent)
}
inline ::std::string* ValidateMessageRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ValidateMessageRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ValidateMessageRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ValidateMessageRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ValidateMessageRequest::set_allocated_parent(::std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ValidateMessageRequest.parent)
}
inline ::std::string* ValidateMessageRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ValidateMessageRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ValidateMessageRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ValidateMessageRequest.parent)
}

// string name = 2 [(.google.api.resource_reference) = {
inline bool ValidateMessageRequest::has_name() const {
  return schema_spec_case() == kName;
}
inline void ValidateMessageRequest::set_has_name() {
  _oneof_case_[0] = kName;
}
inline void ValidateMessageRequest::clear_name() {
  if (has_name()) {
    schema_spec_.name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_schema_spec();
  }
}
inline const ::std::string& ValidateMessageRequest::name() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ValidateMessageRequest.name)
  if (has_name()) {
    return schema_spec_.name_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ValidateMessageRequest::set_name(const ::std::string& value) {
  if (!has_name()) {
    clear_schema_spec();
    set_has_name();
    schema_spec_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  schema_spec_.name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ValidateMessageRequest.name)
}
#if LANG_CXX11
inline void ValidateMessageRequest::set_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ValidateMessageRequest.name)
  if (!has_name()) {
    clear_schema_spec();
    set_has_name();
    schema_spec_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  schema_spec_.name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.ValidateMessageRequest.name)
}
#endif
inline void ValidateMessageRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_name()) {
    clear_schema_spec();
    set_has_name();
    schema_spec_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  schema_spec_.name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.ValidateMessageRequest.name)
}
inline void ValidateMessageRequest::set_name(const char* value,
                             size_t size) {
  if (!has_name()) {
    clear_schema_spec();
    set_has_name();
    schema_spec_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  schema_spec_.name_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.ValidateMessageRequest.name)
}
inline ::std::string* ValidateMessageRequest::mutable_name() {
  if (!has_name()) {
    clear_schema_spec();
    set_has_name();
    schema_spec_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return schema_spec_.name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ValidateMessageRequest.name)
}
inline ::std::string* ValidateMessageRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ValidateMessageRequest.name)
  if (has_name()) {
    clear_has_schema_spec();
    return schema_spec_.name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return nullptr;
  }
}
inline void ValidateMessageRequest::set_allocated_name(::std::string* name) {
  if (has_schema_spec()) {
    clear_schema_spec();
  }
  if (name != nullptr) {
    set_has_name();
    schema_spec_.name_.UnsafeSetDefault(name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ValidateMessageRequest.name)
}
inline ::std::string* ValidateMessageRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ValidateMessageRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (has_name()) {
    clear_has_schema_spec();
    return schema_spec_.name_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return nullptr;
  }
}
inline void ValidateMessageRequest::unsafe_arena_set_allocated_name(::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (!has_name()) {
    schema_spec_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_schema_spec();
  if (name) {
    set_has_name();
    schema_spec_.name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ValidateMessageRequest.name)
}

// .google.pubsub.v1.Schema schema = 3;
inline bool ValidateMessageRequest::has_schema() const {
  return schema_spec_case() == kSchema;
}
inline void ValidateMessageRequest::set_has_schema() {
  _oneof_case_[0] = kSchema;
}
inline void ValidateMessageRequest::clear_schema() {
  if (has_schema()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete schema_spec_.schema_;
    }
    clear_has_schema_spec();
  }
}
inline ::google::pubsub::v1::Schema* ValidateMessageRequest::release_schema() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ValidateMessageRequest.schema)
  if (has_schema()) {
    clear_has_schema_spec();
      ::google::pubsub::v1::Schema* temp = schema_spec_.schema_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    schema_spec_.schema_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::pubsub::v1::Schema& ValidateMessageRequest::schema() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ValidateMessageRequest.schema)
  return has_schema()
      ? *schema_spec_.schema_
      : *reinterpret_cast< ::google::pubsub::v1::Schema*>(&::google::pubsub::v1::_Schema_default_instance_);
}
inline ::google::pubsub::v1::Schema* ValidateMessageRequest::unsafe_arena_release_schema() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ValidateMessageRequest.schema)
  if (has_schema()) {
    clear_has_schema_spec();
    ::google::pubsub::v1::Schema* temp = schema_spec_.schema_;
    schema_spec_.schema_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ValidateMessageRequest::unsafe_arena_set_allocated_schema(::google::pubsub::v1::Schema* schema) {
  clear_schema_spec();
  if (schema) {
    set_has_schema();
    schema_spec_.schema_ = schema;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ValidateMessageRequest.schema)
}
inline ::google::pubsub::v1::Schema* ValidateMessageRequest::mutable_schema() {
  if (!has_schema()) {
    clear_schema_spec();
    set_has_schema();
    schema_spec_.schema_ = CreateMaybeMessage< ::google::pubsub::v1::Schema >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ValidateMessageRequest.schema)
  return schema_spec_.schema_;
}

// bytes message = 4;
inline void ValidateMessageRequest::clear_message() {
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ValidateMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ValidateMessageRequest.message)
  return message_.Get();
}
inline void ValidateMessageRequest::set_message(const ::std::string& value) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ValidateMessageRequest.message)
}
#if LANG_CXX11
inline void ValidateMessageRequest::set_message(::std::string&& value) {
  
  message_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.pubsub.v1.ValidateMessageRequest.message)
}
#endif
inline void ValidateMessageRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.pubsub.v1.ValidateMessageRequest.message)
}
inline void ValidateMessageRequest::set_message(const void* value,
    size_t size) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.pubsub.v1.ValidateMessageRequest.message)
}
inline ::std::string* ValidateMessageRequest::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:google.pubsub.v1.ValidateMessageRequest.message)
  return message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ValidateMessageRequest::release_message() {
  // @@protoc_insertion_point(field_release:google.pubsub.v1.ValidateMessageRequest.message)
  
  return message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ValidateMessageRequest::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ValidateMessageRequest.message)
}
inline ::std::string* ValidateMessageRequest::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.pubsub.v1.ValidateMessageRequest.message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ValidateMessageRequest::unsafe_arena_set_allocated_message(
    ::std::string* message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (message != nullptr) {
    
  } else {
    
  }
  message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ValidateMessageRequest.message)
}

// .google.pubsub.v1.Encoding encoding = 5;
inline void ValidateMessageRequest::clear_encoding() {
  encoding_ = 0;
}
inline ::google::pubsub::v1::Encoding ValidateMessageRequest::encoding() const {
  // @@protoc_insertion_point(field_get:google.pubsub.v1.ValidateMessageRequest.encoding)
  return static_cast< ::google::pubsub::v1::Encoding >(encoding_);
}
inline void ValidateMessageRequest::set_encoding(::google::pubsub::v1::Encoding value) {
  
  encoding_ = value;
  // @@protoc_insertion_point(field_set:google.pubsub.v1.ValidateMessageRequest.encoding)
}

inline bool ValidateMessageRequest::has_schema_spec() const {
  return schema_spec_case() != SCHEMA_SPEC_NOT_SET;
}
inline void ValidateMessageRequest::clear_has_schema_spec() {
  _oneof_case_[0] = SCHEMA_SPEC_NOT_SET;
}
inline ValidateMessageRequest::SchemaSpecCase ValidateMessageRequest::schema_spec_case() const {
  return ValidateMessageRequest::SchemaSpecCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ValidateMessageResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace pubsub
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::pubsub::v1::Schema_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::pubsub::v1::Schema_Type>() {
  return ::google::pubsub::v1::Schema_Type_descriptor();
}
template <> struct is_proto_enum< ::google::pubsub::v1::SchemaView> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::pubsub::v1::SchemaView>() {
  return ::google::pubsub::v1::SchemaView_descriptor();
}
template <> struct is_proto_enum< ::google::pubsub::v1::Encoding> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::pubsub::v1::Encoding>() {
  return ::google::pubsub::v1::Encoding_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fpubsub_2fv1_2fschema_2eproto
