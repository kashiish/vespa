// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/pubsub/v1/schema.proto

#include "google/pubsub/v1/schema.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fpubsub_2fv1_2fschema_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto;
namespace google {
namespace pubsub {
namespace v1 {
class SchemaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Schema> _instance;
} _Schema_default_instance_;
class CreateSchemaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateSchemaRequest> _instance;
} _CreateSchemaRequest_default_instance_;
class GetSchemaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSchemaRequest> _instance;
} _GetSchemaRequest_default_instance_;
class ListSchemasRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSchemasRequest> _instance;
} _ListSchemasRequest_default_instance_;
class ListSchemasResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSchemasResponse> _instance;
} _ListSchemasResponse_default_instance_;
class DeleteSchemaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSchemaRequest> _instance;
} _DeleteSchemaRequest_default_instance_;
class ValidateSchemaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateSchemaRequest> _instance;
} _ValidateSchemaRequest_default_instance_;
class ValidateSchemaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateSchemaResponse> _instance;
} _ValidateSchemaResponse_default_instance_;
class ValidateMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateMessageRequest> _instance;
  ::google::protobuf::internal::ArenaStringPtr name_;
  const ::google::pubsub::v1::Schema* schema_;
} _ValidateMessageRequest_default_instance_;
class ValidateMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateMessageResponse> _instance;
} _ValidateMessageResponse_default_instance_;
}  // namespace v1
}  // namespace pubsub
}  // namespace google
static void InitDefaultsSchema_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_Schema_default_instance_;
    new (ptr) ::google::pubsub::v1::Schema();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::Schema::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSchema_google_2fpubsub_2fv1_2fschema_2eproto}, {}};

static void InitDefaultsCreateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_CreateSchemaRequest_default_instance_;
    new (ptr) ::google::pubsub::v1::CreateSchemaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::CreateSchemaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto}, {
      &scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto.base,}};

static void InitDefaultsGetSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_GetSchemaRequest_default_instance_;
    new (ptr) ::google::pubsub::v1::GetSchemaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::GetSchemaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto}, {}};

static void InitDefaultsListSchemasRequest_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_ListSchemasRequest_default_instance_;
    new (ptr) ::google::pubsub::v1::ListSchemasRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::ListSchemasRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSchemasRequest_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSchemasRequest_google_2fpubsub_2fv1_2fschema_2eproto}, {}};

static void InitDefaultsListSchemasResponse_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_ListSchemasResponse_default_instance_;
    new (ptr) ::google::pubsub::v1::ListSchemasResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::ListSchemasResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListSchemasResponse_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListSchemasResponse_google_2fpubsub_2fv1_2fschema_2eproto}, {
      &scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto.base,}};

static void InitDefaultsDeleteSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_DeleteSchemaRequest_default_instance_;
    new (ptr) ::google::pubsub::v1::DeleteSchemaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::DeleteSchemaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto}, {}};

static void InitDefaultsValidateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_ValidateSchemaRequest_default_instance_;
    new (ptr) ::google::pubsub::v1::ValidateSchemaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::ValidateSchemaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValidateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValidateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto}, {
      &scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto.base,}};

static void InitDefaultsValidateSchemaResponse_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_ValidateSchemaResponse_default_instance_;
    new (ptr) ::google::pubsub::v1::ValidateSchemaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::ValidateSchemaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateSchemaResponse_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateSchemaResponse_google_2fpubsub_2fv1_2fschema_2eproto}, {}};

static void InitDefaultsValidateMessageRequest_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_ValidateMessageRequest_default_instance_;
    new (ptr) ::google::pubsub::v1::ValidateMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::ValidateMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValidateMessageRequest_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValidateMessageRequest_google_2fpubsub_2fv1_2fschema_2eproto}, {
      &scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto.base,}};

static void InitDefaultsValidateMessageResponse_google_2fpubsub_2fv1_2fschema_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::pubsub::v1::_ValidateMessageResponse_default_instance_;
    new (ptr) ::google::pubsub::v1::ValidateMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::pubsub::v1::ValidateMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateMessageResponse_google_2fpubsub_2fv1_2fschema_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateMessageResponse_google_2fpubsub_2fv1_2fschema_2eproto}, {}};

void InitDefaults_google_2fpubsub_2fv1_2fschema_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSchemasRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSchemasResponse_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateSchemaResponse_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateMessageRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateMessageResponse_google_2fpubsub_2fv1_2fschema_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fpubsub_2fv1_2fschema_2eproto[3];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fpubsub_2fv1_2fschema_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fpubsub_2fv1_2fschema_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::Schema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::Schema, name_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::Schema, type_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::Schema, definition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::CreateSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::CreateSchemaRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::CreateSchemaRequest, schema_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::CreateSchemaRequest, schema_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::GetSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::GetSchemaRequest, name_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::GetSchemaRequest, view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ListSchemasRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ListSchemasRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ListSchemasRequest, view_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ListSchemasRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ListSchemasRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ListSchemasResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ListSchemasResponse, schemas_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ListSchemasResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::DeleteSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::DeleteSchemaRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateSchemaRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateSchemaRequest, schema_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateSchemaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateMessageRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateMessageRequest, parent_),
  offsetof(::google::pubsub::v1::ValidateMessageRequestDefaultTypeInternal, name_),
  offsetof(::google::pubsub::v1::ValidateMessageRequestDefaultTypeInternal, schema_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateMessageRequest, message_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateMessageRequest, encoding_),
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateMessageRequest, schema_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::pubsub::v1::ValidateMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::pubsub::v1::Schema)},
  { 8, -1, sizeof(::google::pubsub::v1::CreateSchemaRequest)},
  { 16, -1, sizeof(::google::pubsub::v1::GetSchemaRequest)},
  { 23, -1, sizeof(::google::pubsub::v1::ListSchemasRequest)},
  { 32, -1, sizeof(::google::pubsub::v1::ListSchemasResponse)},
  { 39, -1, sizeof(::google::pubsub::v1::DeleteSchemaRequest)},
  { 45, -1, sizeof(::google::pubsub::v1::ValidateSchemaRequest)},
  { 52, -1, sizeof(::google::pubsub::v1::ValidateSchemaResponse)},
  { 57, -1, sizeof(::google::pubsub::v1::ValidateMessageRequest)},
  { 68, -1, sizeof(::google::pubsub::v1::ValidateMessageResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_Schema_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_CreateSchemaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_GetSchemaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_ListSchemasRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_ListSchemasResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_DeleteSchemaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_ValidateSchemaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_ValidateSchemaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_ValidateMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::pubsub::v1::_ValidateMessageResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto = {
  {}, AddDescriptors_google_2fpubsub_2fv1_2fschema_2eproto, "google/pubsub/v1/schema.proto", schemas,
  file_default_instances, TableStruct_google_2fpubsub_2fv1_2fschema_2eproto::offsets,
  file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto, 10, file_level_enum_descriptors_google_2fpubsub_2fv1_2fschema_2eproto, file_level_service_descriptors_google_2fpubsub_2fv1_2fschema_2eproto,
};

const char descriptor_table_protodef_google_2fpubsub_2fv1_2fschema_2eproto[] =
  "\n\035google/pubsub/v1/schema.proto\022\020google."
  "pubsub.v1\032\034google/api/annotations.proto\032"
  "\027google/api/client.proto\032\037google/api/fie"
  "ld_behavior.proto\032\031google/api/resource.p"
  "roto\032\033google/protobuf/empty.proto\"\341\001\n\006Sc"
  "hema\022\021\n\004name\030\001 \001(\tB\003\340A\002\022+\n\004type\030\002 \001(\0162\035."
  "google.pubsub.v1.Schema.Type\022\022\n\ndefiniti"
  "on\030\003 \001(\t\";\n\004Type\022\024\n\020TYPE_UNSPECIFIED\020\000\022\023"
  "\n\017PROTOCOL_BUFFER\020\001\022\010\n\004AVRO\020\002:F\352AC\n\034pubs"
  "ub.googleapis.com/Schema\022#projects/{proj"
  "ect}/schemas/{schema}\"\215\001\n\023CreateSchemaRe"
  "quest\0224\n\006parent\030\001 \001(\tB$\340A\002\372A\036\022\034pubsub.go"
  "ogleapis.com/Schema\022-\n\006schema\030\002 \001(\0132\030.go"
  "ogle.pubsub.v1.SchemaB\003\340A\002\022\021\n\tschema_id\030"
  "\003 \001(\t\"r\n\020GetSchemaRequest\0222\n\004name\030\001 \001(\tB"
  "$\340A\002\372A\036\n\034pubsub.googleapis.com/Schema\022*\n"
  "\004view\030\002 \001(\0162\034.google.pubsub.v1.SchemaVie"
  "w\"\254\001\n\022ListSchemasRequest\022C\n\006parent\030\001 \001(\t"
  "B3\340A\002\372A-\n+cloudresourcemanager.googleapi"
  "s.com/Project\022*\n\004view\030\002 \001(\0162\034.google.pub"
  "sub.v1.SchemaView\022\021\n\tpage_size\030\003 \001(\005\022\022\n\n"
  "page_token\030\004 \001(\t\"Y\n\023ListSchemasResponse\022"
  ")\n\007schemas\030\001 \003(\0132\030.google.pubsub.v1.Sche"
  "ma\022\027\n\017next_page_token\030\002 \001(\t\"I\n\023DeleteSch"
  "emaRequest\0222\n\004name\030\001 \001(\tB$\340A\002\372A\036\n\034pubsub"
  ".googleapis.com/Schema\"\213\001\n\025ValidateSchem"
  "aRequest\022C\n\006parent\030\001 \001(\tB3\340A\002\372A-\n+cloudr"
  "esourcemanager.googleapis.com/Project\022-\n"
  "\006schema\030\002 \001(\0132\030.google.pubsub.v1.SchemaB"
  "\003\340A\002\"\030\n\026ValidateSchemaResponse\"\212\002\n\026Valid"
  "ateMessageRequest\022C\n\006parent\030\001 \001(\tB3\340A\002\372A"
  "-\n+cloudresourcemanager.googleapis.com/P"
  "roject\0221\n\004name\030\002 \001(\tB!\372A\036\n\034pubsub.google"
  "apis.com/SchemaH\000\022*\n\006schema\030\003 \001(\0132\030.goog"
  "le.pubsub.v1.SchemaH\000\022\017\n\007message\030\004 \001(\014\022,"
  "\n\010encoding\030\005 \001(\0162\032.google.pubsub.v1.Enco"
  "dingB\r\n\013schema_spec\"\031\n\027ValidateMessageRe"
  "sponse*>\n\nSchemaView\022\033\n\027SCHEMA_VIEW_UNSP"
  "ECIFIED\020\000\022\t\n\005BASIC\020\001\022\010\n\004FULL\020\002*:\n\010Encodi"
  "ng\022\030\n\024ENCODING_UNSPECIFIED\020\000\022\010\n\004JSON\020\001\022\n"
  "\n\006BINARY\020\0022\367\007\n\rSchemaService\022\232\001\n\014CreateS"
  "chema\022%.google.pubsub.v1.CreateSchemaReq"
  "uest\032\030.google.pubsub.v1.Schema\"I\202\323\344\223\002)\"\037"
  "/v1/{parent=projects/*}/schemas:\006schema\332"
  "A\027parent,schema,schema_id\022y\n\tGetSchema\022\""
  ".google.pubsub.v1.GetSchemaRequest\032\030.goo"
  "gle.pubsub.v1.Schema\".\202\323\344\223\002!\022\037/v1/{name="
  "projects/*/schemas/*}\332A\004name\022\214\001\n\013ListSch"
  "emas\022$.google.pubsub.v1.ListSchemasReque"
  "st\032%.google.pubsub.v1.ListSchemasRespons"
  "e\"0\202\323\344\223\002!\022\037/v1/{parent=projects/*}/schem"
  "as\332A\006parent\022}\n\014DeleteSchema\022%.google.pub"
  "sub.v1.DeleteSchemaRequest\032\026.google.prot"
  "obuf.Empty\".\202\323\344\223\002!*\037/v1/{name=projects/*"
  "/schemas/*}\332A\004name\022\250\001\n\016ValidateSchema\022\'."
  "google.pubsub.v1.ValidateSchemaRequest\032("
  ".google.pubsub.v1.ValidateSchemaResponse"
  "\"C\202\323\344\223\002-\"(/v1/{parent=projects/*}/schema"
  "s:validate:\001*\332A\rparent,schema\022\242\001\n\017Valida"
  "teMessage\022(.google.pubsub.v1.ValidateMes"
  "sageRequest\032).google.pubsub.v1.ValidateM"
  "essageResponse\":\202\323\344\223\0024\"//v1/{parent=proj"
  "ects/*}/schemas:validateMessage:\001*\032p\312A\025p"
  "ubsub.googleapis.com\322AUhttps://www.googl"
  "eapis.com/auth/cloud-platform,https://ww"
  "w.googleapis.com/auth/pubsubB\256\001\n\024com.goo"
  "gle.pubsub.v1B\013SchemaProtoP\001Z6google.gol"
  "ang.org/genproto/googleapis/pubsub/v1;pu"
  "bsub\370\001\001\252\002\026Google.Cloud.PubSub.V1\312\002\026Googl"
  "e\\Cloud\\PubSub\\V1\352\002\031Google::Cloud::PubSu"
  "b::V1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fpubsub_2fv1_2fschema_2eproto = {
  false, InitDefaults_google_2fpubsub_2fv1_2fschema_2eproto, 
  descriptor_table_protodef_google_2fpubsub_2fv1_2fschema_2eproto,
  "google/pubsub/v1/schema.proto", &assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto, 2813,
};

void AddDescriptors_google_2fpubsub_2fv1_2fschema_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_google_2fapi_2fclient_2eproto,
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fapi_2fresource_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fpubsub_2fv1_2fschema_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fpubsub_2fv1_2fschema_2eproto = []() { AddDescriptors_google_2fpubsub_2fv1_2fschema_2eproto(); return true; }();
namespace google {
namespace pubsub {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Schema_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return file_level_enum_descriptors_google_2fpubsub_2fv1_2fschema_2eproto[0];
}
bool Schema_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Schema_Type Schema::TYPE_UNSPECIFIED;
const Schema_Type Schema::PROTOCOL_BUFFER;
const Schema_Type Schema::AVRO;
const Schema_Type Schema::Type_MIN;
const Schema_Type Schema::Type_MAX;
const int Schema::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SchemaView_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return file_level_enum_descriptors_google_2fpubsub_2fv1_2fschema_2eproto[1];
}
bool SchemaView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Encoding_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return file_level_enum_descriptors_google_2fpubsub_2fv1_2fschema_2eproto[2];
}
bool Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Schema::InitAsDefaultInstance() {
}
class Schema::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Schema::kNameFieldNumber;
const int Schema::kTypeFieldNumber;
const int Schema::kDefinitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Schema::Schema()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.Schema)
}
Schema::Schema(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.Schema)
}
Schema::Schema(const Schema& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  definition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.definition().size() > 0) {
    definition_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.definition(),
      GetArenaNoVirtual());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.Schema)
}

void Schema::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  definition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

Schema::~Schema() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.Schema)
  SharedDtor();
}

void Schema::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  definition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Schema::ArenaDtor(void* object) {
  Schema* _this = reinterpret_cast< Schema* >(object);
  (void)_this;
}
void Schema::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void Schema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Schema& Schema::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Schema_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void Schema::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.Schema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  definition_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Schema::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Schema*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.Schema.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.pubsub.v1.Schema.Type type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::google::pubsub::v1::Schema_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string definition = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.Schema.definition");
        object = msg->mutable_definition();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Schema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.Schema)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.Schema.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.pubsub.v1.Schema.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::pubsub::v1::Schema_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string definition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_definition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->definition().data(), static_cast<int>(this->definition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.Schema.definition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.Schema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.Schema)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Schema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.Schema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.Schema.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.pubsub.v1.Schema.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string definition = 3;
  if (this->definition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->definition().data(), static_cast<int>(this->definition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.Schema.definition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->definition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.Schema)
}

::google::protobuf::uint8* Schema::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.Schema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.Schema.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.pubsub.v1.Schema.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string definition = 3;
  if (this->definition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->definition().data(), static_cast<int>(this->definition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.Schema.definition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->definition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.Schema)
  return target;
}

size_t Schema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.Schema)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string definition = 3;
  if (this->definition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->definition());
  }

  // .google.pubsub.v1.Schema.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Schema::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.Schema)
  GOOGLE_DCHECK_NE(&from, this);
  const Schema* source =
      ::google::protobuf::DynamicCastToGenerated<Schema>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.Schema)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.Schema)
    MergeFrom(*source);
  }
}

void Schema::MergeFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.Schema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.definition().size() > 0) {
    set_definition(from.definition());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Schema::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Schema::CopyFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Schema::IsInitialized() const {
  return true;
}

void Schema::Swap(Schema* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Schema* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void Schema::UnsafeArenaSwap(Schema* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Schema::InternalSwap(Schema* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  definition_.Swap(&other->definition_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::google::protobuf::Metadata Schema::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateSchemaRequest::InitAsDefaultInstance() {
  ::google::pubsub::v1::_CreateSchemaRequest_default_instance_._instance.get_mutable()->schema_ = const_cast< ::google::pubsub::v1::Schema*>(
      ::google::pubsub::v1::Schema::internal_default_instance());
}
class CreateSchemaRequest::HasBitSetters {
 public:
  static const ::google::pubsub::v1::Schema& schema(const CreateSchemaRequest* msg);
};

const ::google::pubsub::v1::Schema&
CreateSchemaRequest::HasBitSetters::schema(const CreateSchemaRequest* msg) {
  return *msg->schema_;
}
void CreateSchemaRequest::unsafe_arena_set_allocated_schema(
    ::google::pubsub::v1::Schema* schema) {
  if (GetArenaNoVirtual() == nullptr) {
    delete schema_;
  }
  schema_ = schema;
  if (schema) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.CreateSchemaRequest.schema)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateSchemaRequest::kParentFieldNumber;
const int CreateSchemaRequest::kSchemaFieldNumber;
const int CreateSchemaRequest::kSchemaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateSchemaRequest::CreateSchemaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.CreateSchemaRequest)
}
CreateSchemaRequest::CreateSchemaRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.CreateSchemaRequest)
}
CreateSchemaRequest::CreateSchemaRequest(const CreateSchemaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  schema_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.schema_id().size() > 0) {
    schema_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_id(),
      GetArenaNoVirtual());
  }
  if (from.has_schema()) {
    schema_ = new ::google::pubsub::v1::Schema(*from.schema_);
  } else {
    schema_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.CreateSchemaRequest)
}

void CreateSchemaRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_ = nullptr;
}

CreateSchemaRequest::~CreateSchemaRequest() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.CreateSchemaRequest)
  SharedDtor();
}

void CreateSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete schema_;
}

void CreateSchemaRequest::ArenaDtor(void* object) {
  CreateSchemaRequest* _this = reinterpret_cast< CreateSchemaRequest* >(object);
  (void)_this;
}
void CreateSchemaRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CreateSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateSchemaRequest& CreateSchemaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void CreateSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.CreateSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  schema_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && schema_ != nullptr) {
    delete schema_;
  }
  schema_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateSchemaRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateSchemaRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.CreateSchemaRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::pubsub::v1::Schema::_InternalParse;
        object = msg->mutable_schema();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string schema_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.CreateSchemaRequest.schema_id");
        object = msg->mutable_schema_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateSchemaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.CreateSchemaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.CreateSchemaRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string schema_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schema_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->schema_id().data(), static_cast<int>(this->schema_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.CreateSchemaRequest.schema_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.CreateSchemaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.CreateSchemaRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateSchemaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.CreateSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.CreateSchemaRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::schema(this), output);
  }

  // string schema_id = 3;
  if (this->schema_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schema_id().data(), static_cast<int>(this->schema_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.CreateSchemaRequest.schema_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->schema_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.CreateSchemaRequest)
}

::google::protobuf::uint8* CreateSchemaRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.CreateSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.CreateSchemaRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::schema(this), target);
  }

  // string schema_id = 3;
  if (this->schema_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schema_id().data(), static_cast<int>(this->schema_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.CreateSchemaRequest.schema_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->schema_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.CreateSchemaRequest)
  return target;
}

size_t CreateSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.CreateSchemaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string schema_id = 3;
  if (this->schema_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->schema_id());
  }

  // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_schema()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *schema_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSchemaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.CreateSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSchemaRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.CreateSchemaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.CreateSchemaRequest)
    MergeFrom(*source);
  }
}

void CreateSchemaRequest::MergeFrom(const CreateSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.CreateSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.schema_id().size() > 0) {
    set_schema_id(from.schema_id());
  }
  if (from.has_schema()) {
    mutable_schema()->::google::pubsub::v1::Schema::MergeFrom(from.schema());
  }
}

void CreateSchemaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.CreateSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSchemaRequest::CopyFrom(const CreateSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.CreateSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSchemaRequest::IsInitialized() const {
  return true;
}

void CreateSchemaRequest::Swap(CreateSchemaRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateSchemaRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void CreateSchemaRequest::UnsafeArenaSwap(CreateSchemaRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateSchemaRequest::InternalSwap(CreateSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  schema_id_.Swap(&other->schema_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(schema_, other->schema_);
}

::google::protobuf::Metadata CreateSchemaRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetSchemaRequest::InitAsDefaultInstance() {
}
class GetSchemaRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSchemaRequest::kNameFieldNumber;
const int GetSchemaRequest::kViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSchemaRequest::GetSchemaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.GetSchemaRequest)
}
GetSchemaRequest::GetSchemaRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.GetSchemaRequest)
}
GetSchemaRequest::GetSchemaRequest(const GetSchemaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  view_ = from.view_;
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.GetSchemaRequest)
}

void GetSchemaRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
}

GetSchemaRequest::~GetSchemaRequest() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.GetSchemaRequest)
  SharedDtor();
}

void GetSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSchemaRequest::ArenaDtor(void* object) {
  GetSchemaRequest* _this = reinterpret_cast< GetSchemaRequest* >(object);
  (void)_this;
}
void GetSchemaRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSchemaRequest& GetSchemaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void GetSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.GetSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  view_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetSchemaRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetSchemaRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.GetSchemaRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.pubsub.v1.SchemaView view = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_view(static_cast<::google::pubsub::v1::SchemaView>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetSchemaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.GetSchemaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.GetSchemaRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.pubsub.v1.SchemaView view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::pubsub::v1::SchemaView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.GetSchemaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.GetSchemaRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetSchemaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.GetSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.GetSchemaRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.pubsub.v1.SchemaView view = 2;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->view(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.GetSchemaRequest)
}

::google::protobuf::uint8* GetSchemaRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.GetSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.GetSchemaRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.pubsub.v1.SchemaView view = 2;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->view(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.GetSchemaRequest)
  return target;
}

size_t GetSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.GetSchemaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.pubsub.v1.SchemaView view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSchemaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.GetSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSchemaRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.GetSchemaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.GetSchemaRequest)
    MergeFrom(*source);
  }
}

void GetSchemaRequest::MergeFrom(const GetSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.GetSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
}

void GetSchemaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.GetSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSchemaRequest::CopyFrom(const GetSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.GetSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSchemaRequest::IsInitialized() const {
  return true;
}

void GetSchemaRequest::Swap(GetSchemaRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetSchemaRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GetSchemaRequest::UnsafeArenaSwap(GetSchemaRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetSchemaRequest::InternalSwap(GetSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(view_, other->view_);
}

::google::protobuf::Metadata GetSchemaRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListSchemasRequest::InitAsDefaultInstance() {
}
class ListSchemasRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSchemasRequest::kParentFieldNumber;
const int ListSchemasRequest::kViewFieldNumber;
const int ListSchemasRequest::kPageSizeFieldNumber;
const int ListSchemasRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSchemasRequest::ListSchemasRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.ListSchemasRequest)
}
ListSchemasRequest::ListSchemasRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.ListSchemasRequest)
}
ListSchemasRequest::ListSchemasRequest(const ListSchemasRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&view_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.ListSchemasRequest)
}

void ListSchemasRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListSchemasRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&view_)) + sizeof(page_size_));
}

ListSchemasRequest::~ListSchemasRequest() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.ListSchemasRequest)
  SharedDtor();
}

void ListSchemasRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListSchemasRequest::ArenaDtor(void* object) {
  ListSchemasRequest* _this = reinterpret_cast< ListSchemasRequest* >(object);
  (void)_this;
}
void ListSchemasRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListSchemasRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSchemasRequest& ListSchemasRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListSchemasRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void ListSchemasRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.ListSchemasRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&view_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSchemasRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListSchemasRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.ListSchemasRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.pubsub.v1.SchemaView view = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_view(static_cast<::google::pubsub::v1::SchemaView>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 page_size = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_page_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string page_token = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.ListSchemasRequest.page_token");
        object = msg->mutable_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSchemasRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.ListSchemasRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.ListSchemasRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.pubsub.v1.SchemaView view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::pubsub::v1::SchemaView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.ListSchemasRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.ListSchemasRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.ListSchemasRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSchemasRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.ListSchemasRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ListSchemasRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.pubsub.v1.SchemaView view = 2;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->view(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ListSchemasRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.ListSchemasRequest)
}

::google::protobuf::uint8* ListSchemasRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.ListSchemasRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ListSchemasRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.pubsub.v1.SchemaView view = 2;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->view(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ListSchemasRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.ListSchemasRequest)
  return target;
}

size_t ListSchemasRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.ListSchemasRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // .google.pubsub.v1.SchemaView view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSchemasRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.ListSchemasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSchemasRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListSchemasRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.ListSchemasRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.ListSchemasRequest)
    MergeFrom(*source);
  }
}

void ListSchemasRequest::MergeFrom(const ListSchemasRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.ListSchemasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListSchemasRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.ListSchemasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSchemasRequest::CopyFrom(const ListSchemasRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.ListSchemasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSchemasRequest::IsInitialized() const {
  return true;
}

void ListSchemasRequest::Swap(ListSchemasRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListSchemasRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListSchemasRequest::UnsafeArenaSwap(ListSchemasRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListSchemasRequest::InternalSwap(ListSchemasRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(view_, other->view_);
  swap(page_size_, other->page_size_);
}

::google::protobuf::Metadata ListSchemasRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListSchemasResponse::InitAsDefaultInstance() {
}
class ListSchemasResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSchemasResponse::kSchemasFieldNumber;
const int ListSchemasResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSchemasResponse::ListSchemasResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.ListSchemasResponse)
}
ListSchemasResponse::ListSchemasResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  schemas_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.ListSchemasResponse)
}
ListSchemasResponse::ListSchemasResponse(const ListSchemasResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      schemas_(from.schemas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.ListSchemasResponse)
}

void ListSchemasResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListSchemasResponse_google_2fpubsub_2fv1_2fschema_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListSchemasResponse::~ListSchemasResponse() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.ListSchemasResponse)
  SharedDtor();
}

void ListSchemasResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListSchemasResponse::ArenaDtor(void* object) {
  ListSchemasResponse* _this = reinterpret_cast< ListSchemasResponse* >(object);
  (void)_this;
}
void ListSchemasResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListSchemasResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSchemasResponse& ListSchemasResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListSchemasResponse_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void ListSchemasResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.ListSchemasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schemas_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSchemasResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListSchemasResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.pubsub.v1.Schema schemas = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::pubsub::v1::Schema::_InternalParse;
          object = msg->add_schemas();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string next_page_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.ListSchemasResponse.next_page_token");
        object = msg->mutable_next_page_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSchemasResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.ListSchemasResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.pubsub.v1.Schema schemas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_schemas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.ListSchemasResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.ListSchemasResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.ListSchemasResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSchemasResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.ListSchemasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.pubsub.v1.Schema schemas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schemas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->schemas(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ListSchemasResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.ListSchemasResponse)
}

::google::protobuf::uint8* ListSchemasResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.ListSchemasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.pubsub.v1.Schema schemas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schemas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->schemas(static_cast<int>(i)), target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ListSchemasResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.ListSchemasResponse)
  return target;
}

size_t ListSchemasResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.ListSchemasResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.pubsub.v1.Schema schemas = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->schemas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->schemas(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSchemasResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.ListSchemasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSchemasResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListSchemasResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.ListSchemasResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.ListSchemasResponse)
    MergeFrom(*source);
  }
}

void ListSchemasResponse::MergeFrom(const ListSchemasResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.ListSchemasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schemas_.MergeFrom(from.schemas_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListSchemasResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.ListSchemasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSchemasResponse::CopyFrom(const ListSchemasResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.ListSchemasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSchemasResponse::IsInitialized() const {
  return true;
}

void ListSchemasResponse::Swap(ListSchemasResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListSchemasResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ListSchemasResponse::UnsafeArenaSwap(ListSchemasResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListSchemasResponse::InternalSwap(ListSchemasResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&schemas_)->InternalSwap(CastToBase(&other->schemas_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ListSchemasResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteSchemaRequest::InitAsDefaultInstance() {
}
class DeleteSchemaRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSchemaRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSchemaRequest::DeleteSchemaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.DeleteSchemaRequest)
}
DeleteSchemaRequest::DeleteSchemaRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.DeleteSchemaRequest)
}
DeleteSchemaRequest::DeleteSchemaRequest(const DeleteSchemaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.DeleteSchemaRequest)
}

void DeleteSchemaRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteSchemaRequest::~DeleteSchemaRequest() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.DeleteSchemaRequest)
  SharedDtor();
}

void DeleteSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteSchemaRequest::ArenaDtor(void* object) {
  DeleteSchemaRequest* _this = reinterpret_cast< DeleteSchemaRequest* >(object);
  (void)_this;
}
void DeleteSchemaRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeleteSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteSchemaRequest& DeleteSchemaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void DeleteSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.DeleteSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteSchemaRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteSchemaRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.DeleteSchemaRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteSchemaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.DeleteSchemaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.DeleteSchemaRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.DeleteSchemaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.DeleteSchemaRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteSchemaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.DeleteSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.DeleteSchemaRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.DeleteSchemaRequest)
}

::google::protobuf::uint8* DeleteSchemaRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.DeleteSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.DeleteSchemaRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.DeleteSchemaRequest)
  return target;
}

size_t DeleteSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.DeleteSchemaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSchemaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.DeleteSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSchemaRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.DeleteSchemaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.DeleteSchemaRequest)
    MergeFrom(*source);
  }
}

void DeleteSchemaRequest::MergeFrom(const DeleteSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.DeleteSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void DeleteSchemaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.DeleteSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSchemaRequest::CopyFrom(const DeleteSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.DeleteSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSchemaRequest::IsInitialized() const {
  return true;
}

void DeleteSchemaRequest::Swap(DeleteSchemaRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteSchemaRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void DeleteSchemaRequest::UnsafeArenaSwap(DeleteSchemaRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteSchemaRequest::InternalSwap(DeleteSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteSchemaRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ValidateSchemaRequest::InitAsDefaultInstance() {
  ::google::pubsub::v1::_ValidateSchemaRequest_default_instance_._instance.get_mutable()->schema_ = const_cast< ::google::pubsub::v1::Schema*>(
      ::google::pubsub::v1::Schema::internal_default_instance());
}
class ValidateSchemaRequest::HasBitSetters {
 public:
  static const ::google::pubsub::v1::Schema& schema(const ValidateSchemaRequest* msg);
};

const ::google::pubsub::v1::Schema&
ValidateSchemaRequest::HasBitSetters::schema(const ValidateSchemaRequest* msg) {
  return *msg->schema_;
}
void ValidateSchemaRequest::unsafe_arena_set_allocated_schema(
    ::google::pubsub::v1::Schema* schema) {
  if (GetArenaNoVirtual() == nullptr) {
    delete schema_;
  }
  schema_ = schema;
  if (schema) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.pubsub.v1.ValidateSchemaRequest.schema)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateSchemaRequest::kParentFieldNumber;
const int ValidateSchemaRequest::kSchemaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateSchemaRequest::ValidateSchemaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.ValidateSchemaRequest)
}
ValidateSchemaRequest::ValidateSchemaRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.ValidateSchemaRequest)
}
ValidateSchemaRequest::ValidateSchemaRequest(const ValidateSchemaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  if (from.has_schema()) {
    schema_ = new ::google::pubsub::v1::Schema(*from.schema_);
  } else {
    schema_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.ValidateSchemaRequest)
}

void ValidateSchemaRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ValidateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_ = nullptr;
}

ValidateSchemaRequest::~ValidateSchemaRequest() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.ValidateSchemaRequest)
  SharedDtor();
}

void ValidateSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete schema_;
}

void ValidateSchemaRequest::ArenaDtor(void* object) {
  ValidateSchemaRequest* _this = reinterpret_cast< ValidateSchemaRequest* >(object);
  (void)_this;
}
void ValidateSchemaRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ValidateSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateSchemaRequest& ValidateSchemaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ValidateSchemaRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void ValidateSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.ValidateSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && schema_ != nullptr) {
    delete schema_;
  }
  schema_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ValidateSchemaRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ValidateSchemaRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.ValidateSchemaRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::pubsub::v1::Schema::_InternalParse;
        object = msg->mutable_schema();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ValidateSchemaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.ValidateSchemaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.ValidateSchemaRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.ValidateSchemaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.ValidateSchemaRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ValidateSchemaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.ValidateSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ValidateSchemaRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::schema(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.ValidateSchemaRequest)
}

::google::protobuf::uint8* ValidateSchemaRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.ValidateSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ValidateSchemaRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::schema(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.ValidateSchemaRequest)
  return target;
}

size_t ValidateSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.ValidateSchemaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.pubsub.v1.Schema schema = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_schema()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *schema_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateSchemaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.ValidateSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateSchemaRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ValidateSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.ValidateSchemaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.ValidateSchemaRequest)
    MergeFrom(*source);
  }
}

void ValidateSchemaRequest::MergeFrom(const ValidateSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.ValidateSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.has_schema()) {
    mutable_schema()->::google::pubsub::v1::Schema::MergeFrom(from.schema());
  }
}

void ValidateSchemaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.ValidateSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateSchemaRequest::CopyFrom(const ValidateSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.ValidateSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateSchemaRequest::IsInitialized() const {
  return true;
}

void ValidateSchemaRequest::Swap(ValidateSchemaRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValidateSchemaRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ValidateSchemaRequest::UnsafeArenaSwap(ValidateSchemaRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValidateSchemaRequest::InternalSwap(ValidateSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(schema_, other->schema_);
}

::google::protobuf::Metadata ValidateSchemaRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ValidateSchemaResponse::InitAsDefaultInstance() {
}
class ValidateSchemaResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateSchemaResponse::ValidateSchemaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.ValidateSchemaResponse)
}
ValidateSchemaResponse::ValidateSchemaResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.ValidateSchemaResponse)
}
ValidateSchemaResponse::ValidateSchemaResponse(const ValidateSchemaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.ValidateSchemaResponse)
}

void ValidateSchemaResponse::SharedCtor() {
}

ValidateSchemaResponse::~ValidateSchemaResponse() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.ValidateSchemaResponse)
  SharedDtor();
}

void ValidateSchemaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void ValidateSchemaResponse::ArenaDtor(void* object) {
  ValidateSchemaResponse* _this = reinterpret_cast< ValidateSchemaResponse* >(object);
  (void)_this;
}
void ValidateSchemaResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ValidateSchemaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateSchemaResponse& ValidateSchemaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ValidateSchemaResponse_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void ValidateSchemaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.ValidateSchemaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ValidateSchemaResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ValidateSchemaResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ValidateSchemaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.ValidateSchemaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.ValidateSchemaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.ValidateSchemaResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ValidateSchemaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.ValidateSchemaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.ValidateSchemaResponse)
}

::google::protobuf::uint8* ValidateSchemaResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.ValidateSchemaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.ValidateSchemaResponse)
  return target;
}

size_t ValidateSchemaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.ValidateSchemaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateSchemaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.ValidateSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateSchemaResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ValidateSchemaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.ValidateSchemaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.ValidateSchemaResponse)
    MergeFrom(*source);
  }
}

void ValidateSchemaResponse::MergeFrom(const ValidateSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.ValidateSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ValidateSchemaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.ValidateSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateSchemaResponse::CopyFrom(const ValidateSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.ValidateSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateSchemaResponse::IsInitialized() const {
  return true;
}

void ValidateSchemaResponse::Swap(ValidateSchemaResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValidateSchemaResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ValidateSchemaResponse::UnsafeArenaSwap(ValidateSchemaResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValidateSchemaResponse::InternalSwap(ValidateSchemaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateSchemaResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ValidateMessageRequest::InitAsDefaultInstance() {
  ::google::pubsub::v1::_ValidateMessageRequest_default_instance_.name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::pubsub::v1::_ValidateMessageRequest_default_instance_.schema_ = const_cast< ::google::pubsub::v1::Schema*>(
      ::google::pubsub::v1::Schema::internal_default_instance());
}
class ValidateMessageRequest::HasBitSetters {
 public:
  static const ::google::pubsub::v1::Schema& schema(const ValidateMessageRequest* msg);
};

const ::google::pubsub::v1::Schema&
ValidateMessageRequest::HasBitSetters::schema(const ValidateMessageRequest* msg) {
  return *msg->schema_spec_.schema_;
}
void ValidateMessageRequest::set_allocated_schema(::google::pubsub::v1::Schema* schema) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_schema_spec();
  if (schema) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(schema);
    if (message_arena != submessage_arena) {
      schema = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schema, submessage_arena);
    }
    set_has_schema();
    schema_spec_.schema_ = schema;
  }
  // @@protoc_insertion_point(field_set_allocated:google.pubsub.v1.ValidateMessageRequest.schema)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateMessageRequest::kParentFieldNumber;
const int ValidateMessageRequest::kNameFieldNumber;
const int ValidateMessageRequest::kSchemaFieldNumber;
const int ValidateMessageRequest::kMessageFieldNumber;
const int ValidateMessageRequest::kEncodingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateMessageRequest::ValidateMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.ValidateMessageRequest)
}
ValidateMessageRequest::ValidateMessageRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.ValidateMessageRequest)
}
ValidateMessageRequest::ValidateMessageRequest(const ValidateMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  encoding_ = from.encoding_;
  clear_has_schema_spec();
  switch (from.schema_spec_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kSchema: {
      mutable_schema()->::google::pubsub::v1::Schema::MergeFrom(from.schema());
      break;
    }
    case SCHEMA_SPEC_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.ValidateMessageRequest)
}

void ValidateMessageRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ValidateMessageRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encoding_ = 0;
  clear_has_schema_spec();
}

ValidateMessageRequest::~ValidateMessageRequest() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.ValidateMessageRequest)
  SharedDtor();
}

void ValidateMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_schema_spec()) {
    clear_schema_spec();
  }
}

void ValidateMessageRequest::ArenaDtor(void* object) {
  ValidateMessageRequest* _this = reinterpret_cast< ValidateMessageRequest* >(object);
  (void)_this;
}
void ValidateMessageRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ValidateMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateMessageRequest& ValidateMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ValidateMessageRequest_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void ValidateMessageRequest::clear_schema_spec() {
// @@protoc_insertion_point(one_of_clear_start:google.pubsub.v1.ValidateMessageRequest)
  switch (schema_spec_case()) {
    case kName: {
      schema_spec_.name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kSchema: {
      if (GetArenaNoVirtual() == nullptr) {
        delete schema_spec_.schema_;
      }
      break;
    }
    case SCHEMA_SPEC_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SCHEMA_SPEC_NOT_SET;
}


void ValidateMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.ValidateMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  encoding_ = 0;
  clear_schema_spec();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ValidateMessageRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ValidateMessageRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.ValidateMessageRequest.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2 [(.google.api.resource_reference) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.pubsub.v1.ValidateMessageRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.pubsub.v1.Schema schema = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::pubsub::v1::Schema::_InternalParse;
        object = msg->mutable_schema();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes message = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.pubsub.v1.Encoding encoding = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_encoding(static_cast<::google::pubsub::v1::Encoding>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ValidateMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.ValidateMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.ValidateMessageRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2 [(.google.api.resource_reference) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.pubsub.v1.ValidateMessageRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.pubsub.v1.Schema schema = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.pubsub.v1.Encoding encoding = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::google::pubsub::v1::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.ValidateMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.ValidateMessageRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ValidateMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.ValidateMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ValidateMessageRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string name = 2 [(.google.api.resource_reference) = {
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ValidateMessageRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .google.pubsub.v1.Schema schema = 3;
  if (has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::schema(this), output);
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->message(), output);
  }

  // .google.pubsub.v1.Encoding encoding = 5;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->encoding(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.ValidateMessageRequest)
}

::google::protobuf::uint8* ValidateMessageRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.ValidateMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ValidateMessageRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string name = 2 [(.google.api.resource_reference) = {
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.pubsub.v1.ValidateMessageRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .google.pubsub.v1.Schema schema = 3;
  if (has_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::schema(this), target);
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->message(), target);
  }

  // .google.pubsub.v1.Encoding encoding = 5;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->encoding(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.ValidateMessageRequest)
  return target;
}

size_t ValidateMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.ValidateMessageRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // .google.pubsub.v1.Encoding encoding = 5;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  switch (schema_spec_case()) {
    // string name = 2 [(.google.api.resource_reference) = {
    case kName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
      break;
    }
    // .google.pubsub.v1.Schema schema = 3;
    case kSchema: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *schema_spec_.schema_);
      break;
    }
    case SCHEMA_SPEC_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.ValidateMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateMessageRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ValidateMessageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.ValidateMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.ValidateMessageRequest)
    MergeFrom(*source);
  }
}

void ValidateMessageRequest::MergeFrom(const ValidateMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.ValidateMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
  switch (from.schema_spec_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kSchema: {
      mutable_schema()->::google::pubsub::v1::Schema::MergeFrom(from.schema());
      break;
    }
    case SCHEMA_SPEC_NOT_SET: {
      break;
    }
  }
}

void ValidateMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.ValidateMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateMessageRequest::CopyFrom(const ValidateMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.ValidateMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateMessageRequest::IsInitialized() const {
  return true;
}

void ValidateMessageRequest::Swap(ValidateMessageRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValidateMessageRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ValidateMessageRequest::UnsafeArenaSwap(ValidateMessageRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValidateMessageRequest::InternalSwap(ValidateMessageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(encoding_, other->encoding_);
  swap(schema_spec_, other->schema_spec_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata ValidateMessageRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ValidateMessageResponse::InitAsDefaultInstance() {
}
class ValidateMessageResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateMessageResponse::ValidateMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.pubsub.v1.ValidateMessageResponse)
}
ValidateMessageResponse::ValidateMessageResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.pubsub.v1.ValidateMessageResponse)
}
ValidateMessageResponse::ValidateMessageResponse(const ValidateMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.pubsub.v1.ValidateMessageResponse)
}

void ValidateMessageResponse::SharedCtor() {
}

ValidateMessageResponse::~ValidateMessageResponse() {
  // @@protoc_insertion_point(destructor:google.pubsub.v1.ValidateMessageResponse)
  SharedDtor();
}

void ValidateMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void ValidateMessageResponse::ArenaDtor(void* object) {
  ValidateMessageResponse* _this = reinterpret_cast< ValidateMessageResponse* >(object);
  (void)_this;
}
void ValidateMessageResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ValidateMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateMessageResponse& ValidateMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ValidateMessageResponse_google_2fpubsub_2fv1_2fschema_2eproto.base);
  return *internal_default_instance();
}


void ValidateMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.pubsub.v1.ValidateMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ValidateMessageResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ValidateMessageResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ValidateMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.pubsub.v1.ValidateMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.pubsub.v1.ValidateMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.pubsub.v1.ValidateMessageResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ValidateMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.pubsub.v1.ValidateMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.pubsub.v1.ValidateMessageResponse)
}

::google::protobuf::uint8* ValidateMessageResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.pubsub.v1.ValidateMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.pubsub.v1.ValidateMessageResponse)
  return target;
}

size_t ValidateMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.pubsub.v1.ValidateMessageResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.pubsub.v1.ValidateMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateMessageResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ValidateMessageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.pubsub.v1.ValidateMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.pubsub.v1.ValidateMessageResponse)
    MergeFrom(*source);
  }
}

void ValidateMessageResponse::MergeFrom(const ValidateMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.pubsub.v1.ValidateMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ValidateMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.pubsub.v1.ValidateMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateMessageResponse::CopyFrom(const ValidateMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.pubsub.v1.ValidateMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateMessageResponse::IsInitialized() const {
  return true;
}

void ValidateMessageResponse::Swap(ValidateMessageResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValidateMessageResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void ValidateMessageResponse::UnsafeArenaSwap(ValidateMessageResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValidateMessageResponse::InternalSwap(ValidateMessageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateMessageResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fpubsub_2fv1_2fschema_2eproto);
  return ::file_level_metadata_google_2fpubsub_2fv1_2fschema_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace pubsub
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::Schema* Arena::CreateMaybeMessage< ::google::pubsub::v1::Schema >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::Schema >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::CreateSchemaRequest* Arena::CreateMaybeMessage< ::google::pubsub::v1::CreateSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::CreateSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::GetSchemaRequest* Arena::CreateMaybeMessage< ::google::pubsub::v1::GetSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::GetSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::ListSchemasRequest* Arena::CreateMaybeMessage< ::google::pubsub::v1::ListSchemasRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::ListSchemasRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::ListSchemasResponse* Arena::CreateMaybeMessage< ::google::pubsub::v1::ListSchemasResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::ListSchemasResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::DeleteSchemaRequest* Arena::CreateMaybeMessage< ::google::pubsub::v1::DeleteSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::DeleteSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::ValidateSchemaRequest* Arena::CreateMaybeMessage< ::google::pubsub::v1::ValidateSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::ValidateSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::ValidateSchemaResponse* Arena::CreateMaybeMessage< ::google::pubsub::v1::ValidateSchemaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::ValidateSchemaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::ValidateMessageRequest* Arena::CreateMaybeMessage< ::google::pubsub::v1::ValidateMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::ValidateMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::pubsub::v1::ValidateMessageResponse* Arena::CreateMaybeMessage< ::google::pubsub::v1::ValidateMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::pubsub::v1::ValidateMessageResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
