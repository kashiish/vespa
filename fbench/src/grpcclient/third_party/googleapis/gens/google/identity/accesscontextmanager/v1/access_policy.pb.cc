// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/identity/accesscontextmanager/v1/access_policy.proto

#include "google/identity/accesscontextmanager/v1/access_policy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace identity {
namespace accesscontextmanager {
namespace v1 {
class AccessPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccessPolicy> _instance;
} _AccessPolicy_default_instance_;
}  // namespace v1
}  // namespace accesscontextmanager
}  // namespace identity
}  // namespace google
static void InitDefaultsAccessPolicy_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::identity::accesscontextmanager::v1::_AccessPolicy_default_instance_;
    new (ptr) ::google::identity::accesscontextmanager::v1::AccessPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::identity::accesscontextmanager::v1::AccessPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AccessPolicy_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAccessPolicy_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

void InitDefaults_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_AccessPolicy_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::AccessPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::AccessPolicy, name_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::AccessPolicy, parent_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::AccessPolicy, title_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::AccessPolicy, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::AccessPolicy, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::AccessPolicy, etag_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::identity::accesscontextmanager::v1::AccessPolicy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::identity::accesscontextmanager::v1::_AccessPolicy_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto = {
  {}, AddDescriptors_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto, "google/identity/accesscontextmanager/v1/access_policy.proto", schemas,
  file_default_instances, TableStruct_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto::offsets,
  file_level_metadata_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto, 1, file_level_enum_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto, file_level_service_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto,
};

const char descriptor_table_protodef_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto[] =
  "\n;google/identity/accesscontextmanager/v"
  "1/access_policy.proto\022\'google.identity.a"
  "ccesscontextmanager.v1\032\037google/protobuf/"
  "timestamp.proto\032\034google/api/annotations."
  "proto\"\253\001\n\014AccessPolicy\022\014\n\004name\030\001 \001(\t\022\016\n\006"
  "parent\030\002 \001(\t\022\r\n\005title\030\003 \001(\t\022/\n\013create_ti"
  "me\030\004 \001(\0132\032.google.protobuf.Timestamp\022/\n\013"
  "update_time\030\005 \001(\0132\032.google.protobuf.Time"
  "stamp\022\014\n\004etag\030\006 \001(\tB\241\002\n+com.google.ident"
  "ity.accesscontextmanager.v1B\013PolicyProto"
  "P\001Z[google.golang.org/genproto/googleapi"
  "s/identity/accesscontextmanager/v1;acces"
  "scontextmanager\242\002\004GACM\252\002\'Google.Identity"
  ".AccessContextManager.V1\312\002\'Google\\Identi"
  "ty\\AccessContextManager\\V1\352\002*Google::Ide"
  "ntity::AccessContextManager::V1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto = {
  false, InitDefaults_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto, 
  descriptor_table_protodef_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto,
  "google/identity/accesscontextmanager/v1/access_policy.proto", &assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto, 639,
};

void AddDescriptors_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto = []() { AddDescriptors_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto(); return true; }();
namespace google {
namespace identity {
namespace accesscontextmanager {
namespace v1 {

// ===================================================================

void AccessPolicy::InitAsDefaultInstance() {
  ::google::identity::accesscontextmanager::v1::_AccessPolicy_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::identity::accesscontextmanager::v1::_AccessPolicy_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class AccessPolicy::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const AccessPolicy* msg);
  static const ::google::protobuf::Timestamp& update_time(const AccessPolicy* msg);
};

const ::google::protobuf::Timestamp&
AccessPolicy::HasBitSetters::create_time(const AccessPolicy* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
AccessPolicy::HasBitSetters::update_time(const AccessPolicy* msg) {
  return *msg->update_time_;
}
void AccessPolicy::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void AccessPolicy::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessPolicy::kNameFieldNumber;
const int AccessPolicy::kParentFieldNumber;
const int AccessPolicy::kTitleFieldNumber;
const int AccessPolicy::kCreateTimeFieldNumber;
const int AccessPolicy::kUpdateTimeFieldNumber;
const int AccessPolicy::kEtagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessPolicy::AccessPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.identity.accesscontextmanager.v1.AccessPolicy)
}
AccessPolicy::AccessPolicy(const AccessPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.etag().size() > 0) {
    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.identity.accesscontextmanager.v1.AccessPolicy)
}

void AccessPolicy::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AccessPolicy_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(update_time_));
}

AccessPolicy::~AccessPolicy() {
  // @@protoc_insertion_point(destructor:google.identity.accesscontextmanager.v1.AccessPolicy)
  SharedDtor();
}

void AccessPolicy::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void AccessPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccessPolicy& AccessPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AccessPolicy_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto.base);
  return *internal_default_instance();
}


void AccessPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AccessPolicy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AccessPolicy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.AccessPolicy.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.AccessPolicy.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.AccessPolicy.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string etag = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.AccessPolicy.etag");
        object = msg->mutable_etag();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AccessPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.AccessPolicy.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.AccessPolicy.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.AccessPolicy.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string etag = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), static_cast<int>(this->etag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.AccessPolicy.etag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.identity.accesscontextmanager.v1.AccessPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.identity.accesscontextmanager.v1.AccessPolicy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AccessPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.AccessPolicy.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string parent = 2;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.AccessPolicy.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parent(), output);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.AccessPolicy.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::update_time(this), output);
  }

  // string etag = 6;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.AccessPolicy.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->etag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.identity.accesscontextmanager.v1.AccessPolicy)
}

::google::protobuf::uint8* AccessPolicy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.AccessPolicy.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string parent = 2;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.AccessPolicy.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parent(), target);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.AccessPolicy.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::update_time(this), target);
  }

  // string etag = 6;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.AccessPolicy.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->etag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.identity.accesscontextmanager.v1.AccessPolicy)
  return target;
}

size_t AccessPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parent = 2;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string title = 3;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string etag = 6;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccessPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessPolicy* source =
      ::google::protobuf::DynamicCastToGenerated<AccessPolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.identity.accesscontextmanager.v1.AccessPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.identity.accesscontextmanager.v1.AccessPolicy)
    MergeFrom(*source);
  }
}

void AccessPolicy::MergeFrom(const AccessPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
}

void AccessPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessPolicy::CopyFrom(const AccessPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.identity.accesscontextmanager.v1.AccessPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessPolicy::IsInitialized() const {
  return true;
}

void AccessPolicy::Swap(AccessPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessPolicy::InternalSwap(AccessPolicy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  etag_.Swap(&other->etag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
}

::google::protobuf::Metadata AccessPolicy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto);
  return ::file_level_metadata_google_2fidentity_2faccesscontextmanager_2fv1_2faccess_5fpolicy_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace accesscontextmanager
}  // namespace identity
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::identity::accesscontextmanager::v1::AccessPolicy* Arena::CreateMaybeMessage< ::google::identity::accesscontextmanager::v1::AccessPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::google::identity::accesscontextmanager::v1::AccessPolicy >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
