// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/identity/accesscontextmanager/v1/service_perimeter.proto

#include "google/identity/accesscontextmanager/v1/service_perimeter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServicePerimeterConfig_VpcAccessibleServices_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServicePerimeterConfig_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace identity {
namespace accesscontextmanager {
namespace v1 {
class ServicePerimeterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServicePerimeter> _instance;
} _ServicePerimeter_default_instance_;
class ServicePerimeterConfig_VpcAccessibleServicesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServicePerimeterConfig_VpcAccessibleServices> _instance;
} _ServicePerimeterConfig_VpcAccessibleServices_default_instance_;
class ServicePerimeterConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServicePerimeterConfig> _instance;
} _ServicePerimeterConfig_default_instance_;
}  // namespace v1
}  // namespace accesscontextmanager
}  // namespace identity
}  // namespace google
static void InitDefaultsServicePerimeter_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::identity::accesscontextmanager::v1::_ServicePerimeter_default_instance_;
    new (ptr) ::google::identity::accesscontextmanager::v1::ServicePerimeter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::identity::accesscontextmanager::v1::ServicePerimeter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ServicePerimeter_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsServicePerimeter_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_ServicePerimeterConfig_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base,}};

static void InitDefaultsServicePerimeterConfig_VpcAccessibleServices_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::identity::accesscontextmanager::v1::_ServicePerimeterConfig_VpcAccessibleServices_default_instance_;
    new (ptr) ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServicePerimeterConfig_VpcAccessibleServices_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServicePerimeterConfig_VpcAccessibleServices_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto}, {}};

static void InitDefaultsServicePerimeterConfig_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::identity::accesscontextmanager::v1::_ServicePerimeterConfig_default_instance_;
    new (ptr) ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServicePerimeterConfig_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServicePerimeterConfig_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto}, {
      &scc_info_ServicePerimeterConfig_VpcAccessibleServices_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base,}};

void InitDefaults_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ServicePerimeter_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServicePerimeterConfig_VpcAccessibleServices_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServicePerimeterConfig_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, name_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, title_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, description_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, perimeter_type_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, status_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, spec_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeter, use_explicit_dry_run_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices, enable_restriction_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices, allowed_services_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig, resources_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig, access_levels_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig, restricted_services_),
  PROTOBUF_FIELD_OFFSET(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig, vpc_accessible_services_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::identity::accesscontextmanager::v1::ServicePerimeter)},
  { 14, -1, sizeof(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices)},
  { 21, -1, sizeof(::google::identity::accesscontextmanager::v1::ServicePerimeterConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::identity::accesscontextmanager::v1::_ServicePerimeter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::identity::accesscontextmanager::v1::_ServicePerimeterConfig_VpcAccessibleServices_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::identity::accesscontextmanager::v1::_ServicePerimeterConfig_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto = {
  {}, AddDescriptors_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto, "google/identity/accesscontextmanager/v1/service_perimeter.proto", schemas,
  file_default_instances, TableStruct_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto::offsets,
  file_level_metadata_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto, 3, file_level_enum_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto, file_level_service_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto,
};

const char descriptor_table_protodef_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto[] =
  "\n\?google/identity/accesscontextmanager/v"
  "1/service_perimeter.proto\022\'google.identi"
  "ty.accesscontextmanager.v1\032\037google/proto"
  "buf/timestamp.proto\032\034google/api/annotati"
  "ons.proto\"\222\004\n\020ServicePerimeter\022\014\n\004name\030\001"
  " \001(\t\022\r\n\005title\030\002 \001(\t\022\023\n\013description\030\003 \001(\t"
  "\022/\n\013create_time\030\004 \001(\0132\032.google.protobuf."
  "Timestamp\022/\n\013update_time\030\005 \001(\0132\032.google."
  "protobuf.Timestamp\022_\n\016perimeter_type\030\006 \001"
  "(\0162G.google.identity.accesscontextmanage"
  "r.v1.ServicePerimeter.PerimeterType\022O\n\006s"
  "tatus\030\007 \001(\0132\?.google.identity.accesscont"
  "extmanager.v1.ServicePerimeterConfig\022M\n\004"
  "spec\030\010 \001(\0132\?.google.identity.accessconte"
  "xtmanager.v1.ServicePerimeterConfig\022!\n\031u"
  "se_explicit_dry_run_spec\030\t \001(\010\"F\n\rPerime"
  "terType\022\032\n\026PERIMETER_TYPE_REGULAR\020\000\022\031\n\025P"
  "ERIMETER_TYPE_BRIDGE\020\001\"\246\002\n\026ServicePerime"
  "terConfig\022\021\n\tresources\030\001 \003(\t\022\025\n\raccess_l"
  "evels\030\002 \003(\t\022\033\n\023restricted_services\030\004 \003(\t"
  "\022v\n\027vpc_accessible_services\030\n \001(\0132U.goog"
  "le.identity.accesscontextmanager.v1.Serv"
  "icePerimeterConfig.VpcAccessibleServices"
  "\032M\n\025VpcAccessibleServices\022\032\n\022enable_rest"
  "riction\030\001 \001(\010\022\030\n\020allowed_services\030\002 \003(\tB"
  "\253\002\n+com.google.identity.accesscontextman"
  "ager.v1B\025ServicePerimeterProtoP\001Z[google"
  ".golang.org/genproto/googleapis/identity"
  "/accesscontextmanager/v1;accesscontextma"
  "nager\242\002\004GACM\252\002\'Google.Identity.AccessCon"
  "textManager.V1\312\002\'Google\\Identity\\AccessC"
  "ontextManager\\V1\352\002*Google::Identity::Acc"
  "essContextManager::V1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto = {
  false, InitDefaults_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto, 
  descriptor_table_protodef_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto,
  "google/identity/accesscontextmanager/v1/service_perimeter.proto", &assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto, 1309,
};

void AddDescriptors_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto = []() { AddDescriptors_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto(); return true; }();
namespace google {
namespace identity {
namespace accesscontextmanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* ServicePerimeter_PerimeterType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto);
  return file_level_enum_descriptors_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto[0];
}
bool ServicePerimeter_PerimeterType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServicePerimeter_PerimeterType ServicePerimeter::PERIMETER_TYPE_REGULAR;
const ServicePerimeter_PerimeterType ServicePerimeter::PERIMETER_TYPE_BRIDGE;
const ServicePerimeter_PerimeterType ServicePerimeter::PerimeterType_MIN;
const ServicePerimeter_PerimeterType ServicePerimeter::PerimeterType_MAX;
const int ServicePerimeter::PerimeterType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ServicePerimeter::InitAsDefaultInstance() {
  ::google::identity::accesscontextmanager::v1::_ServicePerimeter_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::identity::accesscontextmanager::v1::_ServicePerimeter_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::identity::accesscontextmanager::v1::_ServicePerimeter_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig*>(
      ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig::internal_default_instance());
  ::google::identity::accesscontextmanager::v1::_ServicePerimeter_default_instance_._instance.get_mutable()->spec_ = const_cast< ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig*>(
      ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig::internal_default_instance());
}
class ServicePerimeter::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const ServicePerimeter* msg);
  static const ::google::protobuf::Timestamp& update_time(const ServicePerimeter* msg);
  static const ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig& status(const ServicePerimeter* msg);
  static const ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig& spec(const ServicePerimeter* msg);
};

const ::google::protobuf::Timestamp&
ServicePerimeter::HasBitSetters::create_time(const ServicePerimeter* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
ServicePerimeter::HasBitSetters::update_time(const ServicePerimeter* msg) {
  return *msg->update_time_;
}
const ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig&
ServicePerimeter::HasBitSetters::status(const ServicePerimeter* msg) {
  return *msg->status_;
}
const ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig&
ServicePerimeter::HasBitSetters::spec(const ServicePerimeter* msg) {
  return *msg->spec_;
}
void ServicePerimeter::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void ServicePerimeter::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServicePerimeter::kNameFieldNumber;
const int ServicePerimeter::kTitleFieldNumber;
const int ServicePerimeter::kDescriptionFieldNumber;
const int ServicePerimeter::kCreateTimeFieldNumber;
const int ServicePerimeter::kUpdateTimeFieldNumber;
const int ServicePerimeter::kPerimeterTypeFieldNumber;
const int ServicePerimeter::kStatusFieldNumber;
const int ServicePerimeter::kSpecFieldNumber;
const int ServicePerimeter::kUseExplicitDryRunSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServicePerimeter::ServicePerimeter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.identity.accesscontextmanager.v1.ServicePerimeter)
}
ServicePerimeter::ServicePerimeter(const ServicePerimeter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  if (from.has_status()) {
    status_ = new ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from.has_spec()) {
    spec_ = new ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig(*from.spec_);
  } else {
    spec_ = nullptr;
  }
  ::memcpy(&perimeter_type_, &from.perimeter_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_explicit_dry_run_spec_) -
    reinterpret_cast<char*>(&perimeter_type_)) + sizeof(use_explicit_dry_run_spec_));
  // @@protoc_insertion_point(copy_constructor:google.identity.accesscontextmanager.v1.ServicePerimeter)
}

void ServicePerimeter::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServicePerimeter_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_explicit_dry_run_spec_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(use_explicit_dry_run_spec_));
}

ServicePerimeter::~ServicePerimeter() {
  // @@protoc_insertion_point(destructor:google.identity.accesscontextmanager.v1.ServicePerimeter)
  SharedDtor();
}

void ServicePerimeter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete spec_;
}

void ServicePerimeter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServicePerimeter& ServicePerimeter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServicePerimeter_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
  return *internal_default_instance();
}


void ServicePerimeter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && spec_ != nullptr) {
    delete spec_;
  }
  spec_ = nullptr;
  ::memset(&perimeter_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_explicit_dry_run_spec_) -
      reinterpret_cast<char*>(&perimeter_type_)) + sizeof(use_explicit_dry_run_spec_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServicePerimeter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServicePerimeter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.ServicePerimeter.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.ServicePerimeter.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.ServicePerimeter.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.identity.accesscontextmanager.v1.ServicePerimeter.PerimeterType perimeter_type = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_perimeter_type(static_cast<::google::identity::accesscontextmanager::v1::ServicePerimeter_PerimeterType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig status = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig::_InternalParse;
        object = msg->mutable_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig spec = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig::_InternalParse;
        object = msg->mutable_spec();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool use_explicit_dry_run_spec = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_use_explicit_dry_run_spec(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServicePerimeter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.ServicePerimeter.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.ServicePerimeter.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.ServicePerimeter.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.identity.accesscontextmanager.v1.ServicePerimeter.PerimeterType perimeter_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_perimeter_type(static_cast< ::google::identity::accesscontextmanager::v1::ServicePerimeter_PerimeterType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig spec = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_explicit_dry_run_spec = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_explicit_dry_run_spec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.identity.accesscontextmanager.v1.ServicePerimeter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.identity.accesscontextmanager.v1.ServicePerimeter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServicePerimeter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeter.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeter.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::update_time(this), output);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeter.PerimeterType perimeter_type = 6;
  if (this->perimeter_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->perimeter_type(), output);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig status = 7;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::status(this), output);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig spec = 8;
  if (this->has_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::spec(this), output);
  }

  // bool use_explicit_dry_run_spec = 9;
  if (this->use_explicit_dry_run_spec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->use_explicit_dry_run_spec(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.identity.accesscontextmanager.v1.ServicePerimeter)
}

::google::protobuf::uint8* ServicePerimeter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeter.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeter.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::update_time(this), target);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeter.PerimeterType perimeter_type = 6;
  if (this->perimeter_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->perimeter_type(), target);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig status = 7;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::status(this), target);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig spec = 8;
  if (this->has_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::spec(this), target);
  }

  // bool use_explicit_dry_run_spec = 9;
  if (this->use_explicit_dry_run_spec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->use_explicit_dry_run_spec(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.identity.accesscontextmanager.v1.ServicePerimeter)
  return target;
}

size_t ServicePerimeter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig status = 7;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig spec = 8;
  if (this->has_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *spec_);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeter.PerimeterType perimeter_type = 6;
  if (this->perimeter_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->perimeter_type());
  }

  // bool use_explicit_dry_run_spec = 9;
  if (this->use_explicit_dry_run_spec() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServicePerimeter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  GOOGLE_DCHECK_NE(&from, this);
  const ServicePerimeter* source =
      ::google::protobuf::DynamicCastToGenerated<ServicePerimeter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.identity.accesscontextmanager.v1.ServicePerimeter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.identity.accesscontextmanager.v1.ServicePerimeter)
    MergeFrom(*source);
  }
}

void ServicePerimeter::MergeFrom(const ServicePerimeter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.has_status()) {
    mutable_status()->::google::identity::accesscontextmanager::v1::ServicePerimeterConfig::MergeFrom(from.status());
  }
  if (from.has_spec()) {
    mutable_spec()->::google::identity::accesscontextmanager::v1::ServicePerimeterConfig::MergeFrom(from.spec());
  }
  if (from.perimeter_type() != 0) {
    set_perimeter_type(from.perimeter_type());
  }
  if (from.use_explicit_dry_run_spec() != 0) {
    set_use_explicit_dry_run_spec(from.use_explicit_dry_run_spec());
  }
}

void ServicePerimeter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServicePerimeter::CopyFrom(const ServicePerimeter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.identity.accesscontextmanager.v1.ServicePerimeter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServicePerimeter::IsInitialized() const {
  return true;
}

void ServicePerimeter::Swap(ServicePerimeter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServicePerimeter::InternalSwap(ServicePerimeter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(status_, other->status_);
  swap(spec_, other->spec_);
  swap(perimeter_type_, other->perimeter_type_);
  swap(use_explicit_dry_run_spec_, other->use_explicit_dry_run_spec_);
}

::google::protobuf::Metadata ServicePerimeter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto);
  return ::file_level_metadata_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServicePerimeterConfig_VpcAccessibleServices::InitAsDefaultInstance() {
}
class ServicePerimeterConfig_VpcAccessibleServices::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServicePerimeterConfig_VpcAccessibleServices::kEnableRestrictionFieldNumber;
const int ServicePerimeterConfig_VpcAccessibleServices::kAllowedServicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServicePerimeterConfig_VpcAccessibleServices::ServicePerimeterConfig_VpcAccessibleServices()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
}
ServicePerimeterConfig_VpcAccessibleServices::ServicePerimeterConfig_VpcAccessibleServices(const ServicePerimeterConfig_VpcAccessibleServices& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      allowed_services_(from.allowed_services_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enable_restriction_ = from.enable_restriction_;
  // @@protoc_insertion_point(copy_constructor:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
}

void ServicePerimeterConfig_VpcAccessibleServices::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServicePerimeterConfig_VpcAccessibleServices_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
  enable_restriction_ = false;
}

ServicePerimeterConfig_VpcAccessibleServices::~ServicePerimeterConfig_VpcAccessibleServices() {
  // @@protoc_insertion_point(destructor:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  SharedDtor();
}

void ServicePerimeterConfig_VpcAccessibleServices::SharedDtor() {
}

void ServicePerimeterConfig_VpcAccessibleServices::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServicePerimeterConfig_VpcAccessibleServices& ServicePerimeterConfig_VpcAccessibleServices::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServicePerimeterConfig_VpcAccessibleServices_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
  return *internal_default_instance();
}


void ServicePerimeterConfig_VpcAccessibleServices::Clear() {
// @@protoc_insertion_point(message_clear_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_services_.Clear();
  enable_restriction_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServicePerimeterConfig_VpcAccessibleServices::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServicePerimeterConfig_VpcAccessibleServices*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enable_restriction = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enable_restriction(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string allowed_services = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices.allowed_services");
          object = msg->add_allowed_services();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServicePerimeterConfig_VpcAccessibleServices::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable_restriction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_restriction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string allowed_services = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allowed_services()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allowed_services(this->allowed_services_size() - 1).data(),
            static_cast<int>(this->allowed_services(this->allowed_services_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices.allowed_services"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServicePerimeterConfig_VpcAccessibleServices::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_restriction = 1;
  if (this->enable_restriction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable_restriction(), output);
  }

  // repeated string allowed_services = 2;
  for (int i = 0, n = this->allowed_services_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allowed_services(i).data(), static_cast<int>(this->allowed_services(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices.allowed_services");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->allowed_services(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
}

::google::protobuf::uint8* ServicePerimeterConfig_VpcAccessibleServices::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_restriction = 1;
  if (this->enable_restriction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable_restriction(), target);
  }

  // repeated string allowed_services = 2;
  for (int i = 0, n = this->allowed_services_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allowed_services(i).data(), static_cast<int>(this->allowed_services(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices.allowed_services");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->allowed_services(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  return target;
}

size_t ServicePerimeterConfig_VpcAccessibleServices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string allowed_services = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allowed_services_size());
  for (int i = 0, n = this->allowed_services_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allowed_services(i));
  }

  // bool enable_restriction = 1;
  if (this->enable_restriction() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServicePerimeterConfig_VpcAccessibleServices::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  GOOGLE_DCHECK_NE(&from, this);
  const ServicePerimeterConfig_VpcAccessibleServices* source =
      ::google::protobuf::DynamicCastToGenerated<ServicePerimeterConfig_VpcAccessibleServices>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
    MergeFrom(*source);
  }
}

void ServicePerimeterConfig_VpcAccessibleServices::MergeFrom(const ServicePerimeterConfig_VpcAccessibleServices& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_services_.MergeFrom(from.allowed_services_);
  if (from.enable_restriction() != 0) {
    set_enable_restriction(from.enable_restriction());
  }
}

void ServicePerimeterConfig_VpcAccessibleServices::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServicePerimeterConfig_VpcAccessibleServices::CopyFrom(const ServicePerimeterConfig_VpcAccessibleServices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServicePerimeterConfig_VpcAccessibleServices::IsInitialized() const {
  return true;
}

void ServicePerimeterConfig_VpcAccessibleServices::Swap(ServicePerimeterConfig_VpcAccessibleServices* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServicePerimeterConfig_VpcAccessibleServices::InternalSwap(ServicePerimeterConfig_VpcAccessibleServices* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  allowed_services_.InternalSwap(CastToBase(&other->allowed_services_));
  swap(enable_restriction_, other->enable_restriction_);
}

::google::protobuf::Metadata ServicePerimeterConfig_VpcAccessibleServices::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto);
  return ::file_level_metadata_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServicePerimeterConfig::InitAsDefaultInstance() {
  ::google::identity::accesscontextmanager::v1::_ServicePerimeterConfig_default_instance_._instance.get_mutable()->vpc_accessible_services_ = const_cast< ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices*>(
      ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices::internal_default_instance());
}
class ServicePerimeterConfig::HasBitSetters {
 public:
  static const ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices& vpc_accessible_services(const ServicePerimeterConfig* msg);
};

const ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices&
ServicePerimeterConfig::HasBitSetters::vpc_accessible_services(const ServicePerimeterConfig* msg) {
  return *msg->vpc_accessible_services_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServicePerimeterConfig::kResourcesFieldNumber;
const int ServicePerimeterConfig::kAccessLevelsFieldNumber;
const int ServicePerimeterConfig::kRestrictedServicesFieldNumber;
const int ServicePerimeterConfig::kVpcAccessibleServicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServicePerimeterConfig::ServicePerimeterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
}
ServicePerimeterConfig::ServicePerimeterConfig(const ServicePerimeterConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      resources_(from.resources_),
      access_levels_(from.access_levels_),
      restricted_services_(from.restricted_services_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vpc_accessible_services()) {
    vpc_accessible_services_ = new ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices(*from.vpc_accessible_services_);
  } else {
    vpc_accessible_services_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
}

void ServicePerimeterConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServicePerimeterConfig_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
  vpc_accessible_services_ = nullptr;
}

ServicePerimeterConfig::~ServicePerimeterConfig() {
  // @@protoc_insertion_point(destructor:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  SharedDtor();
}

void ServicePerimeterConfig::SharedDtor() {
  if (this != internal_default_instance()) delete vpc_accessible_services_;
}

void ServicePerimeterConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServicePerimeterConfig& ServicePerimeterConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServicePerimeterConfig_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto.base);
  return *internal_default_instance();
}


void ServicePerimeterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  access_levels_.Clear();
  restricted_services_.Clear();
  if (GetArenaNoVirtual() == nullptr && vpc_accessible_services_ != nullptr) {
    delete vpc_accessible_services_;
  }
  vpc_accessible_services_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServicePerimeterConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServicePerimeterConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string resources = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.ServicePerimeterConfig.resources");
          object = msg->add_resources();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string access_levels = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.ServicePerimeterConfig.access_levels");
          object = msg->add_access_levels();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated string restricted_services = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.identity.accesscontextmanager.v1.ServicePerimeterConfig.restricted_services");
          object = msg->add_restricted_services();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices::_InternalParse;
        object = msg->mutable_vpc_accessible_services();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServicePerimeterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string resources = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resources()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resources(this->resources_size() - 1).data(),
            static_cast<int>(this->resources(this->resources_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.resources"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string access_levels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_access_levels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_levels(this->access_levels_size() - 1).data(),
            static_cast<int>(this->access_levels(this->access_levels_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.access_levels"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string restricted_services = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_restricted_services()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->restricted_services(this->restricted_services_size() - 1).data(),
            static_cast<int>(this->restricted_services(this->restricted_services_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.restricted_services"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vpc_accessible_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServicePerimeterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resources = 1;
  for (int i = 0, n = this->resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resources(i).data(), static_cast<int>(this->resources(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.resources");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->resources(i), output);
  }

  // repeated string access_levels = 2;
  for (int i = 0, n = this->access_levels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_levels(i).data(), static_cast<int>(this->access_levels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.access_levels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->access_levels(i), output);
  }

  // repeated string restricted_services = 4;
  for (int i = 0, n = this->restricted_services_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->restricted_services(i).data(), static_cast<int>(this->restricted_services(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.restricted_services");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->restricted_services(i), output);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
  if (this->has_vpc_accessible_services()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::vpc_accessible_services(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
}

::google::protobuf::uint8* ServicePerimeterConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resources = 1;
  for (int i = 0, n = this->resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resources(i).data(), static_cast<int>(this->resources(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.resources");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->resources(i), target);
  }

  // repeated string access_levels = 2;
  for (int i = 0, n = this->access_levels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_levels(i).data(), static_cast<int>(this->access_levels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.access_levels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->access_levels(i), target);
  }

  // repeated string restricted_services = 4;
  for (int i = 0, n = this->restricted_services_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->restricted_services(i).data(), static_cast<int>(this->restricted_services(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.identity.accesscontextmanager.v1.ServicePerimeterConfig.restricted_services");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->restricted_services(i), target);
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
  if (this->has_vpc_accessible_services()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::vpc_accessible_services(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  return target;
}

size_t ServicePerimeterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resources = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resources_size());
  for (int i = 0, n = this->resources_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resources(i));
  }

  // repeated string access_levels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->access_levels_size());
  for (int i = 0, n = this->access_levels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->access_levels(i));
  }

  // repeated string restricted_services = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->restricted_services_size());
  for (int i = 0, n = this->restricted_services_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->restricted_services(i));
  }

  // .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
  if (this->has_vpc_accessible_services()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vpc_accessible_services_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServicePerimeterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ServicePerimeterConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ServicePerimeterConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
    MergeFrom(*source);
  }
}

void ServicePerimeterConfig::MergeFrom(const ServicePerimeterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  access_levels_.MergeFrom(from.access_levels_);
  restricted_services_.MergeFrom(from.restricted_services_);
  if (from.has_vpc_accessible_services()) {
    mutable_vpc_accessible_services()->::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices::MergeFrom(from.vpc_accessible_services());
  }
}

void ServicePerimeterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServicePerimeterConfig::CopyFrom(const ServicePerimeterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServicePerimeterConfig::IsInitialized() const {
  return true;
}

void ServicePerimeterConfig::Swap(ServicePerimeterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServicePerimeterConfig::InternalSwap(ServicePerimeterConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resources_.InternalSwap(CastToBase(&other->resources_));
  access_levels_.InternalSwap(CastToBase(&other->access_levels_));
  restricted_services_.InternalSwap(CastToBase(&other->restricted_services_));
  swap(vpc_accessible_services_, other->vpc_accessible_services_);
}

::google::protobuf::Metadata ServicePerimeterConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto);
  return ::file_level_metadata_google_2fidentity_2faccesscontextmanager_2fv1_2fservice_5fperimeter_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace accesscontextmanager
}  // namespace identity
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::identity::accesscontextmanager::v1::ServicePerimeter* Arena::CreateMaybeMessage< ::google::identity::accesscontextmanager::v1::ServicePerimeter >(Arena* arena) {
  return Arena::CreateInternal< ::google::identity::accesscontextmanager::v1::ServicePerimeter >(arena);
}
template<> PROTOBUF_NOINLINE ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices* Arena::CreateMaybeMessage< ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices >(Arena* arena) {
  return Arena::CreateInternal< ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig_VpcAccessibleServices >(arena);
}
template<> PROTOBUF_NOINLINE ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig* Arena::CreateMaybeMessage< ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::identity::accesscontextmanager::v1::ServicePerimeterConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
