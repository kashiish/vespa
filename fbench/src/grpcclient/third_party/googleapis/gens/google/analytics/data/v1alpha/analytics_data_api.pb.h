// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/data/v1alpha/analytics_data_api.proto

#ifndef PROTOBUF_INCLUDED_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto
#define PROTOBUF_INCLUDED_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/analytics/data/v1alpha/data.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto();
namespace google {
namespace analytics {
namespace data {
namespace v1alpha {
class BatchRunPivotReportsRequest;
class BatchRunPivotReportsRequestDefaultTypeInternal;
extern BatchRunPivotReportsRequestDefaultTypeInternal _BatchRunPivotReportsRequest_default_instance_;
class BatchRunPivotReportsResponse;
class BatchRunPivotReportsResponseDefaultTypeInternal;
extern BatchRunPivotReportsResponseDefaultTypeInternal _BatchRunPivotReportsResponse_default_instance_;
class BatchRunReportsRequest;
class BatchRunReportsRequestDefaultTypeInternal;
extern BatchRunReportsRequestDefaultTypeInternal _BatchRunReportsRequest_default_instance_;
class BatchRunReportsResponse;
class BatchRunReportsResponseDefaultTypeInternal;
extern BatchRunReportsResponseDefaultTypeInternal _BatchRunReportsResponse_default_instance_;
class GetMetadataRequest;
class GetMetadataRequestDefaultTypeInternal;
extern GetMetadataRequestDefaultTypeInternal _GetMetadataRequest_default_instance_;
class Metadata;
class MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class RunPivotReportRequest;
class RunPivotReportRequestDefaultTypeInternal;
extern RunPivotReportRequestDefaultTypeInternal _RunPivotReportRequest_default_instance_;
class RunPivotReportResponse;
class RunPivotReportResponseDefaultTypeInternal;
extern RunPivotReportResponseDefaultTypeInternal _RunPivotReportResponse_default_instance_;
class RunRealtimeReportRequest;
class RunRealtimeReportRequestDefaultTypeInternal;
extern RunRealtimeReportRequestDefaultTypeInternal _RunRealtimeReportRequest_default_instance_;
class RunRealtimeReportResponse;
class RunRealtimeReportResponseDefaultTypeInternal;
extern RunRealtimeReportResponseDefaultTypeInternal _RunRealtimeReportResponse_default_instance_;
class RunReportRequest;
class RunReportRequestDefaultTypeInternal;
extern RunReportRequestDefaultTypeInternal _RunReportRequest_default_instance_;
class RunReportResponse;
class RunReportResponseDefaultTypeInternal;
extern RunReportResponseDefaultTypeInternal _RunReportResponse_default_instance_;
}  // namespace v1alpha
}  // namespace data
}  // namespace analytics
namespace protobuf {
template<> ::google::analytics::data::v1alpha::BatchRunPivotReportsRequest* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::BatchRunPivotReportsRequest>(Arena*);
template<> ::google::analytics::data::v1alpha::BatchRunPivotReportsResponse* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::BatchRunPivotReportsResponse>(Arena*);
template<> ::google::analytics::data::v1alpha::BatchRunReportsRequest* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::BatchRunReportsRequest>(Arena*);
template<> ::google::analytics::data::v1alpha::BatchRunReportsResponse* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::BatchRunReportsResponse>(Arena*);
template<> ::google::analytics::data::v1alpha::GetMetadataRequest* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::GetMetadataRequest>(Arena*);
template<> ::google::analytics::data::v1alpha::Metadata* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::Metadata>(Arena*);
template<> ::google::analytics::data::v1alpha::RunPivotReportRequest* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::RunPivotReportRequest>(Arena*);
template<> ::google::analytics::data::v1alpha::RunPivotReportResponse* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::RunPivotReportResponse>(Arena*);
template<> ::google::analytics::data::v1alpha::RunRealtimeReportRequest* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::RunRealtimeReportRequest>(Arena*);
template<> ::google::analytics::data::v1alpha::RunRealtimeReportResponse* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::RunRealtimeReportResponse>(Arena*);
template<> ::google::analytics::data::v1alpha::RunReportRequest* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::RunReportRequest>(Arena*);
template<> ::google::analytics::data::v1alpha::RunReportResponse* Arena::CreateMaybeMessage<::google::analytics::data::v1alpha::RunReportResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace analytics {
namespace data {
namespace v1alpha {

// ===================================================================

class Metadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.Metadata) */ {
 public:
  Metadata();
  virtual ~Metadata();

  Metadata(const Metadata& from);

  inline Metadata& operator=(const Metadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Metadata(Metadata&& from) noexcept
    : Metadata() {
    *this = ::std::move(from);
  }

  inline Metadata& operator=(Metadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Metadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Metadata* internal_default_instance() {
    return reinterpret_cast<const Metadata*>(
               &_Metadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Metadata* other);
  friend void swap(Metadata& a, Metadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Metadata* New() const final {
    return CreateMaybeMessage<Metadata>(nullptr);
  }

  Metadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Metadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Metadata& from);
  void MergeFrom(const Metadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Metadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.DimensionMetadata dimensions = 1;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 1;
  ::google::analytics::data::v1alpha::DimensionMetadata* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionMetadata >*
      mutable_dimensions();
  const ::google::analytics::data::v1alpha::DimensionMetadata& dimensions(int index) const;
  ::google::analytics::data::v1alpha::DimensionMetadata* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionMetadata >&
      dimensions() const;

  // repeated .google.analytics.data.v1alpha.MetricMetadata metrics = 2;
  int metrics_size() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 2;
  ::google::analytics::data::v1alpha::MetricMetadata* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricMetadata >*
      mutable_metrics();
  const ::google::analytics::data::v1alpha::MetricMetadata& metrics(int index) const;
  ::google::analytics::data::v1alpha::MetricMetadata* add_metrics();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricMetadata >&
      metrics() const;

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.Metadata)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionMetadata > dimensions_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricMetadata > metrics_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RunReportRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.RunReportRequest) */ {
 public:
  RunReportRequest();
  virtual ~RunReportRequest();

  RunReportRequest(const RunReportRequest& from);

  inline RunReportRequest& operator=(const RunReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunReportRequest(RunReportRequest&& from) noexcept
    : RunReportRequest() {
    *this = ::std::move(from);
  }

  inline RunReportRequest& operator=(RunReportRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RunReportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunReportRequest* internal_default_instance() {
    return reinterpret_cast<const RunReportRequest*>(
               &_RunReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RunReportRequest* other);
  friend void swap(RunReportRequest& a, RunReportRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunReportRequest* New() const final {
    return CreateMaybeMessage<RunReportRequest>(nullptr);
  }

  RunReportRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunReportRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunReportRequest& from);
  void MergeFrom(const RunReportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunReportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.Dimension dimensions = 2;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 2;
  ::google::analytics::data::v1alpha::Dimension* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >*
      mutable_dimensions();
  const ::google::analytics::data::v1alpha::Dimension& dimensions(int index) const;
  ::google::analytics::data::v1alpha::Dimension* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >&
      dimensions() const;

  // repeated .google.analytics.data.v1alpha.Metric metrics = 3;
  int metrics_size() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 3;
  ::google::analytics::data::v1alpha::Metric* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >*
      mutable_metrics();
  const ::google::analytics::data::v1alpha::Metric& metrics(int index) const;
  ::google::analytics::data::v1alpha::Metric* add_metrics();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >&
      metrics() const;

  // repeated .google.analytics.data.v1alpha.DateRange date_ranges = 4;
  int date_ranges_size() const;
  void clear_date_ranges();
  static const int kDateRangesFieldNumber = 4;
  ::google::analytics::data::v1alpha::DateRange* mutable_date_ranges(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange >*
      mutable_date_ranges();
  const ::google::analytics::data::v1alpha::DateRange& date_ranges(int index) const;
  ::google::analytics::data::v1alpha::DateRange* add_date_ranges();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange >&
      date_ranges() const;

  // repeated .google.analytics.data.v1alpha.MetricAggregation metric_aggregations = 7;
  int metric_aggregations_size() const;
  void clear_metric_aggregations();
  static const int kMetricAggregationsFieldNumber = 7;
  ::google::analytics::data::v1alpha::MetricAggregation metric_aggregations(int index) const;
  void set_metric_aggregations(int index, ::google::analytics::data::v1alpha::MetricAggregation value);
  void add_metric_aggregations(::google::analytics::data::v1alpha::MetricAggregation value);
  const ::google::protobuf::RepeatedField<int>& metric_aggregations() const;
  ::google::protobuf::RepeatedField<int>* mutable_metric_aggregations();

  // repeated .google.analytics.data.v1alpha.OrderBy order_bys = 10;
  int order_bys_size() const;
  void clear_order_bys();
  static const int kOrderBysFieldNumber = 10;
  ::google::analytics::data::v1alpha::OrderBy* mutable_order_bys(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy >*
      mutable_order_bys();
  const ::google::analytics::data::v1alpha::OrderBy& order_bys(int index) const;
  ::google::analytics::data::v1alpha::OrderBy* add_order_bys();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy >&
      order_bys() const;

  // string currency_code = 11;
  void clear_currency_code();
  static const int kCurrencyCodeFieldNumber = 11;
  const ::std::string& currency_code() const;
  void set_currency_code(const ::std::string& value);
  #if LANG_CXX11
  void set_currency_code(::std::string&& value);
  #endif
  void set_currency_code(const char* value);
  void set_currency_code(const char* value, size_t size);
  ::std::string* mutable_currency_code();
  ::std::string* release_currency_code();
  void set_allocated_currency_code(::std::string* currency_code);

  // .google.analytics.data.v1alpha.Entity entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::google::analytics::data::v1alpha::Entity& entity() const;
  ::google::analytics::data::v1alpha::Entity* release_entity();
  ::google::analytics::data::v1alpha::Entity* mutable_entity();
  void set_allocated_entity(::google::analytics::data::v1alpha::Entity* entity);

  // .google.analytics.data.v1alpha.FilterExpression dimension_filter = 8;
  bool has_dimension_filter() const;
  void clear_dimension_filter();
  static const int kDimensionFilterFieldNumber = 8;
  const ::google::analytics::data::v1alpha::FilterExpression& dimension_filter() const;
  ::google::analytics::data::v1alpha::FilterExpression* release_dimension_filter();
  ::google::analytics::data::v1alpha::FilterExpression* mutable_dimension_filter();
  void set_allocated_dimension_filter(::google::analytics::data::v1alpha::FilterExpression* dimension_filter);

  // .google.analytics.data.v1alpha.FilterExpression metric_filter = 9;
  bool has_metric_filter() const;
  void clear_metric_filter();
  static const int kMetricFilterFieldNumber = 9;
  const ::google::analytics::data::v1alpha::FilterExpression& metric_filter() const;
  ::google::analytics::data::v1alpha::FilterExpression* release_metric_filter();
  ::google::analytics::data::v1alpha::FilterExpression* mutable_metric_filter();
  void set_allocated_metric_filter(::google::analytics::data::v1alpha::FilterExpression* metric_filter);

  // .google.analytics.data.v1alpha.CohortSpec cohort_spec = 12;
  bool has_cohort_spec() const;
  void clear_cohort_spec();
  static const int kCohortSpecFieldNumber = 12;
  const ::google::analytics::data::v1alpha::CohortSpec& cohort_spec() const;
  ::google::analytics::data::v1alpha::CohortSpec* release_cohort_spec();
  ::google::analytics::data::v1alpha::CohortSpec* mutable_cohort_spec();
  void set_allocated_cohort_spec(::google::analytics::data::v1alpha::CohortSpec* cohort_spec);

  // int64 offset = 5;
  void clear_offset();
  static const int kOffsetFieldNumber = 5;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // int64 limit = 6;
  void clear_limit();
  static const int kLimitFieldNumber = 6;
  ::google::protobuf::int64 limit() const;
  void set_limit(::google::protobuf::int64 value);

  // bool keep_empty_rows = 13;
  void clear_keep_empty_rows();
  static const int kKeepEmptyRowsFieldNumber = 13;
  bool keep_empty_rows() const;
  void set_keep_empty_rows(bool value);

  // bool return_property_quota = 14;
  void clear_return_property_quota();
  static const int kReturnPropertyQuotaFieldNumber = 14;
  bool return_property_quota() const;
  void set_return_property_quota(bool value);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.RunReportRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension > dimensions_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric > metrics_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange > date_ranges_;
  ::google::protobuf::RepeatedField<int> metric_aggregations_;
  mutable std::atomic<int> _metric_aggregations_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy > order_bys_;
  ::google::protobuf::internal::ArenaStringPtr currency_code_;
  ::google::analytics::data::v1alpha::Entity* entity_;
  ::google::analytics::data::v1alpha::FilterExpression* dimension_filter_;
  ::google::analytics::data::v1alpha::FilterExpression* metric_filter_;
  ::google::analytics::data::v1alpha::CohortSpec* cohort_spec_;
  ::google::protobuf::int64 offset_;
  ::google::protobuf::int64 limit_;
  bool keep_empty_rows_;
  bool return_property_quota_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RunReportResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.RunReportResponse) */ {
 public:
  RunReportResponse();
  virtual ~RunReportResponse();

  RunReportResponse(const RunReportResponse& from);

  inline RunReportResponse& operator=(const RunReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunReportResponse(RunReportResponse&& from) noexcept
    : RunReportResponse() {
    *this = ::std::move(from);
  }

  inline RunReportResponse& operator=(RunReportResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RunReportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunReportResponse* internal_default_instance() {
    return reinterpret_cast<const RunReportResponse*>(
               &_RunReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RunReportResponse* other);
  friend void swap(RunReportResponse& a, RunReportResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunReportResponse* New() const final {
    return CreateMaybeMessage<RunReportResponse>(nullptr);
  }

  RunReportResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunReportResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunReportResponse& from);
  void MergeFrom(const RunReportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunReportResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.MetricHeader metric_headers = 1;
  int metric_headers_size() const;
  void clear_metric_headers();
  static const int kMetricHeadersFieldNumber = 1;
  ::google::analytics::data::v1alpha::MetricHeader* mutable_metric_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >*
      mutable_metric_headers();
  const ::google::analytics::data::v1alpha::MetricHeader& metric_headers(int index) const;
  ::google::analytics::data::v1alpha::MetricHeader* add_metric_headers();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >&
      metric_headers() const;

  // repeated .google.analytics.data.v1alpha.Row rows = 2;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 2;
  ::google::analytics::data::v1alpha::Row* mutable_rows(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_rows();
  const ::google::analytics::data::v1alpha::Row& rows(int index) const;
  ::google::analytics::data::v1alpha::Row* add_rows();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      rows() const;

  // repeated .google.analytics.data.v1alpha.Row totals = 8;
  int totals_size() const;
  void clear_totals();
  static const int kTotalsFieldNumber = 8;
  ::google::analytics::data::v1alpha::Row* mutable_totals(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_totals();
  const ::google::analytics::data::v1alpha::Row& totals(int index) const;
  ::google::analytics::data::v1alpha::Row* add_totals();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      totals() const;

  // repeated .google.analytics.data.v1alpha.Row maximums = 9;
  int maximums_size() const;
  void clear_maximums();
  static const int kMaximumsFieldNumber = 9;
  ::google::analytics::data::v1alpha::Row* mutable_maximums(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_maximums();
  const ::google::analytics::data::v1alpha::Row& maximums(int index) const;
  ::google::analytics::data::v1alpha::Row* add_maximums();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      maximums() const;

  // repeated .google.analytics.data.v1alpha.Row minimums = 10;
  int minimums_size() const;
  void clear_minimums();
  static const int kMinimumsFieldNumber = 10;
  ::google::analytics::data::v1alpha::Row* mutable_minimums(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_minimums();
  const ::google::analytics::data::v1alpha::Row& minimums(int index) const;
  ::google::analytics::data::v1alpha::Row* add_minimums();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      minimums() const;

  // repeated .google.analytics.data.v1alpha.DimensionHeader dimension_headers = 11;
  int dimension_headers_size() const;
  void clear_dimension_headers();
  static const int kDimensionHeadersFieldNumber = 11;
  ::google::analytics::data::v1alpha::DimensionHeader* mutable_dimension_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >*
      mutable_dimension_headers();
  const ::google::analytics::data::v1alpha::DimensionHeader& dimension_headers(int index) const;
  ::google::analytics::data::v1alpha::DimensionHeader* add_dimension_headers();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >&
      dimension_headers() const;

  // .google.analytics.data.v1alpha.ResponseMetaData metadata = 6;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 6;
  const ::google::analytics::data::v1alpha::ResponseMetaData& metadata() const;
  ::google::analytics::data::v1alpha::ResponseMetaData* release_metadata();
  ::google::analytics::data::v1alpha::ResponseMetaData* mutable_metadata();
  void set_allocated_metadata(::google::analytics::data::v1alpha::ResponseMetaData* metadata);

  // .google.analytics.data.v1alpha.PropertyQuota property_quota = 7;
  bool has_property_quota() const;
  void clear_property_quota();
  static const int kPropertyQuotaFieldNumber = 7;
  const ::google::analytics::data::v1alpha::PropertyQuota& property_quota() const;
  ::google::analytics::data::v1alpha::PropertyQuota* release_property_quota();
  ::google::analytics::data::v1alpha::PropertyQuota* mutable_property_quota();
  void set_allocated_property_quota(::google::analytics::data::v1alpha::PropertyQuota* property_quota);

  // int32 row_count = 12;
  void clear_row_count();
  static const int kRowCountFieldNumber = 12;
  ::google::protobuf::int32 row_count() const;
  void set_row_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.RunReportResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader > metric_headers_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > rows_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > totals_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > maximums_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > minimums_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader > dimension_headers_;
  ::google::analytics::data::v1alpha::ResponseMetaData* metadata_;
  ::google::analytics::data::v1alpha::PropertyQuota* property_quota_;
  ::google::protobuf::int32 row_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RunPivotReportRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.RunPivotReportRequest) */ {
 public:
  RunPivotReportRequest();
  virtual ~RunPivotReportRequest();

  RunPivotReportRequest(const RunPivotReportRequest& from);

  inline RunPivotReportRequest& operator=(const RunPivotReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunPivotReportRequest(RunPivotReportRequest&& from) noexcept
    : RunPivotReportRequest() {
    *this = ::std::move(from);
  }

  inline RunPivotReportRequest& operator=(RunPivotReportRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RunPivotReportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunPivotReportRequest* internal_default_instance() {
    return reinterpret_cast<const RunPivotReportRequest*>(
               &_RunPivotReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RunPivotReportRequest* other);
  friend void swap(RunPivotReportRequest& a, RunPivotReportRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunPivotReportRequest* New() const final {
    return CreateMaybeMessage<RunPivotReportRequest>(nullptr);
  }

  RunPivotReportRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunPivotReportRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunPivotReportRequest& from);
  void MergeFrom(const RunPivotReportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunPivotReportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.Dimension dimensions = 2;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 2;
  ::google::analytics::data::v1alpha::Dimension* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >*
      mutable_dimensions();
  const ::google::analytics::data::v1alpha::Dimension& dimensions(int index) const;
  ::google::analytics::data::v1alpha::Dimension* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >&
      dimensions() const;

  // repeated .google.analytics.data.v1alpha.Metric metrics = 3;
  int metrics_size() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 3;
  ::google::analytics::data::v1alpha::Metric* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >*
      mutable_metrics();
  const ::google::analytics::data::v1alpha::Metric& metrics(int index) const;
  ::google::analytics::data::v1alpha::Metric* add_metrics();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >&
      metrics() const;

  // repeated .google.analytics.data.v1alpha.Pivot pivots = 6;
  int pivots_size() const;
  void clear_pivots();
  static const int kPivotsFieldNumber = 6;
  ::google::analytics::data::v1alpha::Pivot* mutable_pivots(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Pivot >*
      mutable_pivots();
  const ::google::analytics::data::v1alpha::Pivot& pivots(int index) const;
  ::google::analytics::data::v1alpha::Pivot* add_pivots();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Pivot >&
      pivots() const;

  // repeated .google.analytics.data.v1alpha.DateRange date_ranges = 7;
  int date_ranges_size() const;
  void clear_date_ranges();
  static const int kDateRangesFieldNumber = 7;
  ::google::analytics::data::v1alpha::DateRange* mutable_date_ranges(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange >*
      mutable_date_ranges();
  const ::google::analytics::data::v1alpha::DateRange& date_ranges(int index) const;
  ::google::analytics::data::v1alpha::DateRange* add_date_ranges();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange >&
      date_ranges() const;

  // string currency_code = 8;
  void clear_currency_code();
  static const int kCurrencyCodeFieldNumber = 8;
  const ::std::string& currency_code() const;
  void set_currency_code(const ::std::string& value);
  #if LANG_CXX11
  void set_currency_code(::std::string&& value);
  #endif
  void set_currency_code(const char* value);
  void set_currency_code(const char* value, size_t size);
  ::std::string* mutable_currency_code();
  ::std::string* release_currency_code();
  void set_allocated_currency_code(::std::string* currency_code);

  // .google.analytics.data.v1alpha.Entity entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::google::analytics::data::v1alpha::Entity& entity() const;
  ::google::analytics::data::v1alpha::Entity* release_entity();
  ::google::analytics::data::v1alpha::Entity* mutable_entity();
  void set_allocated_entity(::google::analytics::data::v1alpha::Entity* entity);

  // .google.analytics.data.v1alpha.FilterExpression dimension_filter = 4;
  bool has_dimension_filter() const;
  void clear_dimension_filter();
  static const int kDimensionFilterFieldNumber = 4;
  const ::google::analytics::data::v1alpha::FilterExpression& dimension_filter() const;
  ::google::analytics::data::v1alpha::FilterExpression* release_dimension_filter();
  ::google::analytics::data::v1alpha::FilterExpression* mutable_dimension_filter();
  void set_allocated_dimension_filter(::google::analytics::data::v1alpha::FilterExpression* dimension_filter);

  // .google.analytics.data.v1alpha.FilterExpression metric_filter = 5;
  bool has_metric_filter() const;
  void clear_metric_filter();
  static const int kMetricFilterFieldNumber = 5;
  const ::google::analytics::data::v1alpha::FilterExpression& metric_filter() const;
  ::google::analytics::data::v1alpha::FilterExpression* release_metric_filter();
  ::google::analytics::data::v1alpha::FilterExpression* mutable_metric_filter();
  void set_allocated_metric_filter(::google::analytics::data::v1alpha::FilterExpression* metric_filter);

  // .google.analytics.data.v1alpha.CohortSpec cohort_spec = 9;
  bool has_cohort_spec() const;
  void clear_cohort_spec();
  static const int kCohortSpecFieldNumber = 9;
  const ::google::analytics::data::v1alpha::CohortSpec& cohort_spec() const;
  ::google::analytics::data::v1alpha::CohortSpec* release_cohort_spec();
  ::google::analytics::data::v1alpha::CohortSpec* mutable_cohort_spec();
  void set_allocated_cohort_spec(::google::analytics::data::v1alpha::CohortSpec* cohort_spec);

  // bool keep_empty_rows = 10;
  void clear_keep_empty_rows();
  static const int kKeepEmptyRowsFieldNumber = 10;
  bool keep_empty_rows() const;
  void set_keep_empty_rows(bool value);

  // bool return_property_quota = 11;
  void clear_return_property_quota();
  static const int kReturnPropertyQuotaFieldNumber = 11;
  bool return_property_quota() const;
  void set_return_property_quota(bool value);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.RunPivotReportRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension > dimensions_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric > metrics_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Pivot > pivots_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange > date_ranges_;
  ::google::protobuf::internal::ArenaStringPtr currency_code_;
  ::google::analytics::data::v1alpha::Entity* entity_;
  ::google::analytics::data::v1alpha::FilterExpression* dimension_filter_;
  ::google::analytics::data::v1alpha::FilterExpression* metric_filter_;
  ::google::analytics::data::v1alpha::CohortSpec* cohort_spec_;
  bool keep_empty_rows_;
  bool return_property_quota_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RunPivotReportResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.RunPivotReportResponse) */ {
 public:
  RunPivotReportResponse();
  virtual ~RunPivotReportResponse();

  RunPivotReportResponse(const RunPivotReportResponse& from);

  inline RunPivotReportResponse& operator=(const RunPivotReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunPivotReportResponse(RunPivotReportResponse&& from) noexcept
    : RunPivotReportResponse() {
    *this = ::std::move(from);
  }

  inline RunPivotReportResponse& operator=(RunPivotReportResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RunPivotReportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunPivotReportResponse* internal_default_instance() {
    return reinterpret_cast<const RunPivotReportResponse*>(
               &_RunPivotReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(RunPivotReportResponse* other);
  friend void swap(RunPivotReportResponse& a, RunPivotReportResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunPivotReportResponse* New() const final {
    return CreateMaybeMessage<RunPivotReportResponse>(nullptr);
  }

  RunPivotReportResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunPivotReportResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunPivotReportResponse& from);
  void MergeFrom(const RunPivotReportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunPivotReportResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.PivotHeader pivot_headers = 1;
  int pivot_headers_size() const;
  void clear_pivot_headers();
  static const int kPivotHeadersFieldNumber = 1;
  ::google::analytics::data::v1alpha::PivotHeader* mutable_pivot_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::PivotHeader >*
      mutable_pivot_headers();
  const ::google::analytics::data::v1alpha::PivotHeader& pivot_headers(int index) const;
  ::google::analytics::data::v1alpha::PivotHeader* add_pivot_headers();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::PivotHeader >&
      pivot_headers() const;

  // repeated .google.analytics.data.v1alpha.MetricHeader metric_headers = 2;
  int metric_headers_size() const;
  void clear_metric_headers();
  static const int kMetricHeadersFieldNumber = 2;
  ::google::analytics::data::v1alpha::MetricHeader* mutable_metric_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >*
      mutable_metric_headers();
  const ::google::analytics::data::v1alpha::MetricHeader& metric_headers(int index) const;
  ::google::analytics::data::v1alpha::MetricHeader* add_metric_headers();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >&
      metric_headers() const;

  // repeated .google.analytics.data.v1alpha.Row rows = 3;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 3;
  ::google::analytics::data::v1alpha::Row* mutable_rows(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_rows();
  const ::google::analytics::data::v1alpha::Row& rows(int index) const;
  ::google::analytics::data::v1alpha::Row* add_rows();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      rows() const;

  // repeated .google.analytics.data.v1alpha.Row aggregates = 4;
  int aggregates_size() const;
  void clear_aggregates();
  static const int kAggregatesFieldNumber = 4;
  ::google::analytics::data::v1alpha::Row* mutable_aggregates(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_aggregates();
  const ::google::analytics::data::v1alpha::Row& aggregates(int index) const;
  ::google::analytics::data::v1alpha::Row* add_aggregates();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      aggregates() const;

  // repeated .google.analytics.data.v1alpha.DimensionHeader dimension_headers = 7;
  int dimension_headers_size() const;
  void clear_dimension_headers();
  static const int kDimensionHeadersFieldNumber = 7;
  ::google::analytics::data::v1alpha::DimensionHeader* mutable_dimension_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >*
      mutable_dimension_headers();
  const ::google::analytics::data::v1alpha::DimensionHeader& dimension_headers(int index) const;
  ::google::analytics::data::v1alpha::DimensionHeader* add_dimension_headers();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >&
      dimension_headers() const;

  // .google.analytics.data.v1alpha.ResponseMetaData metadata = 5;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::google::analytics::data::v1alpha::ResponseMetaData& metadata() const;
  ::google::analytics::data::v1alpha::ResponseMetaData* release_metadata();
  ::google::analytics::data::v1alpha::ResponseMetaData* mutable_metadata();
  void set_allocated_metadata(::google::analytics::data::v1alpha::ResponseMetaData* metadata);

  // .google.analytics.data.v1alpha.PropertyQuota property_quota = 6;
  bool has_property_quota() const;
  void clear_property_quota();
  static const int kPropertyQuotaFieldNumber = 6;
  const ::google::analytics::data::v1alpha::PropertyQuota& property_quota() const;
  ::google::analytics::data::v1alpha::PropertyQuota* release_property_quota();
  ::google::analytics::data::v1alpha::PropertyQuota* mutable_property_quota();
  void set_allocated_property_quota(::google::analytics::data::v1alpha::PropertyQuota* property_quota);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.RunPivotReportResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::PivotHeader > pivot_headers_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader > metric_headers_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > rows_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > aggregates_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader > dimension_headers_;
  ::google::analytics::data::v1alpha::ResponseMetaData* metadata_;
  ::google::analytics::data::v1alpha::PropertyQuota* property_quota_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class BatchRunReportsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.BatchRunReportsRequest) */ {
 public:
  BatchRunReportsRequest();
  virtual ~BatchRunReportsRequest();

  BatchRunReportsRequest(const BatchRunReportsRequest& from);

  inline BatchRunReportsRequest& operator=(const BatchRunReportsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchRunReportsRequest(BatchRunReportsRequest&& from) noexcept
    : BatchRunReportsRequest() {
    *this = ::std::move(from);
  }

  inline BatchRunReportsRequest& operator=(BatchRunReportsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BatchRunReportsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchRunReportsRequest* internal_default_instance() {
    return reinterpret_cast<const BatchRunReportsRequest*>(
               &_BatchRunReportsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(BatchRunReportsRequest* other);
  friend void swap(BatchRunReportsRequest& a, BatchRunReportsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchRunReportsRequest* New() const final {
    return CreateMaybeMessage<BatchRunReportsRequest>(nullptr);
  }

  BatchRunReportsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchRunReportsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchRunReportsRequest& from);
  void MergeFrom(const BatchRunReportsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchRunReportsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.RunReportRequest requests = 2;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 2;
  ::google::analytics::data::v1alpha::RunReportRequest* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportRequest >*
      mutable_requests();
  const ::google::analytics::data::v1alpha::RunReportRequest& requests(int index) const;
  ::google::analytics::data::v1alpha::RunReportRequest* add_requests();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportRequest >&
      requests() const;

  // .google.analytics.data.v1alpha.Entity entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::google::analytics::data::v1alpha::Entity& entity() const;
  ::google::analytics::data::v1alpha::Entity* release_entity();
  ::google::analytics::data::v1alpha::Entity* mutable_entity();
  void set_allocated_entity(::google::analytics::data::v1alpha::Entity* entity);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.BatchRunReportsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportRequest > requests_;
  ::google::analytics::data::v1alpha::Entity* entity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class BatchRunReportsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.BatchRunReportsResponse) */ {
 public:
  BatchRunReportsResponse();
  virtual ~BatchRunReportsResponse();

  BatchRunReportsResponse(const BatchRunReportsResponse& from);

  inline BatchRunReportsResponse& operator=(const BatchRunReportsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchRunReportsResponse(BatchRunReportsResponse&& from) noexcept
    : BatchRunReportsResponse() {
    *this = ::std::move(from);
  }

  inline BatchRunReportsResponse& operator=(BatchRunReportsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BatchRunReportsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchRunReportsResponse* internal_default_instance() {
    return reinterpret_cast<const BatchRunReportsResponse*>(
               &_BatchRunReportsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(BatchRunReportsResponse* other);
  friend void swap(BatchRunReportsResponse& a, BatchRunReportsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchRunReportsResponse* New() const final {
    return CreateMaybeMessage<BatchRunReportsResponse>(nullptr);
  }

  BatchRunReportsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchRunReportsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchRunReportsResponse& from);
  void MergeFrom(const BatchRunReportsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchRunReportsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.RunReportResponse reports = 1;
  int reports_size() const;
  void clear_reports();
  static const int kReportsFieldNumber = 1;
  ::google::analytics::data::v1alpha::RunReportResponse* mutable_reports(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportResponse >*
      mutable_reports();
  const ::google::analytics::data::v1alpha::RunReportResponse& reports(int index) const;
  ::google::analytics::data::v1alpha::RunReportResponse* add_reports();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportResponse >&
      reports() const;

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.BatchRunReportsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportResponse > reports_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class BatchRunPivotReportsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.BatchRunPivotReportsRequest) */ {
 public:
  BatchRunPivotReportsRequest();
  virtual ~BatchRunPivotReportsRequest();

  BatchRunPivotReportsRequest(const BatchRunPivotReportsRequest& from);

  inline BatchRunPivotReportsRequest& operator=(const BatchRunPivotReportsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchRunPivotReportsRequest(BatchRunPivotReportsRequest&& from) noexcept
    : BatchRunPivotReportsRequest() {
    *this = ::std::move(from);
  }

  inline BatchRunPivotReportsRequest& operator=(BatchRunPivotReportsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BatchRunPivotReportsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchRunPivotReportsRequest* internal_default_instance() {
    return reinterpret_cast<const BatchRunPivotReportsRequest*>(
               &_BatchRunPivotReportsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(BatchRunPivotReportsRequest* other);
  friend void swap(BatchRunPivotReportsRequest& a, BatchRunPivotReportsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchRunPivotReportsRequest* New() const final {
    return CreateMaybeMessage<BatchRunPivotReportsRequest>(nullptr);
  }

  BatchRunPivotReportsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchRunPivotReportsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchRunPivotReportsRequest& from);
  void MergeFrom(const BatchRunPivotReportsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchRunPivotReportsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.RunPivotReportRequest requests = 2;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 2;
  ::google::analytics::data::v1alpha::RunPivotReportRequest* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportRequest >*
      mutable_requests();
  const ::google::analytics::data::v1alpha::RunPivotReportRequest& requests(int index) const;
  ::google::analytics::data::v1alpha::RunPivotReportRequest* add_requests();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportRequest >&
      requests() const;

  // .google.analytics.data.v1alpha.Entity entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::google::analytics::data::v1alpha::Entity& entity() const;
  ::google::analytics::data::v1alpha::Entity* release_entity();
  ::google::analytics::data::v1alpha::Entity* mutable_entity();
  void set_allocated_entity(::google::analytics::data::v1alpha::Entity* entity);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.BatchRunPivotReportsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportRequest > requests_;
  ::google::analytics::data::v1alpha::Entity* entity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class BatchRunPivotReportsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.BatchRunPivotReportsResponse) */ {
 public:
  BatchRunPivotReportsResponse();
  virtual ~BatchRunPivotReportsResponse();

  BatchRunPivotReportsResponse(const BatchRunPivotReportsResponse& from);

  inline BatchRunPivotReportsResponse& operator=(const BatchRunPivotReportsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchRunPivotReportsResponse(BatchRunPivotReportsResponse&& from) noexcept
    : BatchRunPivotReportsResponse() {
    *this = ::std::move(from);
  }

  inline BatchRunPivotReportsResponse& operator=(BatchRunPivotReportsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BatchRunPivotReportsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchRunPivotReportsResponse* internal_default_instance() {
    return reinterpret_cast<const BatchRunPivotReportsResponse*>(
               &_BatchRunPivotReportsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(BatchRunPivotReportsResponse* other);
  friend void swap(BatchRunPivotReportsResponse& a, BatchRunPivotReportsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchRunPivotReportsResponse* New() const final {
    return CreateMaybeMessage<BatchRunPivotReportsResponse>(nullptr);
  }

  BatchRunPivotReportsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchRunPivotReportsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchRunPivotReportsResponse& from);
  void MergeFrom(const BatchRunPivotReportsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchRunPivotReportsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.RunPivotReportResponse pivot_reports = 1;
  int pivot_reports_size() const;
  void clear_pivot_reports();
  static const int kPivotReportsFieldNumber = 1;
  ::google::analytics::data::v1alpha::RunPivotReportResponse* mutable_pivot_reports(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportResponse >*
      mutable_pivot_reports();
  const ::google::analytics::data::v1alpha::RunPivotReportResponse& pivot_reports(int index) const;
  ::google::analytics::data::v1alpha::RunPivotReportResponse* add_pivot_reports();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportResponse >&
      pivot_reports() const;

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.BatchRunPivotReportsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportResponse > pivot_reports_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class GetMetadataRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.GetMetadataRequest) */ {
 public:
  GetMetadataRequest();
  virtual ~GetMetadataRequest();

  GetMetadataRequest(const GetMetadataRequest& from);

  inline GetMetadataRequest& operator=(const GetMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMetadataRequest(GetMetadataRequest&& from) noexcept
    : GetMetadataRequest() {
    *this = ::std::move(from);
  }

  inline GetMetadataRequest& operator=(GetMetadataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetMetadataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const GetMetadataRequest*>(
               &_GetMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetMetadataRequest* other);
  friend void swap(GetMetadataRequest& a, GetMetadataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMetadataRequest* New() const final {
    return CreateMaybeMessage<GetMetadataRequest>(nullptr);
  }

  GetMetadataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMetadataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMetadataRequest& from);
  void MergeFrom(const GetMetadataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMetadataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.GetMetadataRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RunRealtimeReportRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.RunRealtimeReportRequest) */ {
 public:
  RunRealtimeReportRequest();
  virtual ~RunRealtimeReportRequest();

  RunRealtimeReportRequest(const RunRealtimeReportRequest& from);

  inline RunRealtimeReportRequest& operator=(const RunRealtimeReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunRealtimeReportRequest(RunRealtimeReportRequest&& from) noexcept
    : RunRealtimeReportRequest() {
    *this = ::std::move(from);
  }

  inline RunRealtimeReportRequest& operator=(RunRealtimeReportRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RunRealtimeReportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunRealtimeReportRequest* internal_default_instance() {
    return reinterpret_cast<const RunRealtimeReportRequest*>(
               &_RunRealtimeReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(RunRealtimeReportRequest* other);
  friend void swap(RunRealtimeReportRequest& a, RunRealtimeReportRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunRealtimeReportRequest* New() const final {
    return CreateMaybeMessage<RunRealtimeReportRequest>(nullptr);
  }

  RunRealtimeReportRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunRealtimeReportRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunRealtimeReportRequest& from);
  void MergeFrom(const RunRealtimeReportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunRealtimeReportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.Dimension dimensions = 2;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 2;
  ::google::analytics::data::v1alpha::Dimension* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >*
      mutable_dimensions();
  const ::google::analytics::data::v1alpha::Dimension& dimensions(int index) const;
  ::google::analytics::data::v1alpha::Dimension* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >&
      dimensions() const;

  // repeated .google.analytics.data.v1alpha.Metric metrics = 3;
  int metrics_size() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 3;
  ::google::analytics::data::v1alpha::Metric* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >*
      mutable_metrics();
  const ::google::analytics::data::v1alpha::Metric& metrics(int index) const;
  ::google::analytics::data::v1alpha::Metric* add_metrics();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >&
      metrics() const;

  // repeated .google.analytics.data.v1alpha.MetricAggregation metric_aggregations = 7;
  int metric_aggregations_size() const;
  void clear_metric_aggregations();
  static const int kMetricAggregationsFieldNumber = 7;
  ::google::analytics::data::v1alpha::MetricAggregation metric_aggregations(int index) const;
  void set_metric_aggregations(int index, ::google::analytics::data::v1alpha::MetricAggregation value);
  void add_metric_aggregations(::google::analytics::data::v1alpha::MetricAggregation value);
  const ::google::protobuf::RepeatedField<int>& metric_aggregations() const;
  ::google::protobuf::RepeatedField<int>* mutable_metric_aggregations();

  // repeated .google.analytics.data.v1alpha.OrderBy order_bys = 8;
  int order_bys_size() const;
  void clear_order_bys();
  static const int kOrderBysFieldNumber = 8;
  ::google::analytics::data::v1alpha::OrderBy* mutable_order_bys(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy >*
      mutable_order_bys();
  const ::google::analytics::data::v1alpha::OrderBy& order_bys(int index) const;
  ::google::analytics::data::v1alpha::OrderBy* add_order_bys();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy >&
      order_bys() const;

  // string property = 1;
  void clear_property();
  static const int kPropertyFieldNumber = 1;
  const ::std::string& property() const;
  void set_property(const ::std::string& value);
  #if LANG_CXX11
  void set_property(::std::string&& value);
  #endif
  void set_property(const char* value);
  void set_property(const char* value, size_t size);
  ::std::string* mutable_property();
  ::std::string* release_property();
  void set_allocated_property(::std::string* property);

  // .google.analytics.data.v1alpha.FilterExpression dimension_filter = 5;
  bool has_dimension_filter() const;
  void clear_dimension_filter();
  static const int kDimensionFilterFieldNumber = 5;
  const ::google::analytics::data::v1alpha::FilterExpression& dimension_filter() const;
  ::google::analytics::data::v1alpha::FilterExpression* release_dimension_filter();
  ::google::analytics::data::v1alpha::FilterExpression* mutable_dimension_filter();
  void set_allocated_dimension_filter(::google::analytics::data::v1alpha::FilterExpression* dimension_filter);

  // .google.analytics.data.v1alpha.FilterExpression metric_filter = 6;
  bool has_metric_filter() const;
  void clear_metric_filter();
  static const int kMetricFilterFieldNumber = 6;
  const ::google::analytics::data::v1alpha::FilterExpression& metric_filter() const;
  ::google::analytics::data::v1alpha::FilterExpression* release_metric_filter();
  ::google::analytics::data::v1alpha::FilterExpression* mutable_metric_filter();
  void set_allocated_metric_filter(::google::analytics::data::v1alpha::FilterExpression* metric_filter);

  // int64 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int64 limit() const;
  void set_limit(::google::protobuf::int64 value);

  // bool return_property_quota = 9;
  void clear_return_property_quota();
  static const int kReturnPropertyQuotaFieldNumber = 9;
  bool return_property_quota() const;
  void set_return_property_quota(bool value);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.RunRealtimeReportRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension > dimensions_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric > metrics_;
  ::google::protobuf::RepeatedField<int> metric_aggregations_;
  mutable std::atomic<int> _metric_aggregations_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy > order_bys_;
  ::google::protobuf::internal::ArenaStringPtr property_;
  ::google::analytics::data::v1alpha::FilterExpression* dimension_filter_;
  ::google::analytics::data::v1alpha::FilterExpression* metric_filter_;
  ::google::protobuf::int64 limit_;
  bool return_property_quota_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RunRealtimeReportResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.analytics.data.v1alpha.RunRealtimeReportResponse) */ {
 public:
  RunRealtimeReportResponse();
  virtual ~RunRealtimeReportResponse();

  RunRealtimeReportResponse(const RunRealtimeReportResponse& from);

  inline RunRealtimeReportResponse& operator=(const RunRealtimeReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunRealtimeReportResponse(RunRealtimeReportResponse&& from) noexcept
    : RunRealtimeReportResponse() {
    *this = ::std::move(from);
  }

  inline RunRealtimeReportResponse& operator=(RunRealtimeReportResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RunRealtimeReportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunRealtimeReportResponse* internal_default_instance() {
    return reinterpret_cast<const RunRealtimeReportResponse*>(
               &_RunRealtimeReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(RunRealtimeReportResponse* other);
  friend void swap(RunRealtimeReportResponse& a, RunRealtimeReportResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunRealtimeReportResponse* New() const final {
    return CreateMaybeMessage<RunRealtimeReportResponse>(nullptr);
  }

  RunRealtimeReportResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunRealtimeReportResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunRealtimeReportResponse& from);
  void MergeFrom(const RunRealtimeReportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunRealtimeReportResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.analytics.data.v1alpha.DimensionHeader dimension_headers = 1;
  int dimension_headers_size() const;
  void clear_dimension_headers();
  static const int kDimensionHeadersFieldNumber = 1;
  ::google::analytics::data::v1alpha::DimensionHeader* mutable_dimension_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >*
      mutable_dimension_headers();
  const ::google::analytics::data::v1alpha::DimensionHeader& dimension_headers(int index) const;
  ::google::analytics::data::v1alpha::DimensionHeader* add_dimension_headers();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >&
      dimension_headers() const;

  // repeated .google.analytics.data.v1alpha.MetricHeader metric_headers = 2;
  int metric_headers_size() const;
  void clear_metric_headers();
  static const int kMetricHeadersFieldNumber = 2;
  ::google::analytics::data::v1alpha::MetricHeader* mutable_metric_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >*
      mutable_metric_headers();
  const ::google::analytics::data::v1alpha::MetricHeader& metric_headers(int index) const;
  ::google::analytics::data::v1alpha::MetricHeader* add_metric_headers();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >&
      metric_headers() const;

  // repeated .google.analytics.data.v1alpha.Row rows = 3;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 3;
  ::google::analytics::data::v1alpha::Row* mutable_rows(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_rows();
  const ::google::analytics::data::v1alpha::Row& rows(int index) const;
  ::google::analytics::data::v1alpha::Row* add_rows();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      rows() const;

  // repeated .google.analytics.data.v1alpha.Row totals = 4;
  int totals_size() const;
  void clear_totals();
  static const int kTotalsFieldNumber = 4;
  ::google::analytics::data::v1alpha::Row* mutable_totals(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_totals();
  const ::google::analytics::data::v1alpha::Row& totals(int index) const;
  ::google::analytics::data::v1alpha::Row* add_totals();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      totals() const;

  // repeated .google.analytics.data.v1alpha.Row maximums = 5;
  int maximums_size() const;
  void clear_maximums();
  static const int kMaximumsFieldNumber = 5;
  ::google::analytics::data::v1alpha::Row* mutable_maximums(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_maximums();
  const ::google::analytics::data::v1alpha::Row& maximums(int index) const;
  ::google::analytics::data::v1alpha::Row* add_maximums();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      maximums() const;

  // repeated .google.analytics.data.v1alpha.Row minimums = 6;
  int minimums_size() const;
  void clear_minimums();
  static const int kMinimumsFieldNumber = 6;
  ::google::analytics::data::v1alpha::Row* mutable_minimums(int index);
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
      mutable_minimums();
  const ::google::analytics::data::v1alpha::Row& minimums(int index) const;
  ::google::analytics::data::v1alpha::Row* add_minimums();
  const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
      minimums() const;

  // .google.analytics.data.v1alpha.PropertyQuota property_quota = 8;
  bool has_property_quota() const;
  void clear_property_quota();
  static const int kPropertyQuotaFieldNumber = 8;
  const ::google::analytics::data::v1alpha::PropertyQuota& property_quota() const;
  ::google::analytics::data::v1alpha::PropertyQuota* release_property_quota();
  ::google::analytics::data::v1alpha::PropertyQuota* mutable_property_quota();
  void set_allocated_property_quota(::google::analytics::data::v1alpha::PropertyQuota* property_quota);

  // int32 row_count = 7;
  void clear_row_count();
  static const int kRowCountFieldNumber = 7;
  ::google::protobuf::int32 row_count() const;
  void set_row_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.RunRealtimeReportResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader > dimension_headers_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader > metric_headers_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > rows_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > totals_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > maximums_;
  ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row > minimums_;
  ::google::analytics::data::v1alpha::PropertyQuota* property_quota_;
  ::google::protobuf::int32 row_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Metadata

// string name = 3;
inline void Metadata::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Metadata::name() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.Metadata.name)
  return name_.GetNoArena();
}
inline void Metadata::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.Metadata.name)
}
#if LANG_CXX11
inline void Metadata::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.analytics.data.v1alpha.Metadata.name)
}
#endif
inline void Metadata::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.analytics.data.v1alpha.Metadata.name)
}
inline void Metadata::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.analytics.data.v1alpha.Metadata.name)
}
inline ::std::string* Metadata::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.Metadata.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Metadata::release_name() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.Metadata.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Metadata::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.Metadata.name)
}

// repeated .google.analytics.data.v1alpha.DimensionMetadata dimensions = 1;
inline int Metadata::dimensions_size() const {
  return dimensions_.size();
}
inline ::google::analytics::data::v1alpha::DimensionMetadata* Metadata::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.Metadata.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionMetadata >*
Metadata::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.Metadata.dimensions)
  return &dimensions_;
}
inline const ::google::analytics::data::v1alpha::DimensionMetadata& Metadata::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.Metadata.dimensions)
  return dimensions_.Get(index);
}
inline ::google::analytics::data::v1alpha::DimensionMetadata* Metadata::add_dimensions() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.Metadata.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionMetadata >&
Metadata::dimensions() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.Metadata.dimensions)
  return dimensions_;
}

// repeated .google.analytics.data.v1alpha.MetricMetadata metrics = 2;
inline int Metadata::metrics_size() const {
  return metrics_.size();
}
inline ::google::analytics::data::v1alpha::MetricMetadata* Metadata::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.Metadata.metrics)
  return metrics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricMetadata >*
Metadata::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.Metadata.metrics)
  return &metrics_;
}
inline const ::google::analytics::data::v1alpha::MetricMetadata& Metadata::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.Metadata.metrics)
  return metrics_.Get(index);
}
inline ::google::analytics::data::v1alpha::MetricMetadata* Metadata::add_metrics() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.Metadata.metrics)
  return metrics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricMetadata >&
Metadata::metrics() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.Metadata.metrics)
  return metrics_;
}

// -------------------------------------------------------------------

// RunReportRequest

// .google.analytics.data.v1alpha.Entity entity = 1;
inline bool RunReportRequest::has_entity() const {
  return this != internal_default_instance() && entity_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::Entity& RunReportRequest::entity() const {
  const ::google::analytics::data::v1alpha::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.entity)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::Entity*>(
      &::google::analytics::data::v1alpha::_Entity_default_instance_);
}
inline ::google::analytics::data::v1alpha::Entity* RunReportRequest::release_entity() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunReportRequest.entity)
  
  ::google::analytics::data::v1alpha::Entity* temp = entity_;
  entity_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::Entity* RunReportRequest::mutable_entity() {
  
  if (entity_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::Entity>(GetArenaNoVirtual());
    entity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.entity)
  return entity_;
}
inline void RunReportRequest::set_allocated_entity(::google::analytics::data::v1alpha::Entity* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entity_);
  }
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    
  } else {
    
  }
  entity_ = entity;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunReportRequest.entity)
}

// repeated .google.analytics.data.v1alpha.Dimension dimensions = 2;
inline int RunReportRequest::dimensions_size() const {
  return dimensions_.size();
}
inline ::google::analytics::data::v1alpha::Dimension* RunReportRequest::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >*
RunReportRequest::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportRequest.dimensions)
  return &dimensions_;
}
inline const ::google::analytics::data::v1alpha::Dimension& RunReportRequest::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.dimensions)
  return dimensions_.Get(index);
}
inline ::google::analytics::data::v1alpha::Dimension* RunReportRequest::add_dimensions() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportRequest.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >&
RunReportRequest::dimensions() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportRequest.dimensions)
  return dimensions_;
}

// repeated .google.analytics.data.v1alpha.Metric metrics = 3;
inline int RunReportRequest::metrics_size() const {
  return metrics_.size();
}
inline ::google::analytics::data::v1alpha::Metric* RunReportRequest::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.metrics)
  return metrics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >*
RunReportRequest::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportRequest.metrics)
  return &metrics_;
}
inline const ::google::analytics::data::v1alpha::Metric& RunReportRequest::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.metrics)
  return metrics_.Get(index);
}
inline ::google::analytics::data::v1alpha::Metric* RunReportRequest::add_metrics() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportRequest.metrics)
  return metrics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >&
RunReportRequest::metrics() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportRequest.metrics)
  return metrics_;
}

// repeated .google.analytics.data.v1alpha.DateRange date_ranges = 4;
inline int RunReportRequest::date_ranges_size() const {
  return date_ranges_.size();
}
inline ::google::analytics::data::v1alpha::DateRange* RunReportRequest::mutable_date_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.date_ranges)
  return date_ranges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange >*
RunReportRequest::mutable_date_ranges() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportRequest.date_ranges)
  return &date_ranges_;
}
inline const ::google::analytics::data::v1alpha::DateRange& RunReportRequest::date_ranges(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.date_ranges)
  return date_ranges_.Get(index);
}
inline ::google::analytics::data::v1alpha::DateRange* RunReportRequest::add_date_ranges() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportRequest.date_ranges)
  return date_ranges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange >&
RunReportRequest::date_ranges() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportRequest.date_ranges)
  return date_ranges_;
}

// int64 offset = 5;
inline void RunReportRequest::clear_offset() {
  offset_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 RunReportRequest::offset() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.offset)
  return offset_;
}
inline void RunReportRequest::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunReportRequest.offset)
}

// int64 limit = 6;
inline void RunReportRequest::clear_limit() {
  limit_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 RunReportRequest::limit() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.limit)
  return limit_;
}
inline void RunReportRequest::set_limit(::google::protobuf::int64 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunReportRequest.limit)
}

// repeated .google.analytics.data.v1alpha.MetricAggregation metric_aggregations = 7;
inline int RunReportRequest::metric_aggregations_size() const {
  return metric_aggregations_.size();
}
inline void RunReportRequest::clear_metric_aggregations() {
  metric_aggregations_.Clear();
}
inline ::google::analytics::data::v1alpha::MetricAggregation RunReportRequest::metric_aggregations(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.metric_aggregations)
  return static_cast< ::google::analytics::data::v1alpha::MetricAggregation >(metric_aggregations_.Get(index));
}
inline void RunReportRequest::set_metric_aggregations(int index, ::google::analytics::data::v1alpha::MetricAggregation value) {
  metric_aggregations_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunReportRequest.metric_aggregations)
}
inline void RunReportRequest::add_metric_aggregations(::google::analytics::data::v1alpha::MetricAggregation value) {
  metric_aggregations_.Add(value);
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportRequest.metric_aggregations)
}
inline const ::google::protobuf::RepeatedField<int>&
RunReportRequest::metric_aggregations() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportRequest.metric_aggregations)
  return metric_aggregations_;
}
inline ::google::protobuf::RepeatedField<int>*
RunReportRequest::mutable_metric_aggregations() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportRequest.metric_aggregations)
  return &metric_aggregations_;
}

// .google.analytics.data.v1alpha.FilterExpression dimension_filter = 8;
inline bool RunReportRequest::has_dimension_filter() const {
  return this != internal_default_instance() && dimension_filter_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::FilterExpression& RunReportRequest::dimension_filter() const {
  const ::google::analytics::data::v1alpha::FilterExpression* p = dimension_filter_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.dimension_filter)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::FilterExpression*>(
      &::google::analytics::data::v1alpha::_FilterExpression_default_instance_);
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunReportRequest::release_dimension_filter() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunReportRequest.dimension_filter)
  
  ::google::analytics::data::v1alpha::FilterExpression* temp = dimension_filter_;
  dimension_filter_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunReportRequest::mutable_dimension_filter() {
  
  if (dimension_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::FilterExpression>(GetArenaNoVirtual());
    dimension_filter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.dimension_filter)
  return dimension_filter_;
}
inline void RunReportRequest::set_allocated_dimension_filter(::google::analytics::data::v1alpha::FilterExpression* dimension_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dimension_filter_);
  }
  if (dimension_filter) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dimension_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dimension_filter, submessage_arena);
    }
    
  } else {
    
  }
  dimension_filter_ = dimension_filter;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunReportRequest.dimension_filter)
}

// .google.analytics.data.v1alpha.FilterExpression metric_filter = 9;
inline bool RunReportRequest::has_metric_filter() const {
  return this != internal_default_instance() && metric_filter_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::FilterExpression& RunReportRequest::metric_filter() const {
  const ::google::analytics::data::v1alpha::FilterExpression* p = metric_filter_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.metric_filter)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::FilterExpression*>(
      &::google::analytics::data::v1alpha::_FilterExpression_default_instance_);
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunReportRequest::release_metric_filter() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunReportRequest.metric_filter)
  
  ::google::analytics::data::v1alpha::FilterExpression* temp = metric_filter_;
  metric_filter_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunReportRequest::mutable_metric_filter() {
  
  if (metric_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::FilterExpression>(GetArenaNoVirtual());
    metric_filter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.metric_filter)
  return metric_filter_;
}
inline void RunReportRequest::set_allocated_metric_filter(::google::analytics::data::v1alpha::FilterExpression* metric_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metric_filter_);
  }
  if (metric_filter) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metric_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metric_filter, submessage_arena);
    }
    
  } else {
    
  }
  metric_filter_ = metric_filter;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunReportRequest.metric_filter)
}

// repeated .google.analytics.data.v1alpha.OrderBy order_bys = 10;
inline int RunReportRequest::order_bys_size() const {
  return order_bys_.size();
}
inline ::google::analytics::data::v1alpha::OrderBy* RunReportRequest::mutable_order_bys(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.order_bys)
  return order_bys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy >*
RunReportRequest::mutable_order_bys() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportRequest.order_bys)
  return &order_bys_;
}
inline const ::google::analytics::data::v1alpha::OrderBy& RunReportRequest::order_bys(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.order_bys)
  return order_bys_.Get(index);
}
inline ::google::analytics::data::v1alpha::OrderBy* RunReportRequest::add_order_bys() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportRequest.order_bys)
  return order_bys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy >&
RunReportRequest::order_bys() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportRequest.order_bys)
  return order_bys_;
}

// string currency_code = 11;
inline void RunReportRequest::clear_currency_code() {
  currency_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunReportRequest::currency_code() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.currency_code)
  return currency_code_.GetNoArena();
}
inline void RunReportRequest::set_currency_code(const ::std::string& value) {
  
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunReportRequest.currency_code)
}
#if LANG_CXX11
inline void RunReportRequest::set_currency_code(::std::string&& value) {
  
  currency_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.analytics.data.v1alpha.RunReportRequest.currency_code)
}
#endif
inline void RunReportRequest::set_currency_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.analytics.data.v1alpha.RunReportRequest.currency_code)
}
inline void RunReportRequest::set_currency_code(const char* value, size_t size) {
  
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.analytics.data.v1alpha.RunReportRequest.currency_code)
}
inline ::std::string* RunReportRequest::mutable_currency_code() {
  
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.currency_code)
  return currency_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunReportRequest::release_currency_code() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunReportRequest.currency_code)
  
  return currency_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunReportRequest::set_allocated_currency_code(::std::string* currency_code) {
  if (currency_code != nullptr) {
    
  } else {
    
  }
  currency_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_code);
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunReportRequest.currency_code)
}

// .google.analytics.data.v1alpha.CohortSpec cohort_spec = 12;
inline bool RunReportRequest::has_cohort_spec() const {
  return this != internal_default_instance() && cohort_spec_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::CohortSpec& RunReportRequest::cohort_spec() const {
  const ::google::analytics::data::v1alpha::CohortSpec* p = cohort_spec_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.cohort_spec)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::CohortSpec*>(
      &::google::analytics::data::v1alpha::_CohortSpec_default_instance_);
}
inline ::google::analytics::data::v1alpha::CohortSpec* RunReportRequest::release_cohort_spec() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunReportRequest.cohort_spec)
  
  ::google::analytics::data::v1alpha::CohortSpec* temp = cohort_spec_;
  cohort_spec_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::CohortSpec* RunReportRequest::mutable_cohort_spec() {
  
  if (cohort_spec_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::CohortSpec>(GetArenaNoVirtual());
    cohort_spec_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportRequest.cohort_spec)
  return cohort_spec_;
}
inline void RunReportRequest::set_allocated_cohort_spec(::google::analytics::data::v1alpha::CohortSpec* cohort_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cohort_spec_);
  }
  if (cohort_spec) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cohort_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cohort_spec, submessage_arena);
    }
    
  } else {
    
  }
  cohort_spec_ = cohort_spec;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunReportRequest.cohort_spec)
}

// bool keep_empty_rows = 13;
inline void RunReportRequest::clear_keep_empty_rows() {
  keep_empty_rows_ = false;
}
inline bool RunReportRequest::keep_empty_rows() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.keep_empty_rows)
  return keep_empty_rows_;
}
inline void RunReportRequest::set_keep_empty_rows(bool value) {
  
  keep_empty_rows_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunReportRequest.keep_empty_rows)
}

// bool return_property_quota = 14;
inline void RunReportRequest::clear_return_property_quota() {
  return_property_quota_ = false;
}
inline bool RunReportRequest::return_property_quota() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportRequest.return_property_quota)
  return return_property_quota_;
}
inline void RunReportRequest::set_return_property_quota(bool value) {
  
  return_property_quota_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunReportRequest.return_property_quota)
}

// -------------------------------------------------------------------

// RunReportResponse

// repeated .google.analytics.data.v1alpha.DimensionHeader dimension_headers = 11;
inline int RunReportResponse::dimension_headers_size() const {
  return dimension_headers_.size();
}
inline ::google::analytics::data::v1alpha::DimensionHeader* RunReportResponse::mutable_dimension_headers(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportResponse.dimension_headers)
  return dimension_headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >*
RunReportResponse::mutable_dimension_headers() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportResponse.dimension_headers)
  return &dimension_headers_;
}
inline const ::google::analytics::data::v1alpha::DimensionHeader& RunReportResponse::dimension_headers(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.dimension_headers)
  return dimension_headers_.Get(index);
}
inline ::google::analytics::data::v1alpha::DimensionHeader* RunReportResponse::add_dimension_headers() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportResponse.dimension_headers)
  return dimension_headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >&
RunReportResponse::dimension_headers() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportResponse.dimension_headers)
  return dimension_headers_;
}

// repeated .google.analytics.data.v1alpha.MetricHeader metric_headers = 1;
inline int RunReportResponse::metric_headers_size() const {
  return metric_headers_.size();
}
inline ::google::analytics::data::v1alpha::MetricHeader* RunReportResponse::mutable_metric_headers(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportResponse.metric_headers)
  return metric_headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >*
RunReportResponse::mutable_metric_headers() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportResponse.metric_headers)
  return &metric_headers_;
}
inline const ::google::analytics::data::v1alpha::MetricHeader& RunReportResponse::metric_headers(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.metric_headers)
  return metric_headers_.Get(index);
}
inline ::google::analytics::data::v1alpha::MetricHeader* RunReportResponse::add_metric_headers() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportResponse.metric_headers)
  return metric_headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >&
RunReportResponse::metric_headers() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportResponse.metric_headers)
  return metric_headers_;
}

// repeated .google.analytics.data.v1alpha.Row rows = 2;
inline int RunReportResponse::rows_size() const {
  return rows_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunReportResponse::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportResponse.rows)
  return rows_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunReportResponse::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportResponse.rows)
  return &rows_;
}
inline const ::google::analytics::data::v1alpha::Row& RunReportResponse::rows(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.rows)
  return rows_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunReportResponse::add_rows() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportResponse.rows)
  return rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunReportResponse::rows() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportResponse.rows)
  return rows_;
}

// repeated .google.analytics.data.v1alpha.Row totals = 8;
inline int RunReportResponse::totals_size() const {
  return totals_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunReportResponse::mutable_totals(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportResponse.totals)
  return totals_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunReportResponse::mutable_totals() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportResponse.totals)
  return &totals_;
}
inline const ::google::analytics::data::v1alpha::Row& RunReportResponse::totals(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.totals)
  return totals_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunReportResponse::add_totals() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportResponse.totals)
  return totals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunReportResponse::totals() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportResponse.totals)
  return totals_;
}

// repeated .google.analytics.data.v1alpha.Row maximums = 9;
inline int RunReportResponse::maximums_size() const {
  return maximums_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunReportResponse::mutable_maximums(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportResponse.maximums)
  return maximums_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunReportResponse::mutable_maximums() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportResponse.maximums)
  return &maximums_;
}
inline const ::google::analytics::data::v1alpha::Row& RunReportResponse::maximums(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.maximums)
  return maximums_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunReportResponse::add_maximums() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportResponse.maximums)
  return maximums_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunReportResponse::maximums() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportResponse.maximums)
  return maximums_;
}

// repeated .google.analytics.data.v1alpha.Row minimums = 10;
inline int RunReportResponse::minimums_size() const {
  return minimums_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunReportResponse::mutable_minimums(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportResponse.minimums)
  return minimums_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunReportResponse::mutable_minimums() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunReportResponse.minimums)
  return &minimums_;
}
inline const ::google::analytics::data::v1alpha::Row& RunReportResponse::minimums(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.minimums)
  return minimums_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunReportResponse::add_minimums() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunReportResponse.minimums)
  return minimums_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunReportResponse::minimums() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunReportResponse.minimums)
  return minimums_;
}

// int32 row_count = 12;
inline void RunReportResponse::clear_row_count() {
  row_count_ = 0;
}
inline ::google::protobuf::int32 RunReportResponse::row_count() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.row_count)
  return row_count_;
}
inline void RunReportResponse::set_row_count(::google::protobuf::int32 value) {
  
  row_count_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunReportResponse.row_count)
}

// .google.analytics.data.v1alpha.ResponseMetaData metadata = 6;
inline bool RunReportResponse::has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::ResponseMetaData& RunReportResponse::metadata() const {
  const ::google::analytics::data::v1alpha::ResponseMetaData* p = metadata_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::ResponseMetaData*>(
      &::google::analytics::data::v1alpha::_ResponseMetaData_default_instance_);
}
inline ::google::analytics::data::v1alpha::ResponseMetaData* RunReportResponse::release_metadata() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunReportResponse.metadata)
  
  ::google::analytics::data::v1alpha::ResponseMetaData* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::ResponseMetaData* RunReportResponse::mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::ResponseMetaData>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportResponse.metadata)
  return metadata_;
}
inline void RunReportResponse::set_allocated_metadata(::google::analytics::data::v1alpha::ResponseMetaData* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunReportResponse.metadata)
}

// .google.analytics.data.v1alpha.PropertyQuota property_quota = 7;
inline bool RunReportResponse::has_property_quota() const {
  return this != internal_default_instance() && property_quota_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::PropertyQuota& RunReportResponse::property_quota() const {
  const ::google::analytics::data::v1alpha::PropertyQuota* p = property_quota_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunReportResponse.property_quota)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::PropertyQuota*>(
      &::google::analytics::data::v1alpha::_PropertyQuota_default_instance_);
}
inline ::google::analytics::data::v1alpha::PropertyQuota* RunReportResponse::release_property_quota() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunReportResponse.property_quota)
  
  ::google::analytics::data::v1alpha::PropertyQuota* temp = property_quota_;
  property_quota_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::PropertyQuota* RunReportResponse::mutable_property_quota() {
  
  if (property_quota_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::PropertyQuota>(GetArenaNoVirtual());
    property_quota_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunReportResponse.property_quota)
  return property_quota_;
}
inline void RunReportResponse::set_allocated_property_quota(::google::analytics::data::v1alpha::PropertyQuota* property_quota) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(property_quota_);
  }
  if (property_quota) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      property_quota = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_quota, submessage_arena);
    }
    
  } else {
    
  }
  property_quota_ = property_quota;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunReportResponse.property_quota)
}

// -------------------------------------------------------------------

// RunPivotReportRequest

// .google.analytics.data.v1alpha.Entity entity = 1;
inline bool RunPivotReportRequest::has_entity() const {
  return this != internal_default_instance() && entity_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::Entity& RunPivotReportRequest::entity() const {
  const ::google::analytics::data::v1alpha::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.entity)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::Entity*>(
      &::google::analytics::data::v1alpha::_Entity_default_instance_);
}
inline ::google::analytics::data::v1alpha::Entity* RunPivotReportRequest::release_entity() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunPivotReportRequest.entity)
  
  ::google::analytics::data::v1alpha::Entity* temp = entity_;
  entity_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::Entity* RunPivotReportRequest::mutable_entity() {
  
  if (entity_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::Entity>(GetArenaNoVirtual());
    entity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.entity)
  return entity_;
}
inline void RunPivotReportRequest::set_allocated_entity(::google::analytics::data::v1alpha::Entity* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entity_);
  }
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    
  } else {
    
  }
  entity_ = entity;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunPivotReportRequest.entity)
}

// repeated .google.analytics.data.v1alpha.Dimension dimensions = 2;
inline int RunPivotReportRequest::dimensions_size() const {
  return dimensions_.size();
}
inline ::google::analytics::data::v1alpha::Dimension* RunPivotReportRequest::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >*
RunPivotReportRequest::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportRequest.dimensions)
  return &dimensions_;
}
inline const ::google::analytics::data::v1alpha::Dimension& RunPivotReportRequest::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.dimensions)
  return dimensions_.Get(index);
}
inline ::google::analytics::data::v1alpha::Dimension* RunPivotReportRequest::add_dimensions() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportRequest.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >&
RunPivotReportRequest::dimensions() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportRequest.dimensions)
  return dimensions_;
}

// repeated .google.analytics.data.v1alpha.Metric metrics = 3;
inline int RunPivotReportRequest::metrics_size() const {
  return metrics_.size();
}
inline ::google::analytics::data::v1alpha::Metric* RunPivotReportRequest::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.metrics)
  return metrics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >*
RunPivotReportRequest::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportRequest.metrics)
  return &metrics_;
}
inline const ::google::analytics::data::v1alpha::Metric& RunPivotReportRequest::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.metrics)
  return metrics_.Get(index);
}
inline ::google::analytics::data::v1alpha::Metric* RunPivotReportRequest::add_metrics() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportRequest.metrics)
  return metrics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >&
RunPivotReportRequest::metrics() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportRequest.metrics)
  return metrics_;
}

// .google.analytics.data.v1alpha.FilterExpression dimension_filter = 4;
inline bool RunPivotReportRequest::has_dimension_filter() const {
  return this != internal_default_instance() && dimension_filter_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::FilterExpression& RunPivotReportRequest::dimension_filter() const {
  const ::google::analytics::data::v1alpha::FilterExpression* p = dimension_filter_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.dimension_filter)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::FilterExpression*>(
      &::google::analytics::data::v1alpha::_FilterExpression_default_instance_);
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunPivotReportRequest::release_dimension_filter() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunPivotReportRequest.dimension_filter)
  
  ::google::analytics::data::v1alpha::FilterExpression* temp = dimension_filter_;
  dimension_filter_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunPivotReportRequest::mutable_dimension_filter() {
  
  if (dimension_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::FilterExpression>(GetArenaNoVirtual());
    dimension_filter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.dimension_filter)
  return dimension_filter_;
}
inline void RunPivotReportRequest::set_allocated_dimension_filter(::google::analytics::data::v1alpha::FilterExpression* dimension_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dimension_filter_);
  }
  if (dimension_filter) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dimension_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dimension_filter, submessage_arena);
    }
    
  } else {
    
  }
  dimension_filter_ = dimension_filter;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunPivotReportRequest.dimension_filter)
}

// .google.analytics.data.v1alpha.FilterExpression metric_filter = 5;
inline bool RunPivotReportRequest::has_metric_filter() const {
  return this != internal_default_instance() && metric_filter_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::FilterExpression& RunPivotReportRequest::metric_filter() const {
  const ::google::analytics::data::v1alpha::FilterExpression* p = metric_filter_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.metric_filter)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::FilterExpression*>(
      &::google::analytics::data::v1alpha::_FilterExpression_default_instance_);
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunPivotReportRequest::release_metric_filter() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunPivotReportRequest.metric_filter)
  
  ::google::analytics::data::v1alpha::FilterExpression* temp = metric_filter_;
  metric_filter_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunPivotReportRequest::mutable_metric_filter() {
  
  if (metric_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::FilterExpression>(GetArenaNoVirtual());
    metric_filter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.metric_filter)
  return metric_filter_;
}
inline void RunPivotReportRequest::set_allocated_metric_filter(::google::analytics::data::v1alpha::FilterExpression* metric_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metric_filter_);
  }
  if (metric_filter) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metric_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metric_filter, submessage_arena);
    }
    
  } else {
    
  }
  metric_filter_ = metric_filter;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunPivotReportRequest.metric_filter)
}

// repeated .google.analytics.data.v1alpha.Pivot pivots = 6;
inline int RunPivotReportRequest::pivots_size() const {
  return pivots_.size();
}
inline ::google::analytics::data::v1alpha::Pivot* RunPivotReportRequest::mutable_pivots(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.pivots)
  return pivots_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Pivot >*
RunPivotReportRequest::mutable_pivots() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportRequest.pivots)
  return &pivots_;
}
inline const ::google::analytics::data::v1alpha::Pivot& RunPivotReportRequest::pivots(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.pivots)
  return pivots_.Get(index);
}
inline ::google::analytics::data::v1alpha::Pivot* RunPivotReportRequest::add_pivots() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportRequest.pivots)
  return pivots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Pivot >&
RunPivotReportRequest::pivots() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportRequest.pivots)
  return pivots_;
}

// repeated .google.analytics.data.v1alpha.DateRange date_ranges = 7;
inline int RunPivotReportRequest::date_ranges_size() const {
  return date_ranges_.size();
}
inline ::google::analytics::data::v1alpha::DateRange* RunPivotReportRequest::mutable_date_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.date_ranges)
  return date_ranges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange >*
RunPivotReportRequest::mutable_date_ranges() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportRequest.date_ranges)
  return &date_ranges_;
}
inline const ::google::analytics::data::v1alpha::DateRange& RunPivotReportRequest::date_ranges(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.date_ranges)
  return date_ranges_.Get(index);
}
inline ::google::analytics::data::v1alpha::DateRange* RunPivotReportRequest::add_date_ranges() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportRequest.date_ranges)
  return date_ranges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DateRange >&
RunPivotReportRequest::date_ranges() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportRequest.date_ranges)
  return date_ranges_;
}

// string currency_code = 8;
inline void RunPivotReportRequest::clear_currency_code() {
  currency_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunPivotReportRequest::currency_code() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.currency_code)
  return currency_code_.GetNoArena();
}
inline void RunPivotReportRequest::set_currency_code(const ::std::string& value) {
  
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunPivotReportRequest.currency_code)
}
#if LANG_CXX11
inline void RunPivotReportRequest::set_currency_code(::std::string&& value) {
  
  currency_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.analytics.data.v1alpha.RunPivotReportRequest.currency_code)
}
#endif
inline void RunPivotReportRequest::set_currency_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.analytics.data.v1alpha.RunPivotReportRequest.currency_code)
}
inline void RunPivotReportRequest::set_currency_code(const char* value, size_t size) {
  
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.analytics.data.v1alpha.RunPivotReportRequest.currency_code)
}
inline ::std::string* RunPivotReportRequest::mutable_currency_code() {
  
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.currency_code)
  return currency_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunPivotReportRequest::release_currency_code() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunPivotReportRequest.currency_code)
  
  return currency_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunPivotReportRequest::set_allocated_currency_code(::std::string* currency_code) {
  if (currency_code != nullptr) {
    
  } else {
    
  }
  currency_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_code);
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunPivotReportRequest.currency_code)
}

// .google.analytics.data.v1alpha.CohortSpec cohort_spec = 9;
inline bool RunPivotReportRequest::has_cohort_spec() const {
  return this != internal_default_instance() && cohort_spec_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::CohortSpec& RunPivotReportRequest::cohort_spec() const {
  const ::google::analytics::data::v1alpha::CohortSpec* p = cohort_spec_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.cohort_spec)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::CohortSpec*>(
      &::google::analytics::data::v1alpha::_CohortSpec_default_instance_);
}
inline ::google::analytics::data::v1alpha::CohortSpec* RunPivotReportRequest::release_cohort_spec() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunPivotReportRequest.cohort_spec)
  
  ::google::analytics::data::v1alpha::CohortSpec* temp = cohort_spec_;
  cohort_spec_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::CohortSpec* RunPivotReportRequest::mutable_cohort_spec() {
  
  if (cohort_spec_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::CohortSpec>(GetArenaNoVirtual());
    cohort_spec_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportRequest.cohort_spec)
  return cohort_spec_;
}
inline void RunPivotReportRequest::set_allocated_cohort_spec(::google::analytics::data::v1alpha::CohortSpec* cohort_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cohort_spec_);
  }
  if (cohort_spec) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cohort_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cohort_spec, submessage_arena);
    }
    
  } else {
    
  }
  cohort_spec_ = cohort_spec;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunPivotReportRequest.cohort_spec)
}

// bool keep_empty_rows = 10;
inline void RunPivotReportRequest::clear_keep_empty_rows() {
  keep_empty_rows_ = false;
}
inline bool RunPivotReportRequest::keep_empty_rows() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.keep_empty_rows)
  return keep_empty_rows_;
}
inline void RunPivotReportRequest::set_keep_empty_rows(bool value) {
  
  keep_empty_rows_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunPivotReportRequest.keep_empty_rows)
}

// bool return_property_quota = 11;
inline void RunPivotReportRequest::clear_return_property_quota() {
  return_property_quota_ = false;
}
inline bool RunPivotReportRequest::return_property_quota() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportRequest.return_property_quota)
  return return_property_quota_;
}
inline void RunPivotReportRequest::set_return_property_quota(bool value) {
  
  return_property_quota_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunPivotReportRequest.return_property_quota)
}

// -------------------------------------------------------------------

// RunPivotReportResponse

// repeated .google.analytics.data.v1alpha.PivotHeader pivot_headers = 1;
inline int RunPivotReportResponse::pivot_headers_size() const {
  return pivot_headers_.size();
}
inline ::google::analytics::data::v1alpha::PivotHeader* RunPivotReportResponse::mutable_pivot_headers(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportResponse.pivot_headers)
  return pivot_headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::PivotHeader >*
RunPivotReportResponse::mutable_pivot_headers() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportResponse.pivot_headers)
  return &pivot_headers_;
}
inline const ::google::analytics::data::v1alpha::PivotHeader& RunPivotReportResponse::pivot_headers(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportResponse.pivot_headers)
  return pivot_headers_.Get(index);
}
inline ::google::analytics::data::v1alpha::PivotHeader* RunPivotReportResponse::add_pivot_headers() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportResponse.pivot_headers)
  return pivot_headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::PivotHeader >&
RunPivotReportResponse::pivot_headers() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportResponse.pivot_headers)
  return pivot_headers_;
}

// repeated .google.analytics.data.v1alpha.DimensionHeader dimension_headers = 7;
inline int RunPivotReportResponse::dimension_headers_size() const {
  return dimension_headers_.size();
}
inline ::google::analytics::data::v1alpha::DimensionHeader* RunPivotReportResponse::mutable_dimension_headers(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportResponse.dimension_headers)
  return dimension_headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >*
RunPivotReportResponse::mutable_dimension_headers() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportResponse.dimension_headers)
  return &dimension_headers_;
}
inline const ::google::analytics::data::v1alpha::DimensionHeader& RunPivotReportResponse::dimension_headers(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportResponse.dimension_headers)
  return dimension_headers_.Get(index);
}
inline ::google::analytics::data::v1alpha::DimensionHeader* RunPivotReportResponse::add_dimension_headers() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportResponse.dimension_headers)
  return dimension_headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >&
RunPivotReportResponse::dimension_headers() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportResponse.dimension_headers)
  return dimension_headers_;
}

// repeated .google.analytics.data.v1alpha.MetricHeader metric_headers = 2;
inline int RunPivotReportResponse::metric_headers_size() const {
  return metric_headers_.size();
}
inline ::google::analytics::data::v1alpha::MetricHeader* RunPivotReportResponse::mutable_metric_headers(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportResponse.metric_headers)
  return metric_headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >*
RunPivotReportResponse::mutable_metric_headers() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportResponse.metric_headers)
  return &metric_headers_;
}
inline const ::google::analytics::data::v1alpha::MetricHeader& RunPivotReportResponse::metric_headers(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportResponse.metric_headers)
  return metric_headers_.Get(index);
}
inline ::google::analytics::data::v1alpha::MetricHeader* RunPivotReportResponse::add_metric_headers() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportResponse.metric_headers)
  return metric_headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >&
RunPivotReportResponse::metric_headers() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportResponse.metric_headers)
  return metric_headers_;
}

// repeated .google.analytics.data.v1alpha.Row rows = 3;
inline int RunPivotReportResponse::rows_size() const {
  return rows_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunPivotReportResponse::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportResponse.rows)
  return rows_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunPivotReportResponse::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportResponse.rows)
  return &rows_;
}
inline const ::google::analytics::data::v1alpha::Row& RunPivotReportResponse::rows(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportResponse.rows)
  return rows_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunPivotReportResponse::add_rows() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportResponse.rows)
  return rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunPivotReportResponse::rows() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportResponse.rows)
  return rows_;
}

// repeated .google.analytics.data.v1alpha.Row aggregates = 4;
inline int RunPivotReportResponse::aggregates_size() const {
  return aggregates_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunPivotReportResponse::mutable_aggregates(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportResponse.aggregates)
  return aggregates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunPivotReportResponse::mutable_aggregates() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunPivotReportResponse.aggregates)
  return &aggregates_;
}
inline const ::google::analytics::data::v1alpha::Row& RunPivotReportResponse::aggregates(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportResponse.aggregates)
  return aggregates_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunPivotReportResponse::add_aggregates() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunPivotReportResponse.aggregates)
  return aggregates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunPivotReportResponse::aggregates() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunPivotReportResponse.aggregates)
  return aggregates_;
}

// .google.analytics.data.v1alpha.ResponseMetaData metadata = 5;
inline bool RunPivotReportResponse::has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::ResponseMetaData& RunPivotReportResponse::metadata() const {
  const ::google::analytics::data::v1alpha::ResponseMetaData* p = metadata_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportResponse.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::ResponseMetaData*>(
      &::google::analytics::data::v1alpha::_ResponseMetaData_default_instance_);
}
inline ::google::analytics::data::v1alpha::ResponseMetaData* RunPivotReportResponse::release_metadata() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunPivotReportResponse.metadata)
  
  ::google::analytics::data::v1alpha::ResponseMetaData* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::ResponseMetaData* RunPivotReportResponse::mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::ResponseMetaData>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportResponse.metadata)
  return metadata_;
}
inline void RunPivotReportResponse::set_allocated_metadata(::google::analytics::data::v1alpha::ResponseMetaData* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunPivotReportResponse.metadata)
}

// .google.analytics.data.v1alpha.PropertyQuota property_quota = 6;
inline bool RunPivotReportResponse::has_property_quota() const {
  return this != internal_default_instance() && property_quota_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::PropertyQuota& RunPivotReportResponse::property_quota() const {
  const ::google::analytics::data::v1alpha::PropertyQuota* p = property_quota_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunPivotReportResponse.property_quota)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::PropertyQuota*>(
      &::google::analytics::data::v1alpha::_PropertyQuota_default_instance_);
}
inline ::google::analytics::data::v1alpha::PropertyQuota* RunPivotReportResponse::release_property_quota() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunPivotReportResponse.property_quota)
  
  ::google::analytics::data::v1alpha::PropertyQuota* temp = property_quota_;
  property_quota_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::PropertyQuota* RunPivotReportResponse::mutable_property_quota() {
  
  if (property_quota_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::PropertyQuota>(GetArenaNoVirtual());
    property_quota_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunPivotReportResponse.property_quota)
  return property_quota_;
}
inline void RunPivotReportResponse::set_allocated_property_quota(::google::analytics::data::v1alpha::PropertyQuota* property_quota) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(property_quota_);
  }
  if (property_quota) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      property_quota = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_quota, submessage_arena);
    }
    
  } else {
    
  }
  property_quota_ = property_quota;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunPivotReportResponse.property_quota)
}

// -------------------------------------------------------------------

// BatchRunReportsRequest

// .google.analytics.data.v1alpha.Entity entity = 1;
inline bool BatchRunReportsRequest::has_entity() const {
  return this != internal_default_instance() && entity_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::Entity& BatchRunReportsRequest::entity() const {
  const ::google::analytics::data::v1alpha::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.BatchRunReportsRequest.entity)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::Entity*>(
      &::google::analytics::data::v1alpha::_Entity_default_instance_);
}
inline ::google::analytics::data::v1alpha::Entity* BatchRunReportsRequest::release_entity() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.BatchRunReportsRequest.entity)
  
  ::google::analytics::data::v1alpha::Entity* temp = entity_;
  entity_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::Entity* BatchRunReportsRequest::mutable_entity() {
  
  if (entity_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::Entity>(GetArenaNoVirtual());
    entity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.BatchRunReportsRequest.entity)
  return entity_;
}
inline void BatchRunReportsRequest::set_allocated_entity(::google::analytics::data::v1alpha::Entity* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entity_);
  }
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    
  } else {
    
  }
  entity_ = entity;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.BatchRunReportsRequest.entity)
}

// repeated .google.analytics.data.v1alpha.RunReportRequest requests = 2;
inline int BatchRunReportsRequest::requests_size() const {
  return requests_.size();
}
inline void BatchRunReportsRequest::clear_requests() {
  requests_.Clear();
}
inline ::google::analytics::data::v1alpha::RunReportRequest* BatchRunReportsRequest::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.BatchRunReportsRequest.requests)
  return requests_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportRequest >*
BatchRunReportsRequest::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.BatchRunReportsRequest.requests)
  return &requests_;
}
inline const ::google::analytics::data::v1alpha::RunReportRequest& BatchRunReportsRequest::requests(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.BatchRunReportsRequest.requests)
  return requests_.Get(index);
}
inline ::google::analytics::data::v1alpha::RunReportRequest* BatchRunReportsRequest::add_requests() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.BatchRunReportsRequest.requests)
  return requests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportRequest >&
BatchRunReportsRequest::requests() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.BatchRunReportsRequest.requests)
  return requests_;
}

// -------------------------------------------------------------------

// BatchRunReportsResponse

// repeated .google.analytics.data.v1alpha.RunReportResponse reports = 1;
inline int BatchRunReportsResponse::reports_size() const {
  return reports_.size();
}
inline void BatchRunReportsResponse::clear_reports() {
  reports_.Clear();
}
inline ::google::analytics::data::v1alpha::RunReportResponse* BatchRunReportsResponse::mutable_reports(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.BatchRunReportsResponse.reports)
  return reports_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportResponse >*
BatchRunReportsResponse::mutable_reports() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.BatchRunReportsResponse.reports)
  return &reports_;
}
inline const ::google::analytics::data::v1alpha::RunReportResponse& BatchRunReportsResponse::reports(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.BatchRunReportsResponse.reports)
  return reports_.Get(index);
}
inline ::google::analytics::data::v1alpha::RunReportResponse* BatchRunReportsResponse::add_reports() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.BatchRunReportsResponse.reports)
  return reports_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunReportResponse >&
BatchRunReportsResponse::reports() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.BatchRunReportsResponse.reports)
  return reports_;
}

// -------------------------------------------------------------------

// BatchRunPivotReportsRequest

// .google.analytics.data.v1alpha.Entity entity = 1;
inline bool BatchRunPivotReportsRequest::has_entity() const {
  return this != internal_default_instance() && entity_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::Entity& BatchRunPivotReportsRequest::entity() const {
  const ::google::analytics::data::v1alpha::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.entity)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::Entity*>(
      &::google::analytics::data::v1alpha::_Entity_default_instance_);
}
inline ::google::analytics::data::v1alpha::Entity* BatchRunPivotReportsRequest::release_entity() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.entity)
  
  ::google::analytics::data::v1alpha::Entity* temp = entity_;
  entity_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::Entity* BatchRunPivotReportsRequest::mutable_entity() {
  
  if (entity_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::Entity>(GetArenaNoVirtual());
    entity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.entity)
  return entity_;
}
inline void BatchRunPivotReportsRequest::set_allocated_entity(::google::analytics::data::v1alpha::Entity* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entity_);
  }
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    
  } else {
    
  }
  entity_ = entity;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.entity)
}

// repeated .google.analytics.data.v1alpha.RunPivotReportRequest requests = 2;
inline int BatchRunPivotReportsRequest::requests_size() const {
  return requests_.size();
}
inline void BatchRunPivotReportsRequest::clear_requests() {
  requests_.Clear();
}
inline ::google::analytics::data::v1alpha::RunPivotReportRequest* BatchRunPivotReportsRequest::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.requests)
  return requests_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportRequest >*
BatchRunPivotReportsRequest::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.requests)
  return &requests_;
}
inline const ::google::analytics::data::v1alpha::RunPivotReportRequest& BatchRunPivotReportsRequest::requests(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.requests)
  return requests_.Get(index);
}
inline ::google::analytics::data::v1alpha::RunPivotReportRequest* BatchRunPivotReportsRequest::add_requests() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.requests)
  return requests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportRequest >&
BatchRunPivotReportsRequest::requests() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.BatchRunPivotReportsRequest.requests)
  return requests_;
}

// -------------------------------------------------------------------

// BatchRunPivotReportsResponse

// repeated .google.analytics.data.v1alpha.RunPivotReportResponse pivot_reports = 1;
inline int BatchRunPivotReportsResponse::pivot_reports_size() const {
  return pivot_reports_.size();
}
inline void BatchRunPivotReportsResponse::clear_pivot_reports() {
  pivot_reports_.Clear();
}
inline ::google::analytics::data::v1alpha::RunPivotReportResponse* BatchRunPivotReportsResponse::mutable_pivot_reports(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.BatchRunPivotReportsResponse.pivot_reports)
  return pivot_reports_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportResponse >*
BatchRunPivotReportsResponse::mutable_pivot_reports() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.BatchRunPivotReportsResponse.pivot_reports)
  return &pivot_reports_;
}
inline const ::google::analytics::data::v1alpha::RunPivotReportResponse& BatchRunPivotReportsResponse::pivot_reports(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.BatchRunPivotReportsResponse.pivot_reports)
  return pivot_reports_.Get(index);
}
inline ::google::analytics::data::v1alpha::RunPivotReportResponse* BatchRunPivotReportsResponse::add_pivot_reports() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.BatchRunPivotReportsResponse.pivot_reports)
  return pivot_reports_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::RunPivotReportResponse >&
BatchRunPivotReportsResponse::pivot_reports() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.BatchRunPivotReportsResponse.pivot_reports)
  return pivot_reports_;
}

// -------------------------------------------------------------------

// GetMetadataRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void GetMetadataRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMetadataRequest::name() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.GetMetadataRequest.name)
  return name_.GetNoArena();
}
inline void GetMetadataRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.GetMetadataRequest.name)
}
#if LANG_CXX11
inline void GetMetadataRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.analytics.data.v1alpha.GetMetadataRequest.name)
}
#endif
inline void GetMetadataRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.analytics.data.v1alpha.GetMetadataRequest.name)
}
inline void GetMetadataRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.analytics.data.v1alpha.GetMetadataRequest.name)
}
inline ::std::string* GetMetadataRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.GetMetadataRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMetadataRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.GetMetadataRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMetadataRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.GetMetadataRequest.name)
}

// -------------------------------------------------------------------

// RunRealtimeReportRequest

// string property = 1;
inline void RunRealtimeReportRequest::clear_property() {
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunRealtimeReportRequest::property() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.property)
  return property_.GetNoArena();
}
inline void RunRealtimeReportRequest::set_property(const ::std::string& value) {
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunRealtimeReportRequest.property)
}
#if LANG_CXX11
inline void RunRealtimeReportRequest::set_property(::std::string&& value) {
  
  property_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.analytics.data.v1alpha.RunRealtimeReportRequest.property)
}
#endif
inline void RunRealtimeReportRequest::set_property(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.analytics.data.v1alpha.RunRealtimeReportRequest.property)
}
inline void RunRealtimeReportRequest::set_property(const char* value, size_t size) {
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.analytics.data.v1alpha.RunRealtimeReportRequest.property)
}
inline ::std::string* RunRealtimeReportRequest::mutable_property() {
  
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportRequest.property)
  return property_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunRealtimeReportRequest::release_property() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunRealtimeReportRequest.property)
  
  return property_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunRealtimeReportRequest::set_allocated_property(::std::string* property) {
  if (property != nullptr) {
    
  } else {
    
  }
  property_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property);
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunRealtimeReportRequest.property)
}

// repeated .google.analytics.data.v1alpha.Dimension dimensions = 2;
inline int RunRealtimeReportRequest::dimensions_size() const {
  return dimensions_.size();
}
inline ::google::analytics::data::v1alpha::Dimension* RunRealtimeReportRequest::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >*
RunRealtimeReportRequest::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimensions)
  return &dimensions_;
}
inline const ::google::analytics::data::v1alpha::Dimension& RunRealtimeReportRequest::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimensions)
  return dimensions_.Get(index);
}
inline ::google::analytics::data::v1alpha::Dimension* RunRealtimeReportRequest::add_dimensions() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Dimension >&
RunRealtimeReportRequest::dimensions() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimensions)
  return dimensions_;
}

// repeated .google.analytics.data.v1alpha.Metric metrics = 3;
inline int RunRealtimeReportRequest::metrics_size() const {
  return metrics_.size();
}
inline ::google::analytics::data::v1alpha::Metric* RunRealtimeReportRequest::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportRequest.metrics)
  return metrics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >*
RunRealtimeReportRequest::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportRequest.metrics)
  return &metrics_;
}
inline const ::google::analytics::data::v1alpha::Metric& RunRealtimeReportRequest::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.metrics)
  return metrics_.Get(index);
}
inline ::google::analytics::data::v1alpha::Metric* RunRealtimeReportRequest::add_metrics() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportRequest.metrics)
  return metrics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Metric >&
RunRealtimeReportRequest::metrics() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportRequest.metrics)
  return metrics_;
}

// int64 limit = 4;
inline void RunRealtimeReportRequest::clear_limit() {
  limit_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 RunRealtimeReportRequest::limit() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.limit)
  return limit_;
}
inline void RunRealtimeReportRequest::set_limit(::google::protobuf::int64 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunRealtimeReportRequest.limit)
}

// .google.analytics.data.v1alpha.FilterExpression dimension_filter = 5;
inline bool RunRealtimeReportRequest::has_dimension_filter() const {
  return this != internal_default_instance() && dimension_filter_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::FilterExpression& RunRealtimeReportRequest::dimension_filter() const {
  const ::google::analytics::data::v1alpha::FilterExpression* p = dimension_filter_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimension_filter)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::FilterExpression*>(
      &::google::analytics::data::v1alpha::_FilterExpression_default_instance_);
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunRealtimeReportRequest::release_dimension_filter() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimension_filter)
  
  ::google::analytics::data::v1alpha::FilterExpression* temp = dimension_filter_;
  dimension_filter_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunRealtimeReportRequest::mutable_dimension_filter() {
  
  if (dimension_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::FilterExpression>(GetArenaNoVirtual());
    dimension_filter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimension_filter)
  return dimension_filter_;
}
inline void RunRealtimeReportRequest::set_allocated_dimension_filter(::google::analytics::data::v1alpha::FilterExpression* dimension_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dimension_filter_);
  }
  if (dimension_filter) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dimension_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dimension_filter, submessage_arena);
    }
    
  } else {
    
  }
  dimension_filter_ = dimension_filter;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunRealtimeReportRequest.dimension_filter)
}

// .google.analytics.data.v1alpha.FilterExpression metric_filter = 6;
inline bool RunRealtimeReportRequest::has_metric_filter() const {
  return this != internal_default_instance() && metric_filter_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::FilterExpression& RunRealtimeReportRequest::metric_filter() const {
  const ::google::analytics::data::v1alpha::FilterExpression* p = metric_filter_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_filter)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::FilterExpression*>(
      &::google::analytics::data::v1alpha::_FilterExpression_default_instance_);
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunRealtimeReportRequest::release_metric_filter() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_filter)
  
  ::google::analytics::data::v1alpha::FilterExpression* temp = metric_filter_;
  metric_filter_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::FilterExpression* RunRealtimeReportRequest::mutable_metric_filter() {
  
  if (metric_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::FilterExpression>(GetArenaNoVirtual());
    metric_filter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_filter)
  return metric_filter_;
}
inline void RunRealtimeReportRequest::set_allocated_metric_filter(::google::analytics::data::v1alpha::FilterExpression* metric_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metric_filter_);
  }
  if (metric_filter) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metric_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metric_filter, submessage_arena);
    }
    
  } else {
    
  }
  metric_filter_ = metric_filter;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_filter)
}

// repeated .google.analytics.data.v1alpha.MetricAggregation metric_aggregations = 7;
inline int RunRealtimeReportRequest::metric_aggregations_size() const {
  return metric_aggregations_.size();
}
inline void RunRealtimeReportRequest::clear_metric_aggregations() {
  metric_aggregations_.Clear();
}
inline ::google::analytics::data::v1alpha::MetricAggregation RunRealtimeReportRequest::metric_aggregations(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_aggregations)
  return static_cast< ::google::analytics::data::v1alpha::MetricAggregation >(metric_aggregations_.Get(index));
}
inline void RunRealtimeReportRequest::set_metric_aggregations(int index, ::google::analytics::data::v1alpha::MetricAggregation value) {
  metric_aggregations_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_aggregations)
}
inline void RunRealtimeReportRequest::add_metric_aggregations(::google::analytics::data::v1alpha::MetricAggregation value) {
  metric_aggregations_.Add(value);
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_aggregations)
}
inline const ::google::protobuf::RepeatedField<int>&
RunRealtimeReportRequest::metric_aggregations() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_aggregations)
  return metric_aggregations_;
}
inline ::google::protobuf::RepeatedField<int>*
RunRealtimeReportRequest::mutable_metric_aggregations() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportRequest.metric_aggregations)
  return &metric_aggregations_;
}

// repeated .google.analytics.data.v1alpha.OrderBy order_bys = 8;
inline int RunRealtimeReportRequest::order_bys_size() const {
  return order_bys_.size();
}
inline ::google::analytics::data::v1alpha::OrderBy* RunRealtimeReportRequest::mutable_order_bys(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportRequest.order_bys)
  return order_bys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy >*
RunRealtimeReportRequest::mutable_order_bys() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportRequest.order_bys)
  return &order_bys_;
}
inline const ::google::analytics::data::v1alpha::OrderBy& RunRealtimeReportRequest::order_bys(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.order_bys)
  return order_bys_.Get(index);
}
inline ::google::analytics::data::v1alpha::OrderBy* RunRealtimeReportRequest::add_order_bys() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportRequest.order_bys)
  return order_bys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::OrderBy >&
RunRealtimeReportRequest::order_bys() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportRequest.order_bys)
  return order_bys_;
}

// bool return_property_quota = 9;
inline void RunRealtimeReportRequest::clear_return_property_quota() {
  return_property_quota_ = false;
}
inline bool RunRealtimeReportRequest::return_property_quota() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportRequest.return_property_quota)
  return return_property_quota_;
}
inline void RunRealtimeReportRequest::set_return_property_quota(bool value) {
  
  return_property_quota_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunRealtimeReportRequest.return_property_quota)
}

// -------------------------------------------------------------------

// RunRealtimeReportResponse

// repeated .google.analytics.data.v1alpha.DimensionHeader dimension_headers = 1;
inline int RunRealtimeReportResponse::dimension_headers_size() const {
  return dimension_headers_.size();
}
inline ::google::analytics::data::v1alpha::DimensionHeader* RunRealtimeReportResponse::mutable_dimension_headers(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportResponse.dimension_headers)
  return dimension_headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >*
RunRealtimeReportResponse::mutable_dimension_headers() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.dimension_headers)
  return &dimension_headers_;
}
inline const ::google::analytics::data::v1alpha::DimensionHeader& RunRealtimeReportResponse::dimension_headers(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportResponse.dimension_headers)
  return dimension_headers_.Get(index);
}
inline ::google::analytics::data::v1alpha::DimensionHeader* RunRealtimeReportResponse::add_dimension_headers() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportResponse.dimension_headers)
  return dimension_headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::DimensionHeader >&
RunRealtimeReportResponse::dimension_headers() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.dimension_headers)
  return dimension_headers_;
}

// repeated .google.analytics.data.v1alpha.MetricHeader metric_headers = 2;
inline int RunRealtimeReportResponse::metric_headers_size() const {
  return metric_headers_.size();
}
inline ::google::analytics::data::v1alpha::MetricHeader* RunRealtimeReportResponse::mutable_metric_headers(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportResponse.metric_headers)
  return metric_headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >*
RunRealtimeReportResponse::mutable_metric_headers() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.metric_headers)
  return &metric_headers_;
}
inline const ::google::analytics::data::v1alpha::MetricHeader& RunRealtimeReportResponse::metric_headers(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportResponse.metric_headers)
  return metric_headers_.Get(index);
}
inline ::google::analytics::data::v1alpha::MetricHeader* RunRealtimeReportResponse::add_metric_headers() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportResponse.metric_headers)
  return metric_headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::MetricHeader >&
RunRealtimeReportResponse::metric_headers() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.metric_headers)
  return metric_headers_;
}

// repeated .google.analytics.data.v1alpha.Row rows = 3;
inline int RunRealtimeReportResponse::rows_size() const {
  return rows_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunRealtimeReportResponse::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportResponse.rows)
  return rows_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunRealtimeReportResponse::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.rows)
  return &rows_;
}
inline const ::google::analytics::data::v1alpha::Row& RunRealtimeReportResponse::rows(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportResponse.rows)
  return rows_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunRealtimeReportResponse::add_rows() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportResponse.rows)
  return rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunRealtimeReportResponse::rows() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.rows)
  return rows_;
}

// repeated .google.analytics.data.v1alpha.Row totals = 4;
inline int RunRealtimeReportResponse::totals_size() const {
  return totals_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunRealtimeReportResponse::mutable_totals(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportResponse.totals)
  return totals_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunRealtimeReportResponse::mutable_totals() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.totals)
  return &totals_;
}
inline const ::google::analytics::data::v1alpha::Row& RunRealtimeReportResponse::totals(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportResponse.totals)
  return totals_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunRealtimeReportResponse::add_totals() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportResponse.totals)
  return totals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunRealtimeReportResponse::totals() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.totals)
  return totals_;
}

// repeated .google.analytics.data.v1alpha.Row maximums = 5;
inline int RunRealtimeReportResponse::maximums_size() const {
  return maximums_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunRealtimeReportResponse::mutable_maximums(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportResponse.maximums)
  return maximums_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunRealtimeReportResponse::mutable_maximums() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.maximums)
  return &maximums_;
}
inline const ::google::analytics::data::v1alpha::Row& RunRealtimeReportResponse::maximums(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportResponse.maximums)
  return maximums_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunRealtimeReportResponse::add_maximums() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportResponse.maximums)
  return maximums_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunRealtimeReportResponse::maximums() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.maximums)
  return maximums_;
}

// repeated .google.analytics.data.v1alpha.Row minimums = 6;
inline int RunRealtimeReportResponse::minimums_size() const {
  return minimums_.size();
}
inline ::google::analytics::data::v1alpha::Row* RunRealtimeReportResponse::mutable_minimums(int index) {
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportResponse.minimums)
  return minimums_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >*
RunRealtimeReportResponse::mutable_minimums() {
  // @@protoc_insertion_point(field_mutable_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.minimums)
  return &minimums_;
}
inline const ::google::analytics::data::v1alpha::Row& RunRealtimeReportResponse::minimums(int index) const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportResponse.minimums)
  return minimums_.Get(index);
}
inline ::google::analytics::data::v1alpha::Row* RunRealtimeReportResponse::add_minimums() {
  // @@protoc_insertion_point(field_add:google.analytics.data.v1alpha.RunRealtimeReportResponse.minimums)
  return minimums_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::analytics::data::v1alpha::Row >&
RunRealtimeReportResponse::minimums() const {
  // @@protoc_insertion_point(field_list:google.analytics.data.v1alpha.RunRealtimeReportResponse.minimums)
  return minimums_;
}

// int32 row_count = 7;
inline void RunRealtimeReportResponse::clear_row_count() {
  row_count_ = 0;
}
inline ::google::protobuf::int32 RunRealtimeReportResponse::row_count() const {
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportResponse.row_count)
  return row_count_;
}
inline void RunRealtimeReportResponse::set_row_count(::google::protobuf::int32 value) {
  
  row_count_ = value;
  // @@protoc_insertion_point(field_set:google.analytics.data.v1alpha.RunRealtimeReportResponse.row_count)
}

// .google.analytics.data.v1alpha.PropertyQuota property_quota = 8;
inline bool RunRealtimeReportResponse::has_property_quota() const {
  return this != internal_default_instance() && property_quota_ != nullptr;
}
inline const ::google::analytics::data::v1alpha::PropertyQuota& RunRealtimeReportResponse::property_quota() const {
  const ::google::analytics::data::v1alpha::PropertyQuota* p = property_quota_;
  // @@protoc_insertion_point(field_get:google.analytics.data.v1alpha.RunRealtimeReportResponse.property_quota)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::analytics::data::v1alpha::PropertyQuota*>(
      &::google::analytics::data::v1alpha::_PropertyQuota_default_instance_);
}
inline ::google::analytics::data::v1alpha::PropertyQuota* RunRealtimeReportResponse::release_property_quota() {
  // @@protoc_insertion_point(field_release:google.analytics.data.v1alpha.RunRealtimeReportResponse.property_quota)
  
  ::google::analytics::data::v1alpha::PropertyQuota* temp = property_quota_;
  property_quota_ = nullptr;
  return temp;
}
inline ::google::analytics::data::v1alpha::PropertyQuota* RunRealtimeReportResponse::mutable_property_quota() {
  
  if (property_quota_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::analytics::data::v1alpha::PropertyQuota>(GetArenaNoVirtual());
    property_quota_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.analytics.data.v1alpha.RunRealtimeReportResponse.property_quota)
  return property_quota_;
}
inline void RunRealtimeReportResponse::set_allocated_property_quota(::google::analytics::data::v1alpha::PropertyQuota* property_quota) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(property_quota_);
  }
  if (property_quota) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      property_quota = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_quota, submessage_arena);
    }
    
  } else {
    
  }
  property_quota_ = property_quota;
  // @@protoc_insertion_point(field_set_allocated:google.analytics.data.v1alpha.RunRealtimeReportResponse.property_quota)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha
}  // namespace data
}  // namespace analytics
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_google_2fanalytics_2fdata_2fv1alpha_2fanalytics_5fdata_5fapi_2eproto
