// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/analytics/admin/v1alpha/analytics_admin.proto

#include "google/analytics/admin/v1alpha/analytics_admin.pb.h"
#include "google/analytics/admin/v1alpha/analytics_admin.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace analytics {
namespace admin {
namespace v1alpha {

static const char* AnalyticsAdminService_method_names[] = {
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetAccount",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListAccounts",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteAccount",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateAccount",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ProvisionAccountTicket",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListAccountSummaries",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetProperty",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListProperties",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateProperty",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteProperty",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateProperty",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetUserLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/BatchGetUserLinks",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListUserLinks",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/AuditUserLinks",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateUserLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/BatchCreateUserLinks",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateUserLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/BatchUpdateUserLinks",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteUserLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/BatchDeleteUserLinks",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetWebDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteWebDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateWebDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateWebDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListWebDataStreams",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetIosAppDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteIosAppDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateIosAppDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListIosAppDataStreams",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetAndroidAppDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteAndroidAppDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateAndroidAppDataStream",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListAndroidAppDataStreams",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetEnhancedMeasurementSettings",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateEnhancedMeasurementSettings",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateFirebaseLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateFirebaseLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteFirebaseLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListFirebaseLinks",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetGlobalSiteTag",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateGoogleAdsLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateGoogleAdsLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteGoogleAdsLink",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListGoogleAdsLinks",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetDataSharingSettings",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetMeasurementProtocolSecret",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListMeasurementProtocolSecrets",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateMeasurementProtocolSecret",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteMeasurementProtocolSecret",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateMeasurementProtocolSecret",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/SearchChangeHistoryEvents",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetGoogleSignalsSettings",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateGoogleSignalsSettings",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateConversionEvent",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetConversionEvent",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/DeleteConversionEvent",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListConversionEvents",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateCustomDimension",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateCustomDimension",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListCustomDimensions",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ArchiveCustomDimension",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetCustomDimension",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/CreateCustomMetric",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/UpdateCustomMetric",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ListCustomMetrics",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/ArchiveCustomMetric",
  "/google.analytics.admin.v1alpha.AnalyticsAdminService/GetCustomMetric",
};

std::unique_ptr< AnalyticsAdminService::Stub> AnalyticsAdminService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< AnalyticsAdminService::Stub> stub(new AnalyticsAdminService::Stub(channel, options));
  return stub;
}

AnalyticsAdminService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_GetAccount_(AnalyticsAdminService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListAccounts_(AnalyticsAdminService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteAccount_(AnalyticsAdminService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateAccount_(AnalyticsAdminService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ProvisionAccountTicket_(AnalyticsAdminService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListAccountSummaries_(AnalyticsAdminService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetProperty_(AnalyticsAdminService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListProperties_(AnalyticsAdminService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateProperty_(AnalyticsAdminService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteProperty_(AnalyticsAdminService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateProperty_(AnalyticsAdminService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUserLink_(AnalyticsAdminService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_BatchGetUserLinks_(AnalyticsAdminService_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListUserLinks_(AnalyticsAdminService_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AuditUserLinks_(AnalyticsAdminService_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateUserLink_(AnalyticsAdminService_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_BatchCreateUserLinks_(AnalyticsAdminService_method_names[16], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateUserLink_(AnalyticsAdminService_method_names[17], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_BatchUpdateUserLinks_(AnalyticsAdminService_method_names[18], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteUserLink_(AnalyticsAdminService_method_names[19], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_BatchDeleteUserLinks_(AnalyticsAdminService_method_names[20], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetWebDataStream_(AnalyticsAdminService_method_names[21], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteWebDataStream_(AnalyticsAdminService_method_names[22], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateWebDataStream_(AnalyticsAdminService_method_names[23], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateWebDataStream_(AnalyticsAdminService_method_names[24], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListWebDataStreams_(AnalyticsAdminService_method_names[25], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIosAppDataStream_(AnalyticsAdminService_method_names[26], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteIosAppDataStream_(AnalyticsAdminService_method_names[27], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateIosAppDataStream_(AnalyticsAdminService_method_names[28], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListIosAppDataStreams_(AnalyticsAdminService_method_names[29], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetAndroidAppDataStream_(AnalyticsAdminService_method_names[30], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteAndroidAppDataStream_(AnalyticsAdminService_method_names[31], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateAndroidAppDataStream_(AnalyticsAdminService_method_names[32], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListAndroidAppDataStreams_(AnalyticsAdminService_method_names[33], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetEnhancedMeasurementSettings_(AnalyticsAdminService_method_names[34], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateEnhancedMeasurementSettings_(AnalyticsAdminService_method_names[35], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateFirebaseLink_(AnalyticsAdminService_method_names[36], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateFirebaseLink_(AnalyticsAdminService_method_names[37], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteFirebaseLink_(AnalyticsAdminService_method_names[38], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListFirebaseLinks_(AnalyticsAdminService_method_names[39], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetGlobalSiteTag_(AnalyticsAdminService_method_names[40], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateGoogleAdsLink_(AnalyticsAdminService_method_names[41], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateGoogleAdsLink_(AnalyticsAdminService_method_names[42], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteGoogleAdsLink_(AnalyticsAdminService_method_names[43], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListGoogleAdsLinks_(AnalyticsAdminService_method_names[44], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDataSharingSettings_(AnalyticsAdminService_method_names[45], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetMeasurementProtocolSecret_(AnalyticsAdminService_method_names[46], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListMeasurementProtocolSecrets_(AnalyticsAdminService_method_names[47], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateMeasurementProtocolSecret_(AnalyticsAdminService_method_names[48], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteMeasurementProtocolSecret_(AnalyticsAdminService_method_names[49], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateMeasurementProtocolSecret_(AnalyticsAdminService_method_names[50], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SearchChangeHistoryEvents_(AnalyticsAdminService_method_names[51], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetGoogleSignalsSettings_(AnalyticsAdminService_method_names[52], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateGoogleSignalsSettings_(AnalyticsAdminService_method_names[53], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateConversionEvent_(AnalyticsAdminService_method_names[54], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetConversionEvent_(AnalyticsAdminService_method_names[55], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteConversionEvent_(AnalyticsAdminService_method_names[56], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListConversionEvents_(AnalyticsAdminService_method_names[57], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateCustomDimension_(AnalyticsAdminService_method_names[58], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateCustomDimension_(AnalyticsAdminService_method_names[59], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListCustomDimensions_(AnalyticsAdminService_method_names[60], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ArchiveCustomDimension_(AnalyticsAdminService_method_names[61], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCustomDimension_(AnalyticsAdminService_method_names[62], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateCustomMetric_(AnalyticsAdminService_method_names[63], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateCustomMetric_(AnalyticsAdminService_method_names[64], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListCustomMetrics_(AnalyticsAdminService_method_names[65], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ArchiveCustomMetric_(AnalyticsAdminService_method_names[66], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCustomMetric_(AnalyticsAdminService_method_names[67], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status AnalyticsAdminService::Stub::GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::google::analytics::admin::v1alpha::Account* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetAccountRequest, ::google::analytics::admin::v1alpha::Account, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetAccount_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetAccountRequest, ::google::analytics::admin::v1alpha::Account, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAccount_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAccount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>* AnalyticsAdminService::Stub::PrepareAsyncGetAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::Account, ::google::analytics::admin::v1alpha::GetAccountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetAccount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>* AnalyticsAdminService::Stub::AsyncGetAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetAccountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListAccountsRequest, ::google::analytics::admin::v1alpha::ListAccountsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListAccounts_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListAccountsRequest, ::google::analytics::admin::v1alpha::ListAccountsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListAccounts_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListAccounts_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountsResponse>* AnalyticsAdminService::Stub::PrepareAsyncListAccountsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListAccountsResponse, ::google::analytics::admin::v1alpha::ListAccountsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListAccounts_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountsResponse>* AnalyticsAdminService::Stub::AsyncListAccountsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListAccountsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteAccount_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteAccount_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteAccount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteAccount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteAccountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::google::analytics::admin::v1alpha::Account* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::google::analytics::admin::v1alpha::Account, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateAccount_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::google::analytics::admin::v1alpha::Account, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateAccount_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateAccount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>* AnalyticsAdminService::Stub::PrepareAsyncUpdateAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::Account, ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateAccount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>* AnalyticsAdminService::Stub::AsyncUpdateAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateAccountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ProvisionAccountTicket_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ProvisionAccountTicket_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ProvisionAccountTicket_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* AnalyticsAdminService::Stub::PrepareAsyncProvisionAccountTicketRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse, ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ProvisionAccountTicket_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* AnalyticsAdminService::Stub::AsyncProvisionAccountTicketRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncProvisionAccountTicketRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListAccountSummaries_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListAccountSummaries_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListAccountSummaries_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* AnalyticsAdminService::Stub::PrepareAsyncListAccountSummariesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse, ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListAccountSummaries_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* AnalyticsAdminService::Stub::AsyncListAccountSummariesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListAccountSummariesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetPropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetProperty_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetPropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetProperty_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetProperty_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AnalyticsAdminService::Stub::PrepareAsyncGetPropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::Property, ::google::analytics::admin::v1alpha::GetPropertyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetProperty_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AnalyticsAdminService::Stub::AsyncGetPropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetPropertyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::google::analytics::admin::v1alpha::ListPropertiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListProperties_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::google::analytics::admin::v1alpha::ListPropertiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListProperties_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListProperties_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListPropertiesResponse>* AnalyticsAdminService::Stub::PrepareAsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListPropertiesResponse, ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListProperties_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListPropertiesResponse>* AnalyticsAdminService::Stub::AsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListPropertiesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateProperty_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateProperty_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateProperty_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AnalyticsAdminService::Stub::PrepareAsyncCreatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::Property, ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateProperty_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AnalyticsAdminService::Stub::AsyncCreatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreatePropertyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteProperty_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteProperty_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteProperty_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AnalyticsAdminService::Stub::PrepareAsyncDeletePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::Property, ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteProperty_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AnalyticsAdminService::Stub::AsyncDeletePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeletePropertyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateProperty_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateProperty_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateProperty_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AnalyticsAdminService::Stub::PrepareAsyncUpdatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::Property, ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateProperty_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AnalyticsAdminService::Stub::AsyncUpdatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdatePropertyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetUserLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AnalyticsAdminService::Stub::PrepareAsyncGetUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::UserLink, ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetUserLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AnalyticsAdminService::Stub::AsyncGetUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetUserLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_BatchGetUserLinks_, context, request, response);
}

void AnalyticsAdminService::Stub::async::BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_BatchGetUserLinks_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_BatchGetUserLinks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* AnalyticsAdminService::Stub::PrepareAsyncBatchGetUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse, ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_BatchGetUserLinks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* AnalyticsAdminService::Stub::AsyncBatchGetUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncBatchGetUserLinksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::google::analytics::admin::v1alpha::ListUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListUserLinks_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::google::analytics::admin::v1alpha::ListUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListUserLinks_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListUserLinks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListUserLinksResponse>* AnalyticsAdminService::Stub::PrepareAsyncListUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListUserLinksResponse, ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListUserLinks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListUserLinksResponse>* AnalyticsAdminService::Stub::AsyncListUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListUserLinksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::google::analytics::admin::v1alpha::AuditUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_AuditUserLinks_, context, request, response);
}

void AnalyticsAdminService::Stub::async::AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::google::analytics::admin::v1alpha::AuditUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AuditUserLinks_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AuditUserLinks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* AnalyticsAdminService::Stub::PrepareAsyncAuditUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::AuditUserLinksResponse, ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_AuditUserLinks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* AnalyticsAdminService::Stub::AsyncAuditUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncAuditUserLinksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateUserLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateUserLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateUserLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AnalyticsAdminService::Stub::PrepareAsyncCreateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::UserLink, ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateUserLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AnalyticsAdminService::Stub::AsyncCreateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateUserLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_BatchCreateUserLinks_, context, request, response);
}

void AnalyticsAdminService::Stub::async::BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_BatchCreateUserLinks_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_BatchCreateUserLinks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* AnalyticsAdminService::Stub::PrepareAsyncBatchCreateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse, ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_BatchCreateUserLinks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* AnalyticsAdminService::Stub::AsyncBatchCreateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncBatchCreateUserLinksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateUserLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateUserLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateUserLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AnalyticsAdminService::Stub::PrepareAsyncUpdateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::UserLink, ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateUserLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AnalyticsAdminService::Stub::AsyncUpdateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateUserLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_BatchUpdateUserLinks_, context, request, response);
}

void AnalyticsAdminService::Stub::async::BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_BatchUpdateUserLinks_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_BatchUpdateUserLinks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* AnalyticsAdminService::Stub::PrepareAsyncBatchUpdateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_BatchUpdateUserLinks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* AnalyticsAdminService::Stub::AsyncBatchUpdateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncBatchUpdateUserLinksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteUserLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteUserLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteUserLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteUserLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteUserLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_BatchDeleteUserLinks_, context, request, response);
}

void AnalyticsAdminService::Stub::async::BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_BatchDeleteUserLinks_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_BatchDeleteUserLinks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncBatchDeleteUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_BatchDeleteUserLinks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncBatchDeleteUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncBatchDeleteUserLinksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetWebDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetWebDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetWebDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AnalyticsAdminService::Stub::PrepareAsyncGetWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::WebDataStream, ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetWebDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AnalyticsAdminService::Stub::AsyncGetWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetWebDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteWebDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteWebDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteWebDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteWebDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteWebDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateWebDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateWebDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateWebDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AnalyticsAdminService::Stub::PrepareAsyncUpdateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::WebDataStream, ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateWebDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AnalyticsAdminService::Stub::AsyncUpdateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateWebDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateWebDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateWebDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateWebDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AnalyticsAdminService::Stub::PrepareAsyncCreateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::WebDataStream, ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateWebDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AnalyticsAdminService::Stub::AsyncCreateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateWebDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListWebDataStreams_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListWebDataStreams_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListWebDataStreams_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* AnalyticsAdminService::Stub::PrepareAsyncListWebDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse, ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListWebDataStreams_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* AnalyticsAdminService::Stub::AsyncListWebDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListWebDataStreamsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIosAppDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIosAppDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIosAppDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>* AnalyticsAdminService::Stub::PrepareAsyncGetIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::IosAppDataStream, ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIosAppDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>* AnalyticsAdminService::Stub::AsyncGetIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIosAppDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteIosAppDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIosAppDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIosAppDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteIosAppDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteIosAppDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateIosAppDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateIosAppDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateIosAppDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>* AnalyticsAdminService::Stub::PrepareAsyncUpdateIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::IosAppDataStream, ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateIosAppDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>* AnalyticsAdminService::Stub::AsyncUpdateIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateIosAppDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListIosAppDataStreams_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListIosAppDataStreams_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListIosAppDataStreams_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* AnalyticsAdminService::Stub::PrepareAsyncListIosAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListIosAppDataStreams_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* AnalyticsAdminService::Stub::AsyncListIosAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListIosAppDataStreamsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetAndroidAppDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAndroidAppDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAndroidAppDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* AnalyticsAdminService::Stub::PrepareAsyncGetAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::AndroidAppDataStream, ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetAndroidAppDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* AnalyticsAdminService::Stub::AsyncGetAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetAndroidAppDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteAndroidAppDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteAndroidAppDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteAndroidAppDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteAndroidAppDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteAndroidAppDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateAndroidAppDataStream_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateAndroidAppDataStream_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateAndroidAppDataStream_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* AnalyticsAdminService::Stub::PrepareAsyncUpdateAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::AndroidAppDataStream, ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateAndroidAppDataStream_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* AnalyticsAdminService::Stub::AsyncUpdateAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateAndroidAppDataStreamRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListAndroidAppDataStreams_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListAndroidAppDataStreams_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListAndroidAppDataStreams_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* AnalyticsAdminService::Stub::PrepareAsyncListAndroidAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListAndroidAppDataStreams_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* AnalyticsAdminService::Stub::AsyncListAndroidAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListAndroidAppDataStreamsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetEnhancedMeasurementSettings_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetEnhancedMeasurementSettings_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetEnhancedMeasurementSettings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* AnalyticsAdminService::Stub::PrepareAsyncGetEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetEnhancedMeasurementSettings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* AnalyticsAdminService::Stub::AsyncGetEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetEnhancedMeasurementSettingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateEnhancedMeasurementSettings_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateEnhancedMeasurementSettings_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateEnhancedMeasurementSettings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* AnalyticsAdminService::Stub::PrepareAsyncUpdateEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateEnhancedMeasurementSettings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* AnalyticsAdminService::Stub::AsyncUpdateEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateEnhancedMeasurementSettingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::google::analytics::admin::v1alpha::FirebaseLink* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateFirebaseLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateFirebaseLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateFirebaseLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>* AnalyticsAdminService::Stub::PrepareAsyncCreateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::FirebaseLink, ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateFirebaseLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>* AnalyticsAdminService::Stub::AsyncCreateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateFirebaseLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::google::analytics::admin::v1alpha::FirebaseLink* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateFirebaseLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateFirebaseLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateFirebaseLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>* AnalyticsAdminService::Stub::PrepareAsyncUpdateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::FirebaseLink, ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateFirebaseLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>* AnalyticsAdminService::Stub::AsyncUpdateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateFirebaseLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteFirebaseLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteFirebaseLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteFirebaseLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteFirebaseLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteFirebaseLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListFirebaseLinks_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListFirebaseLinks_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListFirebaseLinks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* AnalyticsAdminService::Stub::PrepareAsyncListFirebaseLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse, ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListFirebaseLinks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* AnalyticsAdminService::Stub::AsyncListFirebaseLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListFirebaseLinksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::google::analytics::admin::v1alpha::GlobalSiteTag, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetGlobalSiteTag_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::google::analytics::admin::v1alpha::GlobalSiteTag, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetGlobalSiteTag_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetGlobalSiteTag_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GlobalSiteTag>* AnalyticsAdminService::Stub::PrepareAsyncGetGlobalSiteTagRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::GlobalSiteTag, ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetGlobalSiteTag_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GlobalSiteTag>* AnalyticsAdminService::Stub::AsyncGetGlobalSiteTagRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetGlobalSiteTagRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateGoogleAdsLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateGoogleAdsLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateGoogleAdsLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>* AnalyticsAdminService::Stub::PrepareAsyncCreateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::GoogleAdsLink, ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateGoogleAdsLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>* AnalyticsAdminService::Stub::AsyncCreateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateGoogleAdsLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateGoogleAdsLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateGoogleAdsLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateGoogleAdsLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>* AnalyticsAdminService::Stub::PrepareAsyncUpdateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::GoogleAdsLink, ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateGoogleAdsLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>* AnalyticsAdminService::Stub::AsyncUpdateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateGoogleAdsLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteGoogleAdsLink_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteGoogleAdsLink_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteGoogleAdsLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteGoogleAdsLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteGoogleAdsLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListGoogleAdsLinks_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListGoogleAdsLinks_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListGoogleAdsLinks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* AnalyticsAdminService::Stub::PrepareAsyncListGoogleAdsLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListGoogleAdsLinks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* AnalyticsAdminService::Stub::AsyncListGoogleAdsLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListGoogleAdsLinksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::google::analytics::admin::v1alpha::DataSharingSettings* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::google::analytics::admin::v1alpha::DataSharingSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetDataSharingSettings_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::google::analytics::admin::v1alpha::DataSharingSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDataSharingSettings_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDataSharingSettings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::DataSharingSettings>* AnalyticsAdminService::Stub::PrepareAsyncGetDataSharingSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::DataSharingSettings, ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetDataSharingSettings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::DataSharingSettings>* AnalyticsAdminService::Stub::AsyncGetDataSharingSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetDataSharingSettingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetMeasurementProtocolSecret_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMeasurementProtocolSecret_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMeasurementProtocolSecret_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AnalyticsAdminService::Stub::PrepareAsyncGetMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetMeasurementProtocolSecret_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AnalyticsAdminService::Stub::AsyncGetMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetMeasurementProtocolSecretRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListMeasurementProtocolSecrets_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListMeasurementProtocolSecrets_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListMeasurementProtocolSecrets_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* AnalyticsAdminService::Stub::PrepareAsyncListMeasurementProtocolSecretsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListMeasurementProtocolSecrets_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* AnalyticsAdminService::Stub::AsyncListMeasurementProtocolSecretsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListMeasurementProtocolSecretsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateMeasurementProtocolSecret_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateMeasurementProtocolSecret_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateMeasurementProtocolSecret_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AnalyticsAdminService::Stub::PrepareAsyncCreateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateMeasurementProtocolSecret_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AnalyticsAdminService::Stub::AsyncCreateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateMeasurementProtocolSecretRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteMeasurementProtocolSecret_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteMeasurementProtocolSecret_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteMeasurementProtocolSecret_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteMeasurementProtocolSecret_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteMeasurementProtocolSecretRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateMeasurementProtocolSecret_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateMeasurementProtocolSecret_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateMeasurementProtocolSecret_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AnalyticsAdminService::Stub::PrepareAsyncUpdateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateMeasurementProtocolSecret_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AnalyticsAdminService::Stub::AsyncUpdateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateMeasurementProtocolSecretRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SearchChangeHistoryEvents_, context, request, response);
}

void AnalyticsAdminService::Stub::async::SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SearchChangeHistoryEvents_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SearchChangeHistoryEvents_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* AnalyticsAdminService::Stub::PrepareAsyncSearchChangeHistoryEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SearchChangeHistoryEvents_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* AnalyticsAdminService::Stub::AsyncSearchChangeHistoryEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSearchChangeHistoryEventsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetGoogleSignalsSettings_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetGoogleSignalsSettings_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetGoogleSignalsSettings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* AnalyticsAdminService::Stub::PrepareAsyncGetGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::GoogleSignalsSettings, ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetGoogleSignalsSettings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* AnalyticsAdminService::Stub::AsyncGetGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetGoogleSignalsSettingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateGoogleSignalsSettings_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateGoogleSignalsSettings_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateGoogleSignalsSettings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* AnalyticsAdminService::Stub::PrepareAsyncUpdateGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::GoogleSignalsSettings, ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateGoogleSignalsSettings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* AnalyticsAdminService::Stub::AsyncUpdateGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateGoogleSignalsSettingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::google::analytics::admin::v1alpha::ConversionEvent* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateConversionEvent_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateConversionEvent_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateConversionEvent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>* AnalyticsAdminService::Stub::PrepareAsyncCreateConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ConversionEvent, ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateConversionEvent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>* AnalyticsAdminService::Stub::AsyncCreateConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateConversionEventRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::google::analytics::admin::v1alpha::ConversionEvent* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetConversionEvent_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetConversionEvent_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetConversionEvent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>* AnalyticsAdminService::Stub::PrepareAsyncGetConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ConversionEvent, ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetConversionEvent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>* AnalyticsAdminService::Stub::AsyncGetConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetConversionEventRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteConversionEvent_, context, request, response);
}

void AnalyticsAdminService::Stub::async::DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteConversionEvent_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteConversionEvent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncDeleteConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteConversionEvent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncDeleteConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteConversionEventRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::google::analytics::admin::v1alpha::ListConversionEventsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListConversionEvents_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::google::analytics::admin::v1alpha::ListConversionEventsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListConversionEvents_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListConversionEvents_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* AnalyticsAdminService::Stub::PrepareAsyncListConversionEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListConversionEventsResponse, ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListConversionEvents_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* AnalyticsAdminService::Stub::AsyncListConversionEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListConversionEventsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateCustomDimension_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateCustomDimension_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateCustomDimension_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AnalyticsAdminService::Stub::PrepareAsyncCreateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::CustomDimension, ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateCustomDimension_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AnalyticsAdminService::Stub::AsyncCreateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateCustomDimensionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateCustomDimension_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCustomDimension_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCustomDimension_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AnalyticsAdminService::Stub::PrepareAsyncUpdateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::CustomDimension, ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateCustomDimension_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AnalyticsAdminService::Stub::AsyncUpdateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateCustomDimensionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListCustomDimensions_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListCustomDimensions_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListCustomDimensions_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* AnalyticsAdminService::Stub::PrepareAsyncListCustomDimensionsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse, ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListCustomDimensions_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* AnalyticsAdminService::Stub::AsyncListCustomDimensionsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListCustomDimensionsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ArchiveCustomDimension_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ArchiveCustomDimension_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ArchiveCustomDimension_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncArchiveCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ArchiveCustomDimension_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncArchiveCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncArchiveCustomDimensionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetCustomDimension_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCustomDimension_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCustomDimension_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AnalyticsAdminService::Stub::PrepareAsyncGetCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::CustomDimension, ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetCustomDimension_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AnalyticsAdminService::Stub::AsyncGetCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetCustomDimensionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateCustomMetric_, context, request, response);
}

void AnalyticsAdminService::Stub::async::CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateCustomMetric_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateCustomMetric_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AnalyticsAdminService::Stub::PrepareAsyncCreateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::CustomMetric, ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateCustomMetric_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AnalyticsAdminService::Stub::AsyncCreateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateCustomMetricRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateCustomMetric_, context, request, response);
}

void AnalyticsAdminService::Stub::async::UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCustomMetric_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCustomMetric_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AnalyticsAdminService::Stub::PrepareAsyncUpdateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::CustomMetric, ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateCustomMetric_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AnalyticsAdminService::Stub::AsyncUpdateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateCustomMetricRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListCustomMetrics_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListCustomMetrics_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListCustomMetrics_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* AnalyticsAdminService::Stub::PrepareAsyncListCustomMetricsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse, ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListCustomMetrics_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* AnalyticsAdminService::Stub::AsyncListCustomMetricsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListCustomMetricsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ArchiveCustomMetric_, context, request, response);
}

void AnalyticsAdminService::Stub::async::ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ArchiveCustomMetric_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ArchiveCustomMetric_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::PrepareAsyncArchiveCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ArchiveCustomMetric_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AnalyticsAdminService::Stub::AsyncArchiveCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncArchiveCustomMetricRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AnalyticsAdminService::Stub::GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetCustomMetric_, context, request, response);
}

void AnalyticsAdminService::Stub::async::GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCustomMetric_, context, request, response, std::move(f));
}

void AnalyticsAdminService::Stub::async::GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCustomMetric_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AnalyticsAdminService::Stub::PrepareAsyncGetCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::analytics::admin::v1alpha::CustomMetric, ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetCustomMetric_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AnalyticsAdminService::Stub::AsyncGetCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetCustomMetricRaw(context, request, cq);
  result->StartCall();
  return result;
}

AnalyticsAdminService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetAccountRequest, ::google::analytics::admin::v1alpha::Account, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetAccountRequest* req,
             ::google::analytics::admin::v1alpha::Account* resp) {
               return service->GetAccount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListAccountsRequest, ::google::analytics::admin::v1alpha::ListAccountsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListAccountsRequest* req,
             ::google::analytics::admin::v1alpha::ListAccountsResponse* resp) {
               return service->ListAccounts(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteAccountRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteAccount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::google::analytics::admin::v1alpha::Account, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateAccountRequest* req,
             ::google::analytics::admin::v1alpha::Account* resp) {
               return service->UpdateAccount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* req,
             ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* resp) {
               return service->ProvisionAccountTicket(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* req,
             ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* resp) {
               return service->ListAccountSummaries(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetPropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetPropertyRequest* req,
             ::google::analytics::admin::v1alpha::Property* resp) {
               return service->GetProperty(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::google::analytics::admin::v1alpha::ListPropertiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListPropertiesRequest* req,
             ::google::analytics::admin::v1alpha::ListPropertiesResponse* resp) {
               return service->ListProperties(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreatePropertyRequest* req,
             ::google::analytics::admin::v1alpha::Property* resp) {
               return service->CreateProperty(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeletePropertyRequest* req,
             ::google::analytics::admin::v1alpha::Property* resp) {
               return service->DeleteProperty(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::google::analytics::admin::v1alpha::Property, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* req,
             ::google::analytics::admin::v1alpha::Property* resp) {
               return service->UpdateProperty(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetUserLinkRequest* req,
             ::google::analytics::admin::v1alpha::UserLink* resp) {
               return service->GetUserLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* req,
             ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* resp) {
               return service->BatchGetUserLinks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::google::analytics::admin::v1alpha::ListUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListUserLinksRequest* req,
             ::google::analytics::admin::v1alpha::ListUserLinksResponse* resp) {
               return service->ListUserLinks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::google::analytics::admin::v1alpha::AuditUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* req,
             ::google::analytics::admin::v1alpha::AuditUserLinksResponse* resp) {
               return service->AuditUserLinks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* req,
             ::google::analytics::admin::v1alpha::UserLink* resp) {
               return service->CreateUserLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* req,
             ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* resp) {
               return service->BatchCreateUserLinks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* req,
             ::google::analytics::admin::v1alpha::UserLink* resp) {
               return service->UpdateUserLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* req,
             ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* resp) {
               return service->BatchUpdateUserLinks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteUserLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->BatchDeleteUserLinks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* req,
             ::google::analytics::admin::v1alpha::WebDataStream* resp) {
               return service->GetWebDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[22],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteWebDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[23],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* req,
             ::google::analytics::admin::v1alpha::WebDataStream* resp) {
               return service->UpdateWebDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[24],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* req,
             ::google::analytics::admin::v1alpha::WebDataStream* resp) {
               return service->CreateWebDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[25],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* req,
             ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* resp) {
               return service->ListWebDataStreams(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[26],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* req,
             ::google::analytics::admin::v1alpha::IosAppDataStream* resp) {
               return service->GetIosAppDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[27],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteIosAppDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[28],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* req,
             ::google::analytics::admin::v1alpha::IosAppDataStream* resp) {
               return service->UpdateIosAppDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[29],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* req,
             ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* resp) {
               return service->ListIosAppDataStreams(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[30],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* req,
             ::google::analytics::admin::v1alpha::AndroidAppDataStream* resp) {
               return service->GetAndroidAppDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[31],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteAndroidAppDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[32],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* req,
             ::google::analytics::admin::v1alpha::AndroidAppDataStream* resp) {
               return service->UpdateAndroidAppDataStream(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[33],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* req,
             ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* resp) {
               return service->ListAndroidAppDataStreams(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[34],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* req,
             ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* resp) {
               return service->GetEnhancedMeasurementSettings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[35],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* req,
             ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* resp) {
               return service->UpdateEnhancedMeasurementSettings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[36],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* req,
             ::google::analytics::admin::v1alpha::FirebaseLink* resp) {
               return service->CreateFirebaseLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[37],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* req,
             ::google::analytics::admin::v1alpha::FirebaseLink* resp) {
               return service->UpdateFirebaseLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[38],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteFirebaseLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[39],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* req,
             ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* resp) {
               return service->ListFirebaseLinks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[40],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::google::analytics::admin::v1alpha::GlobalSiteTag, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* req,
             ::google::analytics::admin::v1alpha::GlobalSiteTag* resp) {
               return service->GetGlobalSiteTag(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[41],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* req,
             ::google::analytics::admin::v1alpha::GoogleAdsLink* resp) {
               return service->CreateGoogleAdsLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[42],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* req,
             ::google::analytics::admin::v1alpha::GoogleAdsLink* resp) {
               return service->UpdateGoogleAdsLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[43],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteGoogleAdsLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[44],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* req,
             ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* resp) {
               return service->ListGoogleAdsLinks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[45],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::google::analytics::admin::v1alpha::DataSharingSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* req,
             ::google::analytics::admin::v1alpha::DataSharingSettings* resp) {
               return service->GetDataSharingSettings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[46],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* req,
             ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* resp) {
               return service->GetMeasurementProtocolSecret(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[47],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* req,
             ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* resp) {
               return service->ListMeasurementProtocolSecrets(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[48],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* req,
             ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* resp) {
               return service->CreateMeasurementProtocolSecret(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[49],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteMeasurementProtocolSecret(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[50],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* req,
             ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* resp) {
               return service->UpdateMeasurementProtocolSecret(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[51],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* req,
             ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* resp) {
               return service->SearchChangeHistoryEvents(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[52],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* req,
             ::google::analytics::admin::v1alpha::GoogleSignalsSettings* resp) {
               return service->GetGoogleSignalsSettings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[53],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* req,
             ::google::analytics::admin::v1alpha::GoogleSignalsSettings* resp) {
               return service->UpdateGoogleSignalsSettings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[54],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* req,
             ::google::analytics::admin::v1alpha::ConversionEvent* resp) {
               return service->CreateConversionEvent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[55],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetConversionEventRequest* req,
             ::google::analytics::admin::v1alpha::ConversionEvent* resp) {
               return service->GetConversionEvent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[56],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteConversionEvent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[57],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::google::analytics::admin::v1alpha::ListConversionEventsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* req,
             ::google::analytics::admin::v1alpha::ListConversionEventsResponse* resp) {
               return service->ListConversionEvents(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[58],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* req,
             ::google::analytics::admin::v1alpha::CustomDimension* resp) {
               return service->CreateCustomDimension(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[59],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* req,
             ::google::analytics::admin::v1alpha::CustomDimension* resp) {
               return service->UpdateCustomDimension(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[60],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* req,
             ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* resp) {
               return service->ListCustomDimensions(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[61],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->ArchiveCustomDimension(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[62],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* req,
             ::google::analytics::admin::v1alpha::CustomDimension* resp) {
               return service->GetCustomDimension(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[63],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* req,
             ::google::analytics::admin::v1alpha::CustomMetric* resp) {
               return service->CreateCustomMetric(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[64],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* req,
             ::google::analytics::admin::v1alpha::CustomMetric* resp) {
               return service->UpdateCustomMetric(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[65],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* req,
             ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* resp) {
               return service->ListCustomMetrics(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[66],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->ArchiveCustomMetric(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AnalyticsAdminService_method_names[67],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AnalyticsAdminService::Service, ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AnalyticsAdminService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* req,
             ::google::analytics::admin::v1alpha::CustomMetric* resp) {
               return service->GetCustomMetric(ctx, req, resp);
             }, this)));
}

AnalyticsAdminService::Service::~Service() {
}

::grpc::Status AnalyticsAdminService::Service::GetAccount(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListAccounts(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteAccount(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateAccount(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ProvisionAccountTicket(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListAccountSummaries(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetProperty(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListProperties(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateProperty(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteProperty(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateProperty(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetUserLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::BatchGetUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::AuditUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateUserLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::BatchCreateUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateUserLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::BatchUpdateUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteUserLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::BatchDeleteUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetWebDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteWebDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateWebDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateWebDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListWebDataStreams(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetIosAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteIosAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateIosAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListIosAppDataStreams(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetAndroidAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteAndroidAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateAndroidAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListAndroidAppDataStreams(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetEnhancedMeasurementSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateEnhancedMeasurementSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateFirebaseLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateFirebaseLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteFirebaseLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListFirebaseLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetGlobalSiteTag(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateGoogleAdsLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateGoogleAdsLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteGoogleAdsLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListGoogleAdsLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetDataSharingSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetMeasurementProtocolSecret(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListMeasurementProtocolSecrets(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateMeasurementProtocolSecret(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteMeasurementProtocolSecret(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateMeasurementProtocolSecret(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::SearchChangeHistoryEvents(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetGoogleSignalsSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateGoogleSignalsSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateConversionEvent(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetConversionEvent(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::DeleteConversionEvent(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListConversionEvents(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateCustomDimension(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateCustomDimension(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListCustomDimensions(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ArchiveCustomDimension(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetCustomDimension(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::CreateCustomMetric(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::UpdateCustomMetric(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ListCustomMetrics(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::ArchiveCustomMetric(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AnalyticsAdminService::Service::GetCustomMetric(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace analytics
}  // namespace admin
}  // namespace v1alpha

